{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6da297d2-903c-45c7-8030-4908cdf7bfb8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6b1b906e-cb54-47dd-a07b-0f00727d26ac",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a119e5f-6709-4755-bae8-796a29297fd6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8d536ece-0873-4f7a-9b3d-4312a624f001"
                }
              }
            ]
          },
          {
            "id": "1bc1f302-943a-493c-b8b8-571b76c2c302",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "183ce25d-4eb0-4305-aacf-5920b9c76308",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "744072d7-05d8-416d-82cf-33a1d5a6b7ef"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5a100b15-3e97-4c5a-bb7f-51bf69833f9a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8216189c-5924-4e19-98bb-0cd404504615",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2383a50-1191-4184-94b1-53329f690eee",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3c94c9c-7068-4a9a-a70d-c4480a5873dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a70c33f-bc01-429f-850e-bd1a5475db44"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82ac68c0-6c14-4ff6-8195-c6eff8c7aaf8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7016a04-1c7a-4fbe-9520-541447f58feb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31ee33cb-e661-42c1-83d1-f96518a2aec4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffb1a0d5-334d-4bf2-bd68-4c4766d29578"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64c68807-426f-4148-9c74-42a6cbcf2100",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6a103909-1beb-4712-9358-2123d0252cfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4917a770-c0f6-4ca1-83cf-1b10315b7418",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b2faae8-2432-4290-af93-79f057f35de4"
            }
          }
        ]
      },
      {
        "id": "bf4ffa71-395e-4c66-aca7-f6b826bc8e2c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "76f2a5cf-1638-4490-a3f2-74bff0417d0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01835eeb-d04a-493e-a003-b81d3267e10c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65d187c2-57fc-416e-aeb0-82eb7c9d3211",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f583d6c-6ff5-4ec5-965d-fc0f681ea5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6538574-e67f-4fc9-828c-80fdbe534b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4124a6e7-6aae-4b6c-ab1f-98c3fe78e336",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af89b333-a3d6-488b-a96a-a423546c0f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab182fac-8ad3-4021-ae59-a4cc21b6e629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e4b8b9-b521-48fb-8ca3-22fc706bf9f6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5481784b-6ce4-432c-aa20-a68506b031e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42b4c829-e106-4ff3-adb3-37080a867f28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf86a43d-0af6-453b-856f-2a24395adb55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4d37bc3-e333-4bb6-83d0-4e8eb2e7385c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218b9466-e4c0-4aae-a8cd-529f21db7ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b190102-d6df-43a9-97ac-f8a5af924779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ba17ea-2042-442a-93e8-866a2f714ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b80534-e5a2-4c34-a2ed-66a70f17f3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba1472d-dd32-47ea-b643-446f6e3be90b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3caf8f4-694c-42b5-9896-0406271b6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28045d33-3b59-45eb-81b3-06f35a4a7c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509b7a4e-3530-4d46-a2c5-071b709c9599",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "12bf6192-9819-49fb-bcc6-89bd34b8051a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29665f18-4e4f-4a67-b85f-18aa75fb0add",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a275bb57-9972-4c31-a518-bb68e3c1368e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d1497f5-3086-4c09-9ab4-ac8e8f253ab4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fe8d7274-9b68-453a-92d0-5677ce2380b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "215dcf8a-a22f-46b5-83fd-ddd8f92d021f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "327448a3-289e-47c7-9261-e4ee71d5284a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3cd454f-49ab-4858-92f8-15eceac1118d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e4e5643-56af-423b-b372-31ef7273499d"
            }
          }
        ]
      },
      {
        "id": "6b0d1f5a-74d4-4f87-9942-cc449dc1d163",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6913f531-a631-44c4-a0dc-fad1508f7b6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89ac2411-cda3-4db9-b3a4-a6ac2d825a42",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ef475ea1-e418-4588-b334-638eab6f5d64",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d8ad25-0861-474c-a73d-1b27039eeee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6130e556-e782-4d83-ae25-d286e2bc1d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6885cf-5cd4-4ea5-8320-76afe4d53426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6aada0c1-a55a-499f-a19d-dd410c050c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7353bc-c4dc-436d-8a33-28556856bd06",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72459a65-23c7-47a1-a59d-f4fcd666fa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fdf8b0-95fe-48a0-91df-e28412d52c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eb9a1f-134e-4150-9bc0-9d0b731b748c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6103cbdc-b4aa-4300-8c9b-9b52f1208af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07f4978-7aec-41e2-a19a-73cb57b32892",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b19249-f0e2-48c6-9019-60c3f2ac2699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b3ee11-a4c1-4d95-a450-c1db630c30fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f405e460-c66e-4c45-adf1-f31330e97f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3280f21-811c-4201-809c-3b51f6da4e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acf6ffc-2e7e-40f6-aac6-0fd584d4fe30",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eb104f-046c-4bd6-9afd-495610627cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcde5665-db3b-4f7f-9cb0-4bafd8fabc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2075e5f9-5906-45cf-829b-e33a81439f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0d5e563-237e-46e9-8bec-1fc28c5df04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c731ab-3ab6-4c4d-a888-9fbb12993e77",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96384a2-f8b1-4782-be27-f867bf53b865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9556f8d-472d-483c-9786-dbe3ba76cd94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b3796d-735a-4f89-a27f-d7bf2ca8b11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7380d4cc-7d78-4bae-adce-f4cbd6383e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0047f863-c774-41d7-a1c1-5da13469793f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dbcd19-5daf-4ec7-89d9-4cf635da1814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914e8bbc-688b-4938-a9b0-9f2120ba65b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5edc19-6c50-4b6f-8944-d338c402d3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9672f124-91bf-4138-b5cb-265eb0a0ee87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cbda12-c29b-49bf-b540-596abed21090",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02ebcd0-1728-4216-8583-f2850daf4812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f303676-2cc6-450f-bebb-3d853ad4534c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c5e3d5-c472-4ed7-abd9-b16886960d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ea6378a-5662-46a6-96a2-3cbcb85b4718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ea3714-ed55-41dc-a235-fedcb0cda83d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b542363-8ac6-4596-8bdb-5653ade65b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3da3391-1dc3-46e4-abbe-cf5550d4829f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6bffe5-fd63-4d3c-809a-44844420190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0c16429-0fe1-42d1-93ca-4feaa136e8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5332050-a025-4d63-a73b-3207f5a35943",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063806e0-adab-46d0-b6b9-044140120663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb2d6a3-ef42-444d-ba26-196162bdad39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33983d1-4ef1-42cd-bf06-69be93fae922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9002a1a-22c0-4410-b42b-38efc8b1e823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bf691d-9d05-455d-a25b-bff7256347f1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf73e21-ab17-4c3c-97d6-186b9bd2a2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc27eb44-37d7-4b01-aba7-b1d2acbd63ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd027815-7a17-4c28-8bfa-8f8027fdba88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60199643-55ee-4e48-bcb4-66ac85b51f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9a45ad-c6dc-4e92-a761-842c3b512cf4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d60bd8-ed5d-4337-a282-395a7f3bdc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b47915-dde8-4633-8a78-ca8ef9cbf4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eeacd2d-cd6f-453b-b8d0-90f2848c9ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a46cf39-1c1a-4df4-a94f-19bbcf1ed701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd6eafa-1a43-41a7-844b-4fa521c7dff1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed91c5d-8ad2-4ada-825e-be8ce4917b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc516b2-6e3b-4839-a835-b2a5156bf8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a44fb2-2911-43e5-a029-7d4afee12d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0774166f-9e49-4f15-89d7-f26cbfda5246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0b0461-163e-4013-bdb5-eb14623fe820",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff28f650-ebd4-428b-ab5e-44c9499c4d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6e3834-1295-4583-b15e-d1ee25b2e63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af87c1d-4c27-4003-92d5-e285a124ed57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ad9ffa8-3115-4435-b6bb-0765ed6f784a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7330eea5-f1de-4419-afd3-b28d250bd43b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85481d1f-9e96-4821-9887-3c013b0ece0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1d32a1-7b1d-40de-9579-f73f086f88a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bf2c98-050d-4339-afbd-805840cf1f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d63d152-493b-45c6-bf76-21885249b1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2f52ee-a093-495c-b329-1f91e791769f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32ba4a5-29f2-418f-afef-fbc95f89b31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f125b51a-2984-4073-8117-ed4ece62173c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d769e5da-7b1d-4eae-b305-7f186cab3aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5fb2beb-3057-422f-9e9c-539b2f5c1c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afe9711-5a71-4fb8-9ab8-0d5cd5efe606",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9692dc3c-e687-462a-90e7-f8d15a707dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d0a442-bb1f-42fc-8c59-36de12ca38dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb65ab9-3df2-493c-8801-47360bc40731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7ceeaf2-8fad-4fcc-9977-27036a416972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73331cb5-bc84-4cbc-8a1e-64962a41491b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f153ed5-0732-4a5a-a7ba-0b011319878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d709fdc-147a-4cce-b5aa-a58fdb94ee72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe0212c-04f3-4c81-9072-fdd1f90ecaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a63c068-8ca4-434a-a59c-80dd82c4b21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f698121-99df-41eb-bca3-83dec6c94e35",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d1083d-0f0a-47b8-8de9-9235c1d60e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f407aa6-e5c6-4e49-bd55-711e2a0cffac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f2852c-f81e-466c-90d6-46853a5b7d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c774b0-75e7-49ee-af44-4ece200ed3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec60775-0675-4047-b285-ed1601c85a7a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c54cc75-7f30-4c19-b34a-d6bff013abe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6c8e29-cad2-4e6f-965e-549a7971b568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39066687-3fc0-426d-97ad-32f353aecccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a198b405-b0a2-469a-90ba-72cdd27e3988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8454f79f-c826-426d-b8f2-5abd64b82b5b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925f006c-5499-4dba-99f7-a8749837fd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cb2a4b-254f-437f-bbda-d34380dda9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5136a519-f649-456a-9387-afb8a57452f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7665f58-dbef-4d4d-943f-3b1e69991b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d952948-4f39-42ff-a021-4d9b10c3ac3e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2c7ec4-30da-4461-8818-5ed00b25e708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4b8a29-c68f-4795-b725-47f7489a5859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70688adc-f276-4e10-a819-4f937ceed3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c81d6c43-3e2e-46c5-82ab-48745582f130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf15433-da8c-4bea-b78b-c227a88db19d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01fcd8b-3e7e-48f3-bb18-cb488d7df762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eba436e-3d1a-4c5e-a10f-a22b8ee98949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0260f82-87b8-4779-88a9-1a39f8ddc9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b84968f-a65e-4e94-9cad-43f24bdcfd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1357adc6-cb66-4f18-ae58-0d4e03416e2f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8107491d-b228-477b-8a80-c3b7fd608b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b494b6e-fe1a-49d0-a5df-2373a3827913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d812fa-4c67-4af6-b24c-893a6ef0f7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1066f0ba-31f9-4ab9-abc0-001931b6f438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2aaa886-7a97-4644-981c-1d8d35b3fe7b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b88e51a-82c6-46da-8c54-86438cc4bfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5539ce-aad9-4d72-b820-6b8291c25c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee2acf3-6f31-4161-aced-5daed988c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d444e05-9ef3-4867-b6f7-a6e1e23d0057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89730f2-121b-4d30-8358-e3d9c8ecc178",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715b57ff-4cb5-4d72-8f6b-eb82ca47122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49986ebc-11b3-4dde-8857-9df77d5c799a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2fded0-33ee-414e-9b33-eed29a8a1986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7339056a-fc61-4093-a578-0d75744df023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd30e12d-15d2-4688-92d2-9eaafd3bfbd8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3318e4c-66eb-4873-881d-37a06e7e4b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c76fa16-5929-45c4-af02-d0d4c0a79982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c05c05-daca-470c-b848-bf5bbf59389f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8300bfb1-20cf-4484-9dbb-a79c4737dee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6386a466-eec4-4cef-ade7-6ccc9151a83a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0504ec-a432-4925-9e93-a4f0e9757b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d0ace1-8c0a-43e8-9f6a-5a61f1e91eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9680684d-d704-4d33-9bc7-9bd39c2ead97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a49d7f2-c365-491a-a6b3-f377cb66a0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f048f61f-20a5-4a63-8d36-72d8ccec0770",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fb6c0d-2044-4f51-9e66-28e2ee51c84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c977d74-fda4-433c-a6f7-2f6879094c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a97dc9d-59fd-4d15-9d42-616f8c90d92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae666580-176f-482e-b0e3-b4fcb0ecc822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5cd3dc-a6da-445a-9679-874db2abb7a4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6d5845-9d8d-44ac-aa57-f56bdce42468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1563d48-3b06-4f84-b650-9a4a3996e49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f869b4a-0276-4752-bbed-76fe984960b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dba5cb-0d49-41ce-a23c-92d6885080bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac38fe8-3f50-4aff-941e-09c3956ada92",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49926407-68f8-4e37-a291-9e0bd5c1e0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d18269b-f17d-4e20-9df9-c35c95033918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ccedaa-b02e-45f3-b5f6-9cec861e2aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3288a2d9-9ed8-4e7c-badf-f24f57bfa722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c5eace-65c6-4e71-a209-e80b1f81ebe3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37456e30-25fc-49d9-81d4-ab3736fd1c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1beebfbb-d795-4ffd-8b0c-c88d2e77ce26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f34be1-e01e-40f6-bc78-1238cb94c2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e53e23-e6dc-4970-9b91-ccd47ecc561d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a68cbea-6f1a-4490-8d9b-415838821a1b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9955915d-bfbd-4a77-b132-3abcdf8462ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165a3630-7d58-4ee2-b6c1-8563bd7fde95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a98f70-cfe1-4a53-bae5-7e0769615ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b0e5b9-41c4-43d5-b98a-7d4cbf36ba1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6d26cc-3fee-40f6-af7c-6150077fafd4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4650a391-e417-461b-96c0-bb5326f3251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197b1def-ae91-4ce0-b6db-ba9afaf596a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2c458c-f447-4282-ad20-4dfdaabea088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8892177-d617-4741-8f1f-b1ebacf686a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33107072-da86-4bc6-b24a-172e56539e11",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdada69-49b0-4feb-8d8c-4cf0d0a78a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0c8d3c-d6b5-42fa-8566-64bbe4f5c1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb0013d-6934-4cb2-81ea-0f29df8d68f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fefe5b-9f65-443d-b252-4bd330e551fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dc201c-d731-42d4-b405-c382b2e096b7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db0fdf2-b2ce-4268-a078-3f86b3db8860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b656528c-7bb1-420d-a8cf-de72101bca32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c701c0-1582-44c6-a485-7466f6e05c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e736a6cc-79b1-4125-8949-378fdcdb7f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20c0352-7903-4b60-bbd1-a314bab773fb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6c0384-c67f-4141-9617-01851d535073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "939a13cd-bdf5-4ccf-b788-3ee2221021bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19de2ea6-8b87-4780-bdc1-f9dec537acd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1baf17-4ff1-42d3-a63b-7ed53eb8d815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d36871-402c-42db-b2d4-8386bc110b7e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcfa41b-424c-4784-bab5-8ee5e0080a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1120f637-99ee-44a8-b750-744622cae0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97224ed-f3ec-456e-ac9d-efa3cbee2ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f30f7403-aa9a-4f3f-9502-e0b70b2c97f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed5f2d3-2c5c-47d3-85ff-c8aa4ddc5694",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df4728a-bf54-4068-84ea-79098d77b222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da01537-353f-4cf4-ac1a-9b37f78288d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e49d76-f12e-4fd9-8a5d-cbc48f1ff111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3e0866-f1c2-4440-9ed0-63c654c84e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16979d8-dd85-450a-add7-3d06288428cb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92e5ccb-3dec-459a-8be5-1a010fc8b3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ca4b49-8356-401b-b3ae-8f30f91d9553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a46ab4-8dac-4aaa-88de-d7409a461cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c16ce355-78cd-4379-8aac-5bf4d5a06ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb88629-9301-4e15-8fd8-880af5cc660f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94d7dfb-1175-4e56-b5af-eb7b96caa7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81b7d8a-c0ef-4aa8-9fb0-b38f6e8288f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a03fbb7-4d17-4d81-be59-7e4994c2a5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88985de6-c3f9-4233-83dd-27291fdf8372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a1268e-b41a-4193-a5af-1f2c6a821af7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79215ccb-711d-41da-b74a-55f754b59ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e067d211-4e36-4468-9653-6ada095da046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71837fa8-fed1-42ce-b3a3-d61949598936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee2fc17-7e10-4141-adb1-1a3f5c097b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba81fff-1eab-42aa-b495-d21a5b748ba4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf0fe08-bb64-492d-ac4c-b871fa09605f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a96df2d-5076-4b64-ab59-af95478a8a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46052b80-60dc-4468-bbef-f3254da6b36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9783c6-842d-4172-8c23-c4d59663eb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018332ea-7b6b-4c08-851a-c3a064baf09d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b515603b-f21b-43fe-95e1-a3011787808e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da35cc73-df77-45e3-9a9b-e6b22511518a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cafca8d-300c-42c4-9378-43aab5651fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9b5096-b30c-407c-a7e8-78e6d6bc5bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b408fb42-fd39-4134-acdd-14f0f9144429",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f84268-b44c-43ee-b80d-21b7da04263a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66318e2-93f0-4c12-94e9-9607804d76dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e38980-4764-45a3-868e-b101a5fe8b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "225bc23b-b73c-470e-a3e3-326ab2c4fd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae4cf45-df40-450f-9a01-edec20acd2a9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a15ff5-0505-4a8f-b52f-b86f8f443129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a67e280-d504-456a-8b5e-16b33be6cd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35717dde-0064-4e9f-8972-3cb979dca4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8337289-ee1c-4afd-b48d-65ff979cd83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f332ee9c-34d1-402d-94b7-a80fae2eb7c4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35188a8c-89b2-4bca-8c83-253736ed303a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18797f3d-0eae-4c6e-969b-20af44578933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd31adb5-e207-436e-a7ff-e6b453e93959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "521af34a-83f2-41c2-9922-4a033054250f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a0abe5-8a41-4109-b5cb-d2968e6b910e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0263b3e-d455-4892-af3b-6ae15d2f80fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2c7684-7997-43c0-ad86-08b20dbcae07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdd61c9-1338-410c-b6b6-bab4860f8cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2537e4b0-8bd4-41df-9579-02dbebbe60fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0a4ef0-b965-4285-b4e3-210cb0ea02bb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3c4676-d37c-4193-8d17-de723f79c2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f921359f-5f14-4b3e-9580-20709493934a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554dfc64-6e9b-42d1-a592-4ed5b4b9b459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85337c99-c170-4aca-8b0b-e056db620fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0310e5e-1596-45c5-aa24-d7e9d19d01a9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754f1d0f-9d5d-455b-a31a-d6b6cfa80700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6826b9bf-acf6-459b-ab3e-295e2f57869c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec81d2b8-8648-4814-90ab-9dcf85a3f7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d21bb88-d90f-4fd0-aa07-2a15c09b3023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdef0db8-27e1-42b0-92b7-ae1b016751ea",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8e9b2c-3ee1-4cee-9e78-2c8e7ddaf7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9870a033-cb59-4f84-8124-f9ed30558a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cce1310-3018-4bbf-b402-b69cc6cb4573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02b669d0-c56b-4291-9f89-5105c5a5dee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33fb75c-a036-42e6-9c55-bd7de49ac58f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2b0ec3-3150-41f9-8e95-1a8af54ec51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73e0845-1663-41dd-8740-0df679ff390a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0d85e6-db08-47cb-94e4-d12634698d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfe29ba-2109-4ec1-a5f2-16aa137d50e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a2fbe1-f303-4ba4-b84c-27322c2ba1c5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef41d8d2-0066-4d3e-be24-535e14fe31c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d98b0a9-dddd-4671-8eb6-28028fb47f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b384105-bd27-428d-b70f-3787254d00d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdc0ff8-dd18-4186-a8bb-4a29c2666bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcc67c3-2ec5-4cb3-88b7-594a08a0c501",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e36523-a157-4f91-a01a-4b6a24777230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d6ef06-a602-450b-a3b9-f3afec96bcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86977278-c19c-40bc-a43a-fd14ae638dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d72c0095-6b51-4a20-a456-c414fc38f33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fadf63e-85c7-43f2-a2dc-a5f7c4b0b9f0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4180d326-dac8-4be4-b289-3fa9e0b5579e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddeb563-0e3c-4847-81c1-0724fa4b578c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1037a3e9-4ca7-43f7-a617-f81382e48f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32a08a69-36bd-497e-9a06-3b0ea5bfb74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0399740e-f5af-4b29-bfde-edb6e531d442",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27365b7-f19c-4e1a-ae83-beb3b5fff6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9c120e-ea05-4c23-b5ef-8467761b051b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1ec08c-0e5d-44ce-995c-c8dc26fa557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f03680-caf3-44f5-9967-bf2536511f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3679c54c-c1bf-4bc8-8a3d-0870ab268055",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31704e4b-58a2-46d7-9dce-72a4c46fc098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4258f1-e42c-433a-9275-ee2570ce62a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1a90d9-397d-48c6-afb6-eedbfb6dc007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "af773acf-aceb-43eb-a421-9990cbb423dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8962b71-1c42-4de8-80b4-1af920062a4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cd6869-ab61-4fce-a284-86fa9319cc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25eaeb9b-1a3e-4d2c-b725-7385f0648ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510d4ba5-2caa-4cca-9899-f7eaed66fdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6ef1e5-09ea-4851-b195-a4fa7ced3e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c4739e-0f50-4007-8b3b-f6250938baf5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c657bd-db9f-477e-b28f-40e9b33495b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a8da3a-0958-483d-a6a9-b1bdac592c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c325ad3-e662-4d21-bbb8-ce180a4b83bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "799276ea-f5d8-491d-8ece-43339fa69a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af996117-3a07-4339-8b7d-7de141341e41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eec164-8f4b-4e3b-afd3-9ce6c2f09d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994cc41c-bac2-40ba-9c21-ec8cbef27574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4513a5b2-5506-4f21-881e-20b857eed5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "864b239b-0bbd-406e-93e2-7c58ab129640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ec4da4-90c2-449d-bbfd-32dec59c3bd3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d235d34d-21fc-4ec2-af77-49ff50c52349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ab1331-71d3-49c0-a629-259772f6cb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0843fd5b-d080-42f3-b4aa-bb87c7a71397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4463dbb3-03b6-4441-b28e-441c2dea21ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92259600-2b5d-4dfa-a863-6952ae2c8ae3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f95831b-56a3-49fd-9053-4065591ab8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9302863-861f-4320-a3ae-54013524e1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3766ec81-0fce-455e-bba0-3da5da37b68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "168bf36c-9ad1-49d5-98b7-286834026afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cb508b-3455-47db-b61f-1cd971182557",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9d77ea-292a-43d0-a532-789eaefffb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d38fae-0359-4467-84fe-e7e873b2ae65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322ea201-6f06-410e-9ef6-48ddb3e83381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8e6deb-9953-4d30-af61-bad00bf3136f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36802665-89ca-4075-b08a-98c4af00a933",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafc0d0d-c3f1-4f45-923f-6ba453610bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996d51d8-2bc6-4bd3-b71e-b6f34819f687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c19605-e652-47e1-b49d-942f1384a3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf7778e-a107-4646-b4fd-9c60cd92a0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e39df0-5c18-4870-9e3b-8aa1395e264f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6316879f-0b03-4d9b-8ec9-deec3e38b3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a452136b-c02c-48e8-920d-3f0c14957b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd7ad25-a2ae-4598-b391-9109ad07af72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c45bb8-ddb8-4375-9a38-468250759d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83139f91-feab-49bd-8eea-830a72551790",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e848a699-f3fb-4a4e-ad97-c21bfb45970b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53399b97-03f4-4a08-abbb-bffe6fd1d291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494353d5-7407-4d6f-9c3e-5ab2367fad14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2e102d-113c-49ce-bcee-9809bf0ce609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbe373a-10db-47d5-b171-aeaf5e99446e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8145677c-d6d3-40af-aa48-e8c2e92dca2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975e9561-f9f9-4e52-a015-1b6d9a7f7557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4f2f72-2c80-4aa5-8200-d0cb17dd0ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad702ff6-e46d-4087-962d-8eedd9c04b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a5a0cc-bd13-49d4-8b20-6b35b7032308",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e10513c-67eb-49e7-bcba-08db8c696654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f301aaff-5d27-4d9e-8bd3-7d1796f48cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693805c1-fda8-41de-9018-8b6bfd296fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0234ea05-de1f-4430-9b0d-7ab9907ff4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa303f9d-977b-40b1-82a5-2149f3c563c3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80876af8-d6c2-425d-b0fc-4e809aed810d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a957c35f-9eed-4112-b1b6-cf9fd8ed0cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734de174-7459-4545-a592-4185df903b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad222ad-f734-444b-9344-4463a990b262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5579c404-b853-4eb9-bb37-f293e4faacf3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49d175f-f0e7-4561-bff5-c72dcae45d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd588a82-68c5-4dce-b8cc-b04e486a2d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075af8dd-91b6-4c06-8d1f-35a71cb21504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c3105b-ad1f-4657-810c-8cb830d774e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4cb299-b12b-4b98-9d2f-3fc0e3081a98",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebce165a-f1ef-4443-8251-30fe94034929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3983ce71-bc0f-440c-a30d-74fe6bf8a475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e8413b-353d-4842-94e9-7388ebef2085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b6f746-4378-49b4-a076-44077a77fdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdee67e-a57e-4f72-8bbd-6491c040c3b5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea16dfec-f398-4e02-b5c5-da24d703bab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4845dc35-97b2-401f-af7a-040e1fb7235a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16282848-f299-4c73-8c92-05210dd7cfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e62299-66b4-4a57-8512-1a77c0a5fe7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d357e39-9ffe-4335-9723-0fe169e29017",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab98200-7098-4b74-94b8-5ba2696ce556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b7d5f4-1c46-4dbc-95db-20b6d2361c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf192e5-c7d1-42c0-8dd5-c457c7a18aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfe31f7-2f97-479e-94e3-94c532e9464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2160bbc-5521-4867-a42b-662bafd4d34c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf32a21-ab6a-4ea8-9c0f-db8e8d3cd0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee9e826-6d2e-42c3-ada3-f5703a008b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963fd0ad-27e8-4984-8bb9-c7f5782180af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2e64c4-cc8c-4f20-89b0-847dde4f1034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71066d46-5876-4b36-8236-b5cf43cfcd90",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d73bf0-c261-4847-89aa-38f75bfc99b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34827fab-4b87-400f-bf52-0893fb48653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6d9470-6845-4022-814b-7ee0ea141ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfff7bb-aca9-4257-af82-3370bcd61cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88a1358-e163-44fc-81e0-011becd85d6c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f6e1c7-7880-4f7a-a7f1-784b5cc3312a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa98bb05-cbc1-4cc1-85a8-6c8704092852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a990d5f-451e-4592-a63e-8397bca892e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f3cdc3-e53f-478c-b5b1-ed0afd0eb13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca4765f-7bad-4456-9603-48f74d06e385",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc01feeb-6fde-40ec-a1e0-9a488abfa85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7121a6-22f9-4540-9aa8-b4c8e21e2d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "face8bed-2581-4f8a-b9ca-7ea5d42594ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ba38cf-6116-4f36-966f-126dab14eaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583ff435-02f1-4eb0-89d0-24548300cb0a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97629be8-4ab4-44e2-aa8c-3a1e0a9758b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7cabe6-7dd1-4757-b326-aa1dc2bd4901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37b822b-5d04-4c43-9594-44075d9643bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b68f1817-c467-4063-8e5a-b449c62419bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fdc189-b64b-4d52-a8f9-e5af0d0820e4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f577f3fa-cfdc-40a9-8376-8bdac477e76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e978bd3c-bfff-4338-bbfe-c6a801b4f6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b4fb48-3179-4824-96c2-6eb843125f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e366ed81-5963-4bf5-9198-126545d58ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b5b9d8-cec9-41ae-8262-36a0eb7ce355",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31537a1f-877d-494b-809a-bd0f2634cf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82f70c9-108a-4cbd-a764-3c75e676b366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b29917-14d7-4ccd-9176-fffb3008084c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33ccfed6-3f4d-41fa-a341-53c2de17242b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27694678-525f-414a-a4e1-f3d62daaaf9a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e637f10-65b8-4bd6-984a-601ce0df3eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513899ec-b746-4cc3-ad42-56e3aa8ae39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd396d94-cc8b-4578-a563-681ea380c926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f766db8-fbeb-4b78-b087-82f09f306a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031923a9-7e82-43b7-bdf4-e7c53903743b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33952a98-2fdd-4d57-b2b6-99abaf6b94a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c61abae-638f-4132-bc02-1e01e823f995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a9d626-ae78-48d0-832c-ce52981120bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a67b96-f32d-4700-a2e1-65af1ffeb7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a72edd1-5931-413f-bffa-c0c379964399",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f547d55-38f0-4fd0-b9c5-8bdd324867ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8170841-3e0f-4821-8449-226060d18ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c630012e-5454-473e-a945-dbf798d3a218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdd8e2f-aa74-42c5-9e1a-004041c32b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb79522-212d-4018-a12b-5ff22928436c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6944deb6-7846-42eb-b838-fb6591eac343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f05dee-ad56-436e-bd2a-62673e413159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3263c6e-9e96-4b63-b949-3a03f1ab5b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6db69dd-32e5-4597-8289-5ceaa01a5e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ca16ac-835a-4d23-a5ef-7a5c7394b52c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d58ac6d-1431-4704-b5c2-d378c15cf8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d851e2a-dd72-4228-98ed-1dcf7e65e173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f7738e-a51c-41be-b28f-36d578e91189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce67ff0-689d-4824-8655-512308b9bfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd6047f-b61b-4fa3-a124-c541226b8dfb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b066f376-5378-4541-aa6e-2dd212544fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a53722c-6358-4a33-be15-b61a0ebd2d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a611ba12-7b5b-41a5-b444-e5eb602afee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed74a94d-1155-49b3-92fa-90fe75213f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad7226d-0dc5-4906-8b25-08d7a3faa582",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdfdaa6-50e8-40d5-9ffc-31a779db8878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a95b2fe-d1cf-4107-ba04-d077f91ace53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a0d245-a78d-4db1-a13b-5a98ed9dd129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3972d6b-8242-4f23-9c03-1e992a5371e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36329965-7daf-4a2d-9c67-5d28e59f260e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6222dcf9-a73f-47b5-8093-ae52ad9d3bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63f9d07-6417-455e-9779-4561656d1203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce2e3ab-6e72-4f30-96b6-7bff54dacfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cbff4c-d4d5-462b-8b55-7a9956c18a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87180eef-87ed-4c18-a59c-2e92dc599c08",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a592f7f-9632-433a-9a11-88aa42e007aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66965041-c936-49ad-bcff-76d24e73428e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f2a768-7a9a-409a-a1d2-a349d44f4d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "06a36d4c-d819-456b-8b20-4a59c460e04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be909c9-bc18-4a2f-bb2a-bb6b88251b84",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23db3913-e05c-40a1-9b9e-bd0b9cfa8f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb43b34-50dc-4bea-8a17-eb01ddf56765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65af3edf-32b2-4d9e-9349-4b7ea53e37b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcefd184-45dc-4575-a292-f9fc58d4a2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54d04aa-745d-41b6-9b1f-afbfe4d8ffeb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd92794-81df-4819-8e4e-e7936f7ed8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b308a6bb-3f02-486e-a927-ce640378fab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0adcf3b-72cf-4822-8c6a-a64d91ec69a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "377f6151-3d7f-4896-be7f-0c5f615f51f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7f76ee-59b8-4e5d-ac05-1201d5bebfb5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a75072f-f7c6-4e70-b2f1-2c461d1950f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56593dcc-007f-4cee-bfb5-f2cd68f685e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853b96a0-f4e2-4db5-9696-934c38131eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3728e209-851d-4087-9493-ea0338bd0067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c62f6bd-4927-4bed-83d4-1c385cd3e842",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b79a89-5bc1-4950-a28b-c99a02945b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9e7e3a93-82c7-4d33-8ea3-892061983ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f96389-6ba6-4d32-ae19-baad02317f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdcb9fe-77cc-4b43-8c9c-c197aec9abb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4d5fd0d-2070-4d4e-83f4-91e337a19789",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05bc838f-5d17-42ce-85cf-f3ef0337bae8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c2549-021f-41e0-a13c-db53064394eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a6d187b-aab7-4bf4-b75b-ab51abfcd08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c2303e-ad08-4492-a5b4-2f5ca62a1acc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f7826381-eeff-469e-9c88-c24e09311e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0241c75-09cb-422f-a885-e183cff50c98",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b302b16-19c5-4517-8501-97979b923e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "921db116-9a16-42dc-b36a-24ce50e744ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783c927a-0c70-4a51-909b-e248117dcd6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "ac71e09f-d7fb-4e39-976c-81a80d809e9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "223ff42b-786c-427b-804a-5e392e130a75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bb44426-513e-482e-a385-a89bdb2511f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27d36af9-f187-4a67-b04e-ba51652077fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a60fcce1-1243-49ee-8ca8-7b3fd2ccf68f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "daba1127-c78e-4907-85d8-1ea16921f8d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b44f6043-98f9-4e05-a065-c21f6a020e71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4993b647-d904-4d46-992e-f5c35ed40b2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4e1244a-4598-4f04-99f7-6e9183c6590c"
                }
              }
            ]
          },
          {
            "id": "e6f82a0e-1bf0-4400-b18e-2e80ca20d730",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3dcab20-7c05-418c-bba7-effba2e6f4e1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5492df0-c4c6-48c0-9456-b19734b7b23a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5824e8dc-a50c-4a2f-909a-6c7ce6fd8cdb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5ba30ad-b7d2-4ff5-94a9-9c1dc8a0e15a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27e995e2-5934-45b2-96f4-358e2a10f701"
                    }
                  }
                ]
              },
              {
                "id": "a428f01c-decb-4c96-bc0f-0f16cc043da9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c6f7c5b-2cc0-464b-8b82-f8f29eec8933",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c970a8a-45ac-479d-8931-a73cbbfa16b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e956266a-5341-4de1-8424-61eea5f04e38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1be1ed7b-f948-4815-ad7d-534ca65651df"
                    }
                  }
                ]
              },
              {
                "id": "ab60e6ec-a31b-40a3-bac1-b82fd85dd4bc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92b2b981-6815-429b-afab-891143cfbbdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28e2e0ae-bbf4-4c87-a9bd-114fc11513af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff07584d-80ca-4593-b4aa-7fc86a2e696a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6f9b6923-059b-4eac-ac3f-a97348db8f85"
                    }
                  }
                ]
              },
              {
                "id": "cd1b4455-1fc9-4711-9efa-fa79b5de96df",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2b22799-c315-4820-8ef6-617ea0e0a2f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aedeaae4-2542-4e0a-8c8f-6f879392e1ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86e1ae94-15ac-4d5a-83ab-45e56034bcbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "024ee97e-2ea4-449a-bd0d-a2e5e256e82d"
                    }
                  }
                ]
              },
              {
                "id": "d240f5f5-36d5-4c90-9978-bdad1db3e748",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82469f0d-9c24-446b-9275-b86438c066f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6841a700-206e-4355-a197-ff487e280504"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8531f0c0-c40f-46ac-855e-8ae99e3a0855",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5082ffa9-af8c-4dfa-9ec6-8ec69a1b9c43"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa9e82ee-7eda-4d8a-b1f4-bf537f051638",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20bdc3fb-925a-43c7-abf7-8add98dd2569"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10a96947-2f00-460b-87c9-2d1e47204fff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c04670da-9d42-439e-a679-2d87a43e90d8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd36ec07-b391-449c-8696-3b9cfd0ecdb2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d29bef3f-328b-42cc-b6eb-26bde8bac717"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9007f77c-ba59-4319-97f0-7e920436e0c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1c431de-8476-4ddb-a951-841e31f9a7ac"
            }
          }
        ]
      },
      {
        "id": "f9fca461-f1b0-45db-857b-3e040ae78324",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9a1f123e-e959-403a-a5d6-1adc74e94bc2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "009cfe02-8246-4457-83bc-5390341ab123",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6dbcf11f-9a27-4dcb-a0bf-858e36ca3c73",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e747b4d-3b1a-4f39-9da4-050ffc718144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1261be83-3ff8-4f5d-a37c-5eaa2973f802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bfab05-2463-4ecd-89ee-cfa8b5f4f0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "df72c943-32a3-488a-ac00-3f6e5f34cf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a49e67-30fb-400d-8bf6-45e11c57e7c0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa684d4-f40a-473c-97e8-4466045d4f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f9247d-6087-456b-855a-d7463255b913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2a4645-fe32-4911-a456-d77bd6c7a61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c82ad690-588b-46cd-bf9e-1446d212d0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42dfeaac-1f83-4953-a9ae-4b20582164fe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94ac475-3b6e-4970-9456-59de9a8c004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56184bba-ef00-4c62-a4a5-de37d71f9d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec787209-6898-497c-abff-59ac5ce52e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "589e1c28-f059-420c-a5e9-d6c0919ef4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b34ab3e-7692-4d9b-a210-78a75a9d733f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74ff44e-23d2-4e41-a857-fb1c2c457d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13eb9fa9-eebc-4400-a5f2-9d6db5e2f77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1431152e-2882-4acf-8d73-0739297daa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b79a66-283b-4c05-9ac8-87316fb8771c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea36eda4-4eac-46af-bd25-5b15455ce5f9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d303f49-8082-4104-be0f-f3f25ca58bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a48289b-8da1-4a54-8904-a24d3d5254e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5096dbbd-1c67-4987-b185-37442dc94638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a94251ac-fb34-4c4c-b807-e132105c22a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b078c2c1-9fcd-4ac0-a8f7-4e1f2b3c90cd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9090f5-3a90-4c97-92fd-0f9cccba2685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766a0e14-5504-4d4b-8179-462588a4ee4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6d8283-092f-4280-abee-43299980dd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30682bd4-d5fc-40a0-aaf9-2a971f06443e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8b226e-19a6-4a4a-a49f-742be67d2e56",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752f6b47-2bb0-4b04-ba75-3742acc401ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8103b8ac-8796-42bc-bbda-7f2c73b2bfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91077311-04f4-4b1a-9d30-152ace001678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd17feb4-eaa9-42e1-a1b3-83cdf9d92033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a27271-094a-4b9c-a8d6-d7d07100d345",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bb80af-4b39-4e07-9c94-8e53b3c03af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269287df-7f06-4b38-a277-a9ed47efa064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e4fbf0-7197-42c5-9a47-91a36796821e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f2ec3d-639f-4a51-ae68-5a09b228f519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c656cad9-6ab0-4e8f-ac73-40fccd20f4d9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a711a345-c437-4bb7-b4b8-9d02d98aa33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d16441f-eeda-44b4-ac23-2651dd6c8225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979f5fed-eeab-47b7-bed3-71607aa93c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c47cfe-fc32-41ff-adae-89f8a119cdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f096a79-39ed-4ae1-8e35-7f00ca4d47cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65f8c80-ec10-4dff-9819-2f52231b962d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece615cc-07e1-4914-be5e-28e98d31b3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1717a6a7-8ad1-493d-ae25-b1d29ab7da27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75295251-1934-4f81-82d6-47202dd7c939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2554a6a1-3249-4586-a2c5-5427cfd8b4b2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3e4cca-a31c-4910-863b-239bfe8d1c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4954d967-8228-4933-b414-84b253d023a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fd342c-52a9-4129-9693-0d3676012428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fd985ab5-7d9d-476d-8d8e-6a4f68f345f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07af92d-710d-4763-9500-84312dd4f6ec",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d46346-330b-42b3-a0ea-17118c4abf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8417c5b6-549c-4421-8433-58464035788a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff94bf2-1292-4ac8-91a6-e8e77a9aa4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09f9059c-f3f2-4386-8375-9733a01d1daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56530c8-dc25-42d5-9370-3d4c1912e844",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e2ec4e-f846-4714-8d4b-fa9b0dc65db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e76702-b7f6-4991-afda-8cd33ac3ba67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a475be-10c3-4b04-96fa-d2671231f8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "022cc282-54a6-4d04-8b41-5773bc890df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c4503c-a075-4442-bdae-28de9850e9d9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb0b367-9524-4086-be36-34604a59f9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb38a824-5b1d-4e32-8277-87fd2aee528e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99260a36-77a2-440b-b929-9df8f5a7e879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d66634-8e8e-42ed-a74d-5d172e6dd8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf908295-a357-4665-bd18-bc1175d2354f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25c6f37-5097-4c21-805a-07080142ca29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e15a7dc-177d-437a-9ee6-9154458d2adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d395dc2-c98a-4015-87d3-133e43ac1168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac3334d-88e9-412b-b51e-fb61e2b03fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12a5556-ca0a-494c-b8fe-2820dc7ca67e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cbd973-a6c6-402b-a73a-a63c043df3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4020ff07-762e-4a97-b5ba-fd9201ac8a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445cf45e-6e32-4d09-a0e8-a8f4315607e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6efd76-be29-4213-88f8-ed3b01f80482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b814cde5-5a1a-4318-95f7-3f926e9ea7f2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5f695a-f4a7-42f5-b7f0-e8ca10d89672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3a1912-ead9-4d3c-a4bc-ba79a1bcc9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfae142-708e-4f9e-bdbd-0824b1302007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd9f179-176e-4708-8f90-fe1b4ad173e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7f0fbb-d7b4-4518-a31b-239237c8101f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2b7dd2-1b7a-49d5-aa77-b1ed0bb96ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0925f7-5cb9-4529-89f5-fe7507f78c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877c766f-b8b7-4a89-8ba9-be5df10c9799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1b3dff-704c-42e3-acc5-a2a0d679370a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64eec60-9d8a-4d19-9a72-e7bfe4c83228",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809c5431-3108-4d84-aff0-afbf9d8ba5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29aa763f-23d3-4697-a883-b1868eae46b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce6a279-dac9-44ad-bfdb-02860f2b2d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bef787b6-cd67-4472-9a67-98b047a093d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f446dff-0054-4664-a329-63cef33abf02",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8612f830-408c-4cae-9157-90ed5a08e811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ea11fc-ea3b-4369-9800-1ed43e2e6414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ce2ffb-588f-4b42-ab79-fc53951fcf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "085b960c-6a2e-47a6-b744-d9f3d475fae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89813199-33a0-4621-a72e-102dea7b230e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59173a3d-c61f-47b9-aa43-6f99a4cdc354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b55fbd1-e186-43f2-ad51-f2947b14e20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8f38ce-ac2f-47bd-bcdc-f8073f9b3563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f787974-b6fa-4343-8fd3-ecca936f8213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcc5f59-5b1f-408b-a1fb-a2200637c066",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb17a5cd-62df-4ad8-a160-e61763f628d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b07c9e5-0f95-4a12-9baf-7422902c1395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c85a98-da20-4218-9f4b-3798ce8ce1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df04610c-a49b-4333-8229-ba3eb8228010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1591ff-8def-42e2-b13b-922291257bba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7b17a2-6a41-486b-a405-7b4334d71357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f42b92-b68a-4fba-a414-7ffd83bc9215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a84547-58c8-4cef-8531-602e7ea20ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b91d157-8f8a-45a1-93fe-f261136eae1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f58dd3-bd6d-45e1-9184-9019a3355a6f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1700e44-c234-4c06-ba60-7e08d87331b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0184a87-5f8d-483d-99cb-c583f6dd72c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a888f71-9c5c-44c2-b931-7214ac68f8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c55a7d9-38b1-42e8-a356-7a30ff84b7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607208f3-3f6b-4d5e-9459-4a21bae1141e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f40bae-1963-40a6-9ff8-011da0e6a77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909fb70b-7670-4b2b-b7ad-2f43592427f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bec61d-3121-4a8b-ad3e-393a74b9589d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c5c24a-b627-45a1-9726-d1a8b648e097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9246c1f8-c88a-4381-8175-9856272a04a8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae27c6e-dac4-4720-8a3a-b99ec89c69f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a385640c-9948-4135-a634-d9dd834a1c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c694f681-2721-4aa4-bd91-52f8e3916918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53431597-9c94-450c-9515-6250401742fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e6153e-12ee-49d1-a1d1-5977a30624e3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395770e2-56bd-4178-8975-73ffa20eef64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae84ab02-839e-4236-939c-b8a6e9fd7c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b5fec8-e41a-487d-a2a2-8170e7278a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d288600-b72e-4c9a-8fc2-997c0fbfccca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4567267f-8299-4f79-942d-ca306dd64d8b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835cd72a-8cae-40ed-869b-bbefb552170f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75cc57f-c325-4122-a275-f8aec1e72359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9078673b-9e23-4d54-b93e-6aed4219df1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "502297c8-b10c-475c-9a95-377ee360cec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68388d97-d60f-4da5-87bd-d9cc77757eb0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8e028e-df44-4291-a1a8-52d16bc037ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ac4de7-2e9f-4124-8077-ce01615e1061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944a6617-46e2-4ab3-9d38-730aab5f6e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e0ca93-ae1a-4abb-9ae9-747a11cc4cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1eb6e0-88fe-443d-9f7c-6562310d0ee0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b415d6a7-1d6b-403b-abb7-48be1da21f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d7e58b-de9a-4eca-b519-f21417ceb0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33ee7c4-1bc9-40f0-a526-36a0cfbf0ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9403d9ae-32ad-4013-b36f-d7ff194ed743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cd39ef-22a7-4012-9694-7002d5a5f98e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03b7652-6c5f-46fd-ae92-6fae535172e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f05f95-0129-4f7d-b91d-f4b35be16e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061421b6-97fc-40ba-a422-704e3102c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcf4033-1f81-4d4e-9db3-c164463f88ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af27310-23d2-4b1c-a612-3ef0727cdbe3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15794e50-4ac1-4bbc-b87d-b2cdda10fb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767802ce-3fd9-457d-8a33-0b46ef401201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a195ddc2-4f28-4278-8880-ea7c0a0b9d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ca7524-6d4e-4dc9-aa8b-4d858c124e0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2063116a-d320-4764-bedf-c44e8da26534",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d11371b1-5921-4035-b26a-43eaa47e0bb9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0a3bb8-e3df-4c30-b6c7-2ae227ea5baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d38be7-aa75-4d4d-bacd-573b44c796cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e7ac5a-090b-4042-8c40-de16c7b3401e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "598b36e1-a43e-4c9a-a9c0-26564b7ba32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5488bc3e-d139-4561-bb09-9e3228282f20",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f651d5-cd9b-40cb-b99f-40bbd1d6bd71",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "99406b37-c3dc-4376-aa45-7b1e404f9664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc29eea5-7a79-41ee-bac9-22fb8eb09789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e04e69dc-eaf8-43d6-9c3a-2414bcadfe44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6964c82-747d-43fd-bc6d-aad459bc7f6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d281a6d5-6331-45d7-897f-86cc96ca33c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c02ffff-21ae-4b71-a81b-1b5922e9eedd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32428771-be45-40f3-b1e8-a9b8a3704e07"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3c11887-99b0-4fbd-a220-7975d804be1c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab92cbb3-2c47-40a8-a42f-69545c2fba34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aae2113c-7baa-4ce0-8365-9af550d85a52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d968762-0c8b-4069-9b1d-7879e1886df1"
            }
          }
        ]
      },
      {
        "id": "92e1b580-b18a-4d40-aca8-ef1b4ad98947",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5e3b3b90-270e-4b47-a187-6c7442699338",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f0e291f-da3b-4cad-a153-29775b8ddd5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b00f991e-5d27-4e3b-a272-816711a3f556",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e83a07-9940-42d4-a9cd-601672a1cc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59297d3-006d-411c-8a74-7363eb11b46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fbf008-0b64-4643-8a7b-99b258c83904",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4139aed1-aec1-4784-af1e-a766e767890f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1dec981-3672-4d29-9c26-17e10cd0a63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56264b09-e582-4812-9fa2-785d657b2ace",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec56b00b-59f5-4875-a11e-2a829921cae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4437c5b5-5f66-4c51-975f-98c64b6254d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d475cb-81fa-4bf1-b40e-8aabc8c478f7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b487eb6d-5011-4721-a0b8-d43536de5beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b7af3e-6ec7-4c63-b0b2-b21c751b75c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dfebc3-7d72-41dd-a21a-2c4d9f3a606a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dda746-90d3-48a4-b6f9-40baecfc6159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef54a862-9487-480b-b358-e3ad17bb892c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0616d5a5-03a9-4f1f-862c-6c95a788c32d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0813a9be-9d5c-4a4b-bd3e-9a2430025c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ee71dc-2017-43e9-9e9e-b09634857e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a56fbb-c755-4c91-b4a1-e600acfb4b98",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08e4c51-3ef3-4e3a-acf2-31d001e06e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ee36c1-6c76-4d16-983d-cdabc58a37af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f57d60d-6e85-49f1-8e93-98e680955ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8168e8-6df7-4560-8969-d60e294af904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbe7a62-f27b-4025-9ee1-021109009ac1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec21487-dd92-4e1f-9444-96aada641f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c11b8d-e842-4e0c-b29b-f1ebed3db83d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acfb7ce-77cd-40a5-a691-c71aeee7b9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0454d713-4f86-4638-a3a9-bb15488ff7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd21d5e-7579-445c-affc-180f6b488de3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4759d8-eb7e-44eb-91ad-cb7da6546f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232ae0aa-3190-43df-8c74-a110bf71c9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f27c02-af56-41e8-a5b6-dc51ec3c8663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4836fcd7-bc07-4066-8379-add4d121da45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b222e4f8-98ad-45f9-bc42-289699dee185",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f4215b-927d-4af7-bdaf-f00b5e45ab07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa1b080c-bdd2-4ec1-a89a-fa526e796a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da11496-86f3-451b-80f1-bf75caa425e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126edc06-d0b4-4619-a7ff-32722ee6a8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c279c336-50a9-466c-b716-aa2e690655b1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93dadc7-c532-4be9-828f-27dca842046b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f66d06-2af9-41e0-a5e2-8abcd0ff441d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a5db6b-09ae-4c5c-8ee3-9309bae65bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f13f1c7-c9bc-41e7-bac5-cfd416a936f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0bc77a-f6df-4299-8420-fee880a02c4d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c20f5e4-ff16-4568-8f2c-3c9f068c7ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e40bcc0-164a-4da8-83b9-0a36d61a0be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4c6797-07d7-462c-9a4b-0c6a69d79255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed856a0c-b021-46ca-a0aa-6a8bbd77f503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da37acac-7091-4f21-98d7-8e48fe5e97fa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6ddc0a-f9ac-4437-b10d-123101c8b6e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420edade-65be-4da6-b0e1-8b8c885022f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c253ec-dc14-4a60-a349-becedf15c40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24619a11-ae51-4923-bb73-4839454f2448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4587f93b-c343-41c4-ae34-6c63e784d50a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5e89e8-1330-42cf-ae64-dfc7d2e3719d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df055d89-ed43-4bcc-84bd-43c6ff16b83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a97638-1978-4eae-9f89-e16ed41571c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4fac74-62eb-4735-bff2-52438ee2d763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cc9db1-16cf-4399-94cf-68e7135c262b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895944b3-8255-4ce7-938a-04543b893316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ad76d2-b00d-4df0-834d-17a62e0120de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5160f7cc-3b64-4e74-a29f-2313b83147f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1774da-f94b-4538-a9f9-8190cd76127e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac55cdc-fef1-4f7c-ba4c-c76c1543085e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd18047-d07e-46f0-b5bd-d4abd446fbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b49fe29-ec3d-4148-ad49-e02f5ddd6c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd6879f-8622-4953-b547-d2dd47ef6eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb43f94-76e7-4e39-951b-6fd40a550691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77459ee7-9a65-4a56-9383-e65edad92c37",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72a449b-e108-4426-b65a-926f6f42fdef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991b7285-4d25-4a24-9cbb-a0be517357dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0deff12-45b2-4c0a-984e-35ab0d440630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048baa3f-78bd-4640-8921-45931742d0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc05b6b3-9e84-4d28-98f4-671865fc9a1b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2a822b-46a1-4c22-ad23-6b37310af001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6833af-156a-4af8-9573-5099a7fa129e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3475d1f7-25ad-47f5-8de8-9d2dfb54306f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4bc9b3-3fc3-482f-831c-073538ae9d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ec23eb-c118-4a29-b314-1a094697f653",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4469b7cb-e373-4728-ab46-ed88b580367e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b442bf35-55b9-4848-9809-c69e26618992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe529d1-5796-4bdc-91f6-6a628918054b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d00c90-15c2-461a-b94c-febf2d93cead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fe0c5a-1dca-49ad-bcd4-dbf772c3ba7a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7849aa03-9388-47bf-b7fc-de59a42496fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f241871b-87e0-4512-9056-2493bccc91dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7d0211-5022-42e1-b981-ba7c69e2904b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77e26ba-5118-42d6-b400-3e56c27467ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e248e1-1ac3-4f7d-ac47-5c214a359928",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df527490-7317-479e-a559-386aeb4ef709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb84689-ea61-41bb-828e-d53c0b43b1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417192ac-15b3-4296-b14a-9fc05fd1e80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a50822f-2701-4f0f-a16a-efa997a5a155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb13444-9bf9-4232-9add-e312a38b0526",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd86ee0-bd10-468b-99f0-a2a64753df0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2423a204-d175-4327-b601-16d063e24cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dc4a75-a971-4169-a678-9fd9f00440be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2ee372-93e8-4688-b7c4-d0bfed539cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf66748e-5bdd-4eaa-993a-2dc183bd23bc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c40214-8d60-4d8c-966f-14851d55e7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23be93a-6370-4bb1-8bd2-ccf2905685a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b158647-e245-4425-9057-c1b1084c83d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480bfc9c-9091-49e0-a3c1-1481ecd26259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5462b60-a5be-496f-81e0-cb57388f6a8e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c9cb48-1420-4880-ba24-5302ead50a6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63d464f-2599-4086-814d-58481cf1c9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b3e3f7-3e8c-499a-925f-30b4328b410d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a927eae-8d9f-4b35-bf2a-aa1e3ca8882e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f097a6-4b63-47da-a76c-ffa01215cfc8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f47ce61-ca56-4ee8-8a1e-9f6661014661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c6ba978-f8d8-40d1-8f73-d42569d6bee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eeb575b-ff99-4f79-9494-889ef53e2e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a1cc01-e616-41a5-8351-687acfcffdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fe26a5-159b-48cf-816c-fc37cf48c481",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33089803-2f2e-40cc-9d6f-0009aca4aba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550d1131-3ab5-430c-b811-a8f6093f5de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400651ff-e6f6-456a-ad27-36aa5ed8f071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee659a4-5461-407f-99cb-f535d01fe965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0651d2a4-60e4-46ac-84c6-84a0264ad295",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03156aa1-d9d1-47af-8750-1787927f48ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f701ba-f478-4b9a-a8a2-02c8eb08f91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1f7f9b-735a-4d98-baa1-837d8ab6c422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be114b3f-8e7d-479f-b1a4-049f6c66643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb709ac6-e1a4-48f2-81b7-9ad1a3aa71bf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290131eb-ba32-44f7-96ef-c67f62e5ce0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a003e1b9-2f18-43f1-8f1a-671cfcf36a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e9f8a7-6271-44c4-a426-1f0144504b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8046ee59-3e9b-46ed-aa72-822412ecc7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d9b682-5f5f-4ac1-a369-10d2870b16c2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75259dd-c777-42cd-88ef-2bdc4268e572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c292eb66-101d-42dd-94b9-a3ad624300c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4672d574-f21f-4bd9-b7bb-91b25cb7c4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27311eec-96f7-44ed-a0ec-0fa72a809421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d50d79-7351-4894-9908-b2717f5384e8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243cedca-f3b5-45ad-a42b-556aaa88531a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be9c84c7-a430-411b-a1e8-181d5f8b37ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8401a63d-e8f4-4b8d-b8fb-9241c8098d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc593016-af07-4e0d-9e96-2e26a6c91c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122e613f-9c15-4f48-8cbd-2d426f1e767c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6532188-6ac3-4433-a685-d3abd2e23ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7cf0cbb-74d3-42aa-a7ff-ea951ba93d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9f3a37-c802-443c-8d2a-a943b7847eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c065ace8-4ec8-43aa-a32a-d58224fc2abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da4ffb0-b61b-4a4e-8627-2b642fc38eac",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024c9a24-0103-43ce-8edf-f9341964d17c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3bfd37-87ce-466e-8f89-de0323356f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb672632-965a-4deb-bd33-a59fc680f8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53551112-87a7-4428-ab6c-78d44ef037d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c347d2-e7b8-4c68-8c36-7dda0a465e86",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5a6740-b74c-4690-82eb-6f87102ae093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ce7c17-bb4f-4e01-8413-812e7c8ae3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c6df10-a875-4d86-b24f-c05d625a9297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2811e90d-0d45-4636-81c4-6082c2696e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45db893-492a-4e5d-a684-434b4f9b606e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aae105-626f-4d34-8e91-ca052fbf020f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f36ecf7e-9d68-401b-a4b0-49cd5d5f2045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274d88bd-d5bf-45f7-aebc-5481cc93d5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc4fe31-4d84-4ca4-a845-821fd1d1971b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6190c232-cf3d-428f-8f53-4894704ef513",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52350c97-5955-4a05-8a10-f06098d425ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e311a0ee-8c5b-4221-b092-5e90cb09ba6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a856c5dc-2f41-442e-be7e-02e7868df38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829e06c7-7bd9-4fa5-a531-2cb5e51697ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943998bb-5154-4f7f-9743-c9f807cb6356",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654ce976-a4fc-4327-b470-0d5fa1fbc82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41883cdb-f826-4bdf-8fed-84b0822b9d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74571df7-7c61-4135-9831-f28fe67ce3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4c75ea-8a42-4b81-8d0c-f856106673c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835fb84c-98c8-46f7-9708-acb9233c61d9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1121fc58-d1f8-472a-92ea-bca5e5300173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bd6fda-ae65-4cbe-83cf-5925018c7f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa322724-f2a7-4989-985a-699d531e9ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7152a865-7152-451f-b385-9878d32bb951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36b465e-fd71-4008-80c0-90ee1b0d67d8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17de85dd-0422-4646-bd03-221fb74c268e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6a7ab6-be2f-409b-bf9c-6e57cc55538a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc730ff1-a4ca-4941-9a72-3b1660769c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edb51ea-f0a1-4c79-8078-ac5aa6eccc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e9575a-4e43-450c-a576-fea00b7c951c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c5aa3a-8f3b-4118-8732-60219301ca33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dca0ed-d9d6-4225-ad8b-85daaf64cf48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5f0f75-62d8-429f-bd33-bfc87cd24fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201accb2-7590-4154-9e7a-04d62f048aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdecab1-c4ac-44c2-8793-c02632d341b7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b9adeb-f784-47fd-9295-4be05be4c3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9688f0d-7fda-4ef4-b3d2-c27bfd3caf46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01027704-20d7-4135-81a9-a6112560ac77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f464e71b-15a5-4928-a895-d8a0806c3096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bde811-943f-4a0d-b265-4f826a952271",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805f8e36-6bb4-4593-9011-6d9ffc17e441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bcbb2e-42e8-42d7-92c2-6ed2ebfece10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60011a3c-eea4-41bf-9bf0-e54e6f9eb942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908b8010-2718-44a2-b8af-19d5e36ff561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0451b748-8754-42bf-ba1e-bcc136adb886",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1843cd4-2fc5-4946-8f29-60fe3b7d8215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573b50ef-6b3a-4f67-8420-f1a656ed1dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3fc76a-305d-4f16-8b40-a509f3652d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f52ffe-5c0b-40fd-942f-b8865606dc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b033a9-cc30-4782-994a-30f77af1eabe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2732633-746f-4e93-9a1e-202363f9c38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab2248a-20b3-4732-9acc-c3185bdc4e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6363960a-aa97-41e1-9314-a381908a8863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26543f6d-789b-4b60-b7b9-a300895465c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4680bb70-61ce-4e4d-8861-33cf1579a7fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fb9f97-3479-4459-9a62-1118408bb888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c603b880-e6da-46de-a4f3-5aa4c5a2e26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a106e59b-95bd-419c-b320-fbd494a10850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4656102-c337-4df1-997e-c47270a8d082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9857f85-1047-4d06-9d84-a121115aefc8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b8454f-d257-4239-abb3-e67da3b00dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b441086-91dd-40df-82ec-1737e1251116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414c235f-1a50-463f-8866-ab8e2ea30340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e3f194-31e3-42bb-b31d-fdfb7f572faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32faae54-0e44-4e7f-b9dd-a3c2661259e4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cd78f4-e99e-42d5-820d-ce89291149d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b231cf7b-b12d-4a3d-9d10-c48cdd3f67a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32a17db-ab5c-4077-8222-c015738ef49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3bccab9-eb61-42b4-ab4e-095bfc866086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd180f3-c860-46bd-85cb-70d4f3b8c5fa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f7eb75-09ee-49d6-a022-cf70b7952b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea542fc5-47d8-4280-a3d8-6e6e7df1a27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910370f4-5b6a-4d5e-a1b4-6d82a7316b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49dba784-382c-4c2a-bb7a-b509a8595018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c962d54a-13b4-4abc-9541-b43678cb3ad6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b457ae-c986-4927-ad8f-462010425227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f5f126-3bf9-4f23-834f-f7a02721421f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b64df7-6448-498e-8819-6be7a5e2a502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50f8a1d-2ce9-4c5f-89ed-b1dfc52d6a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12df19f5-d9fc-4a39-9207-c6925dae3986",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1130200-236e-48a1-8a7c-5a51782f98e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27578d58-5ed0-4f9e-a85f-efbc7fa230d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e0a467-4448-40c7-8825-83db3b747d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e84a7c0-633d-4781-b803-8a7644909879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3a30f6-1fca-47e3-a3f6-ef03b0f8f886",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b909c58-dd80-47a8-80a1-3bf83ee516e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58c9c83-df3e-4f65-b505-fd92e667c33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a755d1-f0ed-4273-823a-54db5d53216f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da6f9f5-d171-4f32-ad64-fc3a4fb1d108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3ae260-78bb-483f-afec-93e5eea90dc3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6696dbd2-1bc8-4ac7-b9f8-f5109c002a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647cca1e-4bad-4cb1-9325-e6b4e65045d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b9180d-12b0-4f4a-946e-ec41b75fc4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d0bdcb-5d69-4098-9e96-0cd6db78af89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a66abe1-b4fe-4175-964b-038f8ab44167",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557b3204-88e7-484e-bd5b-b833e91395fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3657c733-0c25-4357-ad17-095fbb82a126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb25600d-2d95-407d-97b9-80f7500fc22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8f3659-6cdd-424f-ac7e-b088b0176034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a0a94f-6479-4dac-aa58-26e7bcd8f683",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818d3149-65ed-4641-b9ea-e9394ffd49e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae5c106-68e8-4772-8edc-4b1a57ce45d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc482d95-b4b6-4c92-8d66-7bdd8f542ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42de0049-d69b-4250-b8a7-563baf480b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328ddf37-03ba-4143-952f-1dafbbf36a07",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51651aad-d20d-41be-8ddb-d63d205aeb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58188112-a5d0-4cab-860b-bb7c070b0d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aac6faa-a5f7-4807-ae51-e1b68f5066bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681ea032-b6cf-4dbc-bab6-9ab908cec146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1a595d-1db8-40cb-80a5-a1e28b4be116",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8580de2-3f6c-4697-926c-c0313af99418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b435d0-d18e-4333-a981-b6bcc0664ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d85729-ca43-409e-abdc-12222760f5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2652a57-6419-43e2-a0ed-1a7342818b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95c8c6c-651c-4f79-9a07-560db9501948",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b872ac-cc23-4acf-bb58-ce4fa58656c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1c8af4-65b1-4a49-b669-c5c2cb6f3ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd0ea43-8a4f-48ca-93f1-4b80b000552e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b1128a-f4fc-425f-bbc4-3d377082e78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e18567-1a14-466b-80ff-6bd6366762f8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669aba4f-4fe8-4571-a4e7-5099f676054e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3150ff-0bdf-4188-8fad-d5e078a97372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130050f8-2578-4bf6-86bd-1e23654cd385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73707c1-2343-4709-a404-4078a1686a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3552c06-659d-4339-92e7-a196c26bfc12",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41075d5-25fd-4337-af30-6e3c95cc2964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06e02b3-c4e3-49d7-b020-de8623d0ad3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dc674f-fcf6-42bb-80ff-6a6c91de0a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a59db9-7cc4-4bf8-a173-70d431a6c330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c846d41-0e1b-4db4-bd9c-ef41464d78ac",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bf6614-d6bc-4148-a205-4da72287838b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffd28c8-a32f-4c6a-93c3-148ad9f0dc05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2ec7a8-012a-4fad-9ece-ceb7c06da380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02083138-4bf0-417a-b57f-4d8c32be0272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61329036-43b4-4ca8-9828-99f69de510b4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dbdeea-f66e-4e20-bca4-ec8069ed1c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae406c0-6dbb-443b-a0b9-ddc0d7ee4ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77b1f5a-90ea-48f2-9f7b-81b54a5ea85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ecc144-2cc4-4677-a43a-3235e3957308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07914715-8250-4755-b29f-c5ba340c2f8c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a9c13e-4801-47b1-b31e-0bb4a5e2e0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c143d41-cdb3-47f5-852f-3141f750f217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351019e3-c9aa-4048-aa8a-a2f7eb58cdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0b84d7-a0cf-422f-a3c0-2b017d3afe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d32de7-a838-4e6b-a4fd-ec43b7c55a8a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f909355-2f7b-4ceb-af33-f751d6e07cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79de39c2-2d42-4647-a827-9fa23a88b261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c58e505-0410-4446-9c28-0a588ed7c568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c6fba0-a41c-4be1-a604-1b66a65ac31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7278d5a-fed4-4778-b6cc-10a406a546ff",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43823fb9-9cfb-4b0b-96aa-8fe40ff8be38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f7f7cb-0723-4b02-92aa-1e7f2ed8bb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2472a9c5-1461-4758-afbc-165404e6f232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de1c25d-8a9d-42f2-b6e9-47ca1686faa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bed9299-e1a2-4d69-aa24-c429746d7a31",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38408d0-ec8f-4dca-b984-fefed49862b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e64519-e814-4df7-8f57-f5094617607d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd55faa-28dc-485c-8b3d-123d5f4d3f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cf6be8-ebc6-448d-ac5b-f7ae13f6056f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc9944b-3d2a-43aa-a77e-c06d3f0f06ef",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2c1821-bfb2-4322-8310-04bb6a574fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e6566b-a62d-443d-9dab-7de1eb97838a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718751fe-9cb4-458c-ac40-8a0220fa6525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95165674-3dac-4cf2-9524-5c58d7e4c810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06004297-9bb3-45f8-9579-fdfac45b6cb6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4aeb3a-60b4-4d1c-b0c4-8e0cea3b1c0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f88b7cda-8df3-4aff-9fc2-149eeedec1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c96a9fa-86e2-4ecc-a00b-dd4390ab8101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f7d218-163c-47fb-9f8f-fb738648a0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a02f83-40ac-4ad8-a833-ae4900c0f346",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f124102-a668-466d-adcb-e3ccbd49deeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e6e0d00-42c7-4eef-b136-3b231e2e3606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e828170-37f8-46b5-84e1-86deabb1d8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e55836-47a7-4a73-9402-1d41b028d2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a67009-f960-4df1-af44-40cdf5da347c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cc15f4-a5a6-4d5e-8a63-2288b21d9ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b75616e-02b8-464b-8383-03fb4f36bfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a271c7-0e7f-4c71-882f-0179cc329252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70985c50-3a27-4bc0-808a-339f6ea30c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9872b357-b77c-49c7-95ac-3404a39f937c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000e3ed9-7d2f-487a-a56e-504a7a5f5cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52646c33-425d-42c2-8cf9-138daf3f85d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10785ee3-2373-4bbc-93d2-ee9949bbe7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f7d71f-4989-4732-9211-4ae175365cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cbc8ab-a0d7-46fe-b610-eadaf35a1641",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d316ec98-c46e-463a-9d28-a30db1774e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a587708-e245-47d1-9149-6503e5a96c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab61c705-a754-4207-96e8-b5053a2c9851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597ddff9-e298-4cb3-9505-e94da8fe5a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd176c3c-f94f-4a5d-9576-1e95d16b1ede",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a3bc7b-3310-4251-9572-5fb6fcd89d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec69f88b-69d9-41cb-996d-7dac13fd01aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164abc8b-6d28-4935-afd7-525cbead7e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df793765-90fa-472c-ab40-942d85d83970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e69b24-0db9-45e9-9a2d-349679cf3b58",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4b1cf0-d31e-4138-8ab7-3ba3046d49c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3844283-fe59-4ac7-857a-4c24d3fd8ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacb1493-0e4b-43ee-a8ea-a31c81dc7bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f7db0f-874c-4f60-9865-66d1671facda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18f402f-203e-47d8-b00d-92603d9b01c1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb55921-05a7-4e78-aad1-8e6e1dc3901c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe1718c-3223-4fe8-b7f2-7a1522ac7187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a63241-c831-49a5-9576-4b8ce6132f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a73183-b7dc-42a7-a209-0b112b7f3206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf654dd-8c71-4ff4-97f7-5340e6275e58",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452e34ea-d0f1-4ec0-88d7-5784a04f18b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80996c3-46d6-4ae4-8ed4-61b441a4e2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b28e51d-1075-4537-83c8-d0599f136ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0f2fdc-2258-44d8-969b-da3a2d71a9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51672445-26ae-4f78-8990-f840e18c4be5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b71659-a78e-4ab8-b218-987a477625ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf0a688f-3f39-463d-a8a5-01fdf24eaf1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1f14f3-ad1d-4b89-84dc-83c3d76e614d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cdad05-a326-4b92-afa6-d8bf83039ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b400f32d-794c-4d9c-b38a-a99590728d3d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeb8c9f-7872-4466-aa51-26b751984e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abeb21bf-07a5-48dd-afe3-3b2df7faf4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f567a170-adaa-4283-99e9-aefd0dc77363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bffb624-539c-40ab-b348-a941025c19e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a2a27b-1f25-41ed-9619-877a6c83b7b1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe997914-be26-4ee9-80a2-7e5079718b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78e4fd5-bc39-423e-a5cd-91d35241e8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bf5166-ca2e-420a-9da1-514775741682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988074d2-18eb-4ccc-8717-c22fbfc01a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6846e8a4-5739-4b0b-bbaf-16334d77e9e2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0411b0-034d-465d-ba36-4731c29129f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7206ea7a-b466-42d7-8177-da76dac3f177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9cac78-ef47-4abb-8432-482d243871fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661d70ab-d4b9-40c9-83f7-bf9e8502b3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3178ba4-43e2-4246-8fee-1c6c3ba230cc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6e1ac1-e144-4622-b169-71c051bab728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e330f2-e9f6-4080-a78e-0fd81111326d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f6645e-29d1-4748-adab-dafd789de2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6712defc-004e-4dc5-b595-182f81693916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a9e2bc-bd39-40d0-b2a9-7b7f1cb8ad55",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c4f74c-e96a-44ec-856a-6ad8d9b03796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b16c058-dc1a-43bc-b06e-70d25a688dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeadad3-1d2c-4122-bb2d-306a122872fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0951f5-7ae3-46ab-98ee-5a4c74311af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670fe309-6e00-4462-9e61-77f77f47cea3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda8dbfc-9ea9-4cfb-8330-a0e5d692d9cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc658250-5ae0-4580-8cbc-1b6efe7f09c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954fcf87-7366-4fdf-9ad4-d00b34175ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8cabc4-45ed-440e-8b8d-05563c249dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8be9b4-027d-43fa-bf6d-874239820747",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611ae2b8-15d6-4898-8ae8-7a1f894d1f90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d9a7cd-e4c3-4e27-ab5b-e879153f23cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8369edbd-5000-4b76-91bf-61260dde5fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30eff165-6c30-4cf5-acbb-8d7d460076c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d411f54-81d0-4a0a-8a1f-e52cfe060377",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e55c44-450d-4414-af82-f9b45445c5f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16cf657b-bfea-4a1c-ade5-0aa746b08696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bb8e2b-0bcf-4db6-a6c5-e1ef57e43a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0ce6ac-eeef-4dfe-8aa9-5c208c7c5d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3746cf-f73b-4a89-b528-bfe30ccd0a4a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb49f12-8b04-4b9a-9b6a-b6b563998d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc841470-07c1-497f-b900-1fe5d4926195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709170a0-7ab3-407f-a163-e5d97ea1969f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4655d9b8-e10c-4beb-91d7-460bb148adb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032500d1-65a7-4caf-9fcc-c73f930eb538",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6a016d-42f4-455d-bfd3-e8a5e1b0909a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8568733d-c2e5-45d5-95e6-c56e718ce03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc94502-a098-4e5a-ad37-90a1f17f4b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2c023a-e338-4043-92f0-043f18dd6657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267c46ca-f52e-4ebe-8ed8-edcee306ee8d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dbcdb8-bcac-45a8-b590-c237db6003f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "594e3904-41a7-406b-96aa-cfa1ceed958e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf29b004-d49b-46a2-8942-8f9bd54a9cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fb00d5-ed57-4d10-ac01-8013372ff7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db2ffe6-149f-4f90-93cf-41cdff4a4868",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8330ed-e4fc-43c5-9a0d-08a8cf242d67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2c169c-55e8-4cf6-b15c-e46f0392a255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7634d515-c7c2-4048-b965-bef69a8f3a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c0ecf8-19a9-4bbc-82a9-b3caabdd8ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378b9fd7-1e3a-4349-b763-63bb7895510b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395363c7-5d10-45a7-95a0-0cfd8b62ef46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e025cc-8d32-4270-a48b-21f0bca6861a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cdf877-6028-4770-972c-d10a8255013e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5cff46-af58-45d1-b4e0-ccb639651618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f308e66-9ce8-4721-9ad7-26d9f8a101ea",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86424bb7-c852-4e50-8532-e6ca443a3a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f6c73c4-5f76-4edf-991e-c605f768f372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a569f1-6d19-4bee-a25b-0b3d64ccc4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3568fc-6744-449c-9461-15e28b096b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ea8338-5a6e-4c00-b72e-1a0092cd097f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bdac3a-7ac4-4710-a395-12d1dd1f9fe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c61e23f9-5eb3-41aa-93e0-b5e663180e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98529d76-8d90-4168-819d-74559be4c856",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18fc4fe-a379-4be9-8530-9412e3f49be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903c5df9-27d8-499c-b13d-0429b3851e29",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e6e75b-ff3b-48c2-8708-6d55586e8c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b03b025-aba1-4766-8412-324e7b61e773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7d7f09-7f96-4057-97d2-520bef1e8116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79918784-165f-4c5f-b77e-9677f184b912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc2c980-bf1f-4bb4-b3c5-90baa1a972dc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f3415f-0db8-4269-8c01-8dc51517399c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efce4e95-c1b7-4ba0-9175-03848fedfb9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da6a7fe-3252-449f-802e-dd0d6506042a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6f07f8-b163-454a-ae53-ec8775319dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257f3986-7b6b-4ab5-8470-99fcb1e0b5b8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af8453c-33fa-4ede-8994-254f58482770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4971b79e-4330-40b6-8e7a-484d33f41960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ebadf5-1f03-4b55-a636-64a24a8f3308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79c26e3-e17a-4577-8318-e6992b69ec17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4195541-cfd2-4f75-bbf1-00098b314a7d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f733d0ae-290d-4888-8155-5f016e84c3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2e0b42-942c-4521-a52a-b9e179b00929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd3cde1-7eaf-45b7-ae69-ab9512c12315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8057b1-7ea9-4425-b914-e0f323a49752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71044a10-5297-4164-9eca-4df90314ddba",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7f430a-5606-4a9e-a943-096ad48babca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a516869-8f48-4464-91a9-3c2f13398200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19888157-164b-4a10-8950-bc9053f763ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1bd68d-c961-478d-8743-a607d6f50b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cef92c-c2f2-4a4c-9e98-8d32df385529",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db08bb52-4546-4444-a0b4-99b80a241b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414ece65-0809-4734-979a-3716c48efbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45045798-245c-48d3-97ae-727fcb355139",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc914e36-a476-414a-84ef-94f5087c48ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e60eb8-a153-499f-951a-bdb4f8f6c841",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bd0ed5-0134-4840-a482-050992c3524c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a401c81-0a96-4903-83f2-7a6e339b3fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c86ef3a-898c-401f-a00e-5480f64f8226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b6574c-563e-4e30-a479-cc4f18fb09ed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5c99402-e612-4b59-881f-849400355c78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8347b304-e22e-4881-a6c3-5a7446d4d215"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "231cf75b-51b1-4bb0-a2f3-c84f693c8619",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4db9205f-792a-41c4-8abb-57a87da15796"
                    }
                  }
                ]
              },
              {
                "id": "822ce8b4-1148-466f-9f00-77957c496147",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc7b64fe-ff33-43ae-ba60-3c65561c88e4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0afe21-7442-409b-b76d-6007c9694297",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bad96bbb-cfe1-434a-9528-e44a93197eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd248a16-b207-42b8-b42a-4487e7ef21c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbbc7877-aa3d-400b-b1fe-22bc4d81da4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d9dc44-af8d-420a-bf50-16f8ffea8f77",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57703634-9799-47ba-9dac-88cf813be435",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e8d32709-d69e-4632-ab98-592dffd16add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa30184-84ef-4819-b0ba-4d504ecde7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "186643b9-7dc0-4bb8-984a-2b6da8cab91c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10aeb058-e924-4d77-af20-4b46638160d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb296a57-2afe-411a-9a65-6720dfdc20d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2fc7c66-4495-4a48-b9e4-7f8f7e4921cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed111f02-0ee9-43b5-af36-747b41f6c75f"
                    }
                  }
                ]
              },
              {
                "id": "52cd6691-a86e-437e-b2b7-941d13c14b46",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f4c3e29f-9018-4d8d-bce6-a5d613f13627",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aaea0e-707d-48bc-b0b2-5a7a31a28388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "88cfabb1-8083-4ad0-ad4a-3a6a5c495928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e46f65-fdd6-4027-978c-c10fcdbc5e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d766bb-5830-485b-a71e-7343187b273c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "41ffeae0-00d8-490c-a165-a31dc34042c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e77a5d82-fd35-463f-873a-d3548d15dcf0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8c8061f-b0f9-42e8-9386-3d59f86102df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1c31080f-7c44-447f-9927-e9443965cdd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0a7569e-2c10-4329-938c-505e84dcc110",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5bee3f2-8fc4-4459-a822-42474cfba426"
                    }
                  }
                ]
              },
              {
                "id": "764d7702-2b7b-4885-b7dd-241f96339f1d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e20a3471-46a5-49bc-874d-dc1c5aeeaf68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "04a4444c-115f-4dc2-bd7b-f580afdc99fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c56f560-c43c-481f-814f-02e60d7a63a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb891918-c97f-4f2e-9f8c-178aa5b0d7dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "244761fa-c735-48f5-acf7-e388ca29d9e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b846d5de-810f-4521-b2ba-b87b0851c7e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "870f2e8f-2c45-45a9-803b-3d6605179156",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf71a755-979a-4b26-8e40-21cb07488a14"
            }
          }
        ]
      },
      {
        "id": "e6291312-c70c-4230-825a-acd726c9d50b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7c9aea83-1ae0-4fe8-8677-a3e0083b250b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04b581c0-4d27-4512-aa3f-80361ac62270",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2d2a0b7-fe22-4c35-906b-9bd5605d5e33",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae29225-6591-4ce7-86f8-fa64b31ade5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "adda4de4-23ba-452b-9160-4240cfb4c492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc583426-3fe8-4b09-9078-df842a30aef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d5407c5-6b67-46f8-a0b7-3307e04d235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596e380b-1ff3-4502-9dfe-595aad3e619f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9b8017-6547-47c4-8857-468417402149",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bd69c6fe-a2ec-43e5-a59d-cf7cc52586d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f4b3b2-f041-4240-b15a-cec608d20d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a25fd2f8-e591-4934-8219-c185ad4685ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f851ff8-23df-4556-8f65-c393e336ff63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "160133d6-39c7-4713-a926-6aa5fffddf77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b340a04-11a4-434a-b47c-610610f9fc85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66d47ad8-9de8-4bb5-a09e-809f24708676"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb7247a1-d140-4d75-9311-f51da07f04c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f54bfd3b-8200-4939-a6e6-32d93dd4cec3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab2bdf19-76a4-4042-9f17-eba722413e0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb2ac103-f888-417b-be5b-d8d1cbfda14a"
            }
          }
        ]
      },
      {
        "id": "60ef3960-2d7e-4a3e-b921-7d3e410052f1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5763e603-a7f8-4bfb-9054-9ec0e92abb03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c315ff5-f759-41b8-b218-9a14512fc327",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53497e6a-d246-4f00-a249-fc98109e8187",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505c5978-ae49-463e-9451-e4d4567b1362",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cf76caa2-41c1-476c-8b1e-765f88238fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0639b5-9ca0-4d48-a96f-7b19017d2eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2d3069a-66e7-46b1-9b6e-c9ef69c0e5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96345118-9cce-404b-b606-f71bc1d3b407",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5cd967-bb4f-452e-96d4-13bff749ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ad26af81-795f-4fbb-a0f4-536aec3e9527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9e5894-a494-4798-8d76-c85cbbcab6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ffc0295-d47e-4e1b-b4ec-92e5133e1e47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45115a30-2ce8-4309-a5b7-1752583e10d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "132a6683-5919-42db-a055-037a9423e1ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41c86ce5-89fb-44ae-ac08-88b048210703",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63ebaf16-118b-4e6e-b14a-845ea5a6cc76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34c809d7-c13b-4a25-9e25-7ced6ff148bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f6da8188-46cd-43d9-a311-d0240e1884e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c3942c9-ecdc-474d-b0c0-5c2f680f120b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f884683-4478-4934-86e0-d6810c8ba4fa"
            }
          }
        ]
      },
      {
        "id": "f5028aa4-2418-4543-b7af-569f1b961031",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd4e434b-7584-4095-8922-92ef6c858e41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04532f98-9fde-4ecf-a696-81960d0df77a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31f163a3-60ef-457b-a67a-af7bf0791a4a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0071d4fd-b16e-4edc-90eb-06aa46329219",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c04e2d0-a35f-4681-97a9-c3851436593c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1741d1-5bab-4d83-8779-185e95393c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2779b10b-1de4-47cb-9e98-92c0f29dbdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76da280c-58bc-43b7-abf7-2111d663805e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd48244-b2ce-4748-ac97-ea40a22094de",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b668279c-4271-4b4e-a09f-175fb9625cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39e6c95-1023-45fa-bbbb-60f6ebfc515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "169210a6-318c-42a1-ab27-de02aa98b3bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a22578ed-cee3-4f8d-9ad7-ce75c2590105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "905051b5-b869-4b7b-8abd-96de9dd411c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7f8da68-5556-4bd8-b583-bc8bd4f5d851",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eddde76-bad5-4701-86ea-7e8a0cdd5699"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "592f4d17-85cd-4098-8421-6401b1efee52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6dc3f909-d32a-4d65-b052-10d194c8778b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda7f824-0a59-4398-be81-5bb5379fa0e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a265ff51-c80d-4307-8c17-46804b456cfa"
            }
          }
        ]
      },
      {
        "id": "017d9f42-0215-42ab-b7eb-4f68c413af37",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "350a7357-7d0a-4d6c-8735-973c69ee4bbf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07c48e05-9658-41e3-9fda-8869025f3e60",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1e399c0e-0ebd-4285-8a72-0f1282d13ecd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba56ef16-e7d6-4c18-8927-2c8b6f9c06f7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8091303-b8a1-4817-8c36-a07bc2335d96",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 22
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 732.1737451737451,
      "responseMin": 10,
      "responseMax": 7773,
      "responseSd": 805.157619479836,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677026284778,
      "completed": 1677026485045
    },
    "executions": [
      {
        "id": "6b1b906e-cb54-47dd-a07b-0f00727d26ac",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "80103241-d028-4c51-a43f-226e1fdf4922",
          "httpRequestId": "31d124ed-bd95-46b2-99ce-947cf6299008"
        },
        "item": {
          "id": "6b1b906e-cb54-47dd-a07b-0f00727d26ac",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4d83c26a-72f6-4378-829b-927137f7a96a",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "1bc1f302-943a-493c-b8b8-571b76c2c302",
        "cursor": {
          "ref": "9d94d696-db77-44e5-ac59-7ba97e519fd7",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "403cd779-078b-4574-a3b2-45ec79946929"
        },
        "item": {
          "id": "1bc1f302-943a-493c-b8b8-571b76c2c302",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "110ce4a4-69aa-4d7f-bda8-9b25e3ce008a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a2383a50-1191-4184-94b1-53329f690eee",
        "cursor": {
          "ref": "83b32962-3b3b-42d2-af52-f20e8d95afa1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a853d921-3bec-44d6-a7e4-2a59e5beb51e"
        },
        "item": {
          "id": "a2383a50-1191-4184-94b1-53329f690eee",
          "name": "did_json"
        },
        "response": {
          "id": "0ee45879-fd56-4fd8-8ad8-fcf611d1a26b",
          "status": "OK",
          "code": 200,
          "responseTime": 1655,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d187c2-57fc-416e-aeb0-82eb7c9d3211",
        "cursor": {
          "ref": "978e22c3-1864-40be-92ad-5447afb086b7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ceaa92fe-a25c-4171-95e1-80001effd93f"
        },
        "item": {
          "id": "65d187c2-57fc-416e-aeb0-82eb7c9d3211",
          "name": "did:invalid"
        },
        "response": {
          "id": "30da0e35-77b3-4266-81d2-3cd0e83ba4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d187c2-57fc-416e-aeb0-82eb7c9d3211",
        "cursor": {
          "ref": "978e22c3-1864-40be-92ad-5447afb086b7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ceaa92fe-a25c-4171-95e1-80001effd93f"
        },
        "item": {
          "id": "65d187c2-57fc-416e-aeb0-82eb7c9d3211",
          "name": "did:invalid"
        },
        "response": {
          "id": "30da0e35-77b3-4266-81d2-3cd0e83ba4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4124a6e7-6aae-4b6c-ab1f-98c3fe78e336",
        "cursor": {
          "ref": "2220f572-d9bb-46cc-8a6c-2c30511d17c9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5629863a-f0d9-4810-8fbb-2c1d083e4ae9"
        },
        "item": {
          "id": "4124a6e7-6aae-4b6c-ab1f-98c3fe78e336",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d2b3f203-2a08-4e7d-b263-ad99dc498eec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1218,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e4b8b9-b521-48fb-8ca3-22fc706bf9f6",
        "cursor": {
          "ref": "80edbbff-0d5b-4091-83b1-5b58a9f92dbb",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ecfc816c-02e4-4bed-b355-97aacc608507"
        },
        "item": {
          "id": "95e4b8b9-b521-48fb-8ca3-22fc706bf9f6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "931f1767-ef7b-47f6-9fc9-3ca2c564a425",
          "status": "Not Found",
          "code": 404,
          "responseTime": 732,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d37bc3-e333-4bb6-83d0-4e8eb2e7385c",
        "cursor": {
          "ref": "7fb1ae91-627a-4883-9129-c29c7f19100e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "98bc7d57-841c-4299-b94c-45bc67cc447d"
        },
        "item": {
          "id": "e4d37bc3-e333-4bb6-83d0-4e8eb2e7385c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "786f142c-08b1-4f39-a68f-b5583afa7029",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba1472d-dd32-47ea-b643-446f6e3be90b",
        "cursor": {
          "ref": "34f33711-e583-4d76-9866-9b3d6ab1333b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2968c7ca-7f5c-484c-965b-e00456bf52dc"
        },
        "item": {
          "id": "2ba1472d-dd32-47ea-b643-446f6e3be90b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f7af295a-0a14-4535-a557-460fb41f72d1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba1472d-dd32-47ea-b643-446f6e3be90b",
        "cursor": {
          "ref": "34f33711-e583-4d76-9866-9b3d6ab1333b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2968c7ca-7f5c-484c-965b-e00456bf52dc"
        },
        "item": {
          "id": "2ba1472d-dd32-47ea-b643-446f6e3be90b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f7af295a-0a14-4535-a557-460fb41f72d1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a275bb57-9972-4c31-a518-bb68e3c1368e",
        "cursor": {
          "ref": "24ddbc58-917e-4998-8cda-7003ec0109a7",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1366b6f5-c9c8-4e91-a480-87deda40de00"
        },
        "item": {
          "id": "a275bb57-9972-4c31-a518-bb68e3c1368e",
          "name": "identifiers"
        },
        "response": {
          "id": "f00de87f-ce90-480f-a5c7-2562fbc874a8",
          "status": "OK",
          "code": 200,
          "responseTime": 995,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef475ea1-e418-4588-b334-638eab6f5d64",
        "cursor": {
          "ref": "27283252-e5c1-4aa9-801b-1cf9eb392e96",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1b721f9f-4477-445b-b65e-b069b139a0dd"
        },
        "item": {
          "id": "ef475ea1-e418-4588-b334-638eab6f5d64",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7b386f8a-0cd2-4528-b1b2-f30e88c1bdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1210,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef475ea1-e418-4588-b334-638eab6f5d64",
        "cursor": {
          "ref": "27283252-e5c1-4aa9-801b-1cf9eb392e96",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1b721f9f-4477-445b-b65e-b069b139a0dd"
        },
        "item": {
          "id": "ef475ea1-e418-4588-b334-638eab6f5d64",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7b386f8a-0cd2-4528-b1b2-f30e88c1bdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1210,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7353bc-c4dc-436d-8a33-28556856bd06",
        "cursor": {
          "ref": "b82e6fca-2bde-4032-a41c-e54df38ccd3f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "55c8117d-a83b-45fe-99fc-fe4f8abe0455"
        },
        "item": {
          "id": "dc7353bc-c4dc-436d-8a33-28556856bd06",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "88c7cefd-0aa8-4e3f-aae0-80af4b7e88aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07f4978-7aec-41e2-a19a-73cb57b32892",
        "cursor": {
          "ref": "1ebaed7e-7bec-42a9-b5a0-638133c2c868",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "37d6554d-06e1-471d-bb9e-b917bdc4f354"
        },
        "item": {
          "id": "f07f4978-7aec-41e2-a19a-73cb57b32892",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ee78787c-389c-40ee-833a-e0f6857a8fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acf6ffc-2e7e-40f6-aac6-0fd584d4fe30",
        "cursor": {
          "ref": "1f9579ba-8959-4cf4-a70e-8ba769a94d30",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "96ca2ceb-6e3f-4294-9a41-6ba249dd8223"
        },
        "item": {
          "id": "3acf6ffc-2e7e-40f6-aac6-0fd584d4fe30",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ac0fbe13-ce91-4f6e-b83f-d68f50d26618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c731ab-3ab6-4c4d-a888-9fbb12993e77",
        "cursor": {
          "ref": "26485e48-9446-4c4b-93c6-2f50cd142e0d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "33d65a2a-e4ae-4be0-9ab1-292c72392784"
        },
        "item": {
          "id": "b1c731ab-3ab6-4c4d-a888-9fbb12993e77",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0c4290bf-16d1-48de-8c86-8c767adad960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0047f863-c774-41d7-a1c1-5da13469793f",
        "cursor": {
          "ref": "352ce514-b929-47b0-810f-0f0f2d77b748",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0abaf893-beb8-44d9-97c2-69b00276c144"
        },
        "item": {
          "id": "0047f863-c774-41d7-a1c1-5da13469793f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3f83c01f-1788-472f-ade2-cdff419c300c",
          "status": "Created",
          "code": 201,
          "responseTime": 3223,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "05cbda12-c29b-49bf-b540-596abed21090",
        "cursor": {
          "ref": "2dcf86e9-3dfa-4cff-8c30-be3796c1dffe",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "03aacbcd-cc4e-4b3f-ad78-223daf01973c"
        },
        "item": {
          "id": "05cbda12-c29b-49bf-b540-596abed21090",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "94515af5-5cd2-4236-bd3e-faca820e1467",
          "status": "Created",
          "code": 201,
          "responseTime": 3013,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "78ea3714-ed55-41dc-a235-fedcb0cda83d",
        "cursor": {
          "ref": "0ec15a6e-bae7-4ba3-9601-d767c7632a83",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f952800e-6d1a-4605-87a4-1b236fb718cf"
        },
        "item": {
          "id": "78ea3714-ed55-41dc-a235-fedcb0cda83d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "196414b1-f0d5-4044-9ebe-cae6fa93d241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5332050-a025-4d63-a73b-3207f5a35943",
        "cursor": {
          "ref": "31b9c09a-24c9-47da-858b-2ceb33dd0624",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f11da695-48aa-4202-a91f-7031e05f4214"
        },
        "item": {
          "id": "f5332050-a025-4d63-a73b-3207f5a35943",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1b39cb2f-8b08-4a7d-808d-5f800aeb0945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bf691d-9d05-455d-a25b-bff7256347f1",
        "cursor": {
          "ref": "6673b931-eaab-48ef-b52b-e65308bcb160",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c7fc020a-e150-4e90-ab6d-c9906f4d1537"
        },
        "item": {
          "id": "82bf691d-9d05-455d-a25b-bff7256347f1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "687fee0f-1b59-43fe-8ed0-3c2ba0fb47a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9a45ad-c6dc-4e92-a761-842c3b512cf4",
        "cursor": {
          "ref": "e8cf8095-9b97-4691-902e-a84b66807cec",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "84b27d57-426c-409d-860d-acf57475eaac"
        },
        "item": {
          "id": "1f9a45ad-c6dc-4e92-a761-842c3b512cf4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a5305b9e-7693-49b9-9fba-c3db421e2c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd6eafa-1a43-41a7-844b-4fa521c7dff1",
        "cursor": {
          "ref": "6844c3f5-aead-40c7-9ce0-ead12e04d8e1",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "65c2cad5-1a81-4bb9-b45a-443930439ba1"
        },
        "item": {
          "id": "cdd6eafa-1a43-41a7-844b-4fa521c7dff1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "360951af-dde8-48a2-8437-ee71e2ae8d5f",
          "status": "Created",
          "code": 201,
          "responseTime": 2703,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "ce0b0461-163e-4013-bdb5-eb14623fe820",
        "cursor": {
          "ref": "bca7a449-e997-426f-a182-36e0c2d9488a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "56fa4bc1-d516-4b03-8359-151bcd35134e"
        },
        "item": {
          "id": "ce0b0461-163e-4013-bdb5-eb14623fe820",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c1adde13-5b3b-46ea-9963-7f5b839fbc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7330eea5-f1de-4419-afd3-b28d250bd43b",
        "cursor": {
          "ref": "6d9b8cf3-728a-40c2-81b9-4d56b438b23b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d5c42432-4255-4909-a11e-0a248ccc7da9"
        },
        "item": {
          "id": "7330eea5-f1de-4419-afd3-b28d250bd43b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "33b5eb2d-e0ce-446c-aa58-1a4a920e4469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2f52ee-a093-495c-b329-1f91e791769f",
        "cursor": {
          "ref": "7847cea1-bbb0-4d03-907e-b3523e6d6566",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6b3d39ed-ced1-4537-8b3d-ee7905d9e826"
        },
        "item": {
          "id": "4e2f52ee-a093-495c-b329-1f91e791769f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5b10bf08-9ebf-4e5f-8022-aaa7879dc336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afe9711-5a71-4fb8-9ab8-0d5cd5efe606",
        "cursor": {
          "ref": "2711c561-1f15-4bb6-8b75-5f7e427aa5a3",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40643c77-4d5d-4c08-ab4d-9d563219f79d"
        },
        "item": {
          "id": "9afe9711-5a71-4fb8-9ab8-0d5cd5efe606",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4193ddc6-79bf-429d-b6d7-ff76d1216f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1205,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73331cb5-bc84-4cbc-8a1e-64962a41491b",
        "cursor": {
          "ref": "1bb96520-ab0a-4cf9-a0b3-3f6d5b7963c7",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8b85e728-01f2-4fd0-9d15-3c49d66079b6"
        },
        "item": {
          "id": "73331cb5-bc84-4cbc-8a1e-64962a41491b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "39f6eac8-bdec-4570-96e0-9284f1872d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f698121-99df-41eb-bca3-83dec6c94e35",
        "cursor": {
          "ref": "9724082f-ddae-4bac-801b-d0e9de6c1b36",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "09a1dd7f-ba2a-4ceb-be63-849cdaf1a81f"
        },
        "item": {
          "id": "6f698121-99df-41eb-bca3-83dec6c94e35",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "51f1d0cb-1468-45b2-b64c-6810ec77ed55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec60775-0675-4047-b285-ed1601c85a7a",
        "cursor": {
          "ref": "b358d851-1ec5-4716-987b-fb666c6678d8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "780319b8-ca28-4c6f-be37-55327e2eb1c6"
        },
        "item": {
          "id": "0ec60775-0675-4047-b285-ed1601c85a7a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1bd0726a-399d-4d7c-9065-3f2f8701dbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8454f79f-c826-426d-b8f2-5abd64b82b5b",
        "cursor": {
          "ref": "4ea30582-4f53-4458-b49c-642ec0203728",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9d71d464-b516-4ae0-a84b-82ce64c67404"
        },
        "item": {
          "id": "8454f79f-c826-426d-b8f2-5abd64b82b5b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f421b825-eae7-4881-bc76-a423cefdd73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d952948-4f39-42ff-a021-4d9b10c3ac3e",
        "cursor": {
          "ref": "a05c0e09-cdd7-4e7b-bd51-19a06ffe8d7e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "89e881a8-1acc-4bd4-bda2-276a2ab40509"
        },
        "item": {
          "id": "5d952948-4f39-42ff-a021-4d9b10c3ac3e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "32a72d72-6f02-4a35-9bd2-b8562f42415b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf15433-da8c-4bea-b78b-c227a88db19d",
        "cursor": {
          "ref": "b9fc0ede-c132-477f-8b88-bc7a1135236a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "49696df2-97f9-4f76-9f80-f852df6bb59c"
        },
        "item": {
          "id": "0cf15433-da8c-4bea-b78b-c227a88db19d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a29242a2-edbd-4b32-b578-67af65b2041a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1357adc6-cb66-4f18-ae58-0d4e03416e2f",
        "cursor": {
          "ref": "d5c67d74-9f54-4d01-aa28-ffe3158b1848",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1b3a93ac-4870-4cb1-88cb-17dd9f42c204"
        },
        "item": {
          "id": "1357adc6-cb66-4f18-ae58-0d4e03416e2f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "30cc6083-a613-4435-8359-8a37d364e021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2aaa886-7a97-4644-981c-1d8d35b3fe7b",
        "cursor": {
          "ref": "e4d58441-0cdc-479e-9cae-f22b31e885e8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ad062788-0d2e-46da-97d6-0dc9eb52d422"
        },
        "item": {
          "id": "c2aaa886-7a97-4644-981c-1d8d35b3fe7b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1dd52ff0-4571-4215-8abf-5fca7fdbd6d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2042,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:33)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:33)"
            }
          }
        ]
      },
      {
        "id": "e89730f2-121b-4d30-8358-e3d9c8ecc178",
        "cursor": {
          "ref": "5cbea409-ac8e-41cc-9e96-754274144f47",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0c144be5-fee1-4fb1-a65e-c7970a843f68"
        },
        "item": {
          "id": "e89730f2-121b-4d30-8358-e3d9c8ecc178",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a368e95a-3838-46d1-9385-f94d4b2ca855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd30e12d-15d2-4688-92d2-9eaafd3bfbd8",
        "cursor": {
          "ref": "b131307c-273a-47bf-ac09-3b6795476438",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5d1aeb76-e643-4943-b313-53b4486d24d4"
        },
        "item": {
          "id": "fd30e12d-15d2-4688-92d2-9eaafd3bfbd8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e57e43f3-631e-474e-bf1d-9c68d269d339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6386a466-eec4-4cef-ade7-6ccc9151a83a",
        "cursor": {
          "ref": "1e091504-e403-4c17-acb6-666a2bf8c374",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "505f03e1-d45c-47ae-9f56-1ab3c0da47f2"
        },
        "item": {
          "id": "6386a466-eec4-4cef-ade7-6ccc9151a83a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "87116d7e-e1ab-4a7a-8343-f96f6fb07ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f048f61f-20a5-4a63-8d36-72d8ccec0770",
        "cursor": {
          "ref": "a9f920c0-a5a8-4c55-8a21-56396db7e636",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "abb889af-e75a-4c3e-9529-6bef0387c17e"
        },
        "item": {
          "id": "f048f61f-20a5-4a63-8d36-72d8ccec0770",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2509b16a-d549-46ff-90bc-25bd1b34baac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5cd3dc-a6da-445a-9679-874db2abb7a4",
        "cursor": {
          "ref": "d8d252dd-88ef-42c7-8d5a-3b997dd2393f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ef1ee1cf-628c-4c32-bdd0-a28423fc2631"
        },
        "item": {
          "id": "de5cd3dc-a6da-445a-9679-874db2abb7a4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8faf3936-3f2a-4480-b011-d32fd00ac4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac38fe8-3f50-4aff-941e-09c3956ada92",
        "cursor": {
          "ref": "d153a371-1eb2-4c48-8a87-02c63bd307a7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8322fc07-855f-45b6-ba17-0a02293bad09"
        },
        "item": {
          "id": "6ac38fe8-3f50-4aff-941e-09c3956ada92",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6efa626d-9ded-438f-b71d-f6717bfd21c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1209,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c5eace-65c6-4e71-a209-e80b1f81ebe3",
        "cursor": {
          "ref": "493366d2-5446-4f4a-aadf-7778548a577c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "21c65cee-721d-4886-b0d5-f95fa9b5fc38"
        },
        "item": {
          "id": "81c5eace-65c6-4e71-a209-e80b1f81ebe3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1e99bd7e-fa94-405b-86aa-50e9b4be47a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1029,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a68cbea-6f1a-4490-8d9b-415838821a1b",
        "cursor": {
          "ref": "831abfcf-f92e-4a27-878e-8a97c82f3173",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8b8f3997-0651-4d79-acf2-717aa3f9d452"
        },
        "item": {
          "id": "9a68cbea-6f1a-4490-8d9b-415838821a1b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b8f6612f-df8f-44ae-81f0-01e129fdc4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1047,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6d26cc-3fee-40f6-af7c-6150077fafd4",
        "cursor": {
          "ref": "f5ae522a-f04d-4228-b576-8c90d9bdfa91",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "530538ef-7d65-40a5-b598-91274f1543b5"
        },
        "item": {
          "id": "bf6d26cc-3fee-40f6-af7c-6150077fafd4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "88e96738-a78b-4abd-b3c2-72d439a7d237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33107072-da86-4bc6-b24a-172e56539e11",
        "cursor": {
          "ref": "f8dcff95-f343-4ca4-bcf4-69d82a6ef494",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0fc55ae4-762d-4741-85d8-07ed56178995"
        },
        "item": {
          "id": "33107072-da86-4bc6-b24a-172e56539e11",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "544720f6-2ab1-440f-9c8b-27a80832926f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dc201c-d731-42d4-b405-c382b2e096b7",
        "cursor": {
          "ref": "bdbb2084-2a11-4516-a29b-146c7d20fff4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1ddcdd16-1e52-4752-9f5d-ad18cf0599b6"
        },
        "item": {
          "id": "20dc201c-d731-42d4-b405-c382b2e096b7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1adea5b5-239a-4e09-8265-a8d0c2119883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20c0352-7903-4b60-bbd1-a314bab773fb",
        "cursor": {
          "ref": "9036fc4d-486e-48f0-ace2-1b24cb180edd",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c37d4b7a-cb1d-4e60-b693-f873e7e8598a"
        },
        "item": {
          "id": "a20c0352-7903-4b60-bbd1-a314bab773fb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bc764b00-e3aa-4f13-9a86-246faf538e81",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 654,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d36871-402c-42db-b2d4-8386bc110b7e",
        "cursor": {
          "ref": "5e0942bf-b376-446f-aa26-910becf6ad5e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "af1db58c-2096-4c19-9bae-73c313c60bd7"
        },
        "item": {
          "id": "28d36871-402c-42db-b2d4-8386bc110b7e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b7a85337-238d-49f6-b93b-b4dfab65d7ab",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 597,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "8ed5f2d3-2c5c-47d3-85ff-c8aa4ddc5694",
        "cursor": {
          "ref": "62079ebd-a79f-46c6-900a-7f11a4cad2be",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7aad99ac-7be0-41e3-bb0f-cd878d1f219a"
        },
        "item": {
          "id": "8ed5f2d3-2c5c-47d3-85ff-c8aa4ddc5694",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "89733218-7b66-4283-8a0c-8ea9959d6bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16979d8-dd85-450a-add7-3d06288428cb",
        "cursor": {
          "ref": "4866d020-2775-4ad1-8c07-f5f7eeb2bcea",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5d55c96f-264b-443f-87f7-acc7f03a24b6"
        },
        "item": {
          "id": "f16979d8-dd85-450a-add7-3d06288428cb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "14b1e198-84a8-4e8a-9e9a-6af1117150a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb88629-9301-4e15-8fd8-880af5cc660f",
        "cursor": {
          "ref": "3a11b8e1-ab59-4f28-95ba-80be368f2583",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "afaabd33-fad4-4dc0-92e8-22af0ca9a375"
        },
        "item": {
          "id": "1fb88629-9301-4e15-8fd8-880af5cc660f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "be995b9f-be73-4281-ac49-2a225309d5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a1268e-b41a-4193-a5af-1f2c6a821af7",
        "cursor": {
          "ref": "19bf6443-05e2-4ee5-b850-5b245f731baa",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "01024193-ce49-4a67-a147-85d6ae466bfe"
        },
        "item": {
          "id": "68a1268e-b41a-4193-a5af-1f2c6a821af7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "602b8ce0-619c-40ee-a1fc-d67f2fea52a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba81fff-1eab-42aa-b495-d21a5b748ba4",
        "cursor": {
          "ref": "989ed8a7-719b-4aff-9c2e-edb7544d1122",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6f61e3e8-cdad-4d11-bd5b-1c2e3e33251b"
        },
        "item": {
          "id": "fba81fff-1eab-42aa-b495-d21a5b748ba4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d951eda8-1dbe-443b-9422-d9d8f1fd7526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018332ea-7b6b-4c08-851a-c3a064baf09d",
        "cursor": {
          "ref": "b0fcddfc-7030-4f9b-bfe5-e57f9b1bd965",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1be2e100-087a-45fd-9499-a30bf9423e3f"
        },
        "item": {
          "id": "018332ea-7b6b-4c08-851a-c3a064baf09d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2520c1df-ef51-4e20-a783-d8adbc78b0fd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 669,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b408fb42-fd39-4134-acdd-14f0f9144429",
        "cursor": {
          "ref": "21271c8b-bb88-46dc-96be-a9bee2df4632",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b6f884bb-7488-42e5-8162-f75df1ec6a6d"
        },
        "item": {
          "id": "b408fb42-fd39-4134-acdd-14f0f9144429",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6aa94a03-32c6-4041-b59b-794710264ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae4cf45-df40-450f-9a01-edec20acd2a9",
        "cursor": {
          "ref": "dfabc3b3-9867-4eb0-ba4a-ac8982e29e78",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "91c9bbaf-5858-4bb6-9513-2c97416bb5ac"
        },
        "item": {
          "id": "cae4cf45-df40-450f-9a01-edec20acd2a9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "00fd7335-e899-48f8-be3e-3d905a3ed70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f332ee9c-34d1-402d-94b7-a80fae2eb7c4",
        "cursor": {
          "ref": "f15c01f1-c93f-4a44-9265-69cd45c6f518",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "db8e6f1c-fe8c-4510-a9e8-04e6c174d4e6"
        },
        "item": {
          "id": "f332ee9c-34d1-402d-94b7-a80fae2eb7c4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "982f46f8-8433-4769-9b5a-27ee1b7bd333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a0abe5-8a41-4109-b5cb-d2968e6b910e",
        "cursor": {
          "ref": "99840ba4-52a6-4fb8-8216-4b96fcebb47c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ef7169e4-60ae-433b-bcf7-33dafc0c51c3"
        },
        "item": {
          "id": "b1a0abe5-8a41-4109-b5cb-d2968e6b910e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "99c2a140-00a0-46d6-9255-f38fa1cd6eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0a4ef0-b965-4285-b4e3-210cb0ea02bb",
        "cursor": {
          "ref": "a203abe3-524c-42ac-aac6-e202a09793b2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "93b7babd-2303-4b88-9184-4dbda56488ce"
        },
        "item": {
          "id": "0d0a4ef0-b965-4285-b4e3-210cb0ea02bb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cce181ce-d8a3-44b1-bd52-c8c4ccbc1941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0310e5e-1596-45c5-aa24-d7e9d19d01a9",
        "cursor": {
          "ref": "e1a90878-0c80-4e53-8ba4-39b7691d2902",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "572791f5-45bc-45fe-afa5-be992f15fe0e"
        },
        "item": {
          "id": "e0310e5e-1596-45c5-aa24-d7e9d19d01a9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e39c030a-82cc-4086-80df-2f050b1a4ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdef0db8-27e1-42b0-92b7-ae1b016751ea",
        "cursor": {
          "ref": "edfa997e-a1f0-48f6-8ecb-893368ec40fd",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9e9bec25-ca03-49d1-9e85-e6249b407829"
        },
        "item": {
          "id": "cdef0db8-27e1-42b0-92b7-ae1b016751ea",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2472ace0-ddaf-408b-9aeb-ee4a26771ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33fb75c-a036-42e6-9c55-bd7de49ac58f",
        "cursor": {
          "ref": "dbfa1314-e268-462c-a147-e00c0b911d5e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d6d05687-ac8c-49ec-a1cc-3c85becc53cb"
        },
        "item": {
          "id": "c33fb75c-a036-42e6-9c55-bd7de49ac58f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "89ed0fa1-6fee-4879-b8fb-108fd041bc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a2fbe1-f303-4ba4-b84c-27322c2ba1c5",
        "cursor": {
          "ref": "13c8e8fc-acb5-49b2-8218-f9b21e7e052f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f01f26de-081b-432d-90bf-638db10730bd"
        },
        "item": {
          "id": "61a2fbe1-f303-4ba4-b84c-27322c2ba1c5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3a10690f-4205-4b8e-aa31-1d468e143ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcc67c3-2ec5-4cb3-88b7-594a08a0c501",
        "cursor": {
          "ref": "63035793-83d7-42be-8f2b-98119a793bf0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6cf70af3-ec67-4ebe-b364-c264f5f0f7c4"
        },
        "item": {
          "id": "afcc67c3-2ec5-4cb3-88b7-594a08a0c501",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b929f504-2e7e-4c26-9b8a-c576db2e47b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 951,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fadf63e-85c7-43f2-a2dc-a5f7c4b0b9f0",
        "cursor": {
          "ref": "00a4bfcd-81fb-4491-ba51-937c8d702150",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6e2bd979-af90-4383-9360-465d386418e4"
        },
        "item": {
          "id": "7fadf63e-85c7-43f2-a2dc-a5f7c4b0b9f0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ca6b28ae-296b-46e5-bcbe-a93cb14ef051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 949,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0399740e-f5af-4b29-bfde-edb6e531d442",
        "cursor": {
          "ref": "6346e109-f4c9-4a0b-8c78-2de9a4a6d587",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bf8181a1-efa5-404d-85d2-3ddcf96903db"
        },
        "item": {
          "id": "0399740e-f5af-4b29-bfde-edb6e531d442",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ff20053a-de06-476a-ac20-388ee389dc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3679c54c-c1bf-4bc8-8a3d-0870ab268055",
        "cursor": {
          "ref": "3cf6ebf8-3435-4454-a4e9-ea581e6298d3",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7b355339-11da-4993-95a4-eaad40082cb6"
        },
        "item": {
          "id": "3679c54c-c1bf-4bc8-8a3d-0870ab268055",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "42d640f9-cea1-4afc-95cd-016f8b4a681d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8962b71-1c42-4de8-80b4-1af920062a4b",
        "cursor": {
          "ref": "76b69b9f-6c2b-4718-b119-a600acc6544d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a8ebcfe6-7dcf-4d44-a445-5f2506f9c22a"
        },
        "item": {
          "id": "c8962b71-1c42-4de8-80b4-1af920062a4b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "324f87ad-7b40-47d1-a0bf-331e5d90c8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1021,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c4739e-0f50-4007-8b3b-f6250938baf5",
        "cursor": {
          "ref": "f8ca69cc-6e01-4e25-a8af-162a03eeb59a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "96bc7cd0-de8e-4958-9aae-95226253eadc"
        },
        "item": {
          "id": "44c4739e-0f50-4007-8b3b-f6250938baf5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3424080e-074d-4b96-b9be-8f1577ad216d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af996117-3a07-4339-8b7d-7de141341e41",
        "cursor": {
          "ref": "0fac89f7-ae50-47be-bb74-e45b7c1f66e1",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "10fe1487-3e1a-42d2-9e21-8ec4e063ef7e"
        },
        "item": {
          "id": "af996117-3a07-4339-8b7d-7de141341e41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0ae0a62f-f40c-4c35-af35-ae38b87ebe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 949,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ec4da4-90c2-449d-bbfd-32dec59c3bd3",
        "cursor": {
          "ref": "fa8a42b3-216c-457a-b6b9-d3a36d784177",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c321409-fcb0-4eec-bbe1-064c445573f3"
        },
        "item": {
          "id": "a6ec4da4-90c2-449d-bbfd-32dec59c3bd3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1fdfee95-15d0-489f-9a64-dff8380e08b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92259600-2b5d-4dfa-a863-6952ae2c8ae3",
        "cursor": {
          "ref": "95851ddf-000b-406a-820c-d744d0b1f535",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4b6a8a8c-11be-4104-aa99-c3fb988f515d"
        },
        "item": {
          "id": "92259600-2b5d-4dfa-a863-6952ae2c8ae3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "590fff6a-25c8-4022-9d39-2b3fe6fd9be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cb508b-3455-47db-b61f-1cd971182557",
        "cursor": {
          "ref": "84381bdd-d715-4eae-bc2f-11637e27a745",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "eb06a875-623b-40e1-bf82-2e7e487885bf"
        },
        "item": {
          "id": "73cb508b-3455-47db-b61f-1cd971182557",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "74d262a0-c448-41fb-bb8b-f3d0605d6d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36802665-89ca-4075-b08a-98c4af00a933",
        "cursor": {
          "ref": "914823b1-3dd7-4484-87d3-e459f43da263",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dd193bab-a577-4e88-a8bc-5c98b4b0bd2e"
        },
        "item": {
          "id": "36802665-89ca-4075-b08a-98c4af00a933",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7b82f316-cf56-4941-b263-4136e422277b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e39df0-5c18-4870-9e3b-8aa1395e264f",
        "cursor": {
          "ref": "ba68e53f-30c9-4179-8454-0ae17d869bfc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7cba224a-1839-4631-871d-74bf1ab2c245"
        },
        "item": {
          "id": "38e39df0-5c18-4870-9e3b-8aa1395e264f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b286cce1-4f85-4ec3-9e95-d5d04b17e136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83139f91-feab-49bd-8eea-830a72551790",
        "cursor": {
          "ref": "8b916c06-353f-4f17-80c7-93d17d996f46",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7f634696-2df7-4b88-b1ad-aafd6abb299e"
        },
        "item": {
          "id": "83139f91-feab-49bd-8eea-830a72551790",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7babad9d-09d2-468d-acf1-5135668b345d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbe373a-10db-47d5-b171-aeaf5e99446e",
        "cursor": {
          "ref": "6ea17259-1083-4b83-bfaa-95ebe195dae7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a3d00d6e-b0d0-4133-8289-b89fb106cd0c"
        },
        "item": {
          "id": "5bbe373a-10db-47d5-b171-aeaf5e99446e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "74344a22-9f76-4591-9582-c7a5e38f6b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a5a0cc-bd13-49d4-8b20-6b35b7032308",
        "cursor": {
          "ref": "d6728427-d956-4dc8-974a-9faf2fe04843",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d722ad60-ec19-44db-86a1-9e02cbfe4efd"
        },
        "item": {
          "id": "67a5a0cc-bd13-49d4-8b20-6b35b7032308",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "903a8869-2e00-4c70-8092-6a774d3bf8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa303f9d-977b-40b1-82a5-2149f3c563c3",
        "cursor": {
          "ref": "64a65dee-f245-4750-82e9-98ca4e77efc8",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c8bd6b8e-c875-47b6-8af8-20c7c3624401"
        },
        "item": {
          "id": "fa303f9d-977b-40b1-82a5-2149f3c563c3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "990ed013-be6c-4c2b-91e4-666a0c3def7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1048,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5579c404-b853-4eb9-bb37-f293e4faacf3",
        "cursor": {
          "ref": "0ba6fd02-96d7-4361-a8f4-30d38a8e99ed",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "524ad0d2-fd50-4ef3-b53d-02d75ff92307"
        },
        "item": {
          "id": "5579c404-b853-4eb9-bb37-f293e4faacf3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "61c52f7b-882d-42d3-aea5-a14b7437d1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4cb299-b12b-4b98-9d2f-3fc0e3081a98",
        "cursor": {
          "ref": "58abf73d-e9be-4441-a954-d45323853c91",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e2b27f4c-c638-489a-879f-f87ced20f757"
        },
        "item": {
          "id": "2a4cb299-b12b-4b98-9d2f-3fc0e3081a98",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d90690c7-7840-4bae-839d-a9408f1f2b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdee67e-a57e-4f72-8bbd-6491c040c3b5",
        "cursor": {
          "ref": "7c62324e-bac7-4c17-b95d-e2c4ef3ca1c0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5552a94a-47ff-47f0-985f-a7a8ecacd324"
        },
        "item": {
          "id": "1bdee67e-a57e-4f72-8bbd-6491c040c3b5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2857d1c5-04a4-4d30-bb64-59ab4d62f3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d357e39-9ffe-4335-9723-0fe169e29017",
        "cursor": {
          "ref": "6818198f-d43e-4340-bcb9-9ccd9c910d00",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e5d12bee-9973-47ea-babd-8bab4e358d95"
        },
        "item": {
          "id": "0d357e39-9ffe-4335-9723-0fe169e29017",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0a941e89-7090-4fdf-81b0-e481ddbcb041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2160bbc-5521-4867-a42b-662bafd4d34c",
        "cursor": {
          "ref": "62e63adc-54ac-4e99-ac0b-84df974ca240",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "759c3313-9abd-445b-b7d7-6b37734e5fe2"
        },
        "item": {
          "id": "f2160bbc-5521-4867-a42b-662bafd4d34c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4e824feb-071e-43d0-8015-90c6016623c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71066d46-5876-4b36-8236-b5cf43cfcd90",
        "cursor": {
          "ref": "6dbad678-632b-4fc4-85df-84f50d32ec9c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "76da76bd-8357-46d9-86ee-557eb924dd26"
        },
        "item": {
          "id": "71066d46-5876-4b36-8236-b5cf43cfcd90",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8d5d5b1e-f896-4724-85b2-57a154a45f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88a1358-e163-44fc-81e0-011becd85d6c",
        "cursor": {
          "ref": "46c1ba72-3b8b-46d6-a4ce-157049e4e3e4",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "58418a52-36af-4fff-9512-27953efcb105"
        },
        "item": {
          "id": "e88a1358-e163-44fc-81e0-011becd85d6c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "47069108-c41e-470a-a718-ddb10d88cf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca4765f-7bad-4456-9603-48f74d06e385",
        "cursor": {
          "ref": "33a21fbf-1594-452e-8026-67facf0e966d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d39dda78-da4b-4632-86da-3ac9bdc1a7aa"
        },
        "item": {
          "id": "7ca4765f-7bad-4456-9603-48f74d06e385",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "74733b51-e7c8-4ce2-9a9d-cccae58643f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583ff435-02f1-4eb0-89d0-24548300cb0a",
        "cursor": {
          "ref": "45811698-a541-4d3d-9b47-e55522cb4d0d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d17c6e52-fb3e-44d8-8e9f-536a042f1d36"
        },
        "item": {
          "id": "583ff435-02f1-4eb0-89d0-24548300cb0a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0f6b5e89-37b8-42d3-9597-1546d30654b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fdc189-b64b-4d52-a8f9-e5af0d0820e4",
        "cursor": {
          "ref": "13738e79-d9bd-42e4-896b-225b285e4684",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0b7bacc5-ebb2-431f-9c80-e17ce19933a8"
        },
        "item": {
          "id": "b8fdc189-b64b-4d52-a8f9-e5af0d0820e4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "30e5604d-43ef-444d-a8ed-9a566783d967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b5b9d8-cec9-41ae-8262-36a0eb7ce355",
        "cursor": {
          "ref": "c6f5980f-e1a9-465c-bcb5-76b3761fe0b1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "84e26814-5847-4933-8245-b3eef43d2181"
        },
        "item": {
          "id": "b2b5b9d8-cec9-41ae-8262-36a0eb7ce355",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3bde64fc-bf8f-40bd-9933-38ab2f3a6ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27694678-525f-414a-a4e1-f3d62daaaf9a",
        "cursor": {
          "ref": "8b81420a-265f-451e-8fda-f2ee9b85adc3",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "be6fb4ae-23c6-446f-9cb5-54dd35998d65"
        },
        "item": {
          "id": "27694678-525f-414a-a4e1-f3d62daaaf9a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c34368e1-2c6a-4cb6-91e6-54d7ed7ab828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031923a9-7e82-43b7-bdf4-e7c53903743b",
        "cursor": {
          "ref": "20d7f134-3165-4c45-bcca-fb22a71d74b7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d7326699-e5a7-4fd5-8848-5416d8207fe2"
        },
        "item": {
          "id": "031923a9-7e82-43b7-bdf4-e7c53903743b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ed977816-8a00-4b91-b02f-4dc1362279d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a72edd1-5931-413f-bffa-c0c379964399",
        "cursor": {
          "ref": "4b045b1d-8938-482f-8bf6-b83c682660cb",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "98e191fe-e901-48a7-90e4-9cb2a40e161a"
        },
        "item": {
          "id": "4a72edd1-5931-413f-bffa-c0c379964399",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "56e744da-0f7e-4e7f-8952-8650c34c585c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb79522-212d-4018-a12b-5ff22928436c",
        "cursor": {
          "ref": "75b11d80-7aaf-4b38-b58b-55b4abdfcc99",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e797c897-36cc-4c68-9328-dd29c28a8f64"
        },
        "item": {
          "id": "5bb79522-212d-4018-a12b-5ff22928436c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "af70265e-4f84-4e24-936d-c89d853c97cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ca16ac-835a-4d23-a5ef-7a5c7394b52c",
        "cursor": {
          "ref": "b5a31fa4-7322-4bde-b425-226b13c25739",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "63472033-17e4-4a39-bf55-830780be2279"
        },
        "item": {
          "id": "47ca16ac-835a-4d23-a5ef-7a5c7394b52c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "071ac654-ad5d-4288-9e90-2027057cb00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd6047f-b61b-4fa3-a124-c541226b8dfb",
        "cursor": {
          "ref": "002e50b1-7338-4603-855d-ca27abb877f6",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ecd819cf-de01-4121-bd4f-8d9f6406e29e"
        },
        "item": {
          "id": "6fd6047f-b61b-4fa3-a124-c541226b8dfb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "65fac3f3-4123-4603-85ad-c5384a5aa17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad7226d-0dc5-4906-8b25-08d7a3faa582",
        "cursor": {
          "ref": "ad1468dc-b47c-4fa5-90bc-f648edc7581f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "721d64c1-f427-42a0-b640-7d7f2b04e0bc"
        },
        "item": {
          "id": "1ad7226d-0dc5-4906-8b25-08d7a3faa582",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ad395d52-0eaf-4f44-a7d1-2d37dbabb8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36329965-7daf-4a2d-9c67-5d28e59f260e",
        "cursor": {
          "ref": "e55d8c6d-7db1-45fb-a188-75121ceb4e16",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "750db50a-06af-47ec-b9d0-da1855da0858"
        },
        "item": {
          "id": "36329965-7daf-4a2d-9c67-5d28e59f260e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "307689b2-49d2-403b-a053-0d8854ed4ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87180eef-87ed-4c18-a59c-2e92dc599c08",
        "cursor": {
          "ref": "65a0c3dd-830f-4c5d-8906-514b44b0c7e3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8616a586-a635-4989-a274-f7efcc307a00"
        },
        "item": {
          "id": "87180eef-87ed-4c18-a59c-2e92dc599c08",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c42ecfd6-f4fc-4583-a953-851d2cda6643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be909c9-bc18-4a2f-bb2a-bb6b88251b84",
        "cursor": {
          "ref": "2a14b80a-48fe-475e-b4b9-a5fbe1b7c488",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "981c4cce-d7f3-4dae-b8b5-fa0fdbb367ed"
        },
        "item": {
          "id": "4be909c9-bc18-4a2f-bb2a-bb6b88251b84",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cca95144-d27d-4ff8-9ed6-7868c5e2e470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54d04aa-745d-41b6-9b1f-afbfe4d8ffeb",
        "cursor": {
          "ref": "c58ca339-8139-4592-99ae-c4d0ef7abdb2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "76383202-9b44-4789-93c2-e7045e94dc9b"
        },
        "item": {
          "id": "a54d04aa-745d-41b6-9b1f-afbfe4d8ffeb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a38949b3-063e-4c2b-975a-32f536a852e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7f76ee-59b8-4e5d-ac05-1201d5bebfb5",
        "cursor": {
          "ref": "6d88aad8-3b76-461f-807c-2a0ccbfb0de7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "edca8ad8-827c-4d17-bc45-8a2aba5378e9"
        },
        "item": {
          "id": "6c7f76ee-59b8-4e5d-ac05-1201d5bebfb5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d3593b45-0142-4126-842d-9d202c1c9874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c62f6bd-4927-4bed-83d4-1c385cd3e842",
        "cursor": {
          "ref": "d798566b-ff38-4492-82b7-c0693c03da86",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cef770ed-dc34-4e1a-b1d7-333fe9606a3d"
        },
        "item": {
          "id": "7c62f6bd-4927-4bed-83d4-1c385cd3e842",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b99cf44e-68b6-4ce6-9e5c-79b7fbed6aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bc838f-5d17-42ce-85cf-f3ef0337bae8",
        "cursor": {
          "ref": "f4384de3-cc79-4422-8bbf-4842435eb8eb",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b361e7bd-9269-42b0-bc24-c00447a739b9"
        },
        "item": {
          "id": "05bc838f-5d17-42ce-85cf-f3ef0337bae8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "290fc66a-f44e-42e3-8d04-5e983c365bb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0241c75-09cb-422f-a885-e183cff50c98",
        "cursor": {
          "ref": "f76827e2-9528-4574-b7ed-88f57b53667c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "31cce2db-6cd7-49d3-baa5-b0f8f476593e"
        },
        "item": {
          "id": "d0241c75-09cb-422f-a885-e183cff50c98",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1b8bde5e-6dd8-4b76-9a32-711a4fd4a9b4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dcab20-7c05-418c-bba7-effba2e6f4e1",
        "cursor": {
          "ref": "58548f59-9cb6-4de6-bc2b-70d55da26360",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "92f8ccbd-4153-43ca-8198-51bcbbf74f9e"
        },
        "item": {
          "id": "f3dcab20-7c05-418c-bba7-effba2e6f4e1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "de3645e8-efcd-43bc-9654-a15cd9d1309a",
          "status": "Created",
          "code": 201,
          "responseTime": 5018,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a428f01c-decb-4c96-bc0f-0f16cc043da9",
        "cursor": {
          "ref": "ba0c4434-921f-4e3b-963d-4023fbd9ec47",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fa02fa95-a0bf-4f7b-b1db-451b59eb03ec"
        },
        "item": {
          "id": "a428f01c-decb-4c96-bc0f-0f16cc043da9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "377c3078-c7cc-4b6b-817e-84d90412282c",
          "status": "Created",
          "code": 201,
          "responseTime": 5483,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab60e6ec-a31b-40a3-bac1-b82fd85dd4bc",
        "cursor": {
          "ref": "ae5ca3ba-3416-403d-9572-55f848215f5e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d019b236-e86c-45c0-ab50-160d7306f049"
        },
        "item": {
          "id": "ab60e6ec-a31b-40a3-bac1-b82fd85dd4bc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c2ac95d8-2a13-4f56-99e0-8fbdbb15af46",
          "status": "Created",
          "code": 201,
          "responseTime": 5283,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1b4455-1fc9-4711-9efa-fa79b5de96df",
        "cursor": {
          "ref": "01551243-072a-4ab0-9bd5-fe9cf8737a4e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "51b60a79-b748-41df-9306-a526a6ae2349"
        },
        "item": {
          "id": "cd1b4455-1fc9-4711-9efa-fa79b5de96df",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9c3549ee-7ebb-480b-8bb8-806571d63ab1",
          "status": "Created",
          "code": 201,
          "responseTime": 4723,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d240f5f5-36d5-4c90-9978-bdad1db3e748",
        "cursor": {
          "ref": "cb2d78ba-7642-466e-8639-32f71f4b2d35",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "340eac86-8b03-4b93-8dd3-253833e22354"
        },
        "item": {
          "id": "d240f5f5-36d5-4c90-9978-bdad1db3e748",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "103d9be0-6b63-461d-83bf-9666d2ddf6f0",
          "status": "Created",
          "code": 201,
          "responseTime": 7773,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbcf11f-9a27-4dcb-a0bf-858e36ca3c73",
        "cursor": {
          "ref": "98772c1c-7064-402e-90c5-e24b22beff0f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9806613a-eaf6-4ac1-81c2-1c939284d6a7"
        },
        "item": {
          "id": "6dbcf11f-9a27-4dcb-a0bf-858e36ca3c73",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d16759ca-0be2-4227-8d27-cef7d9c34a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbcf11f-9a27-4dcb-a0bf-858e36ca3c73",
        "cursor": {
          "ref": "98772c1c-7064-402e-90c5-e24b22beff0f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9806613a-eaf6-4ac1-81c2-1c939284d6a7"
        },
        "item": {
          "id": "6dbcf11f-9a27-4dcb-a0bf-858e36ca3c73",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d16759ca-0be2-4227-8d27-cef7d9c34a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a49e67-30fb-400d-8bf6-45e11c57e7c0",
        "cursor": {
          "ref": "1e32badf-1fef-4f4e-9fe3-320dd2788b28",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "53942da7-b0bb-4ed6-a1e2-7b5bcbe5c646"
        },
        "item": {
          "id": "81a49e67-30fb-400d-8bf6-45e11c57e7c0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "988e9237-10e4-4ed1-b312-30fa4c4244b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42dfeaac-1f83-4953-a9ae-4b20582164fe",
        "cursor": {
          "ref": "60f93ab1-0843-43a6-aa49-8ce513080785",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a74d4df0-b825-472f-9504-a821bed0a647"
        },
        "item": {
          "id": "42dfeaac-1f83-4953-a9ae-4b20582164fe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8b876188-ffe6-49df-81bf-269cc83f004c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b34ab3e-7692-4d9b-a210-78a75a9d733f",
        "cursor": {
          "ref": "ee78b967-5bbb-42c0-bd8c-cb1eb8dd41d8",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c791b30c-8b4d-4d8b-b014-376e1f52eebd"
        },
        "item": {
          "id": "4b34ab3e-7692-4d9b-a210-78a75a9d733f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "860ec567-1cf5-4ff0-a838-8d78b088f03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea36eda4-4eac-46af-bd25-5b15455ce5f9",
        "cursor": {
          "ref": "9187c64a-c321-4fdd-8a36-a3ac53dffa64",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fdc4326d-4c32-4ae4-a5ce-930f78e2ec06"
        },
        "item": {
          "id": "ea36eda4-4eac-46af-bd25-5b15455ce5f9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "02cf8c32-06c2-4a73-bbde-b101afd89d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b078c2c1-9fcd-4ac0-a8f7-4e1f2b3c90cd",
        "cursor": {
          "ref": "2a5a9216-7e3f-4c5f-a710-5cd6d3c931ac",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8bafe4ad-65e0-4db5-afc9-9d91758fcc4c"
        },
        "item": {
          "id": "b078c2c1-9fcd-4ac0-a8f7-4e1f2b3c90cd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2f2c42f3-76ce-4f13-978e-1feae509622c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8b226e-19a6-4a4a-a49f-742be67d2e56",
        "cursor": {
          "ref": "4da8c960-ff6a-43ea-9256-7136cffc5993",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8a12afb5-345c-480a-bf74-20e9ba2cbfcd"
        },
        "item": {
          "id": "fb8b226e-19a6-4a4a-a49f-742be67d2e56",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "12c41edc-1132-4b2a-a616-f711f88379bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a27271-094a-4b9c-a8d6-d7d07100d345",
        "cursor": {
          "ref": "2ee52caf-a4f1-4d3b-a758-141de109ca43",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "65847fb0-67c9-414c-a1ba-16c3abcd8a8c"
        },
        "item": {
          "id": "a5a27271-094a-4b9c-a8d6-d7d07100d345",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "df874bb7-9698-45f0-8f52-980cece9f4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c656cad9-6ab0-4e8f-ac73-40fccd20f4d9",
        "cursor": {
          "ref": "b25cb46a-9b25-45ad-b120-f567deee6845",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e2bafe4d-53ec-4e41-be4b-7c3abcc9023b"
        },
        "item": {
          "id": "c656cad9-6ab0-4e8f-ac73-40fccd20f4d9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8bb04aab-a3ae-4640-8306-2cdce6929a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f096a79-39ed-4ae1-8e35-7f00ca4d47cb",
        "cursor": {
          "ref": "c2567f3d-49b3-44af-8317-a010cb24c200",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "678b0579-adf7-4541-adea-7ce71d23ef07"
        },
        "item": {
          "id": "5f096a79-39ed-4ae1-8e35-7f00ca4d47cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1b757cfb-a4fa-4052-bd47-a628c9e951ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2554a6a1-3249-4586-a2c5-5427cfd8b4b2",
        "cursor": {
          "ref": "523b14cf-51a0-4acf-bd74-bb5459a3430e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ee3ba6d7-895d-4bf3-ae03-006bf273c42f"
        },
        "item": {
          "id": "2554a6a1-3249-4586-a2c5-5427cfd8b4b2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "74085435-327b-490e-9e96-cb823e3ca383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07af92d-710d-4763-9500-84312dd4f6ec",
        "cursor": {
          "ref": "ddcb5f88-18b5-479e-ad65-48ea0917f52f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "52ae5190-c59a-4163-9e2a-76d1019d386b"
        },
        "item": {
          "id": "a07af92d-710d-4763-9500-84312dd4f6ec",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "01a99bcc-e6ee-4cc6-8246-da466681d5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56530c8-dc25-42d5-9370-3d4c1912e844",
        "cursor": {
          "ref": "22cfad49-df1c-4b61-9c32-a32828042eba",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "12d03f03-0374-414e-b831-0da948d52206"
        },
        "item": {
          "id": "c56530c8-dc25-42d5-9370-3d4c1912e844",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0c194fdc-f5eb-4c6d-a6e9-0dbfd8705682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c4503c-a075-4442-bdae-28de9850e9d9",
        "cursor": {
          "ref": "096cf6bc-227b-4af1-b509-d7a70e76faf4",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e1313888-86bd-45ec-b1da-fab7ec9fc25d"
        },
        "item": {
          "id": "04c4503c-a075-4442-bdae-28de9850e9d9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2896c31a-6acd-4a32-8b79-d8b368ceae5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf908295-a357-4665-bd18-bc1175d2354f",
        "cursor": {
          "ref": "64090786-8b88-4d5a-8ac9-87d9ec783320",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "91b39103-ac68-4717-9cfe-a63173bf525b"
        },
        "item": {
          "id": "cf908295-a357-4665-bd18-bc1175d2354f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c5330f67-2661-47b2-ad31-fbde276558b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12a5556-ca0a-494c-b8fe-2820dc7ca67e",
        "cursor": {
          "ref": "658cfb55-cc5b-42b3-98a2-ee1d820604c4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f626bacd-4046-49ef-a4c5-0258cd3c9282"
        },
        "item": {
          "id": "e12a5556-ca0a-494c-b8fe-2820dc7ca67e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8b052566-644b-4c83-a548-ff2898493914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b814cde5-5a1a-4318-95f7-3f926e9ea7f2",
        "cursor": {
          "ref": "1e067ae1-cda2-424d-98ad-fc889d0763d3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "801807a1-5629-402c-a797-05e33b4e4c7a"
        },
        "item": {
          "id": "b814cde5-5a1a-4318-95f7-3f926e9ea7f2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f33e75e3-587b-4aae-b351-1780948d17c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7f0fbb-d7b4-4518-a31b-239237c8101f",
        "cursor": {
          "ref": "448ac577-ca70-4482-8339-50d699ba48fb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "06c3b219-8b8c-420b-8115-40012dcd2c23"
        },
        "item": {
          "id": "6e7f0fbb-d7b4-4518-a31b-239237c8101f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "acaf5657-0f78-4bcd-932e-db6bb7d7f26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64eec60-9d8a-4d19-9a72-e7bfe4c83228",
        "cursor": {
          "ref": "8e216dfe-bfda-42e3-b68d-a8e43fb1abf7",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3217df01-77bf-4f42-9f90-7c5e42458567"
        },
        "item": {
          "id": "d64eec60-9d8a-4d19-9a72-e7bfe4c83228",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4f87ecbf-4af2-4b63-818e-3e8a8da2fe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f446dff-0054-4664-a329-63cef33abf02",
        "cursor": {
          "ref": "a56bd381-ceb5-48ab-8818-15e031025331",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1e9756e5-6d9a-4c40-8d50-a6b20327709f"
        },
        "item": {
          "id": "1f446dff-0054-4664-a329-63cef33abf02",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "74f1f691-5848-4cd7-bb28-772429958a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89813199-33a0-4621-a72e-102dea7b230e",
        "cursor": {
          "ref": "9ed64a85-8652-4499-bb6b-e1d55a03ae58",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "13a4ee38-85e9-47b2-8b61-d3ee2f15cd37"
        },
        "item": {
          "id": "89813199-33a0-4621-a72e-102dea7b230e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4e5e2377-3b21-427d-885b-c0d120bcd502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcc5f59-5b1f-408b-a1fb-a2200637c066",
        "cursor": {
          "ref": "22b5c75d-8f16-454e-8812-c90e15985f9f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bab2a6e5-86c9-4e9d-b733-99c7c7bc27cb"
        },
        "item": {
          "id": "abcc5f59-5b1f-408b-a1fb-a2200637c066",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6b5b1d49-3a2e-4824-967f-e06a667f4561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1591ff-8def-42e2-b13b-922291257bba",
        "cursor": {
          "ref": "2987cab8-db1c-40f4-ada8-cfbe272454fb",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "10ccd9fb-2e3f-4983-bc6d-37caebe6c0e0"
        },
        "item": {
          "id": "7c1591ff-8def-42e2-b13b-922291257bba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bba2e065-4be9-4009-ab8e-381f6f115655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f58dd3-bd6d-45e1-9184-9019a3355a6f",
        "cursor": {
          "ref": "469f5bce-3faf-4d97-b4a7-0da1965fee96",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "596c29f1-44b4-43f1-a65b-3286c5127f0a"
        },
        "item": {
          "id": "d6f58dd3-bd6d-45e1-9184-9019a3355a6f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9b0083cc-623c-4e94-abdc-f751ffd2d530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607208f3-3f6b-4d5e-9459-4a21bae1141e",
        "cursor": {
          "ref": "27d0ed48-3ec4-4405-872b-6ffe2982385a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b2c825cd-a0f8-499b-a709-143df8faa897"
        },
        "item": {
          "id": "607208f3-3f6b-4d5e-9459-4a21bae1141e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c2f2acd4-0fd6-401e-913c-3aa2cd0c02a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9246c1f8-c88a-4381-8175-9856272a04a8",
        "cursor": {
          "ref": "83737124-f957-48d8-8fa7-765dfd6574d4",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "566eeae2-2bb6-4b5d-8e78-1d851fecba28"
        },
        "item": {
          "id": "9246c1f8-c88a-4381-8175-9856272a04a8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b9b6e8b7-c56e-4b09-bbc3-7ec175b9bbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e6153e-12ee-49d1-a1d1-5977a30624e3",
        "cursor": {
          "ref": "12780f96-35e8-405b-9847-8df80c2fca33",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "87c8685b-562a-486d-a992-58503c4832bf"
        },
        "item": {
          "id": "c9e6153e-12ee-49d1-a1d1-5977a30624e3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "931e18f7-d1c9-4172-9fcf-23f8b6c45774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4567267f-8299-4f79-942d-ca306dd64d8b",
        "cursor": {
          "ref": "aa500384-23e6-468f-98bc-826905694eb0",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "764c18bb-9bab-4521-b2f8-74ba8bf3e11e"
        },
        "item": {
          "id": "4567267f-8299-4f79-942d-ca306dd64d8b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aef12754-2a0b-4d38-98ca-fca3470b2485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68388d97-d60f-4da5-87bd-d9cc77757eb0",
        "cursor": {
          "ref": "97d654e0-506f-41ae-92db-b2a281238476",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b8a8d7b4-06cd-4538-bf03-5b5cbedc90db"
        },
        "item": {
          "id": "68388d97-d60f-4da5-87bd-d9cc77757eb0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a2e19f58-3bab-4b63-8843-9a7bfb11d1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1eb6e0-88fe-443d-9f7c-6562310d0ee0",
        "cursor": {
          "ref": "dd1133c7-3949-4e4c-ad41-cd767e5ce008",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bcf42307-164d-40bd-ab89-194243eccebf"
        },
        "item": {
          "id": "ca1eb6e0-88fe-443d-9f7c-6562310d0ee0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb7f2a3d-7653-4df9-b0dd-bf0191c544d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cd39ef-22a7-4012-9694-7002d5a5f98e",
        "cursor": {
          "ref": "71712dc7-6cd8-4d08-8f2a-7c56683321cb",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ef103d9f-3487-4e4a-9340-ab0b94d8fbf7"
        },
        "item": {
          "id": "b3cd39ef-22a7-4012-9694-7002d5a5f98e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e42c7964-0338-435c-9ea9-de0ba94f74ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af27310-23d2-4b1c-a612-3ef0727cdbe3",
        "cursor": {
          "ref": "cf7bff7f-5660-4f12-9e58-df6b88d05be9",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6e530f56-cf3a-4eb5-8970-287d84ed3841"
        },
        "item": {
          "id": "9af27310-23d2-4b1c-a612-3ef0727cdbe3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "58b68e62-9aed-4ffd-b1d8-09b314b49ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11371b1-5921-4035-b26a-43eaa47e0bb9",
        "cursor": {
          "ref": "1f92255f-8a86-43eb-acf8-fd23b74c6f14",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "52ce2370-2a78-4c02-81b9-5923f226a6ac"
        },
        "item": {
          "id": "d11371b1-5921-4035-b26a-43eaa47e0bb9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bdc6906b-6e43-4a25-803f-4e39180d92d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5488bc3e-d139-4561-bb09-9e3228282f20",
        "cursor": {
          "ref": "0efeb415-f9f7-40fe-bc99-2d8b8a5689b3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c910055a-ed11-43ad-8a25-16344fd805f1"
        },
        "item": {
          "id": "5488bc3e-d139-4561-bb09-9e3228282f20",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "02517a2b-e0ad-41e2-a3bc-c940bd941485",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 586,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00f991e-5d27-4e3b-a272-816711a3f556",
        "cursor": {
          "ref": "b90d7a71-6277-4fb8-9bb0-5f0a56c0bf7f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1b2fbb5b-b41e-42d0-a6ee-817af219b6cf"
        },
        "item": {
          "id": "b00f991e-5d27-4e3b-a272-816711a3f556",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d85aae3b-903c-4167-99cd-ee9d052d7e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00f991e-5d27-4e3b-a272-816711a3f556",
        "cursor": {
          "ref": "b90d7a71-6277-4fb8-9bb0-5f0a56c0bf7f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1b2fbb5b-b41e-42d0-a6ee-817af219b6cf"
        },
        "item": {
          "id": "b00f991e-5d27-4e3b-a272-816711a3f556",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d85aae3b-903c-4167-99cd-ee9d052d7e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fbf008-0b64-4643-8a7b-99b258c83904",
        "cursor": {
          "ref": "33ff1d72-77cc-420f-9e36-d07fc2a29135",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c501ad3c-200d-4ecb-b026-1a27eafa8be2"
        },
        "item": {
          "id": "d3fbf008-0b64-4643-8a7b-99b258c83904",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a9004fba-f157-4f1a-afb9-9d52dcb7c4bd",
          "status": "OK",
          "code": 200,
          "responseTime": 387,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "56264b09-e582-4812-9fa2-785d657b2ace",
        "cursor": {
          "ref": "62356d3a-37af-4d56-b206-7c9e47ba69fd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "905bc9df-a9bb-4dfb-8423-c4d6c967bd81"
        },
        "item": {
          "id": "56264b09-e582-4812-9fa2-785d657b2ace",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "77ca0fba-cf83-4e26-82e8-912c49950eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d475cb-81fa-4bf1-b40e-8aabc8c478f7",
        "cursor": {
          "ref": "89d646f8-8db7-4d66-83db-1b1248cb21d4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "419dd1bb-b663-4ee6-84d7-69f710e67a57"
        },
        "item": {
          "id": "72d475cb-81fa-4bf1-b40e-8aabc8c478f7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "55f5d206-7bfe-465a-af9d-cb90d2c6ef03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dfebc3-7d72-41dd-a21a-2c4d9f3a606a",
        "cursor": {
          "ref": "24164b37-9259-4372-b520-e3583dfd6f90",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "00f7408b-e7a2-4dc5-b825-91b5bf3620e2"
        },
        "item": {
          "id": "24dfebc3-7d72-41dd-a21a-2c4d9f3a606a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "efff00bf-9b8f-4d7d-99ea-d2ddb9a9793d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0616d5a5-03a9-4f1f-862c-6c95a788c32d",
        "cursor": {
          "ref": "bbfabf81-489e-45bc-9d0f-b1043296a8bc",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b98c5a7a-56d7-4643-b8c5-7a073e0cef19"
        },
        "item": {
          "id": "0616d5a5-03a9-4f1f-862c-6c95a788c32d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ede3a96e-ac66-4362-96bc-57a792db7afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a56fbb-c755-4c91-b4a1-e600acfb4b98",
        "cursor": {
          "ref": "2d868dd3-6f66-4068-8141-3dbfbf40a5e5",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8e7979ce-128d-4b54-baee-9f2ff9c2d60c"
        },
        "item": {
          "id": "56a56fbb-c755-4c91-b4a1-e600acfb4b98",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "35e2a3d3-749d-4173-a308-ba4c507cef64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbe7a62-f27b-4025-9ee1-021109009ac1",
        "cursor": {
          "ref": "45c2ddec-d200-4138-a519-a3c885b3be91",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fba86e2e-d192-4655-84e0-3c7e51c19d41"
        },
        "item": {
          "id": "efbe7a62-f27b-4025-9ee1-021109009ac1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e65a6554-150a-453a-947f-e7894b8d93a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd21d5e-7579-445c-affc-180f6b488de3",
        "cursor": {
          "ref": "9fc1d0f2-7618-4d4e-9ee0-4b40404c84c3",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d131fbdf-65c0-466e-9c71-e1160a273d7f"
        },
        "item": {
          "id": "bcd21d5e-7579-445c-affc-180f6b488de3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "01ecfeea-6a35-48c7-a757-e56abd43bb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b222e4f8-98ad-45f9-bc42-289699dee185",
        "cursor": {
          "ref": "c3cdc401-04fc-4363-93b2-9b459cac7961",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7c6ffc47-d50c-4e6a-8baa-5be97ab604c2"
        },
        "item": {
          "id": "b222e4f8-98ad-45f9-bc42-289699dee185",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fbdd220c-0c1f-4408-9ae1-b16859fb449c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c279c336-50a9-466c-b716-aa2e690655b1",
        "cursor": {
          "ref": "af6095cc-3080-4357-a4cb-104f54f24aad",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a6fb47b0-9e75-42d8-ad37-ef608de83981"
        },
        "item": {
          "id": "c279c336-50a9-466c-b716-aa2e690655b1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "828b4289-00da-432e-b9c3-1bf25c73fd19",
          "status": "OK",
          "code": 200,
          "responseTime": 401,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "fd0bc77a-f6df-4299-8420-fee880a02c4d",
        "cursor": {
          "ref": "a79c0e42-ed46-4eb2-8f2a-6f04bb09ae41",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e5c50a1a-a5d7-4cf0-aaf9-bbcd2142ef0c"
        },
        "item": {
          "id": "fd0bc77a-f6df-4299-8420-fee880a02c4d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "edb3aea3-9539-46ff-9200-ac60d9d23c91",
          "status": "OK",
          "code": 200,
          "responseTime": 401,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "da37acac-7091-4f21-98d7-8e48fe5e97fa",
        "cursor": {
          "ref": "c5f8e976-a7b9-4a76-a88e-b8f0af4fde23",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6da51d0c-b2e2-4567-aec8-7330acf0f51d"
        },
        "item": {
          "id": "da37acac-7091-4f21-98d7-8e48fe5e97fa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6b0b8fa3-2c98-4681-985c-cb6ba68a46c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4587f93b-c343-41c4-ae34-6c63e784d50a",
        "cursor": {
          "ref": "ef47c55c-7189-482b-a2e0-cea1da4526a2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a2329004-724b-44e0-a907-9ec860e20422"
        },
        "item": {
          "id": "4587f93b-c343-41c4-ae34-6c63e784d50a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5700cacc-6c61-44a3-bc6c-f4c41acc8a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cc9db1-16cf-4399-94cf-68e7135c262b",
        "cursor": {
          "ref": "ee0a7117-3538-45e1-9663-6296a55d7d01",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "095d9a47-118e-4714-81e1-4381774f0b51"
        },
        "item": {
          "id": "c9cc9db1-16cf-4399-94cf-68e7135c262b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9dfd86f8-7c25-40af-95cb-8d7c3185bc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac55cdc-fef1-4f7c-ba4c-c76c1543085e",
        "cursor": {
          "ref": "6cc0658c-5b1c-4cf5-a624-425c6894c2c4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6464c1f3-19b5-44e6-b03e-e64bb4eae77b"
        },
        "item": {
          "id": "3ac55cdc-fef1-4f7c-ba4c-c76c1543085e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "95ecc1c3-e77d-44ab-aec0-0b7d3782ead2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77459ee7-9a65-4a56-9383-e65edad92c37",
        "cursor": {
          "ref": "0e897949-fd01-4461-b561-951301ff5b01",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "72a0c6ab-3719-49a7-990e-8e0419b14b17"
        },
        "item": {
          "id": "77459ee7-9a65-4a56-9383-e65edad92c37",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4576675e-f051-4397-8de6-2a139cee79fd",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:159)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:159)"
            }
          }
        ]
      },
      {
        "id": "dc05b6b3-9e84-4d28-98f4-671865fc9a1b",
        "cursor": {
          "ref": "b7aaebd7-b094-4203-a9a4-082db6ed9016",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "eb5217be-c5d9-4308-bbdf-92390c91a12f"
        },
        "item": {
          "id": "dc05b6b3-9e84-4d28-98f4-671865fc9a1b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d6896c2b-7cca-4fce-b927-b79e91bc9735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ec23eb-c118-4a29-b314-1a094697f653",
        "cursor": {
          "ref": "86fab8d9-af2a-4878-8662-e4f190042e07",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a5e26968-a284-4694-b18d-a90d0558a18a"
        },
        "item": {
          "id": "c1ec23eb-c118-4a29-b314-1a094697f653",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1bdd0ea7-91c2-4c41-b5df-e17d36798881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fe0c5a-1dca-49ad-bcd4-dbf772c3ba7a",
        "cursor": {
          "ref": "660ed9f9-b6ad-4ff0-bd8c-5aa2d5d41647",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "749c34a8-92ac-4f37-9daf-ec5227acd296"
        },
        "item": {
          "id": "72fe0c5a-1dca-49ad-bcd4-dbf772c3ba7a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "87a02010-ca4f-461e-a322-43b4deb32122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e248e1-1ac3-4f7d-ac47-5c214a359928",
        "cursor": {
          "ref": "be597f9e-5960-422a-b6d2-ec344938679f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bda7964f-202e-46a0-bd7e-8aa36ed9d8db"
        },
        "item": {
          "id": "54e248e1-1ac3-4f7d-ac47-5c214a359928",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9bde9dbd-198a-476b-945e-bd87af6af1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb13444-9bf9-4232-9add-e312a38b0526",
        "cursor": {
          "ref": "dcde1368-0855-45ee-bd99-888640232c12",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "14291126-3648-4c8d-a4a5-f39727c82c9b"
        },
        "item": {
          "id": "9cb13444-9bf9-4232-9add-e312a38b0526",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "957de767-0225-4170-95c5-4e3b6bef7af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf66748e-5bdd-4eaa-993a-2dc183bd23bc",
        "cursor": {
          "ref": "706a35d4-b3a3-44f2-afed-e576ef62cd3a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2c278bb8-2f40-45cb-bb78-dea6854387a3"
        },
        "item": {
          "id": "bf66748e-5bdd-4eaa-993a-2dc183bd23bc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0d90eeaf-6c98-495f-b390-213fe0bb2af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5462b60-a5be-496f-81e0-cb57388f6a8e",
        "cursor": {
          "ref": "147146a2-f890-4e2f-bd86-372db2dae6e6",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fbf41850-a3e3-40e7-9033-967a675f85ee"
        },
        "item": {
          "id": "e5462b60-a5be-496f-81e0-cb57388f6a8e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "78dd1cc6-7548-4a0c-b88e-aa8a5d6f1b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f097a6-4b63-47da-a76c-ffa01215cfc8",
        "cursor": {
          "ref": "7ae15738-ab09-4f51-8b45-61441fb2ac05",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b379046a-1296-44d9-a94f-618f3af10146"
        },
        "item": {
          "id": "41f097a6-4b63-47da-a76c-ffa01215cfc8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b8698c59-b725-4d51-99c5-9e48f4d4166f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fe26a5-159b-48cf-816c-fc37cf48c481",
        "cursor": {
          "ref": "01d4355d-01b1-4c4d-94a8-31f49b93d820",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4e28a4fa-8adc-4ceb-a351-c23405d22453"
        },
        "item": {
          "id": "b6fe26a5-159b-48cf-816c-fc37cf48c481",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "33fa43c2-b96f-4953-92d8-4b1fa89e3b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0651d2a4-60e4-46ac-84c6-84a0264ad295",
        "cursor": {
          "ref": "04f35ea8-ef7e-4934-ae66-116080e88a23",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9a849541-081f-40f8-910c-444f710cec5a"
        },
        "item": {
          "id": "0651d2a4-60e4-46ac-84c6-84a0264ad295",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d33701df-1f91-4e20-bcc9-d425b7901b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb709ac6-e1a4-48f2-81b7-9ad1a3aa71bf",
        "cursor": {
          "ref": "9b2c89c0-ba5f-43f1-8a04-e5083d49331c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d67e7c5a-39a7-4e8f-8f2f-f7165cb49d95"
        },
        "item": {
          "id": "fb709ac6-e1a4-48f2-81b7-9ad1a3aa71bf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cb2aeeaa-2480-4f93-be64-451af6125305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d9b682-5f5f-4ac1-a369-10d2870b16c2",
        "cursor": {
          "ref": "439a1b5c-b6d2-4430-95ff-59b4ce71621d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1f3b7ec5-740d-4671-9eff-68c6cdca8bbd"
        },
        "item": {
          "id": "77d9b682-5f5f-4ac1-a369-10d2870b16c2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7863b2ac-2cdb-4d00-bfbd-08a6753597d5",
          "status": "OK",
          "code": 200,
          "responseTime": 389,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:171)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:171)"
            }
          }
        ]
      },
      {
        "id": "02d50d79-7351-4894-9908-b2717f5384e8",
        "cursor": {
          "ref": "4508905d-ab44-4d77-8b3d-7258078c4ba6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d22c34bf-69dc-4e92-a94b-de8584a4e5f6"
        },
        "item": {
          "id": "02d50d79-7351-4894-9908-b2717f5384e8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4bc69cac-3acc-4982-81b8-5c67ee579577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122e613f-9c15-4f48-8cbd-2d426f1e767c",
        "cursor": {
          "ref": "e8073285-dd2c-4c40-aa82-0f3791fdac07",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "88b1e0f3-ad21-48ca-89a6-60afafc4d236"
        },
        "item": {
          "id": "122e613f-9c15-4f48-8cbd-2d426f1e767c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "adf98c88-3a9f-4567-b6b3-daddf83a9ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da4ffb0-b61b-4a4e-8627-2b642fc38eac",
        "cursor": {
          "ref": "099f8ac4-6700-4e14-bf67-1604c0805ed0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a8b2189d-07cf-4e44-b129-4ed7a5585c7e"
        },
        "item": {
          "id": "7da4ffb0-b61b-4a4e-8627-2b642fc38eac",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8b87c819-cfe4-49b6-8416-32caeb860eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c347d2-e7b8-4c68-8c36-7dda0a465e86",
        "cursor": {
          "ref": "5ccade1b-016b-40d4-a45c-189a1e73ffc3",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2b486cc4-8ccd-4c5d-87ba-16e9804a35ee"
        },
        "item": {
          "id": "49c347d2-e7b8-4c68-8c36-7dda0a465e86",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "da8d104a-8a65-4521-9405-85d4864c4b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45db893-492a-4e5d-a684-434b4f9b606e",
        "cursor": {
          "ref": "c3f4c561-55a0-4daf-b4f1-5375bacf21ec",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "22893576-e1d4-4a1c-9aa7-e2249d577592"
        },
        "item": {
          "id": "b45db893-492a-4e5d-a684-434b4f9b606e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c2bc0bc5-404c-46a5-bd16-c1413cb8f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6190c232-cf3d-428f-8f53-4894704ef513",
        "cursor": {
          "ref": "6dc39601-f704-4b88-ac76-321f5e144312",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cbc90762-725a-4dec-9720-c9a3ed05470b"
        },
        "item": {
          "id": "6190c232-cf3d-428f-8f53-4894704ef513",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "afdb1afe-f97e-4c56-a214-d1efa5918602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943998bb-5154-4f7f-9743-c9f807cb6356",
        "cursor": {
          "ref": "4c7d053a-f1d5-4e3d-ab20-165881275560",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9916711e-80f9-4bee-a0b3-f50857723a8a"
        },
        "item": {
          "id": "943998bb-5154-4f7f-9743-c9f807cb6356",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eb946224-8372-4885-b011-867d0a71c621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835fb84c-98c8-46f7-9708-acb9233c61d9",
        "cursor": {
          "ref": "79848903-86b3-403c-98e4-f7d2f9d472bc",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cecb3d0e-e125-46a8-b94b-c7f23b715f29"
        },
        "item": {
          "id": "835fb84c-98c8-46f7-9708-acb9233c61d9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "16d6ac23-9c5a-42de-b71f-f5fd9960187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36b465e-fd71-4008-80c0-90ee1b0d67d8",
        "cursor": {
          "ref": "6abf7458-3c2d-4774-9147-0150bb068a38",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "59a17c9a-c528-4a67-bd49-f85027f3464a"
        },
        "item": {
          "id": "d36b465e-fd71-4008-80c0-90ee1b0d67d8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "945601d5-59a3-451d-bb83-26130a2e160b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e9575a-4e43-450c-a576-fea00b7c951c",
        "cursor": {
          "ref": "b82e44a4-df35-442f-a330-ce9e9981e3ac",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4ef96617-4069-4729-acfc-28390ab3f4ce"
        },
        "item": {
          "id": "13e9575a-4e43-450c-a576-fea00b7c951c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4601a504-814c-419a-95ec-bbc34e2d64b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdecab1-c4ac-44c2-8793-c02632d341b7",
        "cursor": {
          "ref": "095ec06e-8d8e-4cc7-86ba-6a37ed3993f1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ac4ffe00-0bec-44c0-bdeb-67009440c13b"
        },
        "item": {
          "id": "1fdecab1-c4ac-44c2-8793-c02632d341b7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b4927676-92b3-4b77-9b5f-e1203e2ac930",
          "status": "OK",
          "code": 200,
          "responseTime": 468,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:182)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:182)"
            }
          }
        ]
      },
      {
        "id": "d4bde811-943f-4a0d-b265-4f826a952271",
        "cursor": {
          "ref": "c2e6ff2b-8297-4f4d-8c98-9d168ffea6f5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "35a8121f-2b03-48ff-8974-a70ddd6035a8"
        },
        "item": {
          "id": "d4bde811-943f-4a0d-b265-4f826a952271",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2b2df4fe-d040-42c3-92ff-4d7929a62a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0451b748-8754-42bf-ba1e-bcc136adb886",
        "cursor": {
          "ref": "60bfa4bc-b4f4-4065-950e-2a07fb5e89a0",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fdce4504-10ee-4a66-8237-b4446fc72c48"
        },
        "item": {
          "id": "0451b748-8754-42bf-ba1e-bcc136adb886",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7cfa8272-bd10-4eb8-a2f6-4b6b947565a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b033a9-cc30-4782-994a-30f77af1eabe",
        "cursor": {
          "ref": "be95796a-a27c-40d2-adda-a507d6150c26",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0f5e6948-c91c-42da-8a2e-e5dd12546f3c"
        },
        "item": {
          "id": "15b033a9-cc30-4782-994a-30f77af1eabe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "672e36bd-866f-4c1e-b771-d8111a9b43a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4680bb70-61ce-4e4d-8861-33cf1579a7fa",
        "cursor": {
          "ref": "4ec0afe3-e149-4703-a3f7-c2d2157601fd",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5a3ea3e5-bb37-46f4-b855-78cae620a6f3"
        },
        "item": {
          "id": "4680bb70-61ce-4e4d-8861-33cf1579a7fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "773cf9e9-c2c6-425d-9206-1ff00c8f7655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9857f85-1047-4d06-9d84-a121115aefc8",
        "cursor": {
          "ref": "2ff6926e-7091-40d1-8aed-c9cca252b68d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a3b3f355-2fb7-46a5-bf40-19b2d2ea6f8a"
        },
        "item": {
          "id": "a9857f85-1047-4d06-9d84-a121115aefc8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6d8772a9-67d0-4bba-a7dc-3ae514e29c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32faae54-0e44-4e7f-b9dd-a3c2661259e4",
        "cursor": {
          "ref": "2a74316e-de13-4d3e-afce-cc9a0121ba7b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5c78c6ae-dc1b-4eab-a253-5c75e7fd9958"
        },
        "item": {
          "id": "32faae54-0e44-4e7f-b9dd-a3c2661259e4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "41bd4bbe-889b-4503-8ffc-6c7dd229e046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd180f3-c860-46bd-85cb-70d4f3b8c5fa",
        "cursor": {
          "ref": "9e146755-ee67-47b2-a36a-72217e3a2024",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "52e9a643-70c6-4add-a685-ba04ec336d81"
        },
        "item": {
          "id": "0dd180f3-c860-46bd-85cb-70d4f3b8c5fa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8c79499f-8736-4327-89e3-2bae915a7be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c962d54a-13b4-4abc-9541-b43678cb3ad6",
        "cursor": {
          "ref": "69e292b0-aa45-4185-855a-f80d443c664a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c74615f4-8cfe-43a2-9d2f-b1acf61485d9"
        },
        "item": {
          "id": "c962d54a-13b4-4abc-9541-b43678cb3ad6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c3930170-47d4-460b-b21d-fe78c88644cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12df19f5-d9fc-4a39-9207-c6925dae3986",
        "cursor": {
          "ref": "b1d8aa6a-fe50-4590-9fbb-a8d5c3f72955",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2c57bbc6-5c20-4329-8953-3998cc2c9d8f"
        },
        "item": {
          "id": "12df19f5-d9fc-4a39-9207-c6925dae3986",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9df4d79d-d88d-4ca4-853d-95b5a57206d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3a30f6-1fca-47e3-a3f6-ef03b0f8f886",
        "cursor": {
          "ref": "2c57c7aa-c808-4396-9c60-7961b1c797e9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6f87c06e-b3dc-4d0e-9b25-1e6d06962689"
        },
        "item": {
          "id": "3a3a30f6-1fca-47e3-a3f6-ef03b0f8f886",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b6bfa8c7-9437-4f01-96ce-ffcf9c329696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3ae260-78bb-483f-afec-93e5eea90dc3",
        "cursor": {
          "ref": "178109c7-3ac5-4edc-9663-f5cb9612b8b8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0cd487e0-3a52-49f8-9113-8772024fe0a8"
        },
        "item": {
          "id": "ac3ae260-78bb-483f-afec-93e5eea90dc3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8cb5d9f7-6739-41af-83b6-af1b96b35533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a66abe1-b4fe-4175-964b-038f8ab44167",
        "cursor": {
          "ref": "b27d3924-e551-4c98-ae5b-99503c59ec3b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3c47da7c-0e8f-42b8-8129-248d01e6660e"
        },
        "item": {
          "id": "9a66abe1-b4fe-4175-964b-038f8ab44167",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "39538ecc-376e-4af1-b9e6-696e19eff3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a0a94f-6479-4dac-aa58-26e7bcd8f683",
        "cursor": {
          "ref": "7e7acab7-78ad-485c-9add-88ff4be37278",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "60dcd643-e618-41a3-a947-d121e2c1aeea"
        },
        "item": {
          "id": "e4a0a94f-6479-4dac-aa58-26e7bcd8f683",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2213d9fb-a39b-44b7-b197-f5e58d0e09f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328ddf37-03ba-4143-952f-1dafbbf36a07",
        "cursor": {
          "ref": "1567540d-9542-4039-a2d5-c35628ba6e5b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1a72b8e2-0d38-419c-8c9c-73aa18519a36"
        },
        "item": {
          "id": "328ddf37-03ba-4143-952f-1dafbbf36a07",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fc5d8895-ee34-4468-98ed-56309ee55e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1a595d-1db8-40cb-80a5-a1e28b4be116",
        "cursor": {
          "ref": "6d8bc2f4-ecf0-4a89-9042-7d48fb5fa80b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b271f792-dcec-40df-a00e-304602e782ac"
        },
        "item": {
          "id": "8a1a595d-1db8-40cb-80a5-a1e28b4be116",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "395fc2b8-b2ee-4e6b-8b3b-b6288182f62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95c8c6c-651c-4f79-9a07-560db9501948",
        "cursor": {
          "ref": "d15607c9-f7a9-4fe8-a73c-678fb34caeb8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3f45e7cb-4bd4-4588-9a7b-e65c8e910bc7"
        },
        "item": {
          "id": "c95c8c6c-651c-4f79-9a07-560db9501948",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aafdbf5f-53ce-4e18-aa8c-e022cf8a2c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e18567-1a14-466b-80ff-6bd6366762f8",
        "cursor": {
          "ref": "11d3567a-3533-42dc-a529-554d3ed1ebec",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "600868b4-7597-406f-81be-444139ec3df9"
        },
        "item": {
          "id": "78e18567-1a14-466b-80ff-6bd6366762f8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bdcbd42b-8f0e-4902-ad03-9862bff38c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3552c06-659d-4339-92e7-a196c26bfc12",
        "cursor": {
          "ref": "90519b38-240d-495f-b169-e80df6f14067",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a427aee7-dc45-444e-960a-36fb14e18ba7"
        },
        "item": {
          "id": "b3552c06-659d-4339-92e7-a196c26bfc12",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "49e4b732-0b27-45fe-9fbe-20d98000acda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c846d41-0e1b-4db4-bd9c-ef41464d78ac",
        "cursor": {
          "ref": "3c6db608-7c2e-4d86-925e-b1a8ba9a09cc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "636897ac-0167-42ff-910d-7352f85ce62d"
        },
        "item": {
          "id": "0c846d41-0e1b-4db4-bd9c-ef41464d78ac",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9fc2f71f-aa02-437f-baed-864483060736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61329036-43b4-4ca8-9828-99f69de510b4",
        "cursor": {
          "ref": "9ca8efc8-8c64-4864-980e-2d5ea2565059",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a5461fd8-a090-474b-83ad-9a73fe51e56d"
        },
        "item": {
          "id": "61329036-43b4-4ca8-9828-99f69de510b4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "896eaa2a-433b-4d11-a5a0-efca936edc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07914715-8250-4755-b29f-c5ba340c2f8c",
        "cursor": {
          "ref": "d79a1711-14f6-4d9a-812d-48d785f5b143",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "86566c8c-3780-4bdf-bdf3-22249a3554d0"
        },
        "item": {
          "id": "07914715-8250-4755-b29f-c5ba340c2f8c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4038e940-03c5-4106-848e-2dbe6443fb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d32de7-a838-4e6b-a4fd-ec43b7c55a8a",
        "cursor": {
          "ref": "fa871fb8-c958-4127-9b48-a05b3837d27e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c1340b52-51c5-436f-810f-5e295c3648b7"
        },
        "item": {
          "id": "45d32de7-a838-4e6b-a4fd-ec43b7c55a8a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "93dd82d2-15d9-4895-a206-21526c39946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7278d5a-fed4-4778-b6cc-10a406a546ff",
        "cursor": {
          "ref": "ca57a1b1-8f92-4650-90c7-5a0e8ed94756",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "089f5fe3-6ee3-41ce-be40-f3325aa37453"
        },
        "item": {
          "id": "b7278d5a-fed4-4778-b6cc-10a406a546ff",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "00623f27-7467-4581-8d8b-4aa6764b832e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bed9299-e1a2-4d69-aa24-c429746d7a31",
        "cursor": {
          "ref": "efc30420-163d-4269-9bcc-726e3e18fa0d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "126e21cf-650f-494a-a6af-482f54f554df"
        },
        "item": {
          "id": "3bed9299-e1a2-4d69-aa24-c429746d7a31",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5577f685-4cf1-4ca2-bdc6-600d108306f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc9944b-3d2a-43aa-a77e-c06d3f0f06ef",
        "cursor": {
          "ref": "6d6ba992-4a6f-4af3-b710-6b09644fc672",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "440008e8-0e40-4f45-991a-21a0ef26b283"
        },
        "item": {
          "id": "fdc9944b-3d2a-43aa-a77e-c06d3f0f06ef",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b0a1b0a7-28bd-4af9-88c1-a606daec0295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06004297-9bb3-45f8-9579-fdfac45b6cb6",
        "cursor": {
          "ref": "e7010108-75cd-42bf-b4c1-6ce5c2f3eed0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "18d4a326-f461-421a-b9db-c2330a1f5d72"
        },
        "item": {
          "id": "06004297-9bb3-45f8-9579-fdfac45b6cb6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b690ad32-b479-4d8f-9d01-37753fcfe2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a02f83-40ac-4ad8-a833-ae4900c0f346",
        "cursor": {
          "ref": "8b73397f-da89-4593-84ac-26b991868f1f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "de1397b8-ebb5-47ac-8c99-4957b7ce9ca9"
        },
        "item": {
          "id": "42a02f83-40ac-4ad8-a833-ae4900c0f346",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9e565d50-20e3-44f1-aeb0-b4552b475725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a67009-f960-4df1-af44-40cdf5da347c",
        "cursor": {
          "ref": "d629ac52-34d6-45ea-8998-6a9eb8e97e2c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2548d00e-db92-4838-a6e2-62764580c391"
        },
        "item": {
          "id": "d7a67009-f960-4df1-af44-40cdf5da347c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0e39aee3-01bd-42c2-994f-bf7eb980c3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9872b357-b77c-49c7-95ac-3404a39f937c",
        "cursor": {
          "ref": "6c53df82-ca7b-4dfe-9ff3-bfe3607d6a96",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ebc786c1-8513-429a-bdb8-ecc535be41cb"
        },
        "item": {
          "id": "9872b357-b77c-49c7-95ac-3404a39f937c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "af4dea97-8905-442f-9956-165f39d4d4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cbc8ab-a0d7-46fe-b610-eadaf35a1641",
        "cursor": {
          "ref": "3191bf84-62b8-4991-b944-cfc68b979b80",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f1982f41-be74-4f9d-a720-52c3ebe913c3"
        },
        "item": {
          "id": "71cbc8ab-a0d7-46fe-b610-eadaf35a1641",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "da155d3c-343c-405e-814a-7462b864dff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd176c3c-f94f-4a5d-9576-1e95d16b1ede",
        "cursor": {
          "ref": "39b2fe5b-58e6-4654-973a-9c6bb96772d9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "694542ec-7f61-4cfd-9d77-901dce59c418"
        },
        "item": {
          "id": "dd176c3c-f94f-4a5d-9576-1e95d16b1ede",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "07f2b774-39da-4e65-bf9e-23a1e3f3d81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e69b24-0db9-45e9-9a2d-349679cf3b58",
        "cursor": {
          "ref": "486a3206-220d-4025-b678-bc55fb97fb6d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "49a24a1d-a9f6-46de-87ee-14dcf384a91d"
        },
        "item": {
          "id": "e7e69b24-0db9-45e9-9a2d-349679cf3b58",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cba19171-d3d7-42df-9391-057ab49f86d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18f402f-203e-47d8-b00d-92603d9b01c1",
        "cursor": {
          "ref": "0ecfbf38-e354-492a-bdb7-fa616ae33cd0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "73ca9fe5-a0b1-4de6-99bd-135f659e6ec4"
        },
        "item": {
          "id": "c18f402f-203e-47d8-b00d-92603d9b01c1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5bed028f-0b17-445d-b401-5bc828f2f455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf654dd-8c71-4ff4-97f7-5340e6275e58",
        "cursor": {
          "ref": "71f1b99c-8df2-4955-ab39-f99c89185a5b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d3b3aea5-a4d8-4a9a-b259-c410470917e4"
        },
        "item": {
          "id": "caf654dd-8c71-4ff4-97f7-5340e6275e58",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9f1e725a-d457-4cc1-b7fa-b004b348beef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51672445-26ae-4f78-8990-f840e18c4be5",
        "cursor": {
          "ref": "c4b62085-7103-49c0-bb1a-8cbf21a553d4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "602d7e5d-b95c-4164-8e9b-2ff8007baaa0"
        },
        "item": {
          "id": "51672445-26ae-4f78-8990-f840e18c4be5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "91d5e888-a8e2-4bae-b2d1-1925f962befa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b400f32d-794c-4d9c-b38a-a99590728d3d",
        "cursor": {
          "ref": "4a9b5adb-f66c-4092-bb19-9c1d607ace8c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "388608c5-b655-4594-8828-8f2ee5e10bc7"
        },
        "item": {
          "id": "b400f32d-794c-4d9c-b38a-a99590728d3d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7cef613e-8915-41c4-bf23-fc7fcb2bf78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a2a27b-1f25-41ed-9619-877a6c83b7b1",
        "cursor": {
          "ref": "fd9c4097-1638-495c-9573-2c7a4669b95f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5f80d059-ca64-4e93-b0a5-ab35a0db5d97"
        },
        "item": {
          "id": "85a2a27b-1f25-41ed-9619-877a6c83b7b1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fbb26458-fbb8-41f6-a9a6-ee6518b9c00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6846e8a4-5739-4b0b-bbaf-16334d77e9e2",
        "cursor": {
          "ref": "fef1fd8d-2b65-4209-8a17-6016c859d5c1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "45c5140b-3c6b-4c2f-b685-d568bb8485cc"
        },
        "item": {
          "id": "6846e8a4-5739-4b0b-bbaf-16334d77e9e2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "22df9b4d-28c8-45d4-a025-b86c0cdbd0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3178ba4-43e2-4246-8fee-1c6c3ba230cc",
        "cursor": {
          "ref": "a690f9a7-ec05-47c0-813e-5c1c731e9953",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e68005a0-7e6d-4a86-bc09-275c103abfb1"
        },
        "item": {
          "id": "f3178ba4-43e2-4246-8fee-1c6c3ba230cc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "94dacd8d-472c-4708-891d-1d9c241715cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a9e2bc-bd39-40d0-b2a9-7b7f1cb8ad55",
        "cursor": {
          "ref": "ce760eb2-e2e2-4d6e-962e-92937c900109",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ea72689a-b64a-4582-bfd7-fc13f58d7235"
        },
        "item": {
          "id": "c9a9e2bc-bd39-40d0-b2a9-7b7f1cb8ad55",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dda2cb72-aca0-4331-8200-0b3985759087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670fe309-6e00-4462-9e61-77f77f47cea3",
        "cursor": {
          "ref": "e6c9cdbd-8e88-416e-8aaa-b169bcbf724d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a6db286a-0e24-407a-96b6-c24b15493700"
        },
        "item": {
          "id": "670fe309-6e00-4462-9e61-77f77f47cea3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d39aa9f2-b2f4-485a-91f9-cfebae4fb5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8be9b4-027d-43fa-bf6d-874239820747",
        "cursor": {
          "ref": "67a60056-02f1-48ce-8434-3410086345c8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3de62f2b-237a-4cf0-b906-63c2d613ff26"
        },
        "item": {
          "id": "2a8be9b4-027d-43fa-bf6d-874239820747",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ab781bd1-02af-4e12-9493-b361d73b1f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d411f54-81d0-4a0a-8a1f-e52cfe060377",
        "cursor": {
          "ref": "f7846eae-e52f-4a8e-9a5f-4f872de63a92",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "616102cc-188c-47c8-950b-cf2b14a2e114"
        },
        "item": {
          "id": "2d411f54-81d0-4a0a-8a1f-e52cfe060377",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9fcb4ff8-377f-469d-ab10-79f2d746a657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1210,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3746cf-f73b-4a89-b528-bfe30ccd0a4a",
        "cursor": {
          "ref": "9a3672fc-fa6f-4f01-95d2-b49d2e74f876",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "55c11a4d-4fc4-4c58-a0e3-8f358f17a70b"
        },
        "item": {
          "id": "fe3746cf-f73b-4a89-b528-bfe30ccd0a4a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fe6ed506-69be-444b-bc0a-4f94b1f041a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1304,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032500d1-65a7-4caf-9fcc-c73f930eb538",
        "cursor": {
          "ref": "c1905661-dfa2-40fa-ac41-a299d8a641e2",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3737aa92-2584-4f73-8b9c-b803b017350b"
        },
        "item": {
          "id": "032500d1-65a7-4caf-9fcc-c73f930eb538",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8a4ec863-5651-489e-9abc-57eafbe67b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1609,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267c46ca-f52e-4ebe-8ed8-edcee306ee8d",
        "cursor": {
          "ref": "bfd0270e-34d8-41de-829a-aa905382f8ab",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a1806f2-f5ef-47ce-ab48-1983aef74a38"
        },
        "item": {
          "id": "267c46ca-f52e-4ebe-8ed8-edcee306ee8d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "976a651e-3302-41a4-bb75-e0348f67fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1367,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db2ffe6-149f-4f90-93cf-41cdff4a4868",
        "cursor": {
          "ref": "1cf8f4ea-ef45-4243-ab96-8c0865144c6f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0628039a-5e9a-4bb8-837f-2f58b9bab551"
        },
        "item": {
          "id": "0db2ffe6-149f-4f90-93cf-41cdff4a4868",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f51449fb-f322-4ff2-adb1-9c4430c61319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378b9fd7-1e3a-4349-b763-63bb7895510b",
        "cursor": {
          "ref": "df602c49-004a-4e5a-9dbd-f99baeeceee0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fcd78383-8468-44d7-aeda-cf0028e9b1ef"
        },
        "item": {
          "id": "378b9fd7-1e3a-4349-b763-63bb7895510b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f8b6d8cf-a963-43c9-9b69-b24ce5e41dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f308e66-9ce8-4721-9ad7-26d9f8a101ea",
        "cursor": {
          "ref": "06262cf8-3756-4ed3-a394-ea25acd02492",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a74d4977-d067-4c62-b675-d4aeae6c2c0c"
        },
        "item": {
          "id": "4f308e66-9ce8-4721-9ad7-26d9f8a101ea",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8b2c7d48-80c6-4e75-95eb-41047bf73de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ea8338-5a6e-4c00-b72e-1a0092cd097f",
        "cursor": {
          "ref": "b374a6f4-6296-41f0-99cf-758c049baa90",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "44315a2c-72d0-4b04-8c8e-aae4364b357f"
        },
        "item": {
          "id": "d0ea8338-5a6e-4c00-b72e-1a0092cd097f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "46f8d2ae-3aab-43ab-bb87-7469566cbfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903c5df9-27d8-499c-b13d-0429b3851e29",
        "cursor": {
          "ref": "8a846aad-02d5-470c-9929-a3e734088870",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b36e5dd9-1163-4de8-ae98-fbd58dfaaa69"
        },
        "item": {
          "id": "903c5df9-27d8-499c-b13d-0429b3851e29",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9c26e098-45d1-4140-91fd-d592c3b693b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc2c980-bf1f-4bb4-b3c5-90baa1a972dc",
        "cursor": {
          "ref": "39056fec-67a9-4f60-91a0-9d3cf7997df9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3ce73c4c-c94f-4a8f-95a2-bad04563ae0e"
        },
        "item": {
          "id": "bfc2c980-bf1f-4bb4-b3c5-90baa1a972dc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0ff32628-14e8-46d6-825a-06851e49dd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257f3986-7b6b-4ab5-8470-99fcb1e0b5b8",
        "cursor": {
          "ref": "ad0c3a05-a61f-4574-a510-a0207d362b80",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5c0ccbb5-fde2-4719-b353-7fd640d58ef9"
        },
        "item": {
          "id": "257f3986-7b6b-4ab5-8470-99fcb1e0b5b8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f19f5940-d0c8-4252-984c-757752d351d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4195541-cfd2-4f75-bbf1-00098b314a7d",
        "cursor": {
          "ref": "dcf56ee9-f6b9-4c03-93d9-8a2f1a30ea84",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8156ab7-028e-4819-a723-471f8bdf7613"
        },
        "item": {
          "id": "b4195541-cfd2-4f75-bbf1-00098b314a7d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d67019f8-c454-4147-a42f-2ed6ba6a503a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71044a10-5297-4164-9eca-4df90314ddba",
        "cursor": {
          "ref": "d3998501-03ec-49e1-b746-1ef6b64d4640",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4966b4ca-dfb0-451e-b50c-04c657d9c906"
        },
        "item": {
          "id": "71044a10-5297-4164-9eca-4df90314ddba",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "765a0ca6-89fd-476e-8bab-a3964094d51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cef92c-c2f2-4a4c-9e98-8d32df385529",
        "cursor": {
          "ref": "35b54554-ad26-49bc-9c04-1b377a15b93a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a049e884-d0e8-4ca8-8557-5cdb3fa4b011"
        },
        "item": {
          "id": "80cef92c-c2f2-4a4c-9e98-8d32df385529",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "16af607a-8f38-4b67-a4eb-e07e034e41f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e60eb8-a153-499f-951a-bdb4f8f6c841",
        "cursor": {
          "ref": "1433b20d-f79c-4d3c-b18d-bb8326884aa3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a485bea4-d668-42bb-8d90-ccf3c44aaa43"
        },
        "item": {
          "id": "17e60eb8-a153-499f-951a-bdb4f8f6c841",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d9682e4f-4ea9-44c3-92f2-be481c594f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7b64fe-ff33-43ae-ba60-3c65561c88e4",
        "cursor": {
          "ref": "2410c79e-f1aa-46c1-9403-3e836dc14e9f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1b97b7a8-d16c-4074-a087-8725183703c3"
        },
        "item": {
          "id": "dc7b64fe-ff33-43ae-ba60-3c65561c88e4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6f5e7492-bd59-4352-93db-dfd7f5cfffc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d9dc44-af8d-420a-bf50-16f8ffea8f77",
        "cursor": {
          "ref": "1bd1bfd3-040d-44c6-9b3a-e9e5d346740a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bab235a6-15b0-4131-8569-3f8e624c5169"
        },
        "item": {
          "id": "c2d9dc44-af8d-420a-bf50-16f8ffea8f77",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c2252f80-1856-484c-a039-60b3d35a2ea7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 372,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c3e29f-9018-4d8d-bce6-a5d613f13627",
        "cursor": {
          "ref": "f9334625-4edb-4eec-b153-b9534c1d30d7",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "20c2e33d-2754-43ae-be65-f93ce8ca9a74"
        },
        "item": {
          "id": "f4c3e29f-9018-4d8d-bce6-a5d613f13627",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bf951788-f809-4e18-9fcb-9f50ef4edf7b",
          "status": "OK",
          "code": 200,
          "responseTime": 486,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77a5d82-fd35-463f-873a-d3548d15dcf0",
        "cursor": {
          "ref": "0075cb33-cbf8-49b5-8154-b52012fad641",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dc8f7124-3944-4011-be4e-f5f6a8a909ad"
        },
        "item": {
          "id": "e77a5d82-fd35-463f-873a-d3548d15dcf0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "95af8d07-7ddb-48bf-86a7-8503c6f40198",
          "status": "OK",
          "code": 200,
          "responseTime": 2104,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "764d7702-2b7b-4885-b7dd-241f96339f1d",
        "cursor": {
          "ref": "69a1d41a-c27c-4c5f-b0e5-1805c34c5cb1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "02461a36-4f42-4062-a324-de564f5123d3"
        },
        "item": {
          "id": "764d7702-2b7b-4885-b7dd-241f96339f1d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a61e13b5-4cc0-4f5d-a219-29cfcd5c6766",
          "status": "OK",
          "code": 200,
          "responseTime": 1745,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d2a0b7-fe22-4c35-906b-9bd5605d5e33",
        "cursor": {
          "ref": "e77b567b-216e-40bd-b2ea-1e4075a5b5c6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8cdf0be7-95ab-4440-8da7-5f519170da4f"
        },
        "item": {
          "id": "a2d2a0b7-fe22-4c35-906b-9bd5605d5e33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0eeaccb0-6e69-4590-9833-4436ff189dd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d2a0b7-fe22-4c35-906b-9bd5605d5e33",
        "cursor": {
          "ref": "e77b567b-216e-40bd-b2ea-1e4075a5b5c6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8cdf0be7-95ab-4440-8da7-5f519170da4f"
        },
        "item": {
          "id": "a2d2a0b7-fe22-4c35-906b-9bd5605d5e33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0eeaccb0-6e69-4590-9833-4436ff189dd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d2a0b7-fe22-4c35-906b-9bd5605d5e33",
        "cursor": {
          "ref": "e77b567b-216e-40bd-b2ea-1e4075a5b5c6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8cdf0be7-95ab-4440-8da7-5f519170da4f"
        },
        "item": {
          "id": "a2d2a0b7-fe22-4c35-906b-9bd5605d5e33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0eeaccb0-6e69-4590-9833-4436ff189dd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596e380b-1ff3-4502-9dfe-595aad3e619f",
        "cursor": {
          "ref": "a22db4cd-377a-406e-b1e1-e5e815842738",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1cae82f5-2f9d-4e9d-af7a-e723220054f1"
        },
        "item": {
          "id": "596e380b-1ff3-4502-9dfe-595aad3e619f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "be185308-c55a-4285-9b8d-e31ccba199ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 368,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53497e6a-d246-4f00-a249-fc98109e8187",
        "cursor": {
          "ref": "1119fa05-4d55-4c7a-94e7-06d433903163",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8f1162a7-765a-4b94-96c3-dca3cc1185b3"
        },
        "item": {
          "id": "53497e6a-d246-4f00-a249-fc98109e8187",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8fa91e17-e597-4203-adaa-2a47e9a1756d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53497e6a-d246-4f00-a249-fc98109e8187",
        "cursor": {
          "ref": "1119fa05-4d55-4c7a-94e7-06d433903163",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8f1162a7-765a-4b94-96c3-dca3cc1185b3"
        },
        "item": {
          "id": "53497e6a-d246-4f00-a249-fc98109e8187",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8fa91e17-e597-4203-adaa-2a47e9a1756d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96345118-9cce-404b-b606-f71bc1d3b407",
        "cursor": {
          "ref": "9e90fe9a-516b-4a8d-baf6-3ad9542a4dbf",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "da5fcf45-eee6-4583-bb87-7bc154bc0458"
        },
        "item": {
          "id": "96345118-9cce-404b-b606-f71bc1d3b407",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c50ae47e-29d1-4f11-a200-9374c019f29c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 621,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f163a3-60ef-457b-a67a-af7bf0791a4a",
        "cursor": {
          "ref": "42a2cc80-a152-4e71-a43d-93d02063cf40",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ce003fd1-3289-4efd-aaf0-05c7bb6ea7f0"
        },
        "item": {
          "id": "31f163a3-60ef-457b-a67a-af7bf0791a4a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "375b1baf-fb9e-4ab0-a357-87e256c3f10d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f163a3-60ef-457b-a67a-af7bf0791a4a",
        "cursor": {
          "ref": "42a2cc80-a152-4e71-a43d-93d02063cf40",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ce003fd1-3289-4efd-aaf0-05c7bb6ea7f0"
        },
        "item": {
          "id": "31f163a3-60ef-457b-a67a-af7bf0791a4a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "375b1baf-fb9e-4ab0-a357-87e256c3f10d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76da280c-58bc-43b7-abf7-2111d663805e",
        "cursor": {
          "ref": "0289a109-4389-475c-957e-c89243b97bc6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9f4fe906-c095-4b32-aadc-73a382c326c2"
        },
        "item": {
          "id": "76da280c-58bc-43b7-abf7-2111d663805e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "649e29ed-72f3-4de0-b9a3-fce7b3c28ab6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 759,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}