{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7e6f678e-8664-444a-8629-3cab417e3c67",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dd14f200-b2e7-4013-80ff-e29658d64a53",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af63e68e-6651-484f-a850-ceb22d9c1247",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9c2a7c4-8593-48bf-bc3c-085f93af8223"
                }
              }
            ]
          },
          {
            "id": "972e4428-6eed-425f-8a0f-8abe3cbb40a5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4cd424ca-8319-4178-828e-b12d19d8d3aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff71a61e-7f62-47c8-8b39-8326a92701c0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a915a353-b62c-41b7-a7a5-e734c287fe91",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2941f114-b906-479c-bce7-344a2c35a7be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c53bd201-4d06-44e0-9252-f0b8eae21d9e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d625b5db-bf4e-459a-9e84-13861d3c3b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e4b7309-0f7d-43fd-8750-c11ed671bc8f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0081bc1f-1d11-479f-bfe6-5bdce98ca2ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "151a3d9e-7f5c-4665-9fb0-56741550a4e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "714188b7-235a-4e3c-a097-a9c8a9c44520",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee171b45-9eec-462b-9669-ff85fa00bb93"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32c7007f-91a2-4ec0-8704-bcc81f3abcbf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e0499da7-4a44-4a0c-9519-f6cdf68a3d40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0580205e-8d2c-43ae-bc5d-1eef280baffd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b1a18cc-1418-4184-b475-319a3d353e20"
            }
          }
        ]
      },
      {
        "id": "640585c5-ae48-4fb9-baf4-d5e994bc6e12",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8e68bfdd-25b3-43d9-aece-31e58e3ede10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdd61b6d-76a5-4549-8cfa-58bfc2f8af54",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "004515da-b954-41f1-b144-ce0d61637cc9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3edb81-732a-412c-a662-e816d990eb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2886d6c-4fc9-4a6f-99e0-cb8939fa275d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04de6577-1a6a-49d9-a778-d510a4f45cac",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06990b32-adb1-4590-8535-f90ea84273b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b4565a5-c90b-4c16-8dc4-2d0a6ccc676e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a43eac-f0cf-483f-a3bf-42e79e473cb8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe068e1-7987-4afc-bee2-26158bad82db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "137cb332-a570-4ea3-b6ec-05f8eb1f071b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "81ba01cb-63c2-4163-ab9b-78a1ce564b58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "210acffd-64f6-45e8-b483-572980aaa51d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c45fe1e-f650-49b3-a06f-0ec146b3c1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f3d2caf-2480-4859-8550-872258ac9fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094cc969-fdc6-41c7-814f-bc19ca46fa16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5586f9a-bc68-41b1-ae6c-485f29b3e6bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fadf5c91-13d7-4681-97c0-16e5c2a5b5da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "122d8c98-d30f-4577-9b9d-0caf12972a55",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02e8608d-2503-4c1a-80d4-b896aedbbf21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e5cd9731-5472-42b9-9001-6ec9b7f19e51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff3ab2ae-7a54-4ea6-acd9-2cfcc02ee21f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "89a0f027-4039-4caf-9e8c-9e5cbc87a478"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fef1308-0033-44a3-ad8e-5b709ddf1032",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "618c3815-9940-4303-b21a-6ab60af1573b"
            }
          }
        ]
      },
      {
        "id": "ca6dc62f-a260-4a55-94f1-a32d1f62a7fe",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fe238cbe-3c8e-47ed-8818-7880d7ba6cb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e22bc9b2-5c38-49dd-a43c-fe23bd81c2e3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8a21eba4-9a4e-4a88-9c64-2fcd000e507e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18a74aa-864b-4c33-b39b-16f6106497d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b99a056-68e0-440c-afd5-b73cae409ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e7758e-b933-4fdc-b1ee-ed4c8300a758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2de0a5f0-e6e3-49ce-b533-7c26a1a4dae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f7ae94-7439-41ad-9c6b-1b3759ba20af",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7af0b14-14ac-41ec-83d5-07fc8aa973f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35670fd-88c2-4a57-bf5d-83c152a98e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8849dc7-9e9f-4554-b756-f3a745117523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "438c5b4b-e5a2-4124-b2fb-30a6e402dac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333882dd-d145-4cc0-9bcc-9a2d4143aa47",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72098bf-9005-4dfa-8845-5b33a04c9bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1874c11d-7acd-43e3-b570-04e0885835ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c39c55-db00-422d-b801-9f12bde05070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82e4d1d6-3b2c-4fe3-a47c-f1e365e9d045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8c6bde-1f1f-4ce8-91a0-c5292d51b60c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c173946-9b6e-4539-b1e0-ed48798f5ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5438310f-354f-49b3-86fb-105b058dee34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa9b06d-bc6b-4662-8c3f-70124470da63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33cdb863-abcd-4159-a9f8-bbdd1236b247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f901eedb-fed5-4673-bde7-9f4cca9e0ac1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea63abf-6b81-4206-b7fe-ed6b14b05b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19babe47-81ff-493e-82ea-c5d7a5944852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00ace76-8cc4-4861-995f-8bb56ef94bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d8a9b8b-32d9-4cbe-a592-a4ef801b939b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c028a590-947e-4569-b224-2398225153df",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e158600-5bfb-4b39-843b-8aeb41ff1aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669f506c-186e-4d15-93e6-056222c40ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846b4072-ceab-4ce3-9f76-1c93dadd05a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a0926d-68d3-4607-96b2-9badc71c6786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df9da25-0357-443a-b95e-b98d8909372b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e0f2cb-5f65-4040-ba61-5526b30106af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28652ed-7633-4251-af1f-6fd4d59b1e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62966634-884b-4a21-96de-026518ece9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53adf413-9098-43f4-9553-e8c43971551c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad3585e-74b4-400f-9a07-427e14173313",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab9f2bc-2ef5-4ea6-b671-a9cc94e08823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12f9979-4c33-44fb-bb65-b90be1135326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba58da8-9c69-483f-97be-7b2f8e03a03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "794e8765-7e68-40f0-b939-f25c2d73163e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d18f24c-96f3-4253-ac67-af86683a834b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4586bac5-76e7-4b51-a46b-6667c27d0a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cc90c5-6129-46b4-892f-a58d233662d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698867f1-6591-4750-8250-222c499fd351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f35f6b8-1c3a-4dd1-9ec3-fcb8fe995cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eef64f-f059-4854-87e5-e5af12e3af8f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3564b6d2-06cb-4ebc-b0bf-f7554188da21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c6d51f-a98d-4e24-b3e5-6a19d10ee453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71c52bb-c493-483c-a835-451d381c867c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a1bb45-f8b5-493c-9cca-3a8faaa5dd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da441dd7-fdc5-4c57-af3b-090c56aded27",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e2a9ce-20b2-45fb-863d-b624fa6d955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a244eacb-7216-4696-b1f8-f49a993a0b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2762cd-2ff9-4032-a98e-67ca62f1cac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94460fa5-21e4-475e-bfac-87ef198177bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd010366-662d-4b3d-b141-34674b9df9b7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df83c766-3ceb-4f4a-aa5b-5772613d4ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b885ca-7f25-4cf1-b429-4c01417812df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709b3e3c-85ef-415b-918d-279d4d4469e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d79b3b65-af13-4ba9-bcfe-868a44d77683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91de2226-1a17-42ba-8145-d009e7665d6e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd26696-538f-41ef-8848-979941627c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d016dfc8-7dd3-4710-aeb6-9cd906a206f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bba3154-2f42-4ae6-852b-67605292b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95a4c5fb-875c-483c-8e29-cc072f2b44d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f31ffee-8c40-48fa-b4a3-699bc5723a63",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6371701-6602-4555-9357-38b771f144dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e057556-51d9-404a-a733-989f302a2304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce346a8b-a5d7-4472-8a0e-d7814147b149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a336ec7-5848-4e0c-892c-3322512cbbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd94d1d2-2891-4335-a787-e7a83c414699",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233354e8-e64a-4255-b2aa-e4f8e05f77c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ef50e8-12f7-4675-82ce-fa4c513bc16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35c18ab-5f28-4b31-aa56-e1739da4a0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0718b647-f0e1-4d69-a21c-943c056adc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1510f78-67a8-43a0-9bf5-319b450cc428",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d44b4c-dea6-4f70-9886-34dbbc5a716e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624e4bcb-90ff-4a25-ac42-49b93a4ba9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d90f0e5-5d9a-4cf3-83f6-955dcab51efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa251ad9-ada4-4857-a4f6-fba0bae7bd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1e0cb5-26f7-42d7-bcb1-e9c7cccf38e5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713a8724-f31e-4c4f-b9c3-4f865f88c511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5925f4d0-7ce2-43ac-9d25-3b6cc01ca568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c01775-9871-452e-8805-133eb114c079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7c9a0e2-dc8a-4021-abea-718329809133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb4d5d5-5617-4d96-b2fd-516d22822721",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5cf05b-127e-4909-a614-8f43744f765b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf8f722-c2c6-40d5-98d2-fd6ea86dc5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dffacae-381c-4d10-86f7-aa8be14e6405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c0b829-ddbf-4010-8975-65de850259e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c729f6-615a-4143-a509-5241a8c7b7a9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcb279e-b573-442c-8462-62b9d9c20f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57be7d67-2387-491d-b25b-1834d4731497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7b645e-5856-45d8-bb5b-4fed31f0737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7da4870a-b883-4702-9e61-c8817a053f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748075e4-7ccb-4133-84cb-49bf41477e7e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a17eca2-81ea-4cb4-b335-ca1256dbcfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a9ee8b-e806-4a5a-b936-e0953dcdd221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3ed742-6195-4df6-8990-fdc7006488f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "406b45d7-fda3-4f9d-b14e-1a68505d9d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9169dd-cb4b-42d0-adfe-2dc40c8c8b79",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09f9246-55c7-4ecc-892c-68c6ded548ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493fd985-23ea-4d84-8e93-06ec7f94f0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a8af69-abc1-4993-bbb1-e97f1af3f8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35cbec1e-eb6b-45e7-a098-9020e5533f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf80ddb1-1593-4672-b96f-4b881b031353",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed182c2-055f-49c4-bcc6-d4b06d4df63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a645cf-717f-49e6-9996-b6540ae65177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e01870-dabd-40e4-b11b-9b51372d1bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1233e420-54af-4eb0-81ad-05bb74b005c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5030b7ff-5f04-4567-9ffe-64aee1f4f46b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398421c7-04d5-44d2-b3e5-4d60cd494a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b128f9a-89f0-438e-857d-de1a14050048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79aeb7f5-eb33-4286-b20f-29822f9d697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b89ead0-c6e9-45dc-a153-0c6c37d27365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13220824-0fd6-4e27-a843-fa1c9e84babe",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaa090d-5577-4113-bc11-0602ba3080b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a0fb12-2a97-47f7-8893-a3e9d3375bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f27e9d-9c29-40dc-82d1-4ca4f9f21bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10fb4101-aa49-4105-bd4c-d0d99a6c3266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5f67bf-16b6-45c6-984d-23d78e471700",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48efc033-71dd-4934-8031-97b27eebc91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0109ce84-b16f-4641-877e-e5d58d44973b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913ea409-e864-4376-afdd-ae7d6a662e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3889477-69d7-4883-b4b1-6874c753f9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29553d73-75df-4afe-8895-f69482faa68f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d236d8c-42bb-4985-82a1-1ff02d679014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2bc618-9057-4607-9182-d5daee8c8b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9951749c-18bf-4fde-8ae8-069eac7880da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e315c09d-1a19-4369-b572-28abaafccd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da67f603-dcac-48a5-bcaf-efbe01599342",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dad735-0516-4ec7-a116-49d6c8d1f773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931f9e22-284e-44d7-8031-857a55c466b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fea8c72-194a-4698-85c6-4cc3686c0a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9091ce-e2e6-4b70-9317-f100983146a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3180afd-17a4-4328-b288-cfebf0332731",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecb7792-8a9c-4150-a7eb-b73d70a24e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ab494e-3c54-4294-91bd-8754f0969c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d8b3f6-9a1a-4d66-b976-8cd2550bac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8beee6-1237-418e-9d8e-371a00affd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fab75fc-0918-405f-91eb-bb8015ae9fd0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faa8cc2-5f2a-4558-bdae-68e0e4a9697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41886a3d-7d23-4cb7-ba32-ba185e2d3620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d87d71e-3017-414d-94cb-eb2d070be788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "616211e5-eb96-46d7-909b-c474beab6bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a07d30d-992b-4ce3-96e0-d2e9c4cada86",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8cd485-9301-479b-98e4-a3af69ae0798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de9fe1a-f7f2-48bd-857e-a44030c3595e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba982d6-d1df-4cb8-999e-9dc1a88e1e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9063454-6bd1-4b28-a1f0-588bcafb175c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2f0b5c-51f5-4dfe-8f90-607fa599f5e2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967c89e2-ad78-4f21-b539-46a7e194bbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debc4f37-01b3-4252-8f54-72ef8af114e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa55a4c-034a-495b-a9ee-b0af0005a95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5bf67f-4b2b-4ec8-8d8a-01b01b977548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1161ab-df3f-486d-85e1-328758d3a018",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af92c229-7e99-4b24-a903-46ce4adfd590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f722a0-baf2-4cb3-b899-ed269dc4f144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f25b19-85a6-456f-ac74-a24059be86f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcf8e51-c534-4223-be99-47074a3b0443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b40f898-4003-491c-8586-1dc5b967ee72",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10055c74-a66d-4bb0-9946-5fbf5b0cd8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a706df1-bc99-4b54-afe8-afc8864ce916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22829e9-c3ae-4401-a879-da894d678910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "813a790f-7fe9-4519-95c1-8b0f544bbcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fed71f-7122-4a50-bbbf-dac64d8cddbd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72a0ff8-02dd-4e33-a04e-edc966c536c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ea1562-d8f6-4ecd-8342-9128800be50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dda1fe7-4d06-4a5c-8d7a-319dfb7f77e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "913cad7f-a9a4-4f45-9236-5fcfdfcca192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4231a16e-6ef0-4cfa-b4f1-e365aceaaf94",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5befe0-3e1d-468a-a398-02b71c99fdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01d84c3-54ce-477f-b208-23fa770f0053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9edcbc0-f466-4b8c-bae1-faa680c9a07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4a27eb0a-edf4-477d-aa0c-fa444ea93d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555026b8-3178-4b20-933e-7d30e439693f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c505deb-874b-4ef1-82d6-baf65204378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ebfd441-e53b-457a-bf84-3402ad15bee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d137f9-052e-4f00-b95c-ef1a046a6df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e288d700-654c-41d8-8e02-b3c783a5d853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae68919-4912-4d6c-8f70-29fa371a32da",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb72c25-8426-42a5-9ea4-204a5eccc33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6de77f9-a2fa-49e9-9bfe-44d2da440a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45151510-3d43-43b6-b8dd-8df1eada1b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c8b0a7-52f5-4520-9180-31551afd8177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a6b0a0-f34f-4e53-a8a0-7c0faac777a1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a2b643-ac6e-4daf-a740-4ed71dec1d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c71392-f59a-4558-8b8d-01d279b954b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ffe6a6-a268-4c1d-b3c9-cb81a5278729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd0d5c3-beb3-4852-b410-de4913f0b218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bedcba-fb5b-4ded-bdad-d4e8f3d06868",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46e42dc-b4b9-4472-9d9b-100f7d60726c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dfe0e1-91d6-40f2-bdc2-205fb566e31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4794f7-7938-4f77-bb87-d5f5fb10f5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68072e4-d112-4506-9a41-dc2aec797b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421a6327-c241-496e-8129-b9cf435c7d48",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939b0d71-8d68-4646-bc3b-c98d739e6c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c080fee-8564-4c4b-8a61-ff30f587ed95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a284e400-05fe-4a0d-86eb-c21468b2072a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28bfaa2a-d825-4251-baba-5c07474fafd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e565424c-ddb2-46db-bdf9-409463443609",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33aaddbc-d993-4f57-9923-df6261f1bccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def58b0b-6c09-4cd6-8ede-c94da1e107ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab9449f-b603-4e9c-a5a6-69021a91bb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e31814d2-b15d-4017-8fc4-1b43a1f7a6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39c56ed-2cbc-4902-8de6-c39d9f93a9e9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdfbd46-a431-4b2b-8bc0-4b681da433b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e183f4-58f3-4c23-a344-be3d1672785b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba61c904-7440-4a70-88a3-328772bdab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7725bfc8-e9c5-4961-97da-18d643a2b8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cfe15d-45b0-4409-8c77-6373b873d642",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3349c703-60d6-4110-bc03-373a5ffbb818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097ed9f4-4b10-4cbc-9390-1d94c4ca551e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67550b4e-76d1-4b63-a404-a6b10d355fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6119767b-54db-4c1a-b843-3170813db131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e68d29-fee1-49cc-8f9e-2e8ff0d8ac3f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f81428-bb69-45da-accd-8c231362886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef1e2c2-992c-4827-8af9-a7d587ee4c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33f111f-138a-4a5a-ae89-86725aaf3980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c374b748-06c7-4749-8b2c-6b0a1673753d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68304a6d-8fb5-4935-9453-04a6843363d7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c073c79e-30a9-4cdf-82d8-4fae441a004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffa753a-cf7b-4c50-9b91-cd2b2fa3cc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891c96ca-e71d-418d-b04f-e82eb08e2ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c648aadd-394e-4d1c-9475-f7645424856a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c428d386-e961-44df-975e-974c384cb891",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275d3409-9313-4069-a5ef-d485ed3912c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0331b5-5473-4f26-b084-a8ceafa0798c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba07e9e-366a-4fad-a73f-7c41aa676c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7640a784-4f20-4592-b767-a62b46c0a07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f316d0e5-68d3-4520-9949-9e2e97119970",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eeb1f0-2b24-44b3-87ec-b2459f151313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbecb6cf-fb70-44e8-b217-e1b5eb79901d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce12bb04-8040-4be5-9ddc-1a6dbbb6fac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "701cd05b-143a-4e3a-b508-f6d161753247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6290e4da-bb2e-40d8-964e-f025f541a36e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4afe7be-49de-4082-a55c-736b60888a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b162693f-131b-49c7-afa2-86adcf721ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caf12cd-e6c8-4eaf-8083-42ae3afd12e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dd5d83-179d-4549-b3e4-daaec25bbb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69c7173-9799-41bc-8c5b-8d27a33ece38",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c906f1e-188f-4da9-8432-c3cf26d7e7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47713fa6-a2b4-43df-a1b9-b3c8077da0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c234c64c-92e2-4cd9-a6c1-cd34967a18aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37565da7-a43f-4fdd-b072-adbf41d6a4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e4d7f7-deb6-4076-9317-4f4808226038",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72abc19-4be7-49db-8ec3-31cafd3b092e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900fe002-ee14-4df6-9af3-9e588282a535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a59e7d2-29fd-4770-b093-f9b78abefaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40d49da0-3e11-4b44-a389-ea0a0022033b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7462d279-4b99-4e89-b3f0-0725bf2c5349",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cec127-6c7f-4128-89be-444a86c4d086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbb8612-e142-4191-9140-a5a4b3065b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69889a76-ecf2-4a2b-a23a-edcd9fb2c778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "61f4465e-1ff5-4bf9-aa6f-e142d69e06a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31c86e5-5a24-425a-ba5c-6dabac4025be",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e4bae9-e97e-4a0e-bb82-b176572b5f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4104a6a4-5fb5-4437-9066-dfeeaee31bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694b8820-0785-454b-b5f9-5f9c03c13367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea374a46-6f08-44cc-a4ee-45c5243da7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff08f306-c6cd-4944-bbda-0c7b5d31e671",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6372bc58-8aa0-4c95-ab92-a188fa381bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee236d2-e85f-46a1-ba7c-ee3bd97e54f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1161c00e-43c6-4351-8ca6-eac220c1783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "742c9fe9-36b1-4d62-8850-7557bc67b69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bfd84c-fb53-4054-ab1d-6e36d5dc5650",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994fb788-28d7-4b27-b9fd-29b8d78e4c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b984a155-75e3-4743-a473-88ed71439d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d497a11-3bf7-4e72-9247-cc0987747ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc28cb61-60dc-41a2-b97f-719a7e2d9f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acc5c14-b8d0-4e09-bccc-a55ac3ec9e4e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4baf0f38-2fd0-4cb3-b32b-dfb25bec91bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a84d7e6-3227-4c58-bc4e-bbb4c2daaedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7016534f-bf2e-41b7-b28f-77e029834e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20e78a0-dd29-447f-8c74-ff8557200508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4cbbf2-d9ea-4be6-93cc-547f51962ca9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d93989-40ac-4b3e-b647-90ed01aa3e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d00ea29-8042-431d-985d-4bc01c10dfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85387a2-6b88-4643-8b58-43cbcf419353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c8acb4c9-16ae-4bd6-a5c5-8eca9e45c3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67822845-982e-4a95-9be6-b18957fd5e8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301c82dc-54c1-47ca-8feb-a877400c413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10980be6-a13b-4f1a-82af-50c2974dad86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a66aa71-2f2e-43fb-9a40-cc435dd205a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7e5dfa-39ef-4332-a830-a238006e73c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1980a6cb-97c6-489d-9544-c6ea6089b55b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5099aa4d-1940-467e-b6aa-f858674c6594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f64113-1fe7-4c7d-a389-bc990b8a1537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163b55df-2f29-4584-a6c1-f8e3eed217c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7558dabd-466a-46c3-bea8-8bfd87eee61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae23f5b-79b1-4d3b-b363-ca07d7e8d036",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd0a65f-2817-4515-9e36-4dc50e3987e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b9bf4a-791e-4a4f-b77b-0d2c2a4103a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20968590-7174-431c-b9e4-86c7a3f01d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebce8fb-eaeb-4fd7-a3d0-ebf25944ac6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d060fd09-c474-474e-b2b5-dcd9b7201c0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2cbb60-dfae-4d52-a544-13eec3ddc0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894aa67a-ce3d-496b-82e0-83167097227a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eedc4c-d0d6-4c17-a70b-7a48bc5a98c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8eaf88a-4a31-4024-8d38-2b01d291dcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70eb0ab-0a5d-4f2e-9d05-a7d5af4572bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08949691-8a70-471a-acdf-53422ff8c2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8784c1ee-ba1e-418d-a959-c5dacb133091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f7e6a1-332b-44b7-a346-2aba19f2f6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf003760-204d-4add-8b16-cfa411622cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e881bdf-147a-42b9-9dc2-7cd434486cdf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5814ff8d-5205-420c-82db-8cd78d0cdba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6254b25a-43fc-410b-9e76-9b77562463cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7348e54-d722-4569-99fd-6e41a7d84857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0046512-872a-491a-b9c0-2cdb8aaebe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a58c44d-59d2-4649-8793-7f5ef1a0e87d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131f3496-57b8-4e0a-8859-8540441be57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee0e99f-f195-4ec0-899c-ddd1abe65a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc823493-7e19-4500-b22e-4bd6907dbd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e60739ad-eb7e-48b9-83a2-b8049e71e7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146b2b49-4bf9-4d3b-b069-de23094afb4e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5acef2a-2987-4bd2-8a73-51a0c53f8fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696652e3-4fae-42c3-bfcf-51f0d8548b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d018fb4-8c49-45bc-8d5e-7cb99e457f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77da4a5a-bf77-4ffe-ad71-fb3fb262381a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b9916b-5be9-41f6-97ab-390ea496bd01",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd97f94-fc88-464e-a05b-fee1e42cdf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c84e48e-c150-4f35-9db0-85286e097110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f51193-75e5-4ee6-95e7-a4200544304c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ed7088-58bc-44ad-aec7-4ec38469685f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25eeddd-8a0d-4dbe-9587-1a35417f4e44",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2eba1a4-d0df-4240-849c-4bae936d2273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8371e42c-3d95-4214-85c8-bb22cf046570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c902245-312f-4a6c-bdcc-c47f2485cf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a943a34-509a-4fbd-b115-97512ce8c3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c473f4cf-3db0-41c6-9651-ae42b45d48ea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3770969c-ab9d-4638-81c8-17319d81f666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac231528-d7bd-422b-a1d5-64b0873da0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25eb8be6-c0d6-4300-a0b9-e1255c06ff47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "293cd8f6-fabc-4002-9fcb-09b109750196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d67cf1-5bfe-49fb-b7e2-0c20ee11cac2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a45546-e6c9-45d2-a6d3-2e63aaf127f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a440b73-4b15-4a46-a94f-15caf36c762f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1006acf6-7503-4294-8519-9fa10e7a293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d22bd8-4653-4101-ab37-08efe0a135f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b430e9b7-1fb6-4350-892f-45c69a829a4b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97abac20-4db0-4777-9bd9-e6e03524099a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028f7cd3-c1db-4990-b244-2f74e1e96296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a427e14-7b05-4638-aac7-812ce03e361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0564b95-d992-4ab8-ab75-e2171747beea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea5a9a1-aa5c-4e2b-bfc8-313f1200f842",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e6f99c-31ec-4738-8e7a-f28df59ba971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd79d08-ba85-4b5d-8be3-c9871c860223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4367c9de-ea76-444e-9440-3fe16085e816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f77d07-0b34-4c1a-b50d-87b83cafe439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab7797d-1871-4750-91e7-04a2888d1362",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980b9516-4772-4e62-a6ec-12959d3bbba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c392bbd-1b13-408f-a283-7ddb4c2be080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5689b2d1-cb6d-4198-963a-d5dd3eded004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11fcf3dc-edc1-49b7-9aff-a6bddbce7a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a170104c-db2f-487a-b7e8-2cf26e643aa5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed7eb20-afd3-4dbd-8222-0f0e1415a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0627b4d0-d0c3-4a7f-9912-7c4e337b8b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403ca210-8289-49fa-a2b1-0b3848b637a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2afe900-4e08-4c86-9c6a-35d4771ca177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84aa0180-0c9f-48da-970d-b6247c82edf1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28171f2e-1216-495c-9d72-0a0b27032920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c68f24-310e-4e34-be88-ce5338eab1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f42bb66-2cf7-491e-8525-eec81ad99074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "323f122e-e7bb-4de2-b13b-448d07afd70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8e0703-b97d-42be-885f-c121e6ec1e5f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4f7751-2e5f-4e07-ab29-97d96b53d0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57865ac7-644b-408d-aab6-9ac3d27a8bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63029449-1c4e-4d61-a99e-56db022fdd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5cacab-90d2-42f5-8eb5-71fbd2e6fdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9303c289-2782-4073-9862-3d55b39e2354",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f0afa3-486f-415b-b792-5ccb0348dd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7696df0f-4db7-4102-8308-8396078a7b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d54c80f-3d03-44ff-9bdd-6d7e89678a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d394b16d-e15f-4f60-9d86-4b392dba275a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546cce6b-ecd0-469f-b009-494c84dde4a9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb51b53b-fd86-45d4-a0ea-d144c42e57d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c15711-438f-4823-902f-9600bd4d9500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48459b05-bec7-416f-b14d-efd26a0dd3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64dbcb82-be4b-40f4-84a0-0459ed4ed4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee5bccf-6165-42df-a9c8-527e050fb449",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bd2123-bbb2-4739-8326-3bcb00b560e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9582a0-c292-4006-a1ef-ead733b96ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2765cd60-9fcc-4b9a-9aa0-2c23eb53a1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e58ea6a-3d76-4c52-8ffe-0c8e13921e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccf168f-b06e-4ba0-bed3-f4206d1d30f7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df4e3f5-664f-4074-8d5e-2be7568bae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f71275f-3515-482e-ba32-7df84cee8518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd43195-a8bf-4eb0-9e46-97d7aa02a894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07fbd9d3-1d9c-4c30-a204-d5d16810f141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc6c37c-8923-41dc-a8e6-91dec5ab2fc4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b89e2a0-a9e0-43f8-9f0e-bc1522e934ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f480db5-d4bd-45fe-88f2-503bd8318e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc5ff38-8805-4661-b2e5-a675aa503339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b645282-1410-439c-b0d4-5a33380954dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4790555-8213-4f35-8132-e7cddc4a4b20",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074e5929-07c7-49ed-a390-95b97dec5765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f4bec7-bd50-4e3b-bdec-4b5e9ce52691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04388989-6e9e-4010-8ada-49fd70b41cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca20fbdb-aceb-4690-b383-83527a40479e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb4e2ed-d9f6-4abc-b5a5-57745e0b8e3e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968cf168-33dd-4eb8-baaa-2e5e59806b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8551a6-dc2e-489b-8b8c-bc9beccd02e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdccbcf-9910-4f32-bfd4-180485e99a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21746d68-4033-4837-bc0f-6a995d0f8a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdee132-f87a-42e4-b13e-fb853b815c46",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab0ffc6-90c5-437c-b099-002480c9bd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de77e2ff-e0a5-4ea2-b1af-15d04746e50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f900a7bb-3ae9-4f82-b153-5d43b037ba21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10fd279a-0571-48fa-a65e-df997d3021e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe7a1c0-e9c6-4673-a0a1-058f83113813",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64856acf-5336-4e35-a302-6202c33abfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13efc74-d548-4e54-b95b-feda8d486a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522b99de-2c45-43b5-99b7-6fbbb81e47a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76cb6a21-af9a-4d52-a3b8-b7d7ecab81b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f8886a-ccbe-4f86-859c-3e9258e83c88",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005c91cb-49b8-45bd-b2df-70fea3ad815e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e335fb0c-4288-41c1-99da-4e4de3c14370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4a7af7-fadd-4994-988a-7d797e0e05f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa9b525-96c7-4755-a182-31d119e9a9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1130fc6-d5b1-4c17-beca-51b6203f014a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269abaf8-0a10-4967-a769-f900f7a1d768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf4cac7-f7ca-4f23-bc76-81b7734df12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8504741d-72e7-4ff3-850e-1d3054a1c915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dc747e-dee8-435c-acc2-654277791ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9498efda-6095-4bf5-93e8-427d172e99d2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7cc17e-1dc2-4cc4-ae71-b729678cd793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d36280d-85bf-40a7-99e7-2a4f57986793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dcff33-7463-41ea-ac3d-cd93416a8135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa59e7ae-141c-424a-9b39-78822cab5705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90547f50-8c13-43af-a0e6-f45bd7ffb920",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d79d12-50c6-40fe-b741-eba4f24da6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc44189e-0cec-4a16-8701-af453ceeb6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfd9590-b71b-4898-82f7-fdb7f6fd801a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbddca58-4a96-4866-be53-652cd374914b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c756c05d-e467-4c86-a53f-25626a3393a3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464f7360-afd5-405e-af35-a5eec9b611c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75535ef7-8e97-4c41-b9e7-bde52fc36cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8257f0-f3de-4def-b455-72eb495821b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b538351-41fa-45d8-9179-afcd775efe28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42ae79f-9bd2-4d23-8951-926f34b681ac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8ee9f6-1703-4496-84fb-61e40257fcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72b6a99-8831-454f-ba4d-1df875c28c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f253cda6-4077-4641-b77e-1497ffae953c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d0093e-6b0b-4eab-940a-3b04f67174cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6acd41-32f3-4035-928d-562401b626b0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be50876-c0e7-46a3-9048-9fdd93edce61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362cfbcf-eb09-45fa-81cd-01e6c911db7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abfa29d-c714-4c9f-a477-6e1ae9ac10e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9376be3b-4050-4b87-b724-33c81ee92492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c664db0-2449-4707-9d86-422a055497b5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79a3a68-315f-4c24-8f10-d7ba346fb3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18471b14-6bda-4147-8dfb-a8fe148eaee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf31a893-41ea-4406-8066-227c4018df02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e49b34fd-0d1b-4784-aa3c-1bcfc4b18e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdfe23f-efae-4c58-a610-846eb3c33871",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b084fb-3a49-4c50-99c1-f2b2f4de9620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d7edb481-d093-46dc-9eaa-3ff415d2607c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8c3446-5b6e-46bb-a567-76fc64fd3ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f287cb1-da10-4b6c-b15e-6db96c63cf4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87685d8a-3b56-41b7-afcb-a332499402cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94216152-84b5-487e-b130-fbb159beba2c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f426fa-5ca9-4549-af99-7874c91bf370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "deedfec4-c254-4a50-9646-92813fbab368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8168247a-08d7-4c75-be61-573d728e5655",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9303ed02-64ad-4594-aa78-619d94760186"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83360074-cadd-4386-a6ff-906993032b60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dea2361-c01f-45e6-a95b-19a3f16b2ac5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ec751c1-33e3-494f-ba2b-a428a83ca0e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f8297ed-1467-447b-a78d-5c4008435d63"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b317fe3d-fab8-4f42-ab1a-f5881f4c946c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "633e50f4-8afa-47d5-a2d9-e8fc404b9aac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6801ae4c-b79c-4ec8-8dc4-2155932b4581",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d0ff87d-ab28-4950-b3df-6b51842c539a"
                }
              }
            ]
          },
          {
            "id": "d2dee828-3aa8-479d-b119-a2d4ee4afb72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b1589b5-2172-4a28-808d-529975acf0b8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1a247980-df06-4ded-9565-70b3e9737884",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540f0584-3db9-43a9-8421-22ccca981973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "519e500b-7ff8-4799-939e-9c8f1e9fe590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed33478c-70ca-4a9d-a7bd-2a96f7a942b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9f9c4a-6ec9-49f8-833b-c809d5ee4f06"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70502972-f2ed-4163-bb59-58ff6805354c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c13ac64f-3662-4244-ae6e-ec90f51f3346",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65c15de4-9cc3-4747-b64b-b7b41551a2a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "147c762c-2bf6-4ff6-8f7d-002d08ce9aa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9cb4697a-cb4c-45ce-866a-c9c7e2bda1f6"
                    }
                  }
                ]
              },
              {
                "id": "bb85e1ae-6924-4167-bbfe-6ae0cb0bf447",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dda07c5b-9970-4a7d-bdcc-7b3844c373be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fd547c5-b108-46a7-a391-4ccc580e3c8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eab86adf-b4b8-4633-875e-b354696543e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f8bbed82-fb30-4593-8bf9-3aa31d1f60ee"
                    }
                  }
                ]
              },
              {
                "id": "9db93db6-3c66-4cf3-9958-d05f1df2caa5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "171c5d24-447a-4cd9-8430-0f4681d12793",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b028ac47-b4a5-4cd9-829a-3aacf055e1e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c832af2-02d0-40c3-acf7-b0a0e1348129",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d323131-df61-4ea4-baea-c6d51099718b"
                    }
                  }
                ]
              },
              {
                "id": "8561c5b4-f1a9-41c8-984b-f8226fa08dec",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b9f479d-c726-4c7d-8200-3659228b7d21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8468f7de-736c-4379-b0ba-c85824b59db0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e650781-99a9-4019-94fe-5c37d3005a96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0c6715f4-33a6-4131-b6c6-bd49481c361e"
                    }
                  }
                ]
              },
              {
                "id": "9884a626-f9a5-43e9-a825-f0bb082d244c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5e60a7b-8756-4527-b3cf-f73a3daaafc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1fce89e-9ca5-4c8e-b616-8be86563b306"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41f9521e-96c1-4604-8098-67a9adaf1282",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "959bd243-2af6-4380-8be2-b1573b535f3b"
                    }
                  }
                ]
              },
              {
                "id": "76cdc065-2c08-4295-9500-73a8ffb081e8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d96f4af-fe4e-4d7b-8516-fd6619244553",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d88678a8-6187-4c17-8c98-d84c58759c23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7e45e4e-e2e2-4bc3-849b-c14fb283ae88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f153242c-9375-4c5b-a8a6-a0e2c4c0a34f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10c35e72-f72e-4f50-bc05-7bde09b34ddf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "761d73e8-a955-4e0f-9bbe-f459afa8f50e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1204526a-b0da-4099-b692-481eeb64272c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7dca7fb2-5be8-49b4-89bc-560fb8b6afb9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3aca90c7-d9f5-490c-a5aa-17efe970d3a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d2a00a23-061c-480c-a2d3-50ed7f5ac023"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "949ef6d5-75b8-4bfb-9c76-32f3065f12e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "225110bb-f35c-4efc-a52c-ae9f53fe6c84"
            }
          }
        ]
      },
      {
        "id": "d169f8b9-42bc-4d2b-9f0b-dcdd7c1bc15f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7efcd430-6669-4bc7-87ab-c58c04b8eb39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28fe24aa-22d0-48a6-8c33-5901590a9135",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4fd7ffe-0c1a-434f-bd13-6b263eab9fea",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044f93c5-6755-43c4-aa6b-0b28fbf8e292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa381d63-54bc-47d2-ab60-c9d0b1dd9e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ada25a-287d-4e62-9074-5d16b57d0acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31dc56c7-54c4-409d-90fa-ed026d7d2ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd2b7b7-f29c-4bcf-953e-ff579af59ff8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33ec390-fb19-4057-894e-a8355bbcd3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588d0fda-f173-41a2-a7e3-70c265b4450d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488f6a3f-61ae-4420-b8a2-1aeb1c2db111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0be9030-3f67-4f86-857c-b1fe567a86c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a53de74-fd0d-4083-88d2-2e700699213b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5688e3eb-7222-487f-8a0d-4430562da343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a51a4d7-f3cc-476e-9048-a91846231af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a84f186-3c8f-4a11-87b0-62c4c652cb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d9e985-dc6e-47a9-8c59-2f9f0297a06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2e5a2a-7fca-4679-bb4d-d3179820b9ff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaeb8d2-212f-4ba9-a843-128492ffec70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c584a4a-2425-408a-a2ea-8ed000a2de23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0085ef-46ea-4727-b0e2-e7e589f2c08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d49caf-7576-4806-a67d-8596f1bea4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74fdeea-4e56-4a84-95fd-d94cd000d38b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a26cf1-3432-492c-90a0-e62cb8e3af3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0985a8c-6a24-4395-93ba-c9e15d09d49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7555a66c-7a9c-4f09-86f3-69de3b869917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb080be2-0175-47b3-b114-0fa0b067e3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c1dcee-df06-4366-9511-c150193db3fb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acddabe2-00b1-4cf8-9857-576f30788138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266314b7-fc8a-45fe-8dd6-392ddcf58585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f303ac36-6adc-4171-8f71-09607ab65e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a7a0a5-8d4e-4489-bdd8-c60b6beee8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2d0d67-09ab-445c-8b6b-51fbbfbe1b4f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98aa589c-ace1-460e-934a-85e2e1c04b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84952b37-a836-4704-9c30-2c5616b65a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2a58db-c009-4927-85bf-75e9d69de1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "464d776c-3e97-452d-b593-d9a1620ec79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d718ef6a-fff9-4865-bb0b-09c90b35c962",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8b8051-385b-4c11-8406-26917dfa68c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82e135e-a7f4-4880-8784-b2899c7021c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c98e716-716b-45f4-9150-c20093b0ad71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c197d27-61ae-4b2d-bdae-32432a468647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1668bc-26fe-4d88-a0dc-d9c73cc7e31f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fcb42d-c32c-4d55-a6b5-01c535af4d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783aebda-8d3f-49bb-ada0-f2e615264a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed300ce7-cf4a-42f5-841e-47c30d1b9c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76aa70aa-cad7-4ad4-9031-4a97cfa9692c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f91184d-fcb5-4df6-b296-165be82a1009",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a68a3f-feea-4925-be6a-04ebb8bc709e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c053e69-7e4c-4ac7-a487-b9077bccac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2d1c85-fbda-461d-80c9-7ac535afdfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd9cde3-e8f0-478b-aaf7-4102ef6d9416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901a8432-2b42-440e-84a0-b3e69c469883",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de713acb-e697-47f5-a454-72091c4a293a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e70475-0608-4c49-acb5-c9e276c49f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9507ddbe-91e6-4225-b308-9ba834d1afec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c35eb2c9-3f4a-441c-a880-7857c77213cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71880a6e-73b8-4b55-a0ad-7173800721c5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027d9d27-52eb-4a46-9234-8cd3a9ee4298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0966703a-927e-46df-9bb2-59b71eba1cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6a4678-123e-4c68-9b4b-bdfb738e6a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d07438-6e6b-4c86-8a4f-de724bb3355a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ab0304-4c7b-41d3-805a-c97656793cfb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5a7670-906c-41ac-b2a6-20bfc1819951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b543094-a720-44cf-9265-22b4359afea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f0f98f-50eb-4437-b64a-2aabaa5b3fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f978dbe6-679d-41ec-9938-f0316c99652b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef34828-1df4-4a5f-a900-40c4388f9ab8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f22c2cb-5514-4e38-a0ef-b73a7fd9eba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c8c76c-2812-450b-ae6d-0bcbe36979a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a4b073-7374-488a-9d81-8cddc07f91b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "95937275-4e84-4ef6-915b-d92a68eac03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a1e48f-db12-4836-8366-a97dd7f95f64",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc09cd8-c096-4c02-bfed-7cf1a6231066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199b43fe-9918-4663-9985-6098bcd4bf9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b2b8e1-9570-4287-a8c4-b0f6ba4f770b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3773e98a-c855-4d77-98c3-6a628e2a8989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfa359d-e174-455a-a926-e9773253ebc7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b4ea9b-d7df-4e5e-94f9-fcd0e3dba002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e695dd-b7b1-4a00-8fe6-63970ad0b8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6936c66b-86b9-41ba-8881-cf4edb4db1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecea6ebd-52d4-4c4b-8725-0c8ec29ac3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683f4643-e229-4bfa-a8d2-8ec986bd0e69",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd47c75-42fc-4561-93b1-f007d8c56209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144f9dc8-50f3-4397-bfa5-0e5201c7e844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6093d4-53b7-4f30-b131-a0f9980493cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df9d05c-341c-4d1e-b753-d0165710dabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754e4793-4b96-4958-877f-aa5b9a8d01e9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e907956-a115-4dec-9627-c4a2e5d77666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880265ba-8951-457c-a5e4-b0928fdf21d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d496c0-2d32-4fcc-a3df-8cbd493667a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfada39-3931-4300-8722-e06a6b334c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e35141-62a8-46bf-922c-b02de6f5687e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e35bca9-51ba-4eb4-8289-8d4ee132bc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232cf3ad-d905-40c5-94f8-24d57b18e9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c9844f-7436-468b-8921-d4314787edc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d418c4f-a173-42ec-bbb6-e722e186ee17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478977c4-811a-41a9-89e9-777e9f1d6352",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee73c79c-d8e8-4b57-be10-2060a81c2df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fde0ba6-e07b-4540-9ae4-3501b17b01cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b758569f-ebe1-4424-8706-e3ddd049627a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d68c8333-ba4d-4f20-ab24-de463b708231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57480691-dd46-4e85-a9ff-3753862bec81",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4ec869-226e-40f4-94f0-25d9fbeca170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e661e4-bc5f-487f-b995-d0d707c595e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd21250-6d47-4ad1-aca7-16d47eeacddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2c20b3-ca91-42ba-a486-eb09a103c76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5b5226-0235-403e-8a07-2eaa18151c53",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da61976-c4a2-416b-8f84-1cacd1c5583d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f54fd6-3a51-43e2-8ccc-bc8092c38a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370a7b19-978c-4905-9a4b-0b784621f5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f4f987-c3ef-4a9a-b456-868a59e54e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06082b-7660-4549-83dd-3b64d58adbf2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db003d2c-a870-4778-ad01-6528af33ab1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22dd681b-8126-4d90-8052-da4b127f8bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f14dbc9-e84b-48f8-8261-d892ecae8b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d19534a-cb8f-4146-b4a6-33aaa705dd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e92210-8129-46b1-812d-3376c84d77cc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead60ff0-b19a-4faa-8498-5bf55fc7a00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0de281-382a-4454-9d01-995a9c5f394c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1098ab53-6ebc-4eec-ac37-1a4e079125bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58614ee7-145e-436d-bab7-f7689cbdba00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c94615-a033-4410-82cc-b957394d0613",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8975a342-4009-4d1d-aa71-5c7556283b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6904dcc-9400-4ffe-a3f1-7836adf9105d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76133c6-ec23-4567-b2bf-ff4fe4607638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3eabd32-50ab-4b12-a2fd-149c44d93a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0a64e2-d62e-4941-b1ce-a8ceadd4a280",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b35ba0e-1235-4948-8c86-36ad67253b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce34204c-70bd-4458-9de8-bb1c873f1600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85abaf30-acbf-4d29-b8f2-22e30c0d86ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0505022c-8d1a-4afa-8d46-15ff05b587de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04a2669-e0a7-4e83-94f0-666eb5c7cfa9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a45a3e2-face-4825-a5c2-37ddc5872f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0721917-bb12-4011-b64e-a8e8ccd1d478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6328f9-9e2f-4158-bea8-801f91ada1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fa9af5-dd4c-4bbd-ac68-e166122c8ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0266c8-a505-4bda-be43-3f76a361c6dc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edbdfbc-7cd4-4bde-abea-8b8838366d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091d946c-45ce-4e18-a4e6-8bb23d4d029a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9277565c-fea0-431b-b9fa-8a864aaf1c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be36da41-ab59-43bc-adbd-dad215b10cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24790a8e-482d-43cf-bfcc-ee403456e6a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a79e01-7428-4500-ac82-092088ba33da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0ffe68-5479-4b3a-99de-9736c192d05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6c2b52-7e7e-405e-8ba7-df3fce75cc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ab1f76-745c-4e55-886b-085bb44c28f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7493a3b-2b26-4175-8f59-d3840295c81b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a430f9f4-608c-44d1-959a-9e0b6190d059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43155bc2-c731-4cb5-9ee4-da37b7e5b84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d03e19-97eb-41c4-ba7c-2d3aabc48975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "786a1d74-24d9-413d-b539-802037beccaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1074d84e-a4d5-41b2-92bc-de308eb379b9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f862671-97eb-463f-97b4-4bec5ffc5742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e580fb9-7163-45b4-89c6-312de9461b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b47539-abbd-494d-86d9-a4e0d084d952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4defcb4c-d2dd-4785-9bd2-31a468fd6046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7b7da9-a06e-4278-90cc-ba94fcffcd89",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b30368c-ed30-4f67-8362-6c33a485df9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5530e8e-2547-46f4-8563-d27d82614667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e493e95-0f0c-474b-82f1-4e3813bacdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9603465-5e92-4f6e-82d4-1607da8dee98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb91ee9-8b9e-473c-a05c-5d974f29f6de",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b635b1fe-a8ad-492a-b904-a99d46a7e543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52965b74-db35-43d7-81db-17c6b1c5812b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4de3f7d-9a9e-42c6-a192-c635b5748747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54dc8b6a-6ddf-4dc3-a7d4-b682e9e27136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce48ee4-362e-4d2f-bc88-f4a3062868f6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5c6215-1b76-4497-b6ee-b6bb196e7b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba3b6c7-e6e9-43da-b42c-890105d87e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06eae568-d247-43eb-bd78-2281fee59c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e83e4e-de6e-40c5-afa9-df98f93208f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f166b8-6e9c-47fb-adf3-d75ccc2fd906",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679fb869-0cf9-4d86-b24c-59140280e57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b3370a-9eb6-462b-8d3a-62b44a4230b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56471936-297d-484e-99e6-3515fd01502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8eab8ec-db12-47b6-8283-e7b5b0c4b0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446ac9ef-b961-4c3b-85fc-4a53f361b7cb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0391d9eb-4c93-4080-8ee6-d42e185f1e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea553c57-fbbe-45e4-b2c9-9e6dd0da0542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4193cc-ddb9-40d5-a47a-f374c309c9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae37dfe-f4d8-40e7-b19b-521e0ca4a82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff202aac-e40b-4aaf-bd05-20bcb53187a1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121fbf16-6f2a-4f7a-9736-3c64b552516a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508798f3-8cb8-42ae-af88-8eba2040f2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc5ed7e-9675-470e-bf96-4dd2becd0a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2694d927-b111-4b8f-bec9-19590dc2d62a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8506348b-70da-4850-957b-72097efc8c47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "149cc741-06c0-439b-9985-0428de52d4aa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81bcdb2-6c13-4d41-a339-83956df4ed2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9cf5d98-f688-4145-bfa8-22a351a21834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69268f74-e61d-4d4c-88e5-d58c6a6b2367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1afa4e8-a788-4238-a05d-b957b201e434"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa860ec0-8f50-4c79-bef8-8c5b941c23fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a190733b-3a05-4a24-9da7-d65353b0d87d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aab64900-df80-406e-b5b0-89fb19a749c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af81337b-b470-4bb5-80e6-917670116961"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2917e953-7ed3-42a4-92a0-9ca976da69d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1c273b9-bea8-4c03-b414-6658d1059c3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6d6477b-6ca5-4050-a14b-c1ea6a058c6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c88f51b-27e5-4402-bd4f-70dc3a41a535"
            }
          }
        ]
      },
      {
        "id": "24ce3a23-e3ed-4cc2-823c-2bc4a6141b51",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b5b1c346-50d5-4d40-9cbc-d3e0ebc9c657",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9d079e4-e671-466f-b019-db33725b5a29",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a5ea0e2-bf77-4963-b9f7-eab447535f9f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ef8df5-5f09-43ae-928a-331e5b194513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9167aed6-962a-4d7e-b55a-251bf7156f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de66bcd3-995b-4d55-8edf-5bb0c0756f02",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80993f37-d164-471a-912c-d8e3a45bb71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f1167c-14c8-48e8-905e-6d2f28ff8864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58134f54-3725-4abf-a8e5-7a0c01ab75a3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52df1fe5-c42c-4798-a514-bd7c84934e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d82a73-ded7-4720-8531-4089fb7eadd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f951549d-79b4-488c-aa76-c841bd3db72c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187fd3b4-cf3d-4374-8253-e046e01572ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3fb54c-0a8c-4afb-9756-36f936b79540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf4d14e-44e2-41c5-bfaa-d73c17852dee",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7446b9c-8a32-4278-be4b-74dda06b8c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8799a8ee-0552-4961-97b5-8c9033f2c7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb0d5d0-bb9f-4d66-93ea-6ee448b2ac34",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f4d6ed-4e31-448e-bd94-8e1a2ef14c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b84eb3-01de-47b1-89c1-7cab7a327e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a37fb3-bee2-469b-8d92-afe74c2b0fec",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0297968-3fc8-4e83-a072-1cbdcabe6504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6eb9cb7-8862-44b6-9465-b733e98b51f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbd94d7-875a-4a83-840b-6d83f6b3404e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451861f7-3d0d-42b8-bd45-c7ee90c4f44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36ff65f-b2c6-4be6-acbc-cbdd70e28fbb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5167430-3267-4fe9-9daa-bbaf760452b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eee2053-ff42-4b75-a0bb-3afd3b34beee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca34d78-302b-4754-85c0-e43159cfd057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2932ae-c651-4b18-b42e-be8fbc78c963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40828c1-6909-465d-8896-647e2cad4e2d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7349d5c-3860-443a-b006-20ecdec7880b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7351af-6e4a-4d64-b85d-1366489452ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fee5ae-b33c-4393-942d-63dbf93d0ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ae8527-8a0f-4ccf-ab4d-aca5f18d40d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cff80ae-1e0a-422b-a6c0-83ffad3342ff",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6decac-962c-49f4-8b96-b35ad9ca4b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f32e26a8-7f5b-4d18-97b4-8662e099ea78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2f2129-d413-4284-8746-9e3f82189ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28583c1b-f270-4f59-94f1-fd61450a5210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2ae465-663e-4590-93fe-38ed0f50bdd0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af13aac1-89e3-4527-8262-eddd1adb4bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02eb6ef5-f440-402f-bb85-e8f16f97be2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ec7555-4a9c-4f1c-9ce8-fa9ecf36a521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60aca829-a54d-4c4c-8364-d9ecab42a0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f506b37e-0dfb-40f9-a5b0-04a36b6e15e2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6654044-1cb4-4065-90e2-efb032a86cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b90f38-0894-4113-8602-d7297e6f6e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d996e87-e2b0-43b2-866e-4915d0ffc480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d3627b-0795-468d-9c81-f6640f3a1349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396cfa1f-4939-4741-80d7-55ae349ed380",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca256e8c-f062-419b-bfbe-f8ede754233b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f27a2fcd-c157-47a6-9f0b-6f3ab25d27ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e369ae74-b401-4e63-a734-b803909a186a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38273b6b-c732-463b-a0fc-106d39085426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d23911-6f02-439b-9e19-bce5e5d95f8d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063cf99e-a557-4255-bf52-f81505973950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee9c562-53f4-4c3f-a701-6d5e7d196ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae4f589-d014-4d27-abda-0455a4f4fc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb738603-d3c1-4679-a2ec-7350eae31fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ba509e-5fe2-4e7a-a3ae-2f953de68d2f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93025b5-1bb5-4941-a12b-faac026dd7f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09227811-2768-46b9-9119-38a374fa2642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d8e4ee-1392-45fe-8058-8cee7d8ebe9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ce362d-9426-413a-8f7b-d5d6c824188d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f17a1f-444f-4a75-af09-482500e0db49",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d53b049-bf30-46c5-ad09-3957e9cdf61b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41f674e-cadd-40e4-a3d6-60294776bc71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0a36bf-1eb7-45b5-b304-334cddf5bd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a229f0e-30a0-43de-a3c9-6e203205477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7900602f-4d7c-42af-864d-fd5aeca4f398",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb0e200-f0da-4b86-9e3a-c8815aef6be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0623d33a-7b2f-456c-a556-9f1e63cc5423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693a03b5-ad74-4a9c-b919-ac076e23119d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f89b63-a407-4fb4-851b-f4bcbd25df24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf8819a-e95d-4308-8eff-a37c976c192f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c579275-804d-47fb-997c-b072fc941951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a2723a-87be-4610-9c72-3c80dba0735c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9b047a-cf68-4bc0-9dbf-d7dbd4671079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f56549-c355-47a4-90de-fe3bb183af97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a92e1ac-c3ee-4814-8834-c5385d65570e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e17f74-12b7-4e36-81d6-0317c6641d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e300240-3707-4137-8e00-b0dd50e2490d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee031c7-e442-447d-b514-d660d8fe0974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3012b9bd-138a-499c-87bb-e323cd96acf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909de21e-f380-4cc1-b12a-4748bb90192b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c1de10-6720-4338-bff4-27a81f343379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3cfffc-bbe7-45bd-89f3-8e3dee05b67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838d6d9a-fe00-4902-8852-0a49c64620f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d72a56-a807-4dfb-9055-c858bb875f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8328e0-655f-4e69-bc69-07fb20e7c33d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6a5f0b-8705-4cd8-91b2-fb5e071f0225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62ff5c2-dfdd-48dc-9684-ea2c2c7da215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106e4981-3712-4c58-b075-4fc6a295e91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e6b4bc-a4f1-4b13-ae7c-38e001e4ea23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fad4ad-316b-44bd-beff-6c418884530b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4453b91-c80d-4d0e-93f9-9c034b2ae647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0418ccd-9109-45fa-be1f-d83a906815fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b06d8d1-d45c-4b04-b34a-c112877bc334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da433ab3-4f50-440a-91f9-6c63ee59bc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28cf60d-b720-4683-ba61-572d2c61d640",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abc8900-3717-4d01-966c-3f47568e33b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebd48ed-3866-4cd2-b854-7742ad435803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c049960c-4776-43a6-9c2d-f4358b8e1d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc10fba4-e2fc-4e4f-9c64-39e45210d233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b499b6-9fea-420c-b438-cd7da74a13cb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b6f3ac-cb3f-42c3-876b-d3204d279421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a26b7aa-daad-4907-9852-bce34e41fb0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65115aee-04fd-4361-92ed-2cb0a8862abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fde08f-afde-48dc-b1d9-08d4704fe5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a05cf1-8734-4691-bf68-17c11db1c417",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1046a45d-71f0-4c66-9fa2-ee4017b4ffa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee7b7448-a2c2-4dd7-be58-42823ef44610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcae3b4-b123-4739-8cb9-f9b03a22bb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f8e027-1a12-4610-83ca-2c84261576a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93065152-d8ba-4dd2-9d85-95860d7e6934",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2ac016-e282-4d07-a687-c9dfd0a18326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "079ef486-4e1e-4b9d-a289-9802a2702086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5310a5-5e04-4be7-93d7-978fc465e457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367d70fa-9737-4cbd-9d4f-7a06b66c100d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27b551e-6706-44ba-8847-f2f71834f643",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd111fb-9fe6-44c5-8564-db01dd562576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "589d703b-ac20-42a3-a8cb-645dec3f9f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e16276-b771-4686-bb8b-a24e33f4c9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebfeb4f-8bdf-4323-b5fe-bed8a2100a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94bc06d-08b9-43c1-b89d-0ccf1eaec29e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f00425-c7ae-4f11-b69b-23881d7902ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b91ea5-5b98-4502-81aa-caa014167527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e4585c-ef4d-4c0e-b5df-a5731812f978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1a9fa0-634f-492e-9093-8d4ca7c7d161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794c899e-d1ec-4963-b65f-3b7bdd3d9202",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b8c493-78d6-4aed-a181-bdd7906f9ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56ebd529-7816-477c-8a71-67d5bfd9c677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6dfe8d-cb04-4cb0-bcac-b76a75e177a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a832514-68ab-4f54-afcc-63a703f30e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e5ce59-8c6e-41d7-9f7d-c444b541be8f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e363a5-dfb8-4401-9cdc-8814ad2735ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8013c7-3e52-45a1-90c0-e8ed22ff7277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf5cdaf-8a06-4360-a4c5-b6753d33f5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcd6c79-d7c4-4842-9ca1-1782b9a1baba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4da193-da81-4a69-8c83-2e3974a7c53d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e37229a-e4a7-4939-babd-5948092b6b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60bdc36a-cf3d-4d58-9716-30d8b6c0c4a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8677c0-a584-4d15-a831-3785026ab809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f8ed32-e875-4aa6-89da-d6561633b18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad6332c-0cbb-4df3-b9f6-6374b2a2ca13",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745d13a4-9f88-4295-bbf5-159f7db1c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e709de30-6e10-41e4-b7bf-67d5dae7dc8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290de6db-b843-4baa-8a61-1c91efbcad5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceaaffb8-7342-4496-90eb-8aa4554a907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4df3a4e-d0ec-484a-ba8d-84171dc6ce03",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0580dc6a-a10b-4a9e-b4c5-af9ffdf1117a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bd8c856-ca3e-40ad-9463-452821b98338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c2dd82-621b-4e9f-a09d-5977821a6388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6240eb13-4434-4cb7-978b-9a452c23ee5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e627d2cd-acfc-4432-bd4b-40d2bbbe7752",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eee53cc-bec9-42b3-bdf6-daa8f45be6b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278d5b95-0d35-4ca4-b4ab-6f5d7c29309c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6290fa06-c35b-4927-9860-c5f22677fda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa72e8b-b0f6-441d-b896-8f08179ea697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76ee52e-06c3-4cf2-a9c2-0e88be4b0680",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39266af4-8a4f-46f6-b911-4bf4a907404a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e82d52e-6c64-44d6-99d1-fdf6a63b835a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a435e0f6-a2f1-4688-90d4-a2b42f74d6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b650f1-5c9a-47da-993a-876f7f8b8c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5e967c-fb79-4309-86cf-c7459fb7c979",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0e800a-2723-44ae-9ed4-b6e9413762d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d425ff-ef75-4349-b036-0f4b2bb2be2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c04a39-156a-45d1-b19f-999591258038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df91dc9-d999-4953-b8f3-1bf753b6cd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e38cd05-0a9a-4f98-a845-d0378c753275",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11e07ce-adc6-43e0-8afd-186721812955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d039d062-1cbe-462c-bb0e-d3c884868f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcc42a7-b9a4-456d-9a8e-471b409f07a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4345357b-295f-4e9a-84f2-b25a675bcc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d3a0f1-498e-46ea-85d3-dc2ddb3332cf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254cf94c-ec92-4932-84e2-83d0d265966d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7856c32-9127-40fc-8f95-e7985b8c16b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cb0002-77d4-45d7-ae74-b757c50e8bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215ad7a2-8ded-4837-b670-73b46e08c626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a315907-2bd0-4832-8746-81bd61b9f3e1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d631bc14-4ddd-45aa-981f-73e16a2fef22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3033cabe-5e0e-4ee5-8616-b46b7a6577d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbabb5d-46f1-44d7-af2b-25e89e81d549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e27d4d-16e0-42a1-9896-00c497bbcc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b237f81b-079b-4912-8e0d-0ee3a060721c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902deffd-054e-4961-89c4-a2ba7726f38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c1f418-fa48-4ed9-9dc8-fe4fad52be3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686a4ca3-6981-4c84-96b8-ebc2cac515db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af71ee3-156a-4f2e-98b5-2a17052e08ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d35c28b-8ed2-4bc5-871d-9b063d2fb11c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d869f88-baf7-49be-b30b-d8c24d286068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4110814c-7a2d-4855-a0b4-ffe58ebd6a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dd5f74-8014-40ff-97fa-440cecfee408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918f5c2e-8230-4edd-930b-947f214df37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda13407-61f8-458e-af11-5286ffe3e5a0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87301dd-b4e5-4f2e-b050-ad75dc11bfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e30323-7248-4a99-8d4e-b89b2b68da9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e87ad3-61cd-4f7f-84a8-506caa434375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9ebf9f-05de-478a-905a-31ed254f65ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205bb36b-ec92-44c0-be59-0486088b5e06",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc21a308-e257-4735-9159-f3b6c73847fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2416bba6-d890-4156-9967-2904450740c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37192cd7-4414-4afc-b68a-c19a5693c957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104b518d-bc0c-4169-af61-889a87ad0aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5aaba4f-5ab6-4d33-80fb-2b32ff6e80df",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ef053c-16db-4db0-a35d-68cd3c8fe1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89521b1d-ac9c-44fa-a58e-b88b1ace7bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08330f91-3458-4fbc-a56e-f36fe72e6f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20dcbfe-3f08-4ccb-bad0-f0787d8bdc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89e5d6d-9230-4a69-b442-816269e29a20",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b33b45-b7b1-4f0f-995b-a0b75c0dc63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6899329a-910f-48da-8fcb-b65fae120c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3e1d1c-3616-4767-8a62-67d3f73c922a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0da200-0785-4f05-862a-0de0a1c34c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5265cf7-4c88-4fad-989b-d9cf3165690a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35c71d7-a7bc-41f6-a949-809269848619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba00dfab-b0b3-46c0-853a-1df5ad122141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b521f4b-787a-4462-bb04-67e4778fa683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b667d6-d132-4acc-9adc-c5fc9122eca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3c9e5c-68fb-40ac-ae44-47f2fcd2ff01",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6620194d-e3b2-4699-8f23-a9159b2a2f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc044f3-5a59-4262-9a25-64ce9eb707a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4ca133-6ff8-41ef-a834-08f3630d3d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7500db0a-2b9e-4052-ad0a-f9349d175a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab460e4-837e-48ed-a579-7e964d8768b8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c26f18c-f0d8-4862-b9b6-1a4fd6c4610f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842490f1-7cf0-4cbb-9fce-064271dd7628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db4b094-6228-4680-bba9-497c93530930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4a01a1-e517-4519-b3b1-981c631d01bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e18955c-61a1-442f-8383-061d53a0e2a5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b523816e-64ba-40c6-b637-87892ccee09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1e7cda-5e02-45be-bf1b-40a704fd3631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a66a8d-2ccb-4209-bc27-186a252a129f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e62467-ced1-4abe-9441-90df927cc5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb7368c-3678-4d79-a02a-9cac9b0807ee",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247a5075-9dbc-4982-92a9-f31020b20e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d1260e-cdc0-4f38-b39d-a839981e516b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59153b6e-5cbf-4681-8000-0e27f7737e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423e795f-2588-4257-9a90-1b5af18e3f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33458fdf-92f7-4e75-a695-134c2ea4ee93",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58adc95a-9818-4d97-b541-db335118f973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5ecc6a-f6e2-4b75-867e-43a90b38645b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263c2848-180d-404e-8177-9ccba5c8e130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a2ba57-70eb-4cc9-9de7-1d309e2f5655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f5ecca-7f05-4cd8-b838-393ee05b80eb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833d54db-0128-45a1-86b2-fc98cf33da4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e01026-6824-477c-9454-86fc474fe6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf59df8c-8723-4cd1-886b-3cb3c5790fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a389e7f9-17cb-4554-b9fd-4c44cf19607d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563e1fab-5a44-4b27-9563-9afeddff62f6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cf6a0d-a308-42c5-9358-0b24b4e6f2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63928e41-71ec-42b2-80b8-e164004459bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "debc794a-0469-46d8-b936-db7ab46e1861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6126da73-0daf-4882-9183-aa4fc7cd3b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d1a803-d0fa-46ce-95e8-44d8a3aa0a85",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5386f9c5-0896-41f5-b23a-eadff22f7839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f3e5e5-a4b8-4ed3-ba67-809ec6f75f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45fea04-a68e-4f9e-afe0-b9e5960ed339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab029a10-48a4-47b7-9b61-2af004f551cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4229a2c6-4645-40e2-8b1a-2e2eb48f54b3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5a472b-c149-4d24-8627-9bfc79a6cf53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcc51e1-93b7-4b60-b128-d55aa3623d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19611ff2-9dd4-4a9c-b998-856956213ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f335f2-b3a1-47a7-9389-fefbef5e0502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a345e7-e8ee-4234-94aa-3420a5804128",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e9b806-a65d-42c7-ad99-3b112681d371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab116b94-94b1-40ad-9b2b-4d48a2272cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11b6444-954c-4553-9034-cc854b40a6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bc70d5-4156-4e3c-93b3-2a2ccb132f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20059aab-d0da-408b-a7e6-dc8456dd19d4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d645c99-d44f-4d39-8c67-a56cf3a041c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2712ea4-7a40-4546-81a2-c8c2f9ba90ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52ec32d-029f-4605-97c4-5fd8860abb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1ff4f9-a302-4984-9c5b-8faebd8ee318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb73cffd-357a-4ab2-ad64-15ba70508ad2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8e880c-9c53-4dce-8dd9-bf7ae50d410c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756cd2be-c1a1-45a2-892b-872dd413e445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1228ecb-04cf-4af6-a9a6-d9840fffbbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07365d38-ccef-4e8a-9950-5466307931c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d669b61-2d8c-4754-9273-ae830fe014f0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a78cb0c-504a-47ea-8d71-a3ca3b3bafc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17fee12-ec25-4e12-a987-d217e42ad3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13daf39-3ed4-4ea7-a73c-f9a9c021c495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d856c7a-f1bf-4f55-9566-6458e373f831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f224ad87-1372-4096-a316-78c9bdfc5477",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad18401c-e6b6-416d-abbb-54b559cf244b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6e08eb-5d57-4513-afb0-79cac86b2e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd6e412-bc6d-43d2-9d71-6da527e2a77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b91581-5685-4d73-a2dd-32d0d3d9c1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f602cfe8-d02c-48b4-98a6-881fcad31054",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23334a16-b67e-467b-a5e2-9d9fd4cde4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f488fa93-142f-4e2d-a51c-1f9016676b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d191272b-a289-4c12-a62a-90a62f66031b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de76cc8-1531-4d29-994f-de3d197b0bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc1a12e-f7c7-41fb-a4ae-6f452eec27ca",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef749332-d5f5-49be-9dfb-42bb2ca16108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9979ab-a446-4c08-ba55-4f39487ce8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08299faa-f8c6-4ce0-a341-d4a031dc00be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0439063c-e78f-414e-816a-3d88ab1deedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2090ce85-7418-4cfe-b26c-709144609ee6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b04f30a-b3c2-44f4-acae-57d7e04a385d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deae057e-f634-4545-8249-cb413df119eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329795ec-e535-4800-9bf9-301bc4e0b3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefd4a0f-2e83-47eb-a71b-f6ee73661b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab893e24-dc61-4826-bf33-829a5bf5b618",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aef70f8-ffc6-4a7c-b81c-9f8fe24e8423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20df6187-ecb6-45d4-90c7-fdf48cf14906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306c8592-9211-4a34-a716-df56d090b1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36fde12-2e70-4bf1-8951-d5c660d4a385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79044581-381f-4bb4-9718-73e5a61c364a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3a7b81-a1c8-42aa-ab66-cc6b59ad7933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f26be8cb-2c21-4c6f-8fda-367f0bebc526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55947459-c3c3-491a-8979-8f2b9be60469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b21d58-c491-4376-b153-b37d901d5169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef162fe-cfd3-48f9-8f7c-5ca0bb494653",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e737d49f-e80e-4b32-a549-9dd0905e357c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0695fa7a-5d81-44bb-b920-597c4050cc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3cf98e-ff2b-4d20-ae04-f7693a0ea533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6d6225-7bf7-41ee-803f-5bf9729fadf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f49532-c0e7-4037-97c6-bcbfa675c802",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1547aa12-ebeb-44ec-8d41-b33c8099a69d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8257bd83-cdbd-4f5e-adc6-04bb04916184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5336f7-5477-4523-9528-c5f7fb3f2d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213f1afa-75af-4ddc-9c5b-a0f959f263d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e5ac6f-8684-427c-b878-c26ec3547d5b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6365020a-8bd7-4d72-8b7f-9c6f42de6a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd33da6-a7dc-40c6-ad44-12acbe06b743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ffcac4-059c-42fb-8c17-e00d9266052e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4040e63-5169-4e37-8237-e34a0a6e3935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fff809e-7db3-41d6-8d4d-4373398260f7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a72140a-7710-462b-ab2d-1178b64f9f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba43c51-a4a0-4740-9321-ef1f15b597f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137387ad-0b2f-472e-b490-7f3c9391c674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad43f04-fa77-4734-ab6c-17f7e33466ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccf3931-716a-4080-8428-f695f7aa1f1f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0737f3b1-b725-445a-8ff1-2e9a4abe9528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed662fc3-5a82-4b1b-a531-7301e8ba1fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac1ba46-cd5a-4690-b433-fe6f50723173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c585ab-c908-4113-a83e-315f4fe6b019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4e8419-9426-45c9-8875-02931ca417c7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35b174d-569e-49e7-91cf-4548fda4b23a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "369d3183-cfb8-43aa-9aa5-cb8092a80e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1baeff-1fd7-416c-85cf-6bb5be914103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8636cbcf-45e3-4c68-a74d-0f200d8d4699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ab1c32-a9b4-48bb-b308-7d2de634eeb5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f117e35-0edd-4240-8774-dac58ae133ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8acae1-cf55-42ec-af92-c97d429d3a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe72a2e-a973-4923-b0f7-2a61f3367498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e6390d-2329-4d1c-aba5-60db3401b6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3605ef0-1965-4d92-b874-277b57e0c4b6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575a21ee-32c9-4a8a-848f-f54da5579906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69bbed61-3716-4894-8795-dd61f2ad623f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e446ecf-b8b8-4d28-b01c-862938aca92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836ed7eb-14c9-4166-a987-72471c18fee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc222df5-63fe-49a2-b983-5556cd578257",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b73a39-9c32-46c2-be06-d8c5904f19a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ec3a0a-8185-4a25-8d52-fc2a6a277ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1d2bd3-f480-4a68-800d-9249b8043d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceeab7c-c3c8-4875-ae68-82337bd646b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8677b19d-ab88-4a41-8c33-1bc71d1bbfd4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e6521c-2333-4228-a1c7-90010c7907e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a482517-c40e-4225-a709-28a8fa70a547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a535d4-663b-4a28-a4cd-7f2b34b9ac53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716133dd-8b6e-4839-b74e-72f2e86470db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee6a801-9a73-48b9-ac0a-d15f107b9e1a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76ff14d-45a3-45e5-989c-21dcf4119da4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b424631-0747-4488-aec7-055f6b7a18ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf912a8-56f4-49a2-9ad2-de79f58d3e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614dc292-8973-4912-b944-74c658926c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af54ddef-8076-4c54-9649-1db8b781f803",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47122837-6fa6-4836-97ef-040f9d20311c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106b3716-0879-45b8-a79b-dc5ad456cddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e79b49-901e-48be-9079-4d762afae682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa63d4c-8974-4f01-98ee-02d844ece888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa05789-6886-4b4d-aa9e-a0e0ffd47f38",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83700545-18cf-4977-8150-be1c493189fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e47d9643-6009-4888-9901-5f6ddd3b1d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97cf95-73b1-469b-a7ca-78c10ec12150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fcb09b-b62f-45ae-962a-c170c293f64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f86774f-481e-46c1-a949-c3532c3cbbc4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9257aecc-404a-487f-b4fa-80bba20c878a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "167a3be3-805c-406e-ac3a-974beaf5864a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd9295e-ef00-4b4b-923b-8b7ef7f58640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f3b738-3c2c-4ef1-bf57-7c17cfcba8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f886499d-4e6e-4938-88d5-69477f329f9e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bb3575-a52b-4b3d-bc28-99e9c8e5485e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d90460b8-bdd0-4a77-b95c-0adb820b6d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11e5619-0fa8-4bd6-9de3-0d57e7fae380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7698bd-089e-4307-9f70-0a45a00dd490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6328424a-cb58-4654-89cb-727fc3c8bacd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2682e937-fe61-4b68-b8f8-5d60626c15b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96ed72d1-5f2f-4927-a6e9-a82c20cd2224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8169d9d8-ea01-435a-9759-96cc085bfda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b60a66b-7862-4db7-b59b-e32cadab38a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dcf02e-f6d3-43a3-a817-d0a8633cafc5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2760bff0-3fe3-4979-a976-695130f9ad28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f22a6ac-9afd-45ab-afc5-64d2a6170c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a72aa8f-dec4-4f23-bf30-9222d10c3ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488f5881-6a29-4e92-b805-bedff9682fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac35b68-a560-4fe5-9618-890143a06ad6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f9a9bb-958d-463e-9503-956525d27601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d437fcbc-839c-42ef-b2cd-97d84dd194f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605f12be-3c13-4c9f-aa47-c3c614f8ebcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f4770f-b864-49e6-9af1-398aa5068ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951ce009-c85e-4707-bbd7-e6100b1eecf0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e52d57-4ee8-4aa3-bcc4-f4714c42b4ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab2bab7-5d1b-4c53-be2b-8b2b37ef6159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ad7699-5dc8-4bef-8842-b5fe1667af07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fac2d5-5409-41f4-8561-aa2cafb63b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6482cbdc-9ce3-4fc8-86bf-ee5402e40291",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c4d6b2-6f1a-47cb-a0aa-b235e1477940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76cda073-0bd9-4fa4-b0d8-ef37b2bd44fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fa0d82-17cc-4b02-bd0e-bb98650cdb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65f8c49-bf12-4e92-9ad8-0c095a8cbe0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd25cc6e-ecac-435c-afa4-3c01cc6d8a11",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c27e8f2-e53b-412c-8397-e17e61d26e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e6bccd-bec4-4e85-a82e-81e45186f287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbe39ca-094a-4c02-a0db-8b6f05348b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8a9c06-0631-428d-8cde-fc19ab3d7cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ffab35-b431-480c-bb22-fdc82ec8303e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc5baab-ab00-41d7-ba06-c76e65dcd773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a16e2f-fd2b-4dbf-be45-4cd230782f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40425ba0-2592-413c-aa56-e5b63621a3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87f89e8-ee7b-4bf9-bf1c-f39aadf73089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85f1332-63bf-4cd7-93d1-0f1b728391a1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eca818-5235-4c34-94f5-20482adefd68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81a5b4fd-834c-4123-ba53-b77448d237df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f822ba1-19cf-48ca-9a30-6d13d86fe131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7b3960-23b3-406d-837f-aeccc9c9874f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31888f7f-cb6e-4b7e-9508-07c3658aadfc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4681fb84-0365-4079-99d2-916efc0a9422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa95cb8-b29e-4171-9b2f-ab8e9923a8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da3d3dc-6f1b-4ed7-91d5-0b5d7e81f7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470c5c93-4b08-4331-aad6-6eb226d7a1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac7c6c9-c6f0-4d05-99e6-2839be47c05b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79963bb-48e1-4c17-b173-3a08e2f6acde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c2ade9-047a-4219-9128-6a176f44a1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9dc157-decb-4851-ad52-fc67ed74c7ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016767cb-bdc6-464d-b998-ba96907d1868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb85137-2d5d-462f-ad61-ffe83e946e4b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cf77a1-04db-479b-b6c7-8f34284c35cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd19a407-0c7f-45b6-a36c-b786a311e05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52636b85-6e6e-49f4-b267-96e8736a27c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9eb0112-dc11-4791-b1b9-4118c24df53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e425b0fc-930f-4965-bdbf-758d6ce9d8f1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463793f2-b935-480a-b43d-df8561debca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea44fd81-383f-47e5-958b-b5056af9c682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f80d84a-5f0b-40a5-82d8-a273b5c04931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03411e97-cc2b-4f59-be1b-b1376ace5bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa6de8f-9cf6-49fa-acd4-eff7810baf73",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27d3cd-a2f1-4578-8e92-525deff8b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78bfa4e-72b1-4b27-87e3-1718704be426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76584cf0-68a9-4e14-982c-d2a0fd1a5f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d1d491-5edc-44f1-adfc-540b0be12316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d081f3c1-31e5-4e2e-8fb6-896720580e75",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7825106-dc5b-4655-beb0-e476fc985399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40553ab6-b6af-45c5-a9ca-6d3c967047e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa7728d-903d-481e-8ecc-c3dcf0569497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655649ad-2eca-486d-b14b-382622392a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbdfb64-1afd-45c4-93d5-9c1a2cf334df",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008b60a9-95c6-4599-bcb5-a1b826659786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0877a042-f79b-4de5-b2c2-020fd423099b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24cc23a-02e7-4d9b-846a-e155fb3a8cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb98e360-ac2e-4393-9846-6164e8d2a35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b046c1a4-ce39-4bf7-958c-53c23f6bd3d9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde6f562-eede-4673-9e1f-b8005625c5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d585a82-a16d-48e8-9c50-8b9c0c44df84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a20a114-72e5-40bb-9e23-38869caaf583",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc3abcb-c113-4a00-8e36-c649cb7acceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1c0fe1-07b0-4426-95f7-e980d379ac6e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad73739-9409-42ee-89c1-420e92edf265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c85f57-de46-4a16-8cbe-250aecee0a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8ee40e-8cd1-4d40-bcae-71c03878cbb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4106b48e-1da1-48ce-8af7-71da7d893ce1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62640a2f-5cfc-447a-a214-f37c988abf20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8daf9ae-e99a-42fb-a976-6651fb8b5ac6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e653b8a0-58d9-41a4-abdc-2ff3db6af559",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "417d5d73-b213-478d-a9eb-3c73a2128859"
                    }
                  }
                ]
              },
              {
                "id": "33ab03ed-4abe-4df7-9e2e-edc7177d29db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe1222da-5ed8-443f-9a50-8d1f35412e58",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1c5bd3-0b1b-47cb-8e6b-1634dcec69f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b001a343-c2cb-4207-abf0-f4dda4994b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca268ca-00f1-4e5d-8126-d63de329bf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f75116f-c17a-4289-b15c-00fe3f8e29da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd14d2e7-d3ee-4901-aa88-d85af2680475",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08b207c3-d102-4415-8108-169b95e608d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b406d3e-9740-415f-be44-0f86d8cf5177",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61d3b7ea-7995-446e-aa18-7c8e82940ee2"
                    }
                  }
                ]
              },
              {
                "id": "80994d79-03e1-4e60-b972-daeaabdeeea1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8544bd3c-be18-4997-ac8f-c6fcab87af02",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0743bbc-0d03-4822-ba1f-0d010fbb37ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a935e64a-f95f-40e8-886f-1e4276c3cba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967c3bad-e09f-4251-9705-5ddb2d7e1674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e8858c-c7be-47e1-83d1-e9fd7f0878aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68a9f68c-c8a5-43a8-b9ee-da8f177a79f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0982b6ff-a291-4e5a-8e1d-8c6b003def25",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9842a043-5fb6-42ee-a5a8-275453342438",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8b5680f3-ef24-43b5-b07a-08214b5c7c48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a29c32e-1161-4fc0-a868-d9d6c916143a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72140b6d-3948-46ea-865e-43dc2630ca94"
                    }
                  }
                ]
              },
              {
                "id": "dcf6d953-f5b6-4b07-a428-ff5c0f466abd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d4b3302-2ebc-4364-a50f-beb54c55a203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3a949b31-f434-4353-a7f9-cdb990a4df4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5230d49-e8d1-4ad7-ae55-4fc5a23fb1fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4da8ff2-1844-496e-bd56-2d4d195dbd66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "123d6cca-17c2-4328-a50c-4b181c6fa56a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c6581fab-c564-40f9-ab71-1209546beb89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ade39091-f2ea-416c-8181-c8a236b0d2f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d0a4b7d-7b70-46fa-8c63-4f5080ab2e24"
            }
          }
        ]
      },
      {
        "id": "78a55e70-89f5-438d-ad99-dd81f9055871",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7a650406-1c25-4f3b-b7a8-6ddef2d52610",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a77bb784-8c1e-41e3-ac88-e4d0b3d53635",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ca64b86-aea3-463c-b5c8-da857fe6204c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab27f3d8-92a5-45dd-a213-51c31c60c5ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9079c6a7-3bc5-4171-87d2-89519818f170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9554de-7d67-4d0d-af0c-2b8fe4463668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb3b527d-4425-45a5-884d-8f0cec26512b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c190da09-e40c-45ff-a1e6-05bd124db798",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "973b2b90-c6c6-4471-991a-729538aa7d6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9370d0a-5387-4484-ac00-a87219a58d90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e077af5b-cbe4-4a1d-b932-8270697ce774"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afc6b20d-bc98-4d70-80b5-7084464847f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4508b99c-627c-43d8-b407-4aa5977ad264"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1330fd81-eb26-4db2-9cad-2f2c64c8c966",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c992e6c-b913-45f3-839a-427511d9a639"
            }
          }
        ]
      },
      {
        "id": "c2c73b04-3a89-41be-a3b7-d7cfb024163b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5e530a7a-2387-4d8a-9032-47030607f842",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adbd0706-617b-4804-be4b-ddee76231571",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf8aef0b-ca4e-4cf0-9f37-2722a1f994e9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3f1f1e-dc7c-445c-8331-4cf40145749e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23ec8c48-63a8-47d4-85a6-3d67ef694182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae554468-d095-429a-aa93-c2eaa041a706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab5b3785-e81d-4dfe-b7f8-805d710306f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85a2e345-f4d1-4a57-a4c5-2f298295f000",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d222e99-bb12-4cdd-ac4f-f51d5c8ae39d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "195964b7-02cb-49a3-a477-0ec31900bb40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f22ac14d-a6cc-4315-8c8f-b7ac3284e45c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de373041-bafb-40c6-a9e1-079f59b29988",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c005a794-6f2a-46d2-a645-e9fe48ff84b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43525f65-1f82-4b57-8bcb-544e58fd650e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d6762bd-5690-4408-a3c8-fe7f50419449"
            }
          }
        ]
      },
      {
        "id": "eeb344db-cc1b-48d2-90dc-8d7ffbc87316",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5b9be597-6652-4dec-93e0-4440ad99d91f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7e4f9b5-2d92-4f04-88b8-38d6cbbe69cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "346ffff2-a1de-4c0a-9c69-1098a5614c91",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd9f47e-529a-407a-b1aa-8b5ce976de02",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "842b552d-f382-4ae2-8941-e97ac872b208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb4daff-3314-4e11-a77a-619d676d3b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ce25514-1da9-471c-bcb7-e6340ce8e89d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36def9d7-125e-4fa5-9f06-dffb3413ec15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46ccfb9e-4de2-460a-991e-72ad1221f89f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf089b4e-4866-4caa-a9c1-112d33183d4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "930979a5-37d4-4a67-a7d7-c4953506152f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fea36f79-0afc-4bd1-965f-936f9fa11e9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5e5ccbb-7e4a-4836-a729-1bfd7bc9a8b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "299b0a24-710b-4768-bdd9-f2b3713cc01c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "191da49a-f340-4151-8399-5bebdfb29d74"
            }
          }
        ]
      },
      {
        "id": "1d1815fd-b8a6-4830-adcd-ec9e0d115d0f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72bfed2c-8acc-4241-b909-0f096b5f183a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0aea756-16be-48e3-8479-a126b1fd8dc0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "89b0e1c1-8c68-4221-bd7a-702dc793da19",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50c381fe-1ca3-4412-8257-ea5609d89e8e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2010257a-840a-455c-96c7-a9ac958134b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.34920634920637,
      "responseMin": 4,
      "responseMax": 11045,
      "responseSd": 769.6112842523664,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724114428812,
      "completed": 1724114465578
    },
    "executions": [
      {
        "id": "dd14f200-b2e7-4013-80ff-e29658d64a53",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ae9d94a2-4493-4cb8-aeee-300b0ed0e780",
          "httpRequestId": "4a223b24-db72-40a9-a2fa-710504bae64d"
        },
        "item": {
          "id": "dd14f200-b2e7-4013-80ff-e29658d64a53",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fa784bd4-cfad-4865-867e-8a49d9eea393",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "972e4428-6eed-425f-8a0f-8abe3cbb40a5",
        "cursor": {
          "ref": "ffc017be-c702-42de-8966-22c9daec66c1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7f1b1924-0dc3-4e12-89a0-28a3be59de6e"
        },
        "item": {
          "id": "972e4428-6eed-425f-8a0f-8abe3cbb40a5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "da1dc388-a55b-4334-b3ed-b838ad181c04",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "c53bd201-4d06-44e0-9252-f0b8eae21d9e",
        "cursor": {
          "ref": "88355b58-9975-4751-a119-9c6ac45805a6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ea2e69cd-ab6c-41ae-9cfa-dc873125759c"
        },
        "item": {
          "id": "c53bd201-4d06-44e0-9252-f0b8eae21d9e",
          "name": "did_json"
        },
        "response": {
          "id": "f6b9d2af-8c70-4f60-ac1b-1ecb5e7fafe5",
          "status": "OK",
          "code": 200,
          "responseTime": 234,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004515da-b954-41f1-b144-ce0d61637cc9",
        "cursor": {
          "ref": "e95c8645-5081-43d4-8283-f2df2b1deff2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "acd454da-c1b0-46bb-bd95-99d2a857b70d"
        },
        "item": {
          "id": "004515da-b954-41f1-b144-ce0d61637cc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "1a9e7109-8ce3-4753-ad0e-81564ddf9c2d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 569,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004515da-b954-41f1-b144-ce0d61637cc9",
        "cursor": {
          "ref": "e95c8645-5081-43d4-8283-f2df2b1deff2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "acd454da-c1b0-46bb-bd95-99d2a857b70d"
        },
        "item": {
          "id": "004515da-b954-41f1-b144-ce0d61637cc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "1a9e7109-8ce3-4753-ad0e-81564ddf9c2d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 569,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04de6577-1a6a-49d9-a778-d510a4f45cac",
        "cursor": {
          "ref": "54678f0b-8a50-48ed-8874-10707c613fde",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b2dde498-4dbf-431f-801d-b7b7e8d62aa2"
        },
        "item": {
          "id": "04de6577-1a6a-49d9-a778-d510a4f45cac",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4806a5cb-a0b5-4256-afb8-a16c4d9525b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a43eac-f0cf-483f-a3bf-42e79e473cb8",
        "cursor": {
          "ref": "c4ff51a2-2dd3-429d-abae-5714324acac6",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "38498d54-653f-428b-a0d6-b4b0d46f9f90"
        },
        "item": {
          "id": "b7a43eac-f0cf-483f-a3bf-42e79e473cb8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a431dea6-b791-4c49-ae8b-1185e965403b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210acffd-64f6-45e8-b483-572980aaa51d",
        "cursor": {
          "ref": "70061224-089c-46c3-8f30-7fa1969e36f1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "76ff7b79-36f8-41d2-9079-82d3321cfc1f"
        },
        "item": {
          "id": "210acffd-64f6-45e8-b483-572980aaa51d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3bd40d99-b2ad-4a90-b483-e7eef5d3a8fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122d8c98-d30f-4577-9b9d-0caf12972a55",
        "cursor": {
          "ref": "7988213f-7540-46e8-b141-3f6785d772f2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3f3269c2-2027-43f8-bde8-86c9b8e98ab2"
        },
        "item": {
          "id": "122d8c98-d30f-4577-9b9d-0caf12972a55",
          "name": "identifiers"
        },
        "response": {
          "id": "7fc4ad93-40d3-48ae-bcf2-21072c48ce74",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a21eba4-9a4e-4a88-9c64-2fcd000e507e",
        "cursor": {
          "ref": "505cf986-b474-4e10-b653-53edca8367e9",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "59ee7a5e-5e77-440b-b7e7-d8cde641aea0"
        },
        "item": {
          "id": "8a21eba4-9a4e-4a88-9c64-2fcd000e507e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a2f62f03-975f-4148-a675-d380b1b7bf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f7ae94-7439-41ad-9c6b-1b3759ba20af",
        "cursor": {
          "ref": "d586e18a-e990-4385-987d-e02a64018f0a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ab32ae3e-2c4a-4558-a01a-694e70e5ba2a"
        },
        "item": {
          "id": "99f7ae94-7439-41ad-9c6b-1b3759ba20af",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "50839220-e929-4c67-84ab-a0986c9779fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333882dd-d145-4cc0-9bcc-9a2d4143aa47",
        "cursor": {
          "ref": "b7b7d7d3-79de-48c6-b711-79b8e9ed93b9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a59f1a93-4477-4509-bfd5-f46b28ec9e5f"
        },
        "item": {
          "id": "333882dd-d145-4cc0-9bcc-9a2d4143aa47",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8475b9ee-1ef4-491f-82d4-8fc8455bfe31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8c6bde-1f1f-4ce8-91a0-c5292d51b60c",
        "cursor": {
          "ref": "442897f1-0277-43c0-89f9-da2c37dd40ba",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0de57e40-bc56-42ce-a3d5-bedce83ae7be"
        },
        "item": {
          "id": "0a8c6bde-1f1f-4ce8-91a0-c5292d51b60c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "352ef770-ab5d-4699-a45f-83e4044c5b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f901eedb-fed5-4673-bde7-9f4cca9e0ac1",
        "cursor": {
          "ref": "247edd28-2e75-4ed3-bb0b-42e29d3ee50e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b92b31ca-5c1d-4edf-9d65-5991546ed3ec"
        },
        "item": {
          "id": "f901eedb-fed5-4673-bde7-9f4cca9e0ac1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "07c4f48c-e9e3-4652-a47b-090efd8e1cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c028a590-947e-4569-b224-2398225153df",
        "cursor": {
          "ref": "a92dffb7-f5dd-4728-95e0-1e8b1c0a654d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e42bc597-7e6d-4da6-9b05-2b384db76fda"
        },
        "item": {
          "id": "c028a590-947e-4569-b224-2398225153df",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "55ae4333-624e-46af-b644-5c50365d4569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df9da25-0357-443a-b95e-b98d8909372b",
        "cursor": {
          "ref": "22e4d72d-1124-4a6d-addf-798ae1033596",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "895b1440-3611-4cda-b0ff-83ca6e515ee8"
        },
        "item": {
          "id": "7df9da25-0357-443a-b95e-b98d8909372b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "97deb9fa-0a53-4c94-bc39-1b2a6ca05a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad3585e-74b4-400f-9a07-427e14173313",
        "cursor": {
          "ref": "e7809c7e-c03b-49fd-a6e4-fe487f60cc19",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c52ac5a9-e4c7-4565-9123-4e24a5a9b267"
        },
        "item": {
          "id": "9ad3585e-74b4-400f-9a07-427e14173313",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a2a3dfa1-9e28-4f63-9691-3f0dacfbc9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d18f24c-96f3-4253-ac67-af86683a834b",
        "cursor": {
          "ref": "7e08f2ef-3b52-4064-83ca-b6fac788e521",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e21c4180-f9e9-43f1-875d-878f6f50b235"
        },
        "item": {
          "id": "8d18f24c-96f3-4253-ac67-af86683a834b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a0b539db-7830-4cb8-bf0a-9331b970bd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eef64f-f059-4854-87e5-e5af12e3af8f",
        "cursor": {
          "ref": "5949c5f5-0031-426e-9a50-32a1ff853237",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "47c8bc7f-dd25-4f9e-b929-a2d0c2034b3f"
        },
        "item": {
          "id": "e8eef64f-f059-4854-87e5-e5af12e3af8f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "41b68801-acc8-469d-a411-b35398ec0ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da441dd7-fdc5-4c57-af3b-090c56aded27",
        "cursor": {
          "ref": "02ef626b-38fc-405f-a6fa-43f0be50eb42",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "468d0114-103c-4efb-82df-29eb2e4608df"
        },
        "item": {
          "id": "da441dd7-fdc5-4c57-af3b-090c56aded27",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "82566110-735f-43cf-aa84-faeb1a76365f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd010366-662d-4b3d-b141-34674b9df9b7",
        "cursor": {
          "ref": "b408348f-9bfe-419e-bdb7-52bef885c04d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8bc6b726-19c9-44bc-8272-8dbb6383eeb9"
        },
        "item": {
          "id": "fd010366-662d-4b3d-b141-34674b9df9b7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "485d02f7-9646-4bcc-bc6d-0453c7608708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91de2226-1a17-42ba-8145-d009e7665d6e",
        "cursor": {
          "ref": "256b060e-f887-4089-80b6-7d28270b5732",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1168be6e-0e5c-47a8-8dff-92edae29e112"
        },
        "item": {
          "id": "91de2226-1a17-42ba-8145-d009e7665d6e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "153daf5f-0f1d-480d-87be-70f53b2daabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f31ffee-8c40-48fa-b4a3-699bc5723a63",
        "cursor": {
          "ref": "ce5da62e-6d12-4c84-af23-7f09941c89da",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e8bdd4c4-3d77-43f8-9be7-c15b84aba428"
        },
        "item": {
          "id": "7f31ffee-8c40-48fa-b4a3-699bc5723a63",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "70753146-50e5-4dcd-b2ff-b424b95693cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd94d1d2-2891-4335-a787-e7a83c414699",
        "cursor": {
          "ref": "83ff1a41-6e3d-44d6-814f-948fba6c045b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a7222aa7-1c6b-41d7-8371-9f63c493063c"
        },
        "item": {
          "id": "bd94d1d2-2891-4335-a787-e7a83c414699",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c218f6ea-2324-4fff-a241-467e7157991c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1510f78-67a8-43a0-9bf5-319b450cc428",
        "cursor": {
          "ref": "d803634a-3263-43cf-98c6-a6aae430d635",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "be69ef1b-43c2-4c0d-9dd0-21b7f1a9043c"
        },
        "item": {
          "id": "f1510f78-67a8-43a0-9bf5-319b450cc428",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4d7a6eef-d7d7-4b8c-b644-af64e94ee240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1e0cb5-26f7-42d7-bcb1-e9c7cccf38e5",
        "cursor": {
          "ref": "e3f776c9-72a5-4808-bc2c-97b4f6eac060",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "47050764-8857-43fc-bd73-c42d6d21caad"
        },
        "item": {
          "id": "5a1e0cb5-26f7-42d7-bcb1-e9c7cccf38e5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "772b2e64-1e53-4646-ac85-6ac152d1767a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb4d5d5-5617-4d96-b2fd-516d22822721",
        "cursor": {
          "ref": "963ceea0-f71b-4210-89d1-ddae1f5b380b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "08eb500a-68e1-4502-8ea2-67f7a592a08c"
        },
        "item": {
          "id": "edb4d5d5-5617-4d96-b2fd-516d22822721",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "483ebb59-64b9-451c-8e8e-9d5178f5396d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c729f6-615a-4143-a509-5241a8c7b7a9",
        "cursor": {
          "ref": "8ec69827-0e04-463f-9abf-acca257d8552",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "59207732-4719-4586-91ff-6010076f9195"
        },
        "item": {
          "id": "25c729f6-615a-4143-a509-5241a8c7b7a9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5a78ed24-00b5-437c-a56f-4c4a33c03799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748075e4-7ccb-4133-84cb-49bf41477e7e",
        "cursor": {
          "ref": "2136f7d5-2d93-44dd-8d9c-993a634e9679",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a64ed27f-1149-468f-84d6-02ad32000537"
        },
        "item": {
          "id": "748075e4-7ccb-4133-84cb-49bf41477e7e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8e3cdecc-a296-4f48-8937-ee89a0d1343a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9169dd-cb4b-42d0-adfe-2dc40c8c8b79",
        "cursor": {
          "ref": "8f570fcb-0d30-4ccf-a92f-5bd800526b1e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9351a0ab-af6f-4e6a-b625-2de5453d6f1b"
        },
        "item": {
          "id": "6b9169dd-cb4b-42d0-adfe-2dc40c8c8b79",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "505f4e35-065f-4fc9-85d9-35faf95ffde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf80ddb1-1593-4672-b96f-4b881b031353",
        "cursor": {
          "ref": "7ce14623-df69-45dc-be19-6f7114d26d10",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "89ae757c-7fc4-46d1-a425-9f69ee91d2be"
        },
        "item": {
          "id": "bf80ddb1-1593-4672-b96f-4b881b031353",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8c6910ea-ffe4-4fd6-9b06-aa9ae92f2660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5030b7ff-5f04-4567-9ffe-64aee1f4f46b",
        "cursor": {
          "ref": "bac2c29a-4202-417d-b3ad-5fbe347ff419",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4ed1598a-d619-4040-a542-dfd1e53be913"
        },
        "item": {
          "id": "5030b7ff-5f04-4567-9ffe-64aee1f4f46b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c6eb284b-564f-4b97-95ae-3d4ca4a31d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13220824-0fd6-4e27-a843-fa1c9e84babe",
        "cursor": {
          "ref": "5cd5fa0e-989a-4aa1-9f0e-53b08f54cf6e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4c47863f-41b4-4300-936e-70e78ca0d23c"
        },
        "item": {
          "id": "13220824-0fd6-4e27-a843-fa1c9e84babe",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3219488e-d201-4b61-92cc-229d7736fda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5f67bf-16b6-45c6-984d-23d78e471700",
        "cursor": {
          "ref": "ec245f7c-8efc-456e-816f-00c114fa1a1b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2105771f-b932-4c91-8814-0a05afbaa624"
        },
        "item": {
          "id": "8f5f67bf-16b6-45c6-984d-23d78e471700",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f82e51b5-63db-43e4-899d-424a8c6ab0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29553d73-75df-4afe-8895-f69482faa68f",
        "cursor": {
          "ref": "26d9ca7b-4f04-4561-adaf-31cc971cb682",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7ff6684f-af53-406e-a7a9-9ddde1a284f5"
        },
        "item": {
          "id": "29553d73-75df-4afe-8895-f69482faa68f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "04e0af40-31c2-44a4-bf20-687a914ca821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da67f603-dcac-48a5-bcaf-efbe01599342",
        "cursor": {
          "ref": "f3c1759b-20df-4a9a-9426-1fe24ca0a4db",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "924ac457-26f9-4ede-af1f-d3b4aa5b9f34"
        },
        "item": {
          "id": "da67f603-dcac-48a5-bcaf-efbe01599342",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "541c64e7-6fd9-4541-ab4a-5160e93c8152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3180afd-17a4-4328-b288-cfebf0332731",
        "cursor": {
          "ref": "512965c0-ddc2-4fd8-82e7-5f7e7d7563a2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d0b1d58b-caf1-413d-b70b-8a5fb5127a31"
        },
        "item": {
          "id": "e3180afd-17a4-4328-b288-cfebf0332731",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "66f7fc2f-62f5-4b94-b193-3c127cd92d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fab75fc-0918-405f-91eb-bb8015ae9fd0",
        "cursor": {
          "ref": "a0a0debf-142a-43ac-b2c9-9f795f30b381",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "15ba26c8-815a-44d5-91f8-3890005a76b1"
        },
        "item": {
          "id": "5fab75fc-0918-405f-91eb-bb8015ae9fd0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b15d5657-822e-4b68-870d-14865e937d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a07d30d-992b-4ce3-96e0-d2e9c4cada86",
        "cursor": {
          "ref": "68da51cc-bd97-4b33-8487-c148f564fc30",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e3be2fc6-d945-4590-aa08-1ef2631edeff"
        },
        "item": {
          "id": "3a07d30d-992b-4ce3-96e0-d2e9c4cada86",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "64cc4309-fee9-4618-af0c-c7ceacbeda30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2f0b5c-51f5-4dfe-8f90-607fa599f5e2",
        "cursor": {
          "ref": "85cf8642-93a8-48e9-9ce9-664087d593a7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c74907ec-e04e-4ede-9600-7aeee1ea5ef9"
        },
        "item": {
          "id": "bf2f0b5c-51f5-4dfe-8f90-607fa599f5e2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "303824c9-49cd-47e5-a594-3173d86de7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1161ab-df3f-486d-85e1-328758d3a018",
        "cursor": {
          "ref": "953364ec-a891-4214-8dee-153f1b336376",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "96bfc082-3310-491c-9171-daad13baf7b3"
        },
        "item": {
          "id": "fe1161ab-df3f-486d-85e1-328758d3a018",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "106fc6eb-3a65-4760-8c00-c9e4d7543e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b40f898-4003-491c-8586-1dc5b967ee72",
        "cursor": {
          "ref": "e2c2829d-b7c1-4f7c-8f0e-cf91bb2cef22",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "999fda61-985d-4dda-9340-03a5f95fae0e"
        },
        "item": {
          "id": "5b40f898-4003-491c-8586-1dc5b967ee72",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1491af74-2f80-4e62-a6a2-82308256412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fed71f-7122-4a50-bbbf-dac64d8cddbd",
        "cursor": {
          "ref": "e1d499bd-ad90-4230-ab2b-7a35dd3ca1ca",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ee305c9f-7a96-4d73-9d49-694418ef8eee"
        },
        "item": {
          "id": "08fed71f-7122-4a50-bbbf-dac64d8cddbd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b6fb6553-8946-41a3-871e-b70c9a7752d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4231a16e-6ef0-4cfa-b4f1-e365aceaaf94",
        "cursor": {
          "ref": "4bb2b3ab-0c7f-4735-8042-a03439bcd2b1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f01a4376-5ba1-491c-af54-3abe3c8fe046"
        },
        "item": {
          "id": "4231a16e-6ef0-4cfa-b4f1-e365aceaaf94",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e2ee4f2b-10ac-48bc-80c3-deb9d674d390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555026b8-3178-4b20-933e-7d30e439693f",
        "cursor": {
          "ref": "ad26b175-72ea-4168-a142-c3301d9735c9",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b0d34015-c656-4f5c-a9bd-ab42a69f947f"
        },
        "item": {
          "id": "555026b8-3178-4b20-933e-7d30e439693f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "de985beb-6f43-4c94-b1f1-8a8b20bf9a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae68919-4912-4d6c-8f70-29fa371a32da",
        "cursor": {
          "ref": "5bdbe916-00a8-418d-9ea4-72a4aa0658c9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b8ab5b88-93fc-4dc1-9996-1821272068ce"
        },
        "item": {
          "id": "eae68919-4912-4d6c-8f70-29fa371a32da",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f5b06d14-c4ef-464e-8b19-827f791c3fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a6b0a0-f34f-4e53-a8a0-7c0faac777a1",
        "cursor": {
          "ref": "3e79861c-2484-4b03-901b-0b9b98a02013",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3285feb9-3be7-47ca-9517-d47f6af2dde1"
        },
        "item": {
          "id": "f5a6b0a0-f34f-4e53-a8a0-7c0faac777a1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7df3f57a-1bac-42d1-bd3f-3c5830fcb496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bedcba-fb5b-4ded-bdad-d4e8f3d06868",
        "cursor": {
          "ref": "8d6de88f-8990-4c62-b2f3-24b367567922",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fb9e072c-1c16-47a7-95c1-3db6f5a5b561"
        },
        "item": {
          "id": "46bedcba-fb5b-4ded-bdad-d4e8f3d06868",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c80c7257-147e-4110-8a6e-72bd7f880fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421a6327-c241-496e-8129-b9cf435c7d48",
        "cursor": {
          "ref": "c091f06d-ded5-4b2e-9638-00d065798d8f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b3368ff2-ffa8-4a1a-8cd0-ded53e69bf94"
        },
        "item": {
          "id": "421a6327-c241-496e-8129-b9cf435c7d48",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "781c21a1-e32c-469c-85db-b6c2f3ea73dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e565424c-ddb2-46db-bdf9-409463443609",
        "cursor": {
          "ref": "7d7f2294-bcd8-431e-9cdb-38bd73119b67",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ec0be642-19f0-4806-9aad-7db06f8e5290"
        },
        "item": {
          "id": "e565424c-ddb2-46db-bdf9-409463443609",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7d01cffc-5ccb-4f6d-8940-5b1b46d46d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39c56ed-2cbc-4902-8de6-c39d9f93a9e9",
        "cursor": {
          "ref": "f744f4c0-82e9-4200-a3fd-18270476e1d1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9ab32dbc-1637-4168-a1c5-3305a050e893"
        },
        "item": {
          "id": "d39c56ed-2cbc-4902-8de6-c39d9f93a9e9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2d9c1180-f770-41d0-be3e-966b132a3259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cfe15d-45b0-4409-8c77-6373b873d642",
        "cursor": {
          "ref": "32e81a96-b565-4ae5-aaf5-34d55b711544",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d81dd59a-6f57-406c-bfc8-1f61f7dca9d4"
        },
        "item": {
          "id": "85cfe15d-45b0-4409-8c77-6373b873d642",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e3151e09-e323-4f0a-8294-1fe7bb2cc640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e68d29-fee1-49cc-8f9e-2e8ff0d8ac3f",
        "cursor": {
          "ref": "7ed241a1-6f08-441b-8907-b02a00fbe737",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "afa5a20d-e12f-499b-89c0-6086b19341e1"
        },
        "item": {
          "id": "18e68d29-fee1-49cc-8f9e-2e8ff0d8ac3f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fe36cb77-c93e-466b-825e-7cc7997f15fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68304a6d-8fb5-4935-9453-04a6843363d7",
        "cursor": {
          "ref": "d0f6c6a3-93f4-4d24-b5ed-97e3f838fc85",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "300407ad-cac2-4914-b364-2f6d34b09821"
        },
        "item": {
          "id": "68304a6d-8fb5-4935-9453-04a6843363d7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0b8abce0-af99-48d0-b5ad-6706c40021e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c428d386-e961-44df-975e-974c384cb891",
        "cursor": {
          "ref": "c15d507f-59a6-435b-b26c-4101470ec1e0",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d2e44db3-a423-4eb4-b17f-10892816757c"
        },
        "item": {
          "id": "c428d386-e961-44df-975e-974c384cb891",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2f8f79c2-5d99-48f6-b25a-92d56202b678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f316d0e5-68d3-4520-9949-9e2e97119970",
        "cursor": {
          "ref": "8f8f4f33-f347-4a53-ac23-7ef7583844a4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e7158d79-643a-4093-af04-8e82f12734fe"
        },
        "item": {
          "id": "f316d0e5-68d3-4520-9949-9e2e97119970",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5131749e-068f-4d12-a77e-4ef62a680495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6290e4da-bb2e-40d8-964e-f025f541a36e",
        "cursor": {
          "ref": "e69bdc92-b984-4cea-b16c-d50eb0162fdc",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f995fe66-4f1c-47d5-a267-c73bfb448027"
        },
        "item": {
          "id": "6290e4da-bb2e-40d8-964e-f025f541a36e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7eccf8a1-2468-42d5-a26e-6a1284968787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69c7173-9799-41bc-8c5b-8d27a33ece38",
        "cursor": {
          "ref": "68edf11c-e557-4431-8eeb-d81bfa51da20",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "191dc1b8-4cad-42c5-bd82-34b6a6862b0b"
        },
        "item": {
          "id": "a69c7173-9799-41bc-8c5b-8d27a33ece38",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8f50bace-6214-49b1-bede-0da9dc67c668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e4d7f7-deb6-4076-9317-4f4808226038",
        "cursor": {
          "ref": "66d27bbf-dd27-47c3-90d9-65ad61f74c8b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dca6f298-bc8b-49d1-bda1-e3c102c628a5"
        },
        "item": {
          "id": "40e4d7f7-deb6-4076-9317-4f4808226038",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "070a5ea6-31a8-40ab-97e4-3c8301da0bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7462d279-4b99-4e89-b3f0-0725bf2c5349",
        "cursor": {
          "ref": "c338c62b-f81b-4237-bc9a-799879b5cd6e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4e51ceb6-b441-4315-a088-360316b874b4"
        },
        "item": {
          "id": "7462d279-4b99-4e89-b3f0-0725bf2c5349",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "143ae1aa-4f06-43c7-a9c8-338cf63c0cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31c86e5-5a24-425a-ba5c-6dabac4025be",
        "cursor": {
          "ref": "a66e46e2-12a0-4be9-8f45-4afe721fc741",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "963518ea-9134-48e7-b203-0c841b7648b6"
        },
        "item": {
          "id": "f31c86e5-5a24-425a-ba5c-6dabac4025be",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "217277cd-27b5-4bf3-8a5c-5d07edfba3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff08f306-c6cd-4944-bbda-0c7b5d31e671",
        "cursor": {
          "ref": "37c68380-01c0-410a-a07c-9e2befe2a68d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b7c94f64-1e11-465d-b580-40d9205e2b53"
        },
        "item": {
          "id": "ff08f306-c6cd-4944-bbda-0c7b5d31e671",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "70a1848c-b28d-4881-abbb-f9fa8822d521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bfd84c-fb53-4054-ab1d-6e36d5dc5650",
        "cursor": {
          "ref": "ad18081e-2544-436f-afd9-ebfd7652bff3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8238ec72-1041-45eb-a852-274d7159ba03"
        },
        "item": {
          "id": "28bfd84c-fb53-4054-ab1d-6e36d5dc5650",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7a26a9dd-a374-4642-808f-b5371ee9b248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acc5c14-b8d0-4e09-bccc-a55ac3ec9e4e",
        "cursor": {
          "ref": "55a6e47c-983c-4dd4-83fe-bfce3dbeb936",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dcae20f2-52e5-47eb-9e87-840a1477b0c1"
        },
        "item": {
          "id": "3acc5c14-b8d0-4e09-bccc-a55ac3ec9e4e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c7cb2023-04fb-42bc-bf24-cd2aa1b9ce54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4cbbf2-d9ea-4be6-93cc-547f51962ca9",
        "cursor": {
          "ref": "e6f0a996-eb60-4dd0-bb28-7cd531cb71cd",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "acddae3e-b9a3-4178-9f13-1af0822af151"
        },
        "item": {
          "id": "ac4cbbf2-d9ea-4be6-93cc-547f51962ca9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d19c4612-ff58-4e3c-8a93-c6268a53bd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67822845-982e-4a95-9be6-b18957fd5e8f",
        "cursor": {
          "ref": "1e5c5681-e7cf-4d3b-8196-396d81bb802b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "27e15b43-9dd7-4ea4-917b-ea319c421dbf"
        },
        "item": {
          "id": "67822845-982e-4a95-9be6-b18957fd5e8f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8c4c5eb6-5e27-4447-89ad-9d0553c194fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1980a6cb-97c6-489d-9544-c6ea6089b55b",
        "cursor": {
          "ref": "91c92cdc-757d-409e-aa44-d7835e5d3694",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "566aa8b7-a293-41f0-8733-838fb478b275"
        },
        "item": {
          "id": "1980a6cb-97c6-489d-9544-c6ea6089b55b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0074f045-a213-4c27-ae10-1ae5836b711d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae23f5b-79b1-4d3b-b363-ca07d7e8d036",
        "cursor": {
          "ref": "f3dc13b2-9e92-4286-acff-efa9e5e13a65",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "676aa8f0-74a6-4cda-95f0-6987e6a93f9c"
        },
        "item": {
          "id": "9ae23f5b-79b1-4d3b-b363-ca07d7e8d036",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d000aebd-9626-475b-a968-c421cb62dce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d060fd09-c474-474e-b2b5-dcd9b7201c0c",
        "cursor": {
          "ref": "8a077485-9982-4ab4-a8a5-d1e667f4d153",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3b4a8130-0cb9-476e-b743-f5ca0932240c"
        },
        "item": {
          "id": "d060fd09-c474-474e-b2b5-dcd9b7201c0c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ffcf2ccb-b8f1-4eac-a12b-2d1d2ca10be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70eb0ab-0a5d-4f2e-9d05-a7d5af4572bb",
        "cursor": {
          "ref": "11782649-a3d6-4632-8fa7-b0bc0cc47971",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a36c0c76-eb25-4702-a087-5eff99fcca78"
        },
        "item": {
          "id": "c70eb0ab-0a5d-4f2e-9d05-a7d5af4572bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0242cde8-ef26-4163-9b2f-5faf19fe254a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e881bdf-147a-42b9-9dc2-7cd434486cdf",
        "cursor": {
          "ref": "bd4f0a7a-8160-43e3-ad0c-86fbfc1513cf",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e674267f-f0c3-4fbf-97a0-76760d80f134"
        },
        "item": {
          "id": "4e881bdf-147a-42b9-9dc2-7cd434486cdf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dc4ab171-82ff-49c2-aceb-a9c4991861f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a58c44d-59d2-4649-8793-7f5ef1a0e87d",
        "cursor": {
          "ref": "794d8e62-e311-41b4-b7c8-73406090bf91",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "43a6276b-002d-4910-bb4f-061e68647fe6"
        },
        "item": {
          "id": "5a58c44d-59d2-4649-8793-7f5ef1a0e87d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b8667239-bd44-49c3-9375-66993c663c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146b2b49-4bf9-4d3b-b069-de23094afb4e",
        "cursor": {
          "ref": "69d7a91f-9c56-486f-ac4b-846c7fb370a6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d0bf2a4b-3806-4671-ba18-0e57879e526a"
        },
        "item": {
          "id": "146b2b49-4bf9-4d3b-b069-de23094afb4e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a596fdac-090e-4d00-a2ee-00bb1ab9a32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b9916b-5be9-41f6-97ab-390ea496bd01",
        "cursor": {
          "ref": "4c4d3d6d-b218-4cf1-ab59-4c6c23959fc3",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4c9fb335-1e7b-4f7c-88d3-f50a16db04a8"
        },
        "item": {
          "id": "c3b9916b-5be9-41f6-97ab-390ea496bd01",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8a5cf01e-53c8-4a47-af8d-f8b89af7e30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25eeddd-8a0d-4dbe-9587-1a35417f4e44",
        "cursor": {
          "ref": "2fd62166-20dd-4541-98c2-9c8b2c807372",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3b568f18-de66-44c3-9a3f-46dce03160a3"
        },
        "item": {
          "id": "e25eeddd-8a0d-4dbe-9587-1a35417f4e44",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "837083db-f5af-4eaf-bd55-d51d74a6681f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c473f4cf-3db0-41c6-9651-ae42b45d48ea",
        "cursor": {
          "ref": "3fd10f53-0044-4190-a7fc-b97c656bc36e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4c7ec890-c88e-4bd8-9aa5-9ec09c68b3f8"
        },
        "item": {
          "id": "c473f4cf-3db0-41c6-9651-ae42b45d48ea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "21c7f665-e678-4394-b57f-64145b95160b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d67cf1-5bfe-49fb-b7e2-0c20ee11cac2",
        "cursor": {
          "ref": "6d91412b-6d59-4463-a0b0-8130764e2b42",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ce4059fe-fe9d-4f02-83d2-48d7bd833561"
        },
        "item": {
          "id": "c9d67cf1-5bfe-49fb-b7e2-0c20ee11cac2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "04d7e45b-ccdc-44e5-be5a-05a07da80302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b430e9b7-1fb6-4350-892f-45c69a829a4b",
        "cursor": {
          "ref": "2131d4b8-535e-4a6c-a64b-e188b0a6cc06",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f7e090fe-ef53-40a8-b98b-4a117520a93a"
        },
        "item": {
          "id": "b430e9b7-1fb6-4350-892f-45c69a829a4b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f93f3c3c-4c29-4b83-ba35-6629c59fbeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea5a9a1-aa5c-4e2b-bfc8-313f1200f842",
        "cursor": {
          "ref": "b48c7626-5c6d-43de-8033-4af441fc642d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6f5629ea-a785-4eca-8a32-f249a0dc57ad"
        },
        "item": {
          "id": "0ea5a9a1-aa5c-4e2b-bfc8-313f1200f842",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "af2ebb21-2115-4764-b859-dfcf3b90cb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab7797d-1871-4750-91e7-04a2888d1362",
        "cursor": {
          "ref": "d9106d50-67b0-4d1b-a7af-5487ad79f088",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a02744ae-d4a3-4366-9d57-7e2ecc149a8f"
        },
        "item": {
          "id": "1ab7797d-1871-4750-91e7-04a2888d1362",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1cd55f14-f9f1-48c2-af10-90f00e37a464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a170104c-db2f-487a-b7e8-2cf26e643aa5",
        "cursor": {
          "ref": "f07609cb-ead9-41c4-9527-c58f5e971664",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "57c87467-5524-49ac-92a7-b534231c02a5"
        },
        "item": {
          "id": "a170104c-db2f-487a-b7e8-2cf26e643aa5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ae56d1b0-19ec-4b5d-8ca4-3bd2a41d867e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84aa0180-0c9f-48da-970d-b6247c82edf1",
        "cursor": {
          "ref": "b93de325-1b36-4440-a22c-f9ead2b5aa3c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b95c4206-b1c4-4cc6-b3d0-36ca34a8b202"
        },
        "item": {
          "id": "84aa0180-0c9f-48da-970d-b6247c82edf1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b1f02a4b-0123-4f62-96f9-ccb74f7226ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8e0703-b97d-42be-885f-c121e6ec1e5f",
        "cursor": {
          "ref": "de69d9fd-4e68-478d-8b45-7217ccf62762",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "98c916c6-445b-4ecc-b506-69a4d92530ac"
        },
        "item": {
          "id": "3c8e0703-b97d-42be-885f-c121e6ec1e5f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b144a273-7443-44ec-a99f-30ae57042702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9303c289-2782-4073-9862-3d55b39e2354",
        "cursor": {
          "ref": "9676d934-4401-489a-9c84-fc18d02e0d22",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7bf25b11-5671-4618-88a8-35cffeec6ce1"
        },
        "item": {
          "id": "9303c289-2782-4073-9862-3d55b39e2354",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "53839e95-2311-46c2-b668-6174152830ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546cce6b-ecd0-469f-b009-494c84dde4a9",
        "cursor": {
          "ref": "ec27ecb4-17af-484a-9a96-f1546956a78b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9702afd4-e014-480a-b6e1-b269097af880"
        },
        "item": {
          "id": "546cce6b-ecd0-469f-b009-494c84dde4a9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5e57490e-f4c4-4243-ac57-0365ebf431e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee5bccf-6165-42df-a9c8-527e050fb449",
        "cursor": {
          "ref": "51bff6d9-61d9-4641-a75e-1eff9e9d639a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "28f0574a-f430-4785-9b0c-7ba8a8edea2c"
        },
        "item": {
          "id": "0ee5bccf-6165-42df-a9c8-527e050fb449",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6b8ea92b-624c-4ec7-91ee-8c257fcd9437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccf168f-b06e-4ba0-bed3-f4206d1d30f7",
        "cursor": {
          "ref": "362a49f4-ffdf-40b5-9207-617f979ae6f2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4325f164-3751-42b3-8c64-007f5520d1bf"
        },
        "item": {
          "id": "9ccf168f-b06e-4ba0-bed3-f4206d1d30f7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5e43dc92-7b4d-41c6-ba5d-9780464cc0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc6c37c-8923-41dc-a8e6-91dec5ab2fc4",
        "cursor": {
          "ref": "748bda42-33fe-44f3-8f86-372844e14125",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "27abdd35-fb07-454f-8880-cd9d0d56ac07"
        },
        "item": {
          "id": "ddc6c37c-8923-41dc-a8e6-91dec5ab2fc4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b8681dae-c004-4f40-b100-b368a14f8b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4790555-8213-4f35-8132-e7cddc4a4b20",
        "cursor": {
          "ref": "ca6aadc8-67f4-4b51-aeff-adc0f854bd55",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7a71c0ee-a3c4-49b8-88b7-2ff1ec473d09"
        },
        "item": {
          "id": "e4790555-8213-4f35-8132-e7cddc4a4b20",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "636b6e66-8339-4879-b583-0ffff7b54cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb4e2ed-d9f6-4abc-b5a5-57745e0b8e3e",
        "cursor": {
          "ref": "46e56b0d-e383-4c83-9879-37b3eee87f39",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aa514606-a764-4e47-9c24-495eadf21413"
        },
        "item": {
          "id": "abb4e2ed-d9f6-4abc-b5a5-57745e0b8e3e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7169d9be-ddc8-4d1a-a629-d581355d6095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdee132-f87a-42e4-b13e-fb853b815c46",
        "cursor": {
          "ref": "62f09626-a6be-4f49-b50b-e48f212e3d71",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "90a0dcce-1e29-47e3-8392-dda9efa98d28"
        },
        "item": {
          "id": "4fdee132-f87a-42e4-b13e-fb853b815c46",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "729fdf14-70be-4665-83d3-52b7b2748559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe7a1c0-e9c6-4673-a0a1-058f83113813",
        "cursor": {
          "ref": "f90bfab5-4d7b-4358-8bd4-31ba6913924e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d01c7c56-544d-4f96-88c1-15225184f36d"
        },
        "item": {
          "id": "7fe7a1c0-e9c6-4673-a0a1-058f83113813",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a95a716b-7820-4daa-ae98-a66f6bdddace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f8886a-ccbe-4f86-859c-3e9258e83c88",
        "cursor": {
          "ref": "42811a37-da05-4c80-ad68-2d72bdcfdd5c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8dcb1c7e-c6e2-4bc6-8bf5-1b7a0edbd3a1"
        },
        "item": {
          "id": "62f8886a-ccbe-4f86-859c-3e9258e83c88",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9d5ce8dd-6732-4046-b704-622a1f39464d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1130fc6-d5b1-4c17-beca-51b6203f014a",
        "cursor": {
          "ref": "ed2bed93-89e9-4fc7-9f34-e8020166fd23",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0f4b8cb8-d47a-4b1f-9c44-54833633fa2e"
        },
        "item": {
          "id": "c1130fc6-d5b1-4c17-beca-51b6203f014a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a7859efe-03b0-43a7-942b-c0253ac3d00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9498efda-6095-4bf5-93e8-427d172e99d2",
        "cursor": {
          "ref": "40cf5ca9-5945-43fd-bf4d-293f90f885c8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b8e7ba57-3845-404d-a68d-f09f545ba652"
        },
        "item": {
          "id": "9498efda-6095-4bf5-93e8-427d172e99d2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4a326330-1961-4109-9156-fd4b1cc026ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90547f50-8c13-43af-a0e6-f45bd7ffb920",
        "cursor": {
          "ref": "5ed3599e-2383-4e27-81bb-481f8b91fbfd",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dc8664c3-60c0-4529-b6bc-75c2682cf598"
        },
        "item": {
          "id": "90547f50-8c13-43af-a0e6-f45bd7ffb920",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3a1bc247-828f-43df-a7b2-5eca489be173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c756c05d-e467-4c86-a53f-25626a3393a3",
        "cursor": {
          "ref": "d8a5b247-28d6-4569-a899-ae1795aa5b10",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e9992e88-8929-4277-9e5c-ca63368b2048"
        },
        "item": {
          "id": "c756c05d-e467-4c86-a53f-25626a3393a3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fb82b959-4d71-4fbf-8a00-2364b236ad03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42ae79f-9bd2-4d23-8951-926f34b681ac",
        "cursor": {
          "ref": "024dc4ef-9bfe-43cb-897e-9ae5a17c92d6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b3a59bec-4d6d-47f8-ac5b-16a9df2ecfa6"
        },
        "item": {
          "id": "c42ae79f-9bd2-4d23-8951-926f34b681ac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "59c1b7e8-a955-4557-8ab5-ac3012cb4ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6acd41-32f3-4035-928d-562401b626b0",
        "cursor": {
          "ref": "3e531f32-4765-4430-927a-3bc67704c5a7",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8b9b6d27-3c7e-4da8-bd42-567e990217cf"
        },
        "item": {
          "id": "4d6acd41-32f3-4035-928d-562401b626b0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "64a36c15-8e05-4934-b03c-f14586e1820a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c664db0-2449-4707-9d86-422a055497b5",
        "cursor": {
          "ref": "f373d6f9-72ba-49f7-8d03-167af4e73451",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "08c8ac4d-48be-4353-ade7-c2c6381fad43"
        },
        "item": {
          "id": "1c664db0-2449-4707-9d86-422a055497b5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "89ddc9a2-f8ad-4c44-b7bb-4af646f5c0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdfe23f-efae-4c58-a610-846eb3c33871",
        "cursor": {
          "ref": "fde1ca80-661e-49ca-83f2-639189cb42a7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "45878fb4-e9ee-4e5a-9ee0-1dbc2a6f421a"
        },
        "item": {
          "id": "6fdfe23f-efae-4c58-a610-846eb3c33871",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3f61b986-257a-4108-9bbc-2fa4dde96bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94216152-84b5-487e-b130-fbb159beba2c",
        "cursor": {
          "ref": "33e23391-b24b-4c1e-b91f-69933c2e91d8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7fab4e52-af1c-4fc1-a5cf-380e537f3cf8"
        },
        "item": {
          "id": "94216152-84b5-487e-b130-fbb159beba2c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1393158c-99f7-4201-ae5d-854cbb1a7e2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a247980-df06-4ded-9565-70b3e9737884",
        "cursor": {
          "ref": "b852a4f8-a88b-47d4-a547-ec98844cc697",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c9e3b41c-9b73-4d86-b0af-d58525a1dadc"
        },
        "item": {
          "id": "1a247980-df06-4ded-9565-70b3e9737884",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "81de2976-e687-4a02-a9df-e57365f5bbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "70502972-f2ed-4163-bb59-58ff6805354c",
        "cursor": {
          "ref": "c6ef7d57-0b94-4437-a2cc-09d3aca14b59",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c4f55909-be91-462d-93b7-da5c1fba1ac3"
        },
        "item": {
          "id": "70502972-f2ed-4163-bb59-58ff6805354c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e81048d6-f72d-457f-bb4a-389f816bdf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "bb85e1ae-6924-4167-bbfe-6ae0cb0bf447",
        "cursor": {
          "ref": "c79feb07-5d86-4e5e-b760-21b572e59052",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2708eedf-aa8f-40b0-a809-c17505aef6fb"
        },
        "item": {
          "id": "bb85e1ae-6924-4167-bbfe-6ae0cb0bf447",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3b7fcfa0-41e7-4b28-a104-846c1a1a2ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9db93db6-3c66-4cf3-9958-d05f1df2caa5",
        "cursor": {
          "ref": "45c90440-134e-4f63-b8cc-6d02e7740796",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9bac7b94-e4aa-46cd-ac4c-3ecc4cab79df"
        },
        "item": {
          "id": "9db93db6-3c66-4cf3-9958-d05f1df2caa5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "878392da-ce19-44eb-9910-4dd814ec6e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8561c5b4-f1a9-41c8-984b-f8226fa08dec",
        "cursor": {
          "ref": "bfd03125-5cb4-45f8-89f6-fe6601c1d939",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0ec24d5d-0e42-45d2-8305-e73189360705"
        },
        "item": {
          "id": "8561c5b4-f1a9-41c8-984b-f8226fa08dec",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1046f85a-b96d-44c6-bd8c-50de0384bdb9",
          "status": "Created",
          "code": 201,
          "responseTime": 11045,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9884a626-f9a5-43e9-a825-f0bb082d244c",
        "cursor": {
          "ref": "2a647e1e-cadc-4be1-9e8a-20e87bd2add0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ac3c32b1-b3dc-4f7d-bbc8-b53a4fca140b"
        },
        "item": {
          "id": "9884a626-f9a5-43e9-a825-f0bb082d244c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "94857128-e762-4058-9f99-dc1440ac5535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "76cdc065-2c08-4295-9500-73a8ffb081e8",
        "cursor": {
          "ref": "98146d0a-a870-4c8e-8e28-7bc90fe235a5",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d9434aa4-96c7-42e6-9cec-94765118f330"
        },
        "item": {
          "id": "76cdc065-2c08-4295-9500-73a8ffb081e8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ce3ac008-f2f7-4503-824c-20a9347b0246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a4fd7ffe-0c1a-434f-bd13-6b263eab9fea",
        "cursor": {
          "ref": "d824144c-dd19-4258-8705-0f26733a46d1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "73b0300e-a4f4-4c3e-bbc4-e9c6b296222d"
        },
        "item": {
          "id": "a4fd7ffe-0c1a-434f-bd13-6b263eab9fea",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6fbee00e-cf6b-439d-8947-e933ffffb69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd2b7b7-f29c-4bcf-953e-ff579af59ff8",
        "cursor": {
          "ref": "c5ffcd4f-3379-4aee-9382-2b5179f1a2e7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "55575cd1-2c41-4516-a3ab-c0bf71e4dd43"
        },
        "item": {
          "id": "cdd2b7b7-f29c-4bcf-953e-ff579af59ff8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b09f86d3-2f8f-4605-b022-cf23a528304c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a53de74-fd0d-4083-88d2-2e700699213b",
        "cursor": {
          "ref": "7c380cf2-fc79-46a1-a20a-97750c879d03",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "94c0a24a-5499-4bf6-9d62-cb221a6fec44"
        },
        "item": {
          "id": "5a53de74-fd0d-4083-88d2-2e700699213b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a6724416-9d6e-42e8-9631-fb9aa8342493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2e5a2a-7fca-4679-bb4d-d3179820b9ff",
        "cursor": {
          "ref": "1b9c13bb-8df4-4fd7-9e62-451733dd8cbf",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "65043f4e-7505-4bd0-be87-12b0877c5c00"
        },
        "item": {
          "id": "db2e5a2a-7fca-4679-bb4d-d3179820b9ff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4843ebf7-f975-4f45-844b-9a01177d8aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74fdeea-4e56-4a84-95fd-d94cd000d38b",
        "cursor": {
          "ref": "b928065a-b6fa-408c-85f2-397bb33d9e6d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d8cc8a4d-1abb-4216-bc11-6665f22f6c3d"
        },
        "item": {
          "id": "b74fdeea-4e56-4a84-95fd-d94cd000d38b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f43dabac-e22b-4a5f-8b32-874d7c64e206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c1dcee-df06-4366-9511-c150193db3fb",
        "cursor": {
          "ref": "7a0474a5-ee87-4d85-b7e9-6a003ef1c626",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "12cea229-4a12-47b5-91e0-ce2c1e63d15f"
        },
        "item": {
          "id": "b2c1dcee-df06-4366-9511-c150193db3fb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "937241e4-1f39-4a3a-98af-df8f8f9d8c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2d0d67-09ab-445c-8b6b-51fbbfbe1b4f",
        "cursor": {
          "ref": "802d3b64-920e-4e81-99dd-2ac944de7502",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "915dac71-84a3-46f8-9702-a326d1bfb650"
        },
        "item": {
          "id": "4e2d0d67-09ab-445c-8b6b-51fbbfbe1b4f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "80d38fcb-b136-4f6b-8d57-1c3e510c140b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d718ef6a-fff9-4865-bb0b-09c90b35c962",
        "cursor": {
          "ref": "c0f8f2ef-e81c-480f-a0e6-fc5fb0238ed3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "076cd797-89df-4069-8c75-7557f150498c"
        },
        "item": {
          "id": "d718ef6a-fff9-4865-bb0b-09c90b35c962",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1e8c2fcc-4bd2-4c71-b361-61f931b237d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1668bc-26fe-4d88-a0dc-d9c73cc7e31f",
        "cursor": {
          "ref": "3f4670e2-2df6-41b1-a39a-1481009b6969",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "07a1d6b2-6c0c-4a13-8466-9225991e4e5a"
        },
        "item": {
          "id": "7a1668bc-26fe-4d88-a0dc-d9c73cc7e31f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3e3cbbf8-e54f-427c-a654-7be137d69c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f91184d-fcb5-4df6-b296-165be82a1009",
        "cursor": {
          "ref": "0e74c31a-867c-441d-b9b4-ce6403489990",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6cf3ac3a-089a-4461-ac5b-fca4fed9b31c"
        },
        "item": {
          "id": "3f91184d-fcb5-4df6-b296-165be82a1009",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "74cf636c-8117-400a-b03e-1f0527d3c17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901a8432-2b42-440e-84a0-b3e69c469883",
        "cursor": {
          "ref": "459f08b1-4548-4676-9e8a-6fb3253d0f93",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "afc9dd5e-3823-4c8e-914c-56660be311b1"
        },
        "item": {
          "id": "901a8432-2b42-440e-84a0-b3e69c469883",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "62823bf8-4a3e-4f1a-b0f1-d56ec4b11af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71880a6e-73b8-4b55-a0ad-7173800721c5",
        "cursor": {
          "ref": "2549cb80-a9d9-444f-9f65-881480813acb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c0e7f442-f412-4d56-b1fb-42f46dff69ce"
        },
        "item": {
          "id": "71880a6e-73b8-4b55-a0ad-7173800721c5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "10b23a67-8235-4ae7-8aaa-5de3e3c61ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ab0304-4c7b-41d3-805a-c97656793cfb",
        "cursor": {
          "ref": "8f9eeaf1-0e15-42f8-b7cc-6b95b728448a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e803bf86-80bf-4437-9132-4cf6dbe31f9b"
        },
        "item": {
          "id": "78ab0304-4c7b-41d3-805a-c97656793cfb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e0126ce4-0e86-4427-ab40-9ddfcd1cdf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef34828-1df4-4a5f-a900-40c4388f9ab8",
        "cursor": {
          "ref": "23586e68-064b-4ddc-bcae-f6ef50c39035",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "67095d64-fa40-4c51-8bf7-cac834c41c16"
        },
        "item": {
          "id": "4ef34828-1df4-4a5f-a900-40c4388f9ab8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fa2654ee-2721-4dda-bfa4-d599ac65e3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a1e48f-db12-4836-8366-a97dd7f95f64",
        "cursor": {
          "ref": "73ac8873-0643-4e65-8610-9db8b9dc92dd",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e54a4195-2599-437a-bc54-5e57168b2100"
        },
        "item": {
          "id": "24a1e48f-db12-4836-8366-a97dd7f95f64",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "60befe8d-c9e4-432a-af62-09622edfc6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfa359d-e174-455a-a926-e9773253ebc7",
        "cursor": {
          "ref": "b8da2094-716b-4b35-b1df-9b161a3b9210",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "73d8dd22-08b3-4882-a214-330f340b395c"
        },
        "item": {
          "id": "3bfa359d-e174-455a-a926-e9773253ebc7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6ab252cc-4522-4c8f-8c40-a21688b5062a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683f4643-e229-4bfa-a8d2-8ec986bd0e69",
        "cursor": {
          "ref": "714d4d99-18ed-4b50-944f-36dde5f54d11",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "181bb0dd-0c0c-42de-98e0-46930488c63d"
        },
        "item": {
          "id": "683f4643-e229-4bfa-a8d2-8ec986bd0e69",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "82135a4e-a53b-4eb0-8d0c-3ddff30ec437",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "754e4793-4b96-4958-877f-aa5b9a8d01e9",
        "cursor": {
          "ref": "7152fa41-d02e-419a-96c2-009c7d6ea58f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "85e9b496-e854-4100-95f5-60909fb4039a"
        },
        "item": {
          "id": "754e4793-4b96-4958-877f-aa5b9a8d01e9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "59b6e38b-521b-4cfb-901b-edb4a768ebc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e35141-62a8-46bf-922c-b02de6f5687e",
        "cursor": {
          "ref": "eb6c9217-d34f-4866-9086-ee5908269f41",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "eeee9eb0-d503-4b8b-b9c7-7bc3f88d06a5"
        },
        "item": {
          "id": "c7e35141-62a8-46bf-922c-b02de6f5687e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "06418bdc-bf97-400a-af4d-d76c75398bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478977c4-811a-41a9-89e9-777e9f1d6352",
        "cursor": {
          "ref": "19b55576-4e97-40dc-96f0-22fe200a484e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d685e584-aaab-47ec-b8a7-22e683e0390c"
        },
        "item": {
          "id": "478977c4-811a-41a9-89e9-777e9f1d6352",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4dcbbb3f-bc27-4530-9b91-daf9290ffb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57480691-dd46-4e85-a9ff-3753862bec81",
        "cursor": {
          "ref": "ddcd2961-5db0-4402-bda7-65c2deb07226",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "846632cc-1036-46be-b5eb-13f55a48d83e"
        },
        "item": {
          "id": "57480691-dd46-4e85-a9ff-3753862bec81",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "232f3fea-5820-41f2-8845-1e47d16eb8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5b5226-0235-403e-8a07-2eaa18151c53",
        "cursor": {
          "ref": "df61f9ad-2053-4bb4-8568-266d2837f592",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "85a44365-7ef6-4d5b-8ffe-6abf78863e92"
        },
        "item": {
          "id": "9f5b5226-0235-403e-8a07-2eaa18151c53",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0143e457-424a-4940-ac33-2327f745da79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06082b-7660-4549-83dd-3b64d58adbf2",
        "cursor": {
          "ref": "42cf9a61-b6b9-4d1e-9b96-ecb3b68b46c8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5dd7d29a-1aaa-415a-aff3-e9924c7bc256"
        },
        "item": {
          "id": "2f06082b-7660-4549-83dd-3b64d58adbf2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bc188ab0-9e8d-4254-bf43-ca4e403c13c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e92210-8129-46b1-812d-3376c84d77cc",
        "cursor": {
          "ref": "be289031-10b0-4bd2-ac73-7a8589e83c55",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7b925025-59de-4f1c-a579-362ed19aab55"
        },
        "item": {
          "id": "e3e92210-8129-46b1-812d-3376c84d77cc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c8712344-d921-48ea-9fe8-25f7c52cfc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c94615-a033-4410-82cc-b957394d0613",
        "cursor": {
          "ref": "d8fc5a60-d622-49bd-af49-4ed539018da3",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bf957bc5-461d-4436-9132-f10a777c9739"
        },
        "item": {
          "id": "08c94615-a033-4410-82cc-b957394d0613",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d1f30640-7a89-435d-9264-66c71747593b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2e0a64e2-d62e-4941-b1ce-a8ceadd4a280",
        "cursor": {
          "ref": "127459f3-6add-43b1-b823-e275e2b5e224",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3e210d43-9911-4d05-9b3e-fc2882e5176d"
        },
        "item": {
          "id": "2e0a64e2-d62e-4941-b1ce-a8ceadd4a280",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b312053-8ff8-4875-b8ab-ecf86a110c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04a2669-e0a7-4e83-94f0-666eb5c7cfa9",
        "cursor": {
          "ref": "9bef5c02-bb4f-4e43-80d8-89b64e3d932c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "40a91471-b684-4ee1-b3e7-bcd2def3eb1d"
        },
        "item": {
          "id": "c04a2669-e0a7-4e83-94f0-666eb5c7cfa9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "10c1b6f5-8f84-482d-831f-8ea06f35a340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0266c8-a505-4bda-be43-3f76a361c6dc",
        "cursor": {
          "ref": "d58ba038-9822-40cb-b497-90ed3f054003",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a0de474a-7e51-4fed-bf4e-26f9e9dadf47"
        },
        "item": {
          "id": "3b0266c8-a505-4bda-be43-3f76a361c6dc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "48ad81e4-8484-451f-8c32-74470442500d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24790a8e-482d-43cf-bfcc-ee403456e6a1",
        "cursor": {
          "ref": "8282ad0f-6d99-4437-b4f1-9397e7dd5896",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d34edc98-3413-4948-8a33-53860709e84e"
        },
        "item": {
          "id": "24790a8e-482d-43cf-bfcc-ee403456e6a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b172c6df-38b2-4bdb-9caa-75c4b3a9ebb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7493a3b-2b26-4175-8f59-d3840295c81b",
        "cursor": {
          "ref": "383990af-ce84-4323-8ed9-2bc6bbb3dc10",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3dcf8111-d59c-41d5-943f-6bc1ae04e5ce"
        },
        "item": {
          "id": "d7493a3b-2b26-4175-8f59-d3840295c81b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4f61e723-868a-4304-b3c6-492fc33ae53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1074d84e-a4d5-41b2-92bc-de308eb379b9",
        "cursor": {
          "ref": "6773f4d0-c7de-4cad-8bae-77c14ef5a90c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e76a1198-5053-4aa1-9464-542d5a2acd02"
        },
        "item": {
          "id": "1074d84e-a4d5-41b2-92bc-de308eb379b9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9c977ed-6091-478f-8727-79254f03110b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7b7da9-a06e-4278-90cc-ba94fcffcd89",
        "cursor": {
          "ref": "e4af8607-3f3b-423c-8a6d-4013d94372f2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d9cdf5cf-0a64-4363-8124-f09184139975"
        },
        "item": {
          "id": "0e7b7da9-a06e-4278-90cc-ba94fcffcd89",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e781a974-9790-4348-91e1-0428b3ac2e4e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "6cb91ee9-8b9e-473c-a05c-5d974f29f6de",
        "cursor": {
          "ref": "24446405-1ad5-4841-b7cb-f685a6a891b2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "55cb0b1e-e699-4b28-ae8a-0a992fb2f18f"
        },
        "item": {
          "id": "6cb91ee9-8b9e-473c-a05c-5d974f29f6de",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8547e9f2-78be-4be6-ab69-40dbee847b3a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "cce48ee4-362e-4d2f-bc88-f4a3062868f6",
        "cursor": {
          "ref": "32664c0f-c86b-4cea-9c74-57504b5b3a09",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "42ca6e53-d92c-43a6-9ea6-b69bf46c3580"
        },
        "item": {
          "id": "cce48ee4-362e-4d2f-bc88-f4a3062868f6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2472f24f-f44c-4290-83a6-f26b83779af3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "19f166b8-6e9c-47fb-adf3-d75ccc2fd906",
        "cursor": {
          "ref": "822ad50b-5f61-4a14-b236-0cc3dff585b0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "de1958eb-0646-4142-b8bd-5d7b4e6f3d7a"
        },
        "item": {
          "id": "19f166b8-6e9c-47fb-adf3-d75ccc2fd906",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "42116258-47c3-42a7-abc1-8d96f4094c52",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "446ac9ef-b961-4c3b-85fc-4a53f361b7cb",
        "cursor": {
          "ref": "12624db0-5556-4122-91dd-ed97973def7b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8d34f18a-ce2a-4541-894e-8340abec9c97"
        },
        "item": {
          "id": "446ac9ef-b961-4c3b-85fc-4a53f361b7cb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "11200f83-f412-4251-8485-a7574a7fb5ff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ff202aac-e40b-4aaf-bd05-20bcb53187a1",
        "cursor": {
          "ref": "ec30cd48-d1cd-483c-8c1a-2f1569ed5216",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "66507b1c-0bae-48b5-bab8-178efedbb3fd"
        },
        "item": {
          "id": "ff202aac-e40b-4aaf-bd05-20bcb53187a1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5f3bcbac-89b9-4f1b-b0cc-1932fa9f20fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "149cc741-06c0-439b-9985-0428de52d4aa",
        "cursor": {
          "ref": "a46fa440-e581-467f-abfa-37781aa89b1a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "74d379df-fca5-43ae-b3b5-0465c4723a29"
        },
        "item": {
          "id": "149cc741-06c0-439b-9985-0428de52d4aa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "76c52861-3487-49bf-80ef-c54707e3d537",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5ea0e2-bf77-4963-b9f7-eab447535f9f",
        "cursor": {
          "ref": "9c090d9a-8b91-4778-8e95-b787aae5f46d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "32709ec7-6040-4efc-bf37-d901185f0bdc"
        },
        "item": {
          "id": "4a5ea0e2-bf77-4963-b9f7-eab447535f9f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a1154696-5655-4679-99e8-fcf43eb70446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de66bcd3-995b-4d55-8edf-5bb0c0756f02",
        "cursor": {
          "ref": "3b587112-1b6e-45a0-b1bb-b07b3295e330",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "132a7b35-093e-45b2-b4ba-c52a9c93ad94"
        },
        "item": {
          "id": "de66bcd3-995b-4d55-8edf-5bb0c0756f02",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c768c292-21b3-4f0b-a576-0139b6023566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58134f54-3725-4abf-a8e5-7a0c01ab75a3",
        "cursor": {
          "ref": "12706483-334b-4db9-a55f-f9e81e6f773e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "60303671-238e-4391-b747-376ed30b5b4e"
        },
        "item": {
          "id": "58134f54-3725-4abf-a8e5-7a0c01ab75a3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "89cfa3f5-1d7b-4d5d-ae0a-27492e39cbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f951549d-79b4-488c-aa76-c841bd3db72c",
        "cursor": {
          "ref": "ba677746-071f-471f-8f37-cad37840783a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f1d4d07f-62b9-47c2-81fa-d09be49e97ea"
        },
        "item": {
          "id": "f951549d-79b4-488c-aa76-c841bd3db72c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bd22a2cb-8632-4c6f-9d6f-a2b81fcc4ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf4d14e-44e2-41c5-bfaa-d73c17852dee",
        "cursor": {
          "ref": "836bee28-8714-4123-8449-575897cc562b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cff7ced7-fa6c-4f3d-b8a9-ecd85ce7c098"
        },
        "item": {
          "id": "aaf4d14e-44e2-41c5-bfaa-d73c17852dee",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "111f60dc-fef8-418a-9dac-09ba1b410637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb0d5d0-bb9f-4d66-93ea-6ee448b2ac34",
        "cursor": {
          "ref": "9f50819b-4525-47e7-a8de-32dbe7c7465f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "be8829b2-7700-427e-a977-41319d8e7013"
        },
        "item": {
          "id": "9eb0d5d0-bb9f-4d66-93ea-6ee448b2ac34",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0f8a102d-b8b5-455d-a577-b96a921daf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a37fb3-bee2-469b-8d92-afe74c2b0fec",
        "cursor": {
          "ref": "f54a657d-0c8c-4ef4-a14c-e521c0d8bbd0",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3bc3fe6c-2c44-4021-817d-fa1224509e71"
        },
        "item": {
          "id": "78a37fb3-bee2-469b-8d92-afe74c2b0fec",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9cec8419-a1f2-4436-b681-addc2c4643d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36ff65f-b2c6-4be6-acbc-cbdd70e28fbb",
        "cursor": {
          "ref": "29711fc6-7424-4feb-acab-fa019d3a1a67",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c8870f83-83c2-4b48-b593-7ad364e6ec74"
        },
        "item": {
          "id": "c36ff65f-b2c6-4be6-acbc-cbdd70e28fbb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2c088a2a-e19d-4482-a852-3253c5a1c180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40828c1-6909-465d-8896-647e2cad4e2d",
        "cursor": {
          "ref": "c9264c5d-40e8-4bd9-b325-cb4c8c06aa8b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0a4ed5e8-a976-4fd6-b701-018a59f6447b"
        },
        "item": {
          "id": "f40828c1-6909-465d-8896-647e2cad4e2d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e1267b87-0d24-46f3-88e7-0bb10d5812c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cff80ae-1e0a-422b-a6c0-83ffad3342ff",
        "cursor": {
          "ref": "5e79ffd5-95c0-4538-a43c-c186e39c7d80",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d1a2b883-460d-4e6a-bd31-dd434afe15ae"
        },
        "item": {
          "id": "7cff80ae-1e0a-422b-a6c0-83ffad3342ff",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e8e01159-c27f-4772-8809-c2322333ef4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2ae465-663e-4590-93fe-38ed0f50bdd0",
        "cursor": {
          "ref": "1adb6de9-0707-44ae-908b-499c90e37a9c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f238749b-4356-4e27-8bd1-794f1edc9637"
        },
        "item": {
          "id": "aa2ae465-663e-4590-93fe-38ed0f50bdd0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e66ccad5-6f70-4219-a924-36a347d37c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f506b37e-0dfb-40f9-a5b0-04a36b6e15e2",
        "cursor": {
          "ref": "3ba0f884-17f7-41ee-bce2-bb3c357cff82",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9a3334b6-1a54-49d5-8b7f-5e10c9097404"
        },
        "item": {
          "id": "f506b37e-0dfb-40f9-a5b0-04a36b6e15e2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "994350f7-d10a-49e0-a4a0-ba9b775579e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396cfa1f-4939-4741-80d7-55ae349ed380",
        "cursor": {
          "ref": "712ac52b-ca77-4271-9912-aeffb52123b2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "af1b5686-a74b-497a-9158-01bb4bf526f1"
        },
        "item": {
          "id": "396cfa1f-4939-4741-80d7-55ae349ed380",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "da568c18-da71-4e07-b987-d3e8a079cffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d23911-6f02-439b-9e19-bce5e5d95f8d",
        "cursor": {
          "ref": "1817652c-348e-4b1f-9cfb-92add37b2da6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6912dfa5-9b63-4c72-b112-9bd7d5977841"
        },
        "item": {
          "id": "a5d23911-6f02-439b-9e19-bce5e5d95f8d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "567f24b8-2418-4005-90cc-6ef30042764f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ba509e-5fe2-4e7a-a3ae-2f953de68d2f",
        "cursor": {
          "ref": "7ea1b237-7419-47a5-868f-a5f519a1929d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6aa15fd3-fa2a-4391-ac1d-01decc654d00"
        },
        "item": {
          "id": "68ba509e-5fe2-4e7a-a3ae-2f953de68d2f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8977b754-f725-49c7-8808-fc03cb09f521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f17a1f-444f-4a75-af09-482500e0db49",
        "cursor": {
          "ref": "16e2226f-a266-4cd1-9d39-4dda0895b59a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e4218a40-6db1-4d20-8bfc-aa3d8fd193b1"
        },
        "item": {
          "id": "56f17a1f-444f-4a75-af09-482500e0db49",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "79715a55-1dad-4f8b-8e4a-ba041f5b9b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900602f-4d7c-42af-864d-fd5aeca4f398",
        "cursor": {
          "ref": "9542d86b-08d3-4488-95bb-af294eee1791",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "eaa2e9e8-0d3e-4d3d-a898-6fb2582d7c19"
        },
        "item": {
          "id": "7900602f-4d7c-42af-864d-fd5aeca4f398",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cd58e555-a73e-448a-837a-c68bc8ed2efd",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "3cf8819a-e95d-4308-8eff-a37c976c192f",
        "cursor": {
          "ref": "1b24b0b1-9fde-40be-a775-fa66ef0aa243",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fe972a45-0e06-4ca2-a7ff-26dd9f4a46aa"
        },
        "item": {
          "id": "3cf8819a-e95d-4308-8eff-a37c976c192f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "78eff5ec-a024-48ae-981a-30304085a6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a92e1ac-c3ee-4814-8834-c5385d65570e",
        "cursor": {
          "ref": "ae63daf2-5101-4511-81c5-74374049cbae",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "78e3f538-7207-4759-a635-99d5612d3402"
        },
        "item": {
          "id": "2a92e1ac-c3ee-4814-8834-c5385d65570e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d109bd5f-30e4-47d4-8fdd-15a1860e1a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909de21e-f380-4cc1-b12a-4748bb90192b",
        "cursor": {
          "ref": "88057328-2b3f-4ff7-a042-91ee7f70da15",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "43dfdd34-9fd7-4435-8b7c-335f37a7d070"
        },
        "item": {
          "id": "909de21e-f380-4cc1-b12a-4748bb90192b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "25b976b0-e85c-4713-aa55-b4a931374f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8328e0-655f-4e69-bc69-07fb20e7c33d",
        "cursor": {
          "ref": "2da6d9bf-38e8-42e3-bf07-6585cbfb7d8f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "acb4be34-7a3f-4ca6-bf26-985b2d9e69fd"
        },
        "item": {
          "id": "ed8328e0-655f-4e69-bc69-07fb20e7c33d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2b2fa7ec-8ee1-4472-85dd-6fdf40e12ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fad4ad-316b-44bd-beff-6c418884530b",
        "cursor": {
          "ref": "cf1ff69a-9a23-4fca-b1b8-508ddfcb7f42",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9fba0b0d-de29-475e-b886-d31eda2064b3"
        },
        "item": {
          "id": "d6fad4ad-316b-44bd-beff-6c418884530b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1332944e-49b5-4461-a284-b4aec790219b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28cf60d-b720-4683-ba61-572d2c61d640",
        "cursor": {
          "ref": "9d4e8048-ab58-4a95-8b88-83e1ce2b0fbb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "328c0d3c-6b88-448f-b73a-e6a2d009292c"
        },
        "item": {
          "id": "a28cf60d-b720-4683-ba61-572d2c61d640",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "91782160-2c44-4a04-8572-5a4ec99b4cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b499b6-9fea-420c-b438-cd7da74a13cb",
        "cursor": {
          "ref": "f22f5033-2c27-408b-a315-e197590fee81",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "caffd872-4c73-48dd-83d0-34c80c5a1da6"
        },
        "item": {
          "id": "a0b499b6-9fea-420c-b438-cd7da74a13cb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "647e3dc8-1f75-49cd-9cf9-7a05e3ec6c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a05cf1-8734-4691-bf68-17c11db1c417",
        "cursor": {
          "ref": "5ed605bc-30fa-4a81-8e61-c2c04fc7d1c4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0bc88126-2b49-46b9-8eac-deee10611363"
        },
        "item": {
          "id": "95a05cf1-8734-4691-bf68-17c11db1c417",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "606dd949-475b-4fc6-91e5-2e9a301a6570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93065152-d8ba-4dd2-9d85-95860d7e6934",
        "cursor": {
          "ref": "fa79aab9-04a1-40f6-9602-98452f5a840a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "713b82e5-88ad-422c-b3ad-d79f65519eab"
        },
        "item": {
          "id": "93065152-d8ba-4dd2-9d85-95860d7e6934",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f7e6f42c-c8e4-46f0-aed6-1bf5afcbb0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27b551e-6706-44ba-8847-f2f71834f643",
        "cursor": {
          "ref": "b6e75e36-ac88-4826-9bfa-1d1a8b46fc69",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e93a4ebf-140f-43be-beba-74837a7e8b3f"
        },
        "item": {
          "id": "b27b551e-6706-44ba-8847-f2f71834f643",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e72eb0c3-352d-4d2e-96dd-fb0c49e25aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94bc06d-08b9-43c1-b89d-0ccf1eaec29e",
        "cursor": {
          "ref": "93320da7-96f4-48de-a85e-4fb81a339b77",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a8748841-9e14-405e-bd65-fc6e362e9832"
        },
        "item": {
          "id": "b94bc06d-08b9-43c1-b89d-0ccf1eaec29e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "89628a92-d1da-4c60-ba41-1994ce8ea697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794c899e-d1ec-4963-b65f-3b7bdd3d9202",
        "cursor": {
          "ref": "47c80802-d8ba-4d2c-9043-8dbf696259e6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ae1e8240-b504-4aea-8627-c6a2fb170c46"
        },
        "item": {
          "id": "794c899e-d1ec-4963-b65f-3b7bdd3d9202",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a41114e7-f842-4d52-a62d-7a5bf2598923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e5ce59-8c6e-41d7-9f7d-c444b541be8f",
        "cursor": {
          "ref": "cd0960e5-39b6-4dc5-aa1a-05898f120e10",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "00058813-f19d-4211-b19b-cc5eb375075d"
        },
        "item": {
          "id": "a4e5ce59-8c6e-41d7-9f7d-c444b541be8f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "035a608d-4124-4106-8c21-5bdf277923b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4da193-da81-4a69-8c83-2e3974a7c53d",
        "cursor": {
          "ref": "998f8fc1-a1d4-49a1-a47a-35ed2fa03b84",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0b70625e-60f7-4c2e-94df-a620df3754fc"
        },
        "item": {
          "id": "ce4da193-da81-4a69-8c83-2e3974a7c53d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "93ae2c49-5e55-4e32-aaa1-e842898acb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad6332c-0cbb-4df3-b9f6-6374b2a2ca13",
        "cursor": {
          "ref": "1784fe25-254a-42ae-948a-b68fb5aca287",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "63fe1d3d-2dca-4079-b68f-1b63aa201b8e"
        },
        "item": {
          "id": "5ad6332c-0cbb-4df3-b9f6-6374b2a2ca13",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "52de1efe-05b0-4d4e-ae97-9a5fb36f2685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4df3a4e-d0ec-484a-ba8d-84171dc6ce03",
        "cursor": {
          "ref": "04b17b68-552a-4b86-8ef2-6bb3bece10c5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "222ffbe8-029b-417c-a0ea-0fdb9f002928"
        },
        "item": {
          "id": "a4df3a4e-d0ec-484a-ba8d-84171dc6ce03",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5d90bf4f-5f35-4cf2-a785-ad1b77cf6ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e627d2cd-acfc-4432-bd4b-40d2bbbe7752",
        "cursor": {
          "ref": "abb59196-9eae-4450-8f8e-7e457e764ae9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0f854cfb-1ac4-415b-a45d-69276db97aae"
        },
        "item": {
          "id": "e627d2cd-acfc-4432-bd4b-40d2bbbe7752",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "04135959-9254-44c1-b744-c1ed9d25fcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76ee52e-06c3-4cf2-a9c2-0e88be4b0680",
        "cursor": {
          "ref": "f25f0b86-b821-41bb-b20f-f57c23b1fe7d",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1131abb5-d90e-471c-9f01-d411e4d0e6f3"
        },
        "item": {
          "id": "e76ee52e-06c3-4cf2-a9c2-0e88be4b0680",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1f177700-b183-42f5-a729-8585596408e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5e967c-fb79-4309-86cf-c7459fb7c979",
        "cursor": {
          "ref": "56bd7308-a4ad-4ab6-bc8b-29193e636329",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5574f31e-7ed4-4801-baa4-781089d7a2de"
        },
        "item": {
          "id": "2a5e967c-fb79-4309-86cf-c7459fb7c979",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1d705df2-9dd8-4ba1-a761-6362dd2e0639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e38cd05-0a9a-4f98-a845-d0378c753275",
        "cursor": {
          "ref": "954e4623-bfa1-4f03-bc6d-1c8f2625b474",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "be6a0401-45bd-4200-adca-f6252349d558"
        },
        "item": {
          "id": "6e38cd05-0a9a-4f98-a845-d0378c753275",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "12070939-c80a-4e59-8d42-46164c222c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d3a0f1-498e-46ea-85d3-dc2ddb3332cf",
        "cursor": {
          "ref": "9d580e91-191f-41b3-ad00-bd7f11d1a430",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "aec3e8a4-6cd3-45a6-bb59-b6eab2288af1"
        },
        "item": {
          "id": "25d3a0f1-498e-46ea-85d3-dc2ddb3332cf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e3b6f06f-2ef6-416a-b351-77f4289b0186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a315907-2bd0-4832-8746-81bd61b9f3e1",
        "cursor": {
          "ref": "b2589b93-1e54-4b45-a3b2-fb292df104b6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bd4a4439-424e-434f-b274-aad7c00069bb"
        },
        "item": {
          "id": "9a315907-2bd0-4832-8746-81bd61b9f3e1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "944ee987-3425-4b2f-8c2a-b1905bab1ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b237f81b-079b-4912-8e0d-0ee3a060721c",
        "cursor": {
          "ref": "fa7959b8-2bd8-4c34-b270-9c0e0e7fed1c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "54922366-de53-43e2-b0db-1ac17bea2577"
        },
        "item": {
          "id": "b237f81b-079b-4912-8e0d-0ee3a060721c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f0d38408-e5bf-46ea-bbde-833879398319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d35c28b-8ed2-4bc5-871d-9b063d2fb11c",
        "cursor": {
          "ref": "486bff11-e02e-498a-91b1-a8af30ce22b3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1aa2b802-9257-4aad-b254-4e8f1efb62f7"
        },
        "item": {
          "id": "7d35c28b-8ed2-4bc5-871d-9b063d2fb11c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "16f5c012-7068-4f6e-a555-117ecb432c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda13407-61f8-458e-af11-5286ffe3e5a0",
        "cursor": {
          "ref": "156e248c-c441-48c2-9012-0885a27c7311",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6e420af1-6d3a-4f98-ab5c-31f899939230"
        },
        "item": {
          "id": "fda13407-61f8-458e-af11-5286ffe3e5a0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c9bc292b-24e3-47b6-b9a8-ad853e4cd0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205bb36b-ec92-44c0-be59-0486088b5e06",
        "cursor": {
          "ref": "0e851847-52c9-41c4-ac65-bb95688423da",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d43e8d92-c52f-4167-a35c-d0a977b6eb83"
        },
        "item": {
          "id": "205bb36b-ec92-44c0-be59-0486088b5e06",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d3f42b66-3a83-4741-a760-7578d7aa21a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5aaba4f-5ab6-4d33-80fb-2b32ff6e80df",
        "cursor": {
          "ref": "34f1466a-3710-4f4c-a0b7-e24d4865ade1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b705d81a-8e1e-4f47-85ea-c044205a624e"
        },
        "item": {
          "id": "c5aaba4f-5ab6-4d33-80fb-2b32ff6e80df",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1cfed7cc-1126-4da9-b3bd-c1ec03a7a11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89e5d6d-9230-4a69-b442-816269e29a20",
        "cursor": {
          "ref": "68cbd3e6-0ed3-4e41-9873-47d6e49f0166",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eabe1edf-705d-4715-92a6-e1efeeb18353"
        },
        "item": {
          "id": "f89e5d6d-9230-4a69-b442-816269e29a20",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b24eb522-61bc-49ff-b903-cd6c1ec47a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5265cf7-4c88-4fad-989b-d9cf3165690a",
        "cursor": {
          "ref": "4643a7c3-3877-4a9a-bb3f-c89c3f89dfc2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "56fc7849-fb9b-40b7-aa59-12f05b4e1335"
        },
        "item": {
          "id": "b5265cf7-4c88-4fad-989b-d9cf3165690a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c95b0fb5-fbfe-49c7-b383-3870387ad89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3c9e5c-68fb-40ac-ae44-47f2fcd2ff01",
        "cursor": {
          "ref": "c390d6e7-2401-4b61-bb77-993e9997795e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ae379778-f939-4626-8146-e1517a45daa1"
        },
        "item": {
          "id": "dc3c9e5c-68fb-40ac-ae44-47f2fcd2ff01",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7295ec59-874c-4a37-ae56-8a5409f782df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab460e4-837e-48ed-a579-7e964d8768b8",
        "cursor": {
          "ref": "798218f5-fd5d-418e-8fdb-040db147f30e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3a836c8b-56bd-49b2-b2ab-2284532ee2bd"
        },
        "item": {
          "id": "6ab460e4-837e-48ed-a579-7e964d8768b8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e1651f19-64a6-4cc0-b105-9f98f27ef957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e18955c-61a1-442f-8383-061d53a0e2a5",
        "cursor": {
          "ref": "5a5dd692-4893-49ae-9837-4f2e641cfa5a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fcd948bc-32a4-49bb-92ea-d9846d9fbfc0"
        },
        "item": {
          "id": "6e18955c-61a1-442f-8383-061d53a0e2a5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d0a4f17d-d937-490f-9a3f-8bf026cf7a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb7368c-3678-4d79-a02a-9cac9b0807ee",
        "cursor": {
          "ref": "3cb108e4-95be-4901-8299-79b70d08824c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "21af9a30-8efd-4ce8-8c1b-6aa8e76d9678"
        },
        "item": {
          "id": "3fb7368c-3678-4d79-a02a-9cac9b0807ee",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "68a830d5-f5a5-4f0b-be6b-802cbe4fa6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33458fdf-92f7-4e75-a695-134c2ea4ee93",
        "cursor": {
          "ref": "580b946c-848c-4f9e-8255-dcdff9728f3a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "df1d99e7-d89c-4fbd-84ec-dbc1316f43f5"
        },
        "item": {
          "id": "33458fdf-92f7-4e75-a695-134c2ea4ee93",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5da0af33-e9bc-4bfd-a092-e8aed1ad6dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f5ecca-7f05-4cd8-b838-393ee05b80eb",
        "cursor": {
          "ref": "9c8b8be2-1c7e-4e08-85c5-3c6a6ebd5d80",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a7684547-c4ed-4ed2-b663-a627bf326c10"
        },
        "item": {
          "id": "17f5ecca-7f05-4cd8-b838-393ee05b80eb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1be2bd11-eeeb-4254-ae31-9bafaecc6218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563e1fab-5a44-4b27-9563-9afeddff62f6",
        "cursor": {
          "ref": "9f59ba00-1da2-453a-9940-360e149249a9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "06863c1e-6834-403d-9fc8-efc4b3556c20"
        },
        "item": {
          "id": "563e1fab-5a44-4b27-9563-9afeddff62f6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "053a1af6-064c-4148-93ac-fa426d5043a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d1a803-d0fa-46ce-95e8-44d8a3aa0a85",
        "cursor": {
          "ref": "55be2ac3-41d7-4aaf-90df-fe441a164ef8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b965b049-a320-4f83-9cf2-656387ea56bb"
        },
        "item": {
          "id": "35d1a803-d0fa-46ce-95e8-44d8a3aa0a85",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "38d333e6-976e-49c0-a19b-fabaef49e7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4229a2c6-4645-40e2-8b1a-2e2eb48f54b3",
        "cursor": {
          "ref": "67e04c69-6290-4897-bfb8-a619dcde330c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d5db23ba-2661-4e22-901f-d64c6a2d6462"
        },
        "item": {
          "id": "4229a2c6-4645-40e2-8b1a-2e2eb48f54b3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6f18d710-20a3-45b9-b60d-26a6dd8cc56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a345e7-e8ee-4234-94aa-3420a5804128",
        "cursor": {
          "ref": "bac1ff37-3f34-4893-bed2-d26d9e0736ff",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0c92abf3-67a6-4391-8445-043705814a7a"
        },
        "item": {
          "id": "59a345e7-e8ee-4234-94aa-3420a5804128",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bc6b60f3-8ed4-4c49-81de-cecaf6858b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20059aab-d0da-408b-a7e6-dc8456dd19d4",
        "cursor": {
          "ref": "713023c2-e60c-4223-a93a-c6fcb7a02141",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3b84c23c-3168-4c8c-9e37-78d088caabbf"
        },
        "item": {
          "id": "20059aab-d0da-408b-a7e6-dc8456dd19d4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9d548f1d-5cb8-4b17-9fdd-1db7fc3d16b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb73cffd-357a-4ab2-ad64-15ba70508ad2",
        "cursor": {
          "ref": "348df47a-1cf8-469c-afb7-009efc181b64",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c11569ab-43c8-4e5c-ac0b-12840a58293c"
        },
        "item": {
          "id": "fb73cffd-357a-4ab2-ad64-15ba70508ad2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "23d0314a-bfd5-44b0-bf0d-6e2f950318ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d669b61-2d8c-4754-9273-ae830fe014f0",
        "cursor": {
          "ref": "3d2a03bf-5ea8-408d-b7dd-126ee43a8f2b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4d8a10a8-3e38-42f3-9ad2-16868c0f3f48"
        },
        "item": {
          "id": "2d669b61-2d8c-4754-9273-ae830fe014f0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1dccb54a-ce44-4292-9961-8dffc5f3be5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f224ad87-1372-4096-a316-78c9bdfc5477",
        "cursor": {
          "ref": "95942301-7fc8-4e61-97fd-709ec1be23f3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8449df96-0dd0-4779-aa1a-74eb6753552f"
        },
        "item": {
          "id": "f224ad87-1372-4096-a316-78c9bdfc5477",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3edfeba4-947b-41d1-831e-fc674f9109ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f602cfe8-d02c-48b4-98a6-881fcad31054",
        "cursor": {
          "ref": "6679af39-032e-4171-b01c-e965a44ceac2",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "937d8539-ca3c-4813-a34d-8fae83597e64"
        },
        "item": {
          "id": "f602cfe8-d02c-48b4-98a6-881fcad31054",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0c042e6b-4ef4-4990-8609-8f3b44f97d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc1a12e-f7c7-41fb-a4ae-6f452eec27ca",
        "cursor": {
          "ref": "ec178358-d39c-4e8f-ac23-9bdad1042408",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bf6fe2cb-1513-4375-8beb-5c1e8d55b99c"
        },
        "item": {
          "id": "bbc1a12e-f7c7-41fb-a4ae-6f452eec27ca",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b5a6fe7f-57a2-448d-9298-0d6b117286de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2090ce85-7418-4cfe-b26c-709144609ee6",
        "cursor": {
          "ref": "c6adbd44-567b-49a3-993c-e37ba1950218",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7bee4947-7a2e-466b-9777-24415c352375"
        },
        "item": {
          "id": "2090ce85-7418-4cfe-b26c-709144609ee6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "551df09b-b8ac-436e-a520-88122f245b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab893e24-dc61-4826-bf33-829a5bf5b618",
        "cursor": {
          "ref": "74ef6770-a8ff-4944-b4a6-6bf39e4f5a91",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2e5c4d51-4cab-4acf-b0ba-ff716141b803"
        },
        "item": {
          "id": "ab893e24-dc61-4826-bf33-829a5bf5b618",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "036d73bf-c617-41be-a6ab-6b05348d15d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79044581-381f-4bb4-9718-73e5a61c364a",
        "cursor": {
          "ref": "f714a820-64e0-4028-b9ec-bd72ef27a930",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3f23fd3e-bdd0-46fe-bbfa-55454aaf2745"
        },
        "item": {
          "id": "79044581-381f-4bb4-9718-73e5a61c364a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1954b531-6a68-4001-a2b1-8b6b6e081015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef162fe-cfd3-48f9-8f7c-5ca0bb494653",
        "cursor": {
          "ref": "78f56db6-84a5-4b68-ba55-f922f3e3bf22",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bde3a32d-503c-49fe-8868-723ad9f26b24"
        },
        "item": {
          "id": "2ef162fe-cfd3-48f9-8f7c-5ca0bb494653",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "665ef94c-9d60-44cd-96c5-8863d7802244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f49532-c0e7-4037-97c6-bcbfa675c802",
        "cursor": {
          "ref": "46000461-33e0-4ea7-9be3-0055b1a0c23c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "641406f4-d04f-4e0b-96a3-a0f8ee29e61f"
        },
        "item": {
          "id": "b5f49532-c0e7-4037-97c6-bcbfa675c802",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "db7fa4d9-ebbe-481f-94f8-a424ec62adc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e5ac6f-8684-427c-b878-c26ec3547d5b",
        "cursor": {
          "ref": "2f72bc2c-2ee7-49b4-a196-2fec5701e6d3",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "118a82fd-791d-40a8-aa0e-ee5767e5088a"
        },
        "item": {
          "id": "b8e5ac6f-8684-427c-b878-c26ec3547d5b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "62a0b259-90fa-49e7-8e7f-9cfea4c93d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fff809e-7db3-41d6-8d4d-4373398260f7",
        "cursor": {
          "ref": "0a47adda-c47b-4f89-a2da-40007cd128ba",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "80d61ba4-c9c8-4aab-99ce-cc5eac882218"
        },
        "item": {
          "id": "2fff809e-7db3-41d6-8d4d-4373398260f7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b69e6f9c-fec2-443a-b399-01661d92584b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccf3931-716a-4080-8428-f695f7aa1f1f",
        "cursor": {
          "ref": "799e1d95-b674-4432-a948-cc81a73d55e4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b83f8352-d3fb-447f-b35e-ceb36404f715"
        },
        "item": {
          "id": "eccf3931-716a-4080-8428-f695f7aa1f1f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "60d1dbe6-ba14-4045-8ef3-4d2ca20ae87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4e8419-9426-45c9-8875-02931ca417c7",
        "cursor": {
          "ref": "234dc683-1e8a-415a-b1d7-6162e72f7ebc",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6b7ee64a-a28a-4046-b922-ca8012f5a890"
        },
        "item": {
          "id": "2d4e8419-9426-45c9-8875-02931ca417c7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ae3505d0-2300-44c9-be2b-dd9adc342d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ab1c32-a9b4-48bb-b308-7d2de634eeb5",
        "cursor": {
          "ref": "8b6fdc30-796b-4c70-9db2-dd2b831c1fc3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cee43e10-d1f4-4eb4-9dd5-9359ea59cf31"
        },
        "item": {
          "id": "a0ab1c32-a9b4-48bb-b308-7d2de634eeb5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "24401de2-8354-40c0-afa9-f73a992222e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3605ef0-1965-4d92-b874-277b57e0c4b6",
        "cursor": {
          "ref": "90d0c547-b974-4ceb-a5c3-840f2d575130",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "69e8d2a7-9b69-4f89-a80c-6c10c068028b"
        },
        "item": {
          "id": "d3605ef0-1965-4d92-b874-277b57e0c4b6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dcf48191-b763-45cc-8158-1b45dc4a08c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc222df5-63fe-49a2-b983-5556cd578257",
        "cursor": {
          "ref": "d00af39f-5940-4607-8df5-9102363c9e89",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4e4809e3-0a36-4165-8df8-653dfc78482d"
        },
        "item": {
          "id": "dc222df5-63fe-49a2-b983-5556cd578257",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "191f3a2b-f9f4-486b-a885-f7c3db460edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8677b19d-ab88-4a41-8c33-1bc71d1bbfd4",
        "cursor": {
          "ref": "315eecb9-3f27-4d5a-8509-5a7f9bba2969",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "680ed079-3b8b-4721-b608-0568e384b5d7"
        },
        "item": {
          "id": "8677b19d-ab88-4a41-8c33-1bc71d1bbfd4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "81cf4ba4-d4d2-485b-81fa-4e4d5547be0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee6a801-9a73-48b9-ac0a-d15f107b9e1a",
        "cursor": {
          "ref": "f9da3e17-8c56-4e83-8291-e8742a1b3204",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c845cc60-f91f-41c1-9b73-9fd22465547d"
        },
        "item": {
          "id": "bee6a801-9a73-48b9-ac0a-d15f107b9e1a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f5440b9f-919b-48c0-bf98-aebc3b31ed09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af54ddef-8076-4c54-9649-1db8b781f803",
        "cursor": {
          "ref": "492eb263-a2bf-4621-80b3-632f729a6e89",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c480c023-c03b-4b6c-8aa0-d822938d6afa"
        },
        "item": {
          "id": "af54ddef-8076-4c54-9649-1db8b781f803",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "990bc574-d923-40cc-adf8-77c8df92f3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa05789-6886-4b4d-aa9e-a0e0ffd47f38",
        "cursor": {
          "ref": "04065784-bd68-4da0-9c1e-f17e93e2f3fb",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1cd4fc10-bea8-474d-86d9-de72b7d5034f"
        },
        "item": {
          "id": "4aa05789-6886-4b4d-aa9e-a0e0ffd47f38",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e9e663d7-8b66-4440-9d37-d3fb46bb6ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f86774f-481e-46c1-a949-c3532c3cbbc4",
        "cursor": {
          "ref": "8c21598f-6528-49a5-814f-96ca814b2f5d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5bbb6e33-ed44-439c-82a2-ba646c64be61"
        },
        "item": {
          "id": "4f86774f-481e-46c1-a949-c3532c3cbbc4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "19b1e443-b15c-4d2c-8bc7-4aa49010a0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f886499d-4e6e-4938-88d5-69477f329f9e",
        "cursor": {
          "ref": "4aa780cf-c576-42da-a55c-66af88268527",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fd528b25-6431-44f3-9cb8-214717ed48a5"
        },
        "item": {
          "id": "f886499d-4e6e-4938-88d5-69477f329f9e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "696c2887-5b6e-42d7-b0c5-1ecadff8cd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6328424a-cb58-4654-89cb-727fc3c8bacd",
        "cursor": {
          "ref": "0e202a53-94bf-4ef4-ae18-c0d163deaf9c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "24d3f297-e434-42c5-a0c7-17ba8684cc17"
        },
        "item": {
          "id": "6328424a-cb58-4654-89cb-727fc3c8bacd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7c9bdfa3-0f38-48c9-9a0f-a842145f55a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dcf02e-f6d3-43a3-a817-d0a8633cafc5",
        "cursor": {
          "ref": "de7e15e0-a5ac-4823-83a4-fd3820ac79d3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "255b191a-fc4c-4be7-9f53-0e568e3b428c"
        },
        "item": {
          "id": "08dcf02e-f6d3-43a3-a817-d0a8633cafc5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b694aad7-8b73-43ca-b727-fd873aeaa595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac35b68-a560-4fe5-9618-890143a06ad6",
        "cursor": {
          "ref": "1d52be08-33b7-41d0-b03f-c55cf2edf3b0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1d57bab2-0404-4967-be4d-3fdf91c1fd2d"
        },
        "item": {
          "id": "6ac35b68-a560-4fe5-9618-890143a06ad6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9952fabc-a08b-44d5-bc1a-bf66e6a416b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951ce009-c85e-4707-bbd7-e6100b1eecf0",
        "cursor": {
          "ref": "3a28b8e5-acb7-43a3-9e4d-b602b379a7d9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "69caa0fa-dfd2-4102-b466-22931c5a4371"
        },
        "item": {
          "id": "951ce009-c85e-4707-bbd7-e6100b1eecf0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "28e449d3-b9cd-4a7a-af89-fe988d9242a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6482cbdc-9ce3-4fc8-86bf-ee5402e40291",
        "cursor": {
          "ref": "f9722434-4dfa-4b7e-9883-72c4294f6c2a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "397f5cee-401e-4e82-b5fc-16e3e89dfdfe"
        },
        "item": {
          "id": "6482cbdc-9ce3-4fc8-86bf-ee5402e40291",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "25b18293-6589-46aa-834e-5b8bdc0bd094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd25cc6e-ecac-435c-afa4-3c01cc6d8a11",
        "cursor": {
          "ref": "afc954ff-4200-4e85-9d09-0ebc8b170a46",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5e686a5e-d1aa-4c59-bcf7-a5f1ba06635d"
        },
        "item": {
          "id": "cd25cc6e-ecac-435c-afa4-3c01cc6d8a11",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c02718a1-95de-4c0f-8f0a-87bfc7137dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ffab35-b431-480c-bb22-fdc82ec8303e",
        "cursor": {
          "ref": "d76a2460-54c0-4860-b1a2-08b9898d894b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "711df08f-4c64-4dce-8e61-ae5287010183"
        },
        "item": {
          "id": "e3ffab35-b431-480c-bb22-fdc82ec8303e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1bce292d-2a24-4c98-94b7-030e698f229c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85f1332-63bf-4cd7-93d1-0f1b728391a1",
        "cursor": {
          "ref": "b6a07804-626a-4192-a397-45c7533d8c16",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ce28a4ae-dfba-4545-94d5-ff183923bd49"
        },
        "item": {
          "id": "c85f1332-63bf-4cd7-93d1-0f1b728391a1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7f0ca55e-663b-4bad-9e76-9c1cc89ce4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31888f7f-cb6e-4b7e-9508-07c3658aadfc",
        "cursor": {
          "ref": "122802f0-5424-4cdd-ac29-24413451bed2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "145a7068-529e-498c-aa05-b92731c6628f"
        },
        "item": {
          "id": "31888f7f-cb6e-4b7e-9508-07c3658aadfc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1939ef9d-b13d-4410-86d6-513d1b910a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac7c6c9-c6f0-4d05-99e6-2839be47c05b",
        "cursor": {
          "ref": "259c33c0-a99d-4f73-aa04-f93ad5aa990e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7787f3c1-065a-4e22-98e8-56b7d425a310"
        },
        "item": {
          "id": "9ac7c6c9-c6f0-4d05-99e6-2839be47c05b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ae43a177-fe23-4fb5-bf3f-ea544790b107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb85137-2d5d-462f-ad61-ffe83e946e4b",
        "cursor": {
          "ref": "146f8076-5cf4-42cc-a470-7817a7917106",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "11bf244d-363b-42bd-91e8-b89fa374e6f8"
        },
        "item": {
          "id": "6eb85137-2d5d-462f-ad61-ffe83e946e4b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0fee07ae-fb49-4d2b-8355-5dd9bbf13728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e425b0fc-930f-4965-bdbf-758d6ce9d8f1",
        "cursor": {
          "ref": "afffe197-6a2e-43f2-a8cf-084d5d75a222",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "49feda6f-9715-4b1b-ba61-993624d928a0"
        },
        "item": {
          "id": "e425b0fc-930f-4965-bdbf-758d6ce9d8f1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "68bcfbf1-f059-4a29-a383-def8c61857f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa6de8f-9cf6-49fa-acd4-eff7810baf73",
        "cursor": {
          "ref": "4e7bbfe1-5109-4446-96d4-349ed9516d58",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d3bbacc8-d059-431a-a655-7d3ad9a999af"
        },
        "item": {
          "id": "daa6de8f-9cf6-49fa-acd4-eff7810baf73",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5e86b3a1-a2b2-436e-b33f-d62c824122c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d081f3c1-31e5-4e2e-8fb6-896720580e75",
        "cursor": {
          "ref": "0bc60f6d-04ef-4d24-be9c-8bee6a680389",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "703adb0e-f5b7-4991-86b4-5d150c7ce4c1"
        },
        "item": {
          "id": "d081f3c1-31e5-4e2e-8fb6-896720580e75",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0106b3e7-3a15-492e-bdf5-5f22ee07696b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbdfb64-1afd-45c4-93d5-9c1a2cf334df",
        "cursor": {
          "ref": "9bb75b04-5f33-47f0-9602-0f54795fd134",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1116a934-af46-40a8-a505-1746806a8b16"
        },
        "item": {
          "id": "cfbdfb64-1afd-45c4-93d5-9c1a2cf334df",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8a42ef10-c1ac-40fe-986c-0f2d30fee05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b046c1a4-ce39-4bf7-958c-53c23f6bd3d9",
        "cursor": {
          "ref": "30fff901-1851-48d4-9ef5-14b45d2256bc",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1654098f-b584-4bbb-9f56-b47e338a5496"
        },
        "item": {
          "id": "b046c1a4-ce39-4bf7-958c-53c23f6bd3d9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e0cf6c2f-2b01-4473-9bbe-3d42404f2030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1c0fe1-07b0-4426-95f7-e980d379ac6e",
        "cursor": {
          "ref": "eb54c363-f8a3-4741-973c-c4c44919fb1e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "251f8901-b94b-46bf-b177-dc32596e1ead"
        },
        "item": {
          "id": "2f1c0fe1-07b0-4426-95f7-e980d379ac6e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "abc6f342-865a-4cb9-bdbe-86587076f4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1222da-5ed8-443f-9a50-8d1f35412e58",
        "cursor": {
          "ref": "09911fbd-ab42-4410-88a1-84602aa7aa3a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8e5cb9f8-619e-4eb7-8de9-a60764b60a37"
        },
        "item": {
          "id": "fe1222da-5ed8-443f-9a50-8d1f35412e58",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0f122355-720f-41b3-8c29-35aeb0fcfc1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8544bd3c-be18-4997-ac8f-c6fcab87af02",
        "cursor": {
          "ref": "7db09b1d-b06b-4f85-a7a0-efdc959a8b33",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a169f12f-f245-42e5-8e69-99d2b564c7a6"
        },
        "item": {
          "id": "8544bd3c-be18-4997-ac8f-c6fcab87af02",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8051a787-8755-4399-a04e-01d737c63fa6",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0982b6ff-a291-4e5a-8e1d-8c6b003def25",
        "cursor": {
          "ref": "e404c064-1653-4631-a086-c6da2834266f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c7350b92-9efe-4e45-86f4-d3e56d78e2c4"
        },
        "item": {
          "id": "0982b6ff-a291-4e5a-8e1d-8c6b003def25",
          "name": "credentials_verify"
        },
        "response": {
          "id": "667695de-de7e-47ed-ac0d-aa2b511f4fee",
          "status": "OK",
          "code": 200,
          "responseTime": 3132,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf6d953-f5b6-4b07-a428-ff5c0f466abd",
        "cursor": {
          "ref": "90f6c374-60d3-48ea-bc60-45449f8a1e21",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4e33059f-b372-4905-adf4-cbb7a5cd2339"
        },
        "item": {
          "id": "dcf6d953-f5b6-4b07-a428-ff5c0f466abd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fe32c4fe-5855-41ac-a57e-9bc29db6490e",
          "status": "OK",
          "code": 200,
          "responseTime": 4085,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca64b86-aea3-463c-b5c8-da857fe6204c",
        "cursor": {
          "ref": "2eed4a02-3cd9-4083-a4fd-bbf54d696326",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "612acbdd-1806-4fbb-9cb8-88fd2f80c1c9"
        },
        "item": {
          "id": "6ca64b86-aea3-463c-b5c8-da857fe6204c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e295cdf4-30e4-4155-95d9-a28c73eac2e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca64b86-aea3-463c-b5c8-da857fe6204c",
        "cursor": {
          "ref": "2eed4a02-3cd9-4083-a4fd-bbf54d696326",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "612acbdd-1806-4fbb-9cb8-88fd2f80c1c9"
        },
        "item": {
          "id": "6ca64b86-aea3-463c-b5c8-da857fe6204c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e295cdf4-30e4-4155-95d9-a28c73eac2e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8aef0b-ca4e-4cf0-9f37-2722a1f994e9",
        "cursor": {
          "ref": "d0608b99-1be9-46fb-bc59-8e296373c27b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "20212f6c-0f71-4acc-a25f-15c195cc2fe8"
        },
        "item": {
          "id": "cf8aef0b-ca4e-4cf0-9f37-2722a1f994e9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "209c83f8-12df-49e7-b607-1c0a1390f176",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346ffff2-a1de-4c0a-9c69-1098a5614c91",
        "cursor": {
          "ref": "d9fb6235-0718-469b-b829-80ffe809f776",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3d962da4-fef8-4c9d-8a26-72e407466a38"
        },
        "item": {
          "id": "346ffff2-a1de-4c0a-9c69-1098a5614c91",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bd54a920-7c1c-4630-af72-e8545100efff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}