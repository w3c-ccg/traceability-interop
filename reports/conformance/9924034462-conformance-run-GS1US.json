{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1bcff025-2ec7-44b6-b1d7-b8373bab3576",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0a161656-7a0b-4ace-ba96-9e329ee0c86e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0846e56a-edb2-47c5-82cd-c0233941408e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "69ee64e4-8bce-480e-b324-47bb9e832a8c"
                }
              }
            ]
          },
          {
            "id": "5c485fe7-8553-4434-888d-135bbbbbf841",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56ae026b-b5ff-4bda-865e-865b94bf6682",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "30bbc7f4-23a9-4999-9b6b-e34573e3de4f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a5fcbb54-d66a-4f53-a4a8-8e6c7644562c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "302db979-1f21-435a-b590-78625d99087f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6334561-00df-4c1d-add5-83caf69a5506",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a852ea6b-1825-4d70-9a26-c4053dc411ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e3bdd19-5811-4bdc-8a87-bcabfb46bf85"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "862c1450-bfad-4649-8ad4-3c31205dec37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21fcdb72-13df-4c5e-86fd-a46c441714af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9537e72-55d5-403c-a0a9-6b34b4acb798",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da3dd944-f581-4196-bbf6-5667978f78e9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f465f49f-e623-46a7-af69-500b75bbbc20",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0738af5d-2e87-46ba-8fd0-4729f8f8e600"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "581d9791-f293-4f2e-84aa-4f376d711ec8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e557d86-9e15-48f4-bfa9-f065c1519a76"
            }
          }
        ]
      },
      {
        "id": "e4ef171b-f714-4fb1-80b4-9c9183bc3656",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f0573c94-b39e-40db-88c2-fb99a1b7987a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85c9c075-f930-49d5-a364-0dd761806c88",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9410ac1-85ea-4fea-b623-557ec987aba0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f85a50a-9753-4fea-aaa6-f6f5dafb2508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c4e2124-40b3-4d2c-9696-236cb851fe3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3df0ab-0e24-450f-bd45-c2e09e01c816",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9288fa1-4681-42d5-a233-8ff3f6933ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21287e94-c1bd-4978-b3ab-487bf927ce88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f621d2d0-09bf-4fb9-86a4-f9043a377efe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1324b1f-b85a-4e28-9370-615ad0628592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa73f8d3-02c8-4648-a047-93d7aded6110"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87de1013-0657-462e-8e2c-1781ea8bed2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9f47b49-baae-403d-a3c5-8378e4f1e6a4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce92abac-adb6-4c5c-a3a5-239e3961c1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82895735-621d-4a5a-a13c-fe24c9378202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11edb41a-16f4-4753-bcbe-d3a528fd1711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9c4cf2-0246-4d33-909e-6289edf5c146"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b4fa358c-f91a-4f08-bfd8-a0001ea9083b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5354b3e6-e021-4982-a79d-f0d6af8f2b79",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cfb5c87-8462-4016-9931-f9bf3fc0d7d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "85b21ddf-09af-4804-a332-480ad977c8e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03e63a3a-81df-49f0-927c-2d362c01beef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ff3bb838-e828-4ca4-a602-229ca712f3f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d2bb3dd-53fe-4960-8914-a57f3352149c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f69b764a-b0e4-4096-abb2-ad32af5e23ae"
            }
          }
        ]
      },
      {
        "id": "816452db-df1a-4175-a288-116bcfeb3439",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a9d9424b-3cec-4822-afa7-c2b2d4cdd6d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "877abcff-73b6-484c-9133-4efc2655696b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b470f364-94fb-47c8-80fe-23118c878804",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d015fa60-4a71-4682-947c-a94b3acd6841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163321a2-c5dc-4d0a-8629-e1dce06a03a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93144f2f-8b86-40b1-8e16-abb0b768eb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3867e498-c1f9-484f-a6de-e6d03b7d4e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86735e94-27b4-4721-8977-100d2860d6c0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00919eb1-bbb8-487d-adad-035c6b8d79c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ba29af-b699-4a4b-8909-23f8b66984c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cac1726-2abc-4487-bd79-df35e9b9ff8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4727c073-f04b-47c4-a183-5a8654324853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cb2e4d-c4ed-4212-9d1b-49f4f585381e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea2016f-011e-4832-8c87-d7b5c7ec8fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2af4e82-2aae-43ac-be03-65fcf497bab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31443a69-0189-4820-83c1-7c7937c69382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9adda1d3-2694-49cc-8675-bcf5f34176d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0a5e75-28ba-45bb-96ce-4c2bbb92d231",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55b3a65-63fe-4e0e-a7b8-0cd2877ebb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14b4249-abf2-4204-9745-14f49d5491e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25af9b8b-9994-4ede-bd14-6b0bf931dd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcb84f93-f09f-4793-b256-3de564a82686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a78789f-6e4e-45fe-8fb2-fa3dd2c1942e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d17abfd-ca25-4a43-b778-10c8b6e04b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c8505e-366f-4be7-8648-5b411b66e8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc80fb5c-aed9-4794-8721-21997db43352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05ceecc4-e156-4419-9f70-37985dbee466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6233cb60-d417-4c2d-a069-8301c3bcebdb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fede04c-9866-43b5-8560-ca22d00f1d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941de00c-7a6e-4815-8424-3b427f17c601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1c4745-b26c-4603-b0df-efb5c05c4178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02f601b9-913c-41fd-9cb8-00681bb46080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e72fbd9-2e2b-4bc2-8d3a-2655b4a374d6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8bc03f-e8d1-4a15-9710-8a24b09b11b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078ac94c-e8d1-47fe-8449-2400c4bee835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f35339-09b2-4865-bd8f-c1786190b385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9049636a-c9d9-47a2-9dbe-70d1c73a7f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357ddf05-9860-42d4-a53b-014d70f2b840",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54b0ffd-1764-4bef-9f52-56ef67228171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31634399-c6b8-4e56-94cc-7bf0818ffb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbce37a2-7f76-4d32-9094-d07be26ee10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "431207e5-f8a0-4afd-90c7-24b2a234cfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d44acbc-fe34-4e13-9dd3-47b37173d8fd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef725107-30ec-49fc-9046-e8818ae7cbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc15f1b5-8754-436d-a798-a3e38befe08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a89c95-089d-4201-9de3-5cab38e6dffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "103d7a10-c05a-44ab-8026-85b37889e673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a127be6-026a-4de9-8941-8d8e576f4817",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefce4ed-552f-45b3-84f9-4366d33498b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e3e822-b526-43a0-a415-b93c3c427d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067be0b2-3d3f-4d6a-b4dd-4326f84e76ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eadfd881-9bcc-409f-9f94-7a6f319b1bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dda66e-69f9-4e6b-98be-67555c809d0d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd15daa-7d76-42a9-92f3-2a1eef2fd3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cd4e8a-a116-41ef-8c55-384899894d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa09accc-dd07-4b07-8521-24a4bf45b2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6dd63d1-cb2e-49d6-8047-b743e154253e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f05802-c67b-404e-8e7e-2037810edd37",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083d65df-1232-496d-9d89-1578d35d7b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd804ef-86ff-4034-9baf-5f8fd6aad1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30216ae2-c20f-4610-b134-8c5fd004bdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21cfeae7-198a-4c01-9162-40a7043f23b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd4ff7d-b484-4193-8418-ccabbb73b388",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c4c7c4-5800-4230-89e4-f718ca76b080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa08cd0-d3a0-44b0-9a14-f9cd02d52e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2ff2c8-14e2-485a-806b-cd14a07a9c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "066cc055-0ebe-4a7e-bdc5-3eef3cc72d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571455d1-cb9f-44ca-bf82-776eb9fcb459",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03122d24-cc39-4a34-a195-34026e3c2b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790d2767-c851-4f31-adb0-1c1fec34f206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324e2df6-4ed6-4900-b3b7-568f6e9e0e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fccea74-f0be-45f6-b81e-42e9bf6f5ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058ffc42-1adb-44f6-86df-11e2cc8e3f78",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d65dff-de24-480e-89b8-130c0b265d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3ab887-5357-450d-ba28-0538aad80b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da47453-ef6e-4d89-8569-10c92c7e350e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e9355d7-1aff-4726-8b3c-04c60dd2a74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3b4331-646e-438b-b1d6-a7944daad332",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dba83f-69f0-40af-849d-42d401140023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59510600-d565-4166-85eb-50d12b5a4c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa22412-a018-4d34-a0b4-4fce941fc5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8497b508-3f06-46b9-bff9-423b178290ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8a417f-a512-4b90-a81f-e0abbc6721cf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95991c0e-ba17-45d8-9430-1051d3dca250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90a4921-b6a2-4b3b-991c-0d4692bff99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964b02b5-da75-4161-9586-2126f7b07053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfab0fa0-ebe9-41a6-8e59-8fff07f2022d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a8d7b3-68c7-4f8f-8334-81c46071ceca",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1b7ff4-b84b-4edd-8f1c-b806a325d783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2276d28d-8130-44d6-88a3-721224975884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cb2485-0d38-455b-8003-1e2de074680d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7735a57c-4703-42bd-ab51-70e00d952f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f927d12-9d41-435a-b2c0-bfb22ba27ec0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be28ba96-1fd7-4ce8-a262-446d87b0ecf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabe9b1c-42ca-43f7-b3f5-b82de3cbd51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0677c45-126f-418f-b844-697e49281509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b86ade1-dec0-42d8-9c06-b2f86eee131b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b0eea4-39f3-4e25-9cd4-379d5bd13f70",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0063eedf-4029-4fd9-8b55-1dba55b05de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279bd195-481c-40ff-8048-eb75f4b2a5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16d0afa-ff29-40f0-a71f-8560e14633f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a07d7280-4007-4fab-b588-4082e1fd194f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89345ed8-c54a-41cc-adc4-2f889c54da1a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99baff4-020c-449f-b317-198399549949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0401fe56-b786-4292-97cb-2d7283fb88ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d0bebe-1f93-42cb-831d-88e47bd4733f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33fb4161-7447-4b88-92fa-d4d63fc73b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a702428-55ea-4172-bf1c-92d1a9dd5e19",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f53e625-dd00-468a-93cd-75bbda454127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823ee711-0dd4-42e2-91ae-9db09cbb3953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d9a9bc-c421-4ad9-bcbc-c859efe7c492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "699a9315-ad9d-4fe4-adb5-9d7517e83ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195ed372-d1a4-4d06-b070-a5eade8f44aa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfc936f-d8c4-4f84-8a83-960b73e43c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60532d16-b3d9-4744-90ad-2b1dad2ef1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b836b85e-c5d7-4d70-a40e-9852c141bd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a8d980-d742-43e1-9daf-77d3a20e689c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7133a6fb-a729-45ff-a5a4-eaa795ac7195",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f269dad7-fc3d-411d-a6e7-5b5ef687bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97664512-81fb-45e8-9631-73d44362f6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14beea23-dd78-4fb0-9ff7-c9b40566dd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9caf067f-cf8c-48fd-8855-8a1bb940c987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8897ca0e-f6a8-4e14-8236-a104fe479562",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a27b79-1c20-4e80-9e55-53080a4d67cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455e092f-c558-4ffd-8b6d-05f09a3a332b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd959c3-fd0a-44f3-9414-fba8bef39145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38aa979a-0d19-4e17-bb5a-ca813ed59aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b16fef-93b4-450c-9430-50bdeda87765",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edd8f93-0774-480f-9f9b-ad6cad32dc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1f1d0e-3911-449a-a4b7-1f9a0783b209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dea563-77f8-44d3-a81d-6a8f22b3912a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d93bf3c-d1ae-4a29-90ff-e867cc0c00da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6c2319-f7de-4c3c-8b5e-8c2c256ec67e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3865fa2d-353a-4c02-a428-03c984490277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c92795-41eb-4ffd-b019-5030ba56ebad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b07e13d-ad18-48da-b6aa-37ff34bfee8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1c6092-75a1-4694-8fa7-a84e9ef6a649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d87e58f-8a2f-4c74-9f3c-c606652f8221",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1149971-5462-47de-98e4-0b031531e187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7d51cf-63c9-4c22-82ed-96df80126806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04dc10a-ca26-4f35-b5aa-bb8f1ba405bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7b7de3-edb8-4a96-9ce5-c27f047284ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451cba24-6bd4-4125-93aa-f629a11fa49c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c8ea34-253b-4651-8144-4559a9716d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0303857-5ba8-4750-a5d8-78652c758ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49ff5a1-9fac-4e98-b13b-999b652a8447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed4da97-7b5b-407f-8712-c2c7cde37f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09343085-dd90-477c-99c3-eaf83668f415",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c442f9-3d00-48c0-a000-249ff699e739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d9bd9f-960e-4a60-bfca-fd569244531c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309ab576-b819-4719-a5bf-2fe0d2ba0259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba33ef2-3b5e-4e58-9325-ce50493042af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7e138e-30df-42ab-a1ca-c6294e0fe526",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b767bce-c323-404b-9747-d1d759b314c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15946c2-3425-421b-a322-4fb456da6b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de0e124-8e7c-4c2f-b8a5-4e43764cce49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f86e040-d7be-4877-ba0f-d87b51548c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a2ee67-6d4f-4fc0-85f8-39473b6daef4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ec8c10-23b6-40f9-b05c-71e0749b3351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8c8e36-8c95-4356-af85-402dd56aa522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c684e9-f3e4-4620-82e5-43712a61136a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3383c839-c37e-433e-88a3-c9f6e941a899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d8e2bf-6fe3-401d-a903-9de049e2abf7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1185411-249c-4efc-833e-b34cc0aa721b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85e6af8-473e-4762-8ff0-39b5a98230c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5f4a2e-d68a-44c4-9b18-91a1a8e3a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f03afe77-b3e2-4b7d-9674-507fc9109fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b78785-f5ac-44d0-ae2d-c4f72ddf2ae3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c54e82-46ae-443d-91f7-70399ef5df4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5975391-9e21-48cd-9927-420e89905efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b957bf-9ada-466a-b088-71ecb4d00c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbd03fc-bcc1-4b42-8824-ad2a2e5dd97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee62048-76ac-44ca-893b-7e0f7dc89705",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab90e7c-fff7-4c8d-843c-10c1823c1d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d15218b-f5af-4b14-ac50-071972e49cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac39d044-a7d7-42e6-83be-5748020b4c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "291f232e-26de-426b-9f8b-f563c9bafc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb3fcec-2c3e-468b-abc2-216b24dfd1d8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fcc761-52b9-40d2-b6de-77c0012c5e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35bb3e12-8ca9-47ae-823a-e4f8f3dec281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4e138d-4054-4ab7-898c-35f17be6afcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95914d52-d4ad-4ca1-ba5b-4db3576abcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3716b400-f683-471a-aecf-a2e375bc1a94",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111e53f5-515d-4f98-8029-c79da7dbe064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d596cd-30a0-4330-94fa-8e67f77a5b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec498ad-105a-45ef-a27b-0bd1247cb245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34223369-8190-4ce0-8821-40510a51bc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f32e7d-c2dc-4475-8569-22e6491750a3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafd5a71-3922-411a-97b2-942b4f65b8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148b46b6-c6dc-4618-ae35-b799c83ba9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1840c97d-264b-4de3-8bc9-67ca47aeee7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c49f25-3da6-479f-86c1-b1b0c28c2ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c88ce7c-3af0-46d4-b680-df87349e4710",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532ca088-6dd6-4037-83da-fb76be5c56ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1bd54f-bc70-478d-a1c9-ecfe8f9c5b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6eb564-4561-4ef6-b651-5c7ec34d9266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4902f17-2a58-4e90-9818-8c48ccd2508c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47056899-4fca-47f5-aad7-a7ae31960a4e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e735a6c-e4ad-4cd1-849e-db66ea0a7ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c4a2ae-f051-45c9-8a0b-84d11d74f46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d8b3a6-5909-4713-98c4-31ad78843480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6064d3ac-ef52-4a97-96dc-bb0988319529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3f394b-49cf-41a1-acfe-ed6816f783c3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4817df86-8a02-44c1-8ed9-a8247f7a9aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ccbc98-9898-4fd0-8636-cdd54aa3d736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e37158-5a19-4855-8697-932fda760616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f077601-b671-4e8a-966d-317bd520e053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42ab48a-992f-4dfd-879b-f55a59dcc5ce",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795dba62-735c-48e6-947d-f883f86e1132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3016db-120f-4140-b5ce-d43210900f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8943a1fe-17f3-49f4-bb09-4c2cc9d0910b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1242cd-1d8d-4be5-9f66-871bfe65c607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c832f352-ff09-400a-8903-f74a2eafb5d3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74ecb47-f222-47f4-adcc-bc61419a82a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e48cf13-e20f-4dec-a73d-12f72b10682d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bbd45f-9483-4c59-992a-a46dd628b594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb276fc-336a-4040-a838-17f67fb9d1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d805e499-76f1-46af-8272-5b7ee7e1d282",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb01f9a0-8d5f-48f3-8be6-6c9910089542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e56f5c-fb12-41bd-82a0-f8349e214a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01c7373-a91d-468d-b584-9fc11da17daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e075a6c8-ed52-46f1-a11d-754047b07395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7987010e-8ce3-4bc7-a51f-da573932ea76",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc162b-7abe-46fb-be1e-8e2820e87d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ace7d1-2bc3-44c3-b0c2-a2fa22956e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55983ffb-c702-4551-8800-76272ca97499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80deda90-6035-40c9-943f-1d6b0b718d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd9e47e-b9bd-4349-91d9-bcdd2a35a2ec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52ea7fc-b316-4c3c-b511-9d724a9a65d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca072b5-a4b3-48f4-92e5-2ea15dbb3160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4ae8da-6392-49a7-9734-2c34827aa371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b48d1e5-45ed-461f-bdcc-9f9479018c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a85a99b-98ae-401e-9c22-37aecaec6209",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e63a556-6156-4dc2-96b3-c804ebb3f7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66d0e94-f0c9-4472-8018-944326006f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399d8a99-1cd2-4f27-9c45-faa54a5bc6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f39356b1-545a-478f-bf60-65ff298de54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e336171-aab9-403a-94ff-c4f2efef6191",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea4e438-2651-4b86-919a-9cb5587dc910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f27faa-438a-4e4c-a00a-507e8534ffb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba51b1a0-654b-4fe8-a212-757eac46a50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "225bf072-b86e-42f6-9686-9fa596fa1843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f6e071-94ec-447b-8079-ecc4f5eeadd4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462da91d-6ea1-4e7a-b843-19cb3ccf619d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bae2c4-e6d2-4251-8cbb-c52f9e8523cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea5642f-ba07-4353-a34a-1e88ecb0f27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2c1f36-b875-4a28-a4a5-2153e24fde50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad41dee-2cc9-4d44-ad35-46439e2f4f27",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734b2812-bebe-4d50-902d-715b4a482179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3085e9-abb4-49c2-bcd4-1648c0cfc337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d844b8f-c166-4688-a2e4-ab1c28bf73ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e72e77a6-34c0-4abb-a4f2-89d983954b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1afe62-42f9-4bf6-ab99-03979142aa4c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0b13dd-80fb-460d-8dcc-d1161ac43f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349f6406-b2b0-4e0d-acb8-1816e004106d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e43af0-1ea7-4d94-8532-085bfea41818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbd0e5f-0fcf-4e65-8895-c8d1300c9586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867042a0-47a9-40f1-ae96-a46499a66c6e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2689ac00-d35e-4aac-9964-cb2df358bee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354f8c4c-ff66-4164-baa0-16cf64faf8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd6e509-6a46-4fa9-8c91-2cafbdc7648d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80597729-9d7c-4524-ba59-d9a88030c894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b2b5dd-9ccf-42af-8f2e-1d855bc0f638",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc49faa-5984-49f3-b151-59fb04a6748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de3da48-e2ff-436e-98a9-0275b98025c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63d9f0e-9f0c-4ef1-b5b6-0bb8ebcb5b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e79079c-18a9-4db4-b274-46dbbfe8bdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db5d70c-7147-48db-9003-60b4c9d380d8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac60758-18b1-419f-8507-c0e064555026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321d3ede-dd78-4a77-a8ee-e6cf232b137a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49fc338-44a2-496e-b4ef-1f2e18dcaeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8dcdfa-fbbc-4f20-929a-b1419f1fa6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1651d0b-47c9-4991-aeee-a5ad98405c5a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6023a31c-8ffc-4269-b6e6-4a72ebe4e7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc359e2c-fc7c-4ed2-a467-4e7f15029cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de18dc3-83c5-4c13-b494-48f31feda9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1fe54a-d9c8-4b34-b79e-c3a99fd6dc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d6e07c-995e-4806-af59-12dc745aae36",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532c1ff0-7ce7-48ba-8417-1667c0e2e82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99306371-a4c0-48ae-88ad-fa9a2429d9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faa7050-294b-4e16-a6bb-7bc8312906c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "450cde0a-7498-4132-85e8-1d5e36c2050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45bbda3-ccd2-4be8-a116-07f1e2744c90",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e38196-564b-4937-96f0-d4618446c2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8433a43-f782-4d46-9b98-f104b5bc8ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c0b6af-71fc-4961-bb46-de3dea69338d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08149c85-d7e5-4ba2-9300-208dfc61c74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59d7317-dd62-4b09-b8d8-43dda42c6df9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809f454b-42f8-428d-a53f-2de87dfd8bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dda5daf-ec00-48be-91b0-293466265333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1144d29-c7cc-4915-9bd5-38e340a2a909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ba24bd-1874-489e-bbac-a94638bd5c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa88f88-aa86-48ab-b9ce-82d0c1e430b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419bacc7-7688-40df-bf50-8f48eb324c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471e81ff-2585-456b-8629-e846702bc9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535cface-67d5-4bb0-89fa-9e74e95c09ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2e1e33-3358-4055-852d-49eeab00297d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108bb871-654e-43b2-a19c-9654972bda3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e71afc-0ab5-4caf-86ac-01d9834773a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf905c8-33df-411d-8f9a-6ad63e9cbde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d4c571-0213-4448-a540-90fe452229fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3c2a94-d18f-4188-88f5-7f55684f76cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617f9776-8415-4a57-89ce-0e652ffccc57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f11ce59-2771-49b9-b0a2-9069614ee99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b297ed3-6182-442c-969d-135bb5c34822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea87a9c-1ed3-4a08-805f-41964ae51dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfab48cf-a916-46aa-8b15-aa189f25105e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7583fc7b-3b48-4444-b89d-91756cfd22b6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45662e2e-9b0f-44ce-ae01-f41a0dbf9c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f3c7e1-66fe-4a8b-8dc3-5d6991564b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37fdb6a-ab58-46cd-8778-306bc2d751ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c0cf65-88a8-48a2-a593-c787ca8f2b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846d357a-2a79-4f3a-9e31-74b24fe2f5f0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718454c8-3754-4aca-ba24-861c56c94a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93e3b83-be3e-47d8-b0b7-ab27bd201d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b470a469-ce29-42dd-b1ea-e1535d473bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad9ffee-1782-4cac-b02e-bf584aacf36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f4e81b-4c54-48d6-8be6-4a623d9357f3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa75944-5ead-4f67-a9f2-887caaf951a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecfeea8-431c-43f0-bea4-8fd61e30d462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b22d27b-4066-4e36-993a-75ec6462b198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b55fce9a-1948-426a-a833-6987081e24ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cd7d5e-93d6-4897-80de-a5c5a9b6ccfd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c3f010-a67f-44d4-ab6a-fe7f42861c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9674168-e98f-4425-b0f8-9b2c919ab53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e68f00c-66b0-4fb8-82d6-8b3bb89919c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b9086c-e4fb-47cb-ab53-2698dde8cca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fff968e-bccf-46a4-b3bb-819fe49bdb98",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2406704-eb0e-4d57-8350-591cef1be9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be216456-b81a-41b0-9fed-f419a731d624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07b4733-83ac-436c-ac94-ecd806cbb733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "491280fc-3307-4621-a5f2-402ef73358dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8897a380-f655-4b0e-8c30-f92b0ee0cfa1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cb0226-16f3-4083-a30f-c3b759158a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf65acb6-a409-4ddf-b8c7-3cd4ce095de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b086a8-479b-4476-aad9-bf988ee334fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f79bf952-7d34-42dd-b6c2-d7b669a43660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919ccb1e-addb-4887-80cd-9cc3e99b4bb9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d6ebfd-0c83-4410-b159-a3b9e77af0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0041a5a4-496c-40a6-8bb7-e9a1ce4931f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04d0986-6b60-4738-886f-7824ebd730d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6375cabe-1f25-40b2-bf06-c1a1c0544e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e07430-d87d-4a0a-a1ea-b1f314b707c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ef0a25-4bd3-43d7-8c53-73c02bead0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79ec753-6dab-4a0d-a02d-73eac7b5a35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bec6b8a-34ff-4426-9cf6-2047026b1b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a64b18-ed3e-48ff-a8c6-d515be409976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c9cc13-5dae-45a5-ad49-82f219bdc968",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e797dd-796d-43fb-b0cc-fa7c38fa39ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab445fb9-b48a-4559-841d-50d2b3a75abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1567e246-e926-49f9-a53d-18d961f9b48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c70331cc-baf2-49c9-a7c9-159a94fe2ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f066a8c9-7c9e-4198-b58b-1d80cc1212e4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215382ca-2c1f-45df-9f09-a9d4936ae161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79415dc4-d0f4-40df-8909-c48916967956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b1e059-77e3-4206-8010-866e1997743d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "975580b7-552c-44e6-8163-4619316ebb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea243ff-5524-47a7-ad9d-d706f316f2cc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af8c99f-fd88-4b0d-99c8-95bb25336802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fbfed0-b730-4564-9629-ffaa37a227e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755031a8-6e34-469c-98d1-b4d546f20146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5295547f-e9c3-4e35-83c1-ade0406e9701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c6bd7a-5f5c-42b7-b4c9-b3f84c771608",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc7cc00-1b5d-4aa2-b86a-417d35c79a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0f81b9-e438-485a-bd3a-ff17ad998590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb066f27-74fb-46dd-8bb6-89393b87d2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2e70f7-5ab5-4a7f-a27f-1f9737031572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364dab14-6988-423f-b899-839ac5a7d460",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc737011-e7dc-4aa2-a309-d255a4e6f0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c5c71a-9d8d-4866-bcbb-f2431cafe24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504806a2-6ce3-48b9-8dd7-d589e7444d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9470f8b-3704-436a-aaa9-236cc8fdb6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3398ed-7934-48d1-bd17-f453cc7446c9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c154146e-5083-45a1-80d0-de01795d781b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a31d478-b72a-40a4-b232-efdfce9dcfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82212318-4c9c-4de9-b7d9-e9f5acca45b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae740f6c-225d-40c6-ae58-64b88c602e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df905a66-7f53-4ccf-ab66-e5025ae8ef1b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6400d5a-e60c-46d1-a863-8f9c410e104d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c2c17b-48af-4396-a95d-0cfc2e2dd345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a14ea14-c195-40c0-b786-73c05d62c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69212e1-f97f-4184-b3bf-4778330f988d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908a6df1-b550-4b01-885a-730d7cd874f4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06f49c6-ea8d-4b99-ac6f-56fbfe05f705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d8693d-6636-4e21-8669-e778216268d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ce7fcf-7640-4821-8eb7-b487ced4e290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c63e5752-5fe4-4e76-82e2-8ce53df37c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4451aca-2631-47f1-b388-48beeb345b8f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c6b6b1-1b28-40ea-8f8c-4be914837858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dea38e1-7d57-4763-afb1-36d9d42a9646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe8cf3e-8c61-4d05-8f5d-bb5e12aada64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f8fcfd-3173-44b5-8e2c-1f00297b0344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99b990c-6f1c-4e70-884e-16792efb0242",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edd24f5-175d-4303-b54e-ee2200026bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8855548-9201-4fb8-be3d-333142f6093a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0051ac7-2ea2-4979-b6bf-4433063bfdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc5904b-c1a5-423e-a093-b0d84a2e9ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a134c1a-f25a-4586-88c4-c1c12d3b316c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842386c7-9127-4051-9581-b000dc9c44e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb1fff4-640a-477d-91be-fdf247c3e0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d15653d-1888-4c34-9449-9161ccfd9693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "093ac0e0-268d-4c4e-91aa-8e41d8b91f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787fb553-b636-4dab-9411-ecf4248d3d1a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efff734a-bea4-4c0e-8afd-f19659ff4822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a302955-d254-42af-873f-282af2e9b1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c869e0d-58aa-4b97-a2e6-8ecf15aa57c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d57f6aa-700d-4fb3-9b80-fac4f476ca81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390e3b55-a58e-4061-8923-6b9cb70996fe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c2496b-3c6d-4a03-bffe-8f1049183a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b93ee7-8a40-4862-a595-312460aab713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7219963-d884-4df1-a0c4-51eab0e10875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51eb50da-5f2d-40ce-9b8a-df50be07dfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a1a2f3-9951-48b4-8edc-cd7ef11bce68",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c6744b-ab39-48e3-99ed-556b42b39967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e311acd-51f3-4afd-9644-eb5ce9024d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e084c121-9f7d-4bdf-ac5a-0adcf91be4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c6d40d-b6ac-499b-8217-a5ccc3b022c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d934806e-ddd8-4268-8d81-181a555938ed",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed38ef4-b4f5-4603-a465-7ce43efb0229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a66703-89e1-4768-bf47-451e28eb24bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b753ee-b5e3-4ca1-af63-18fba6fd3ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "228353f0-d16c-4884-a969-e4c355302b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e384994a-b5f6-42cc-b24c-00d50fa8214a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3adca69-a4d3-421d-976f-754d224e239b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0092373-d52a-48e4-9afc-3147654bac0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ec4499-d085-472f-ad59-b916f9369501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5690ba-de05-40ef-b90d-c424e0bf65fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937fcabb-b218-4cb5-9739-1d600e2ed668",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b516c3-0d72-4991-a3f9-5af386ab4d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfb2970-7a45-45c3-b194-8eaac4c8b987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747d4056-3394-4364-8719-0171e3d01e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92aaab81-13b7-4bf5-ba51-78aaab1f70a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ac3ccd-2158-45c3-9419-fd89d5bd25bd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c9b268-3405-4763-a4ff-85859a87403e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835ef600-62c9-4d3d-a309-941f3ae83c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62eba4af-7c88-4299-b2f2-545ef9993d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c8f0bb-1196-44e8-9e14-82b236168264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f6ae56-32cd-416e-8c53-c1e556bdeb2f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efa0177-447e-401a-a119-b770c1d07f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b10d7bc-d454-4b2a-b262-f4b3283f627b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27196ee-3546-4311-a4b5-14996ca4856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "66f810d2-6507-41b4-abf3-beed34bd59b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19826cc8-18a2-44cb-b91f-dd936d942c1e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb8c7b2-d7a7-4256-b577-8ae356e544ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00852836-ab28-41a8-a0f1-a6f5cb1b9b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e077eae2-0218-4802-bab1-19d99c5e94f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d947cb5-ebbf-4d40-b30b-70e1e6f74c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1919907-d271-400e-a134-9dbf73b78e17",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cf30c5-6c76-4cb5-9471-5c4755ebd19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68dfd8c-57f7-4e7e-a4bb-0994223d4589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f39b18-bc30-4ac8-aa98-c249331af1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e974d3f-30c2-40e8-a970-f56959266a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b683e4-62db-4b07-bc06-ef84107cd0f8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef46b93f-4ef3-42ae-9892-8bbffcc62f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757bf8fd-62f1-4744-b49f-912bd516f043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622024cc-acff-40bf-b5bc-9276f901745e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "17618817-81d5-44d1-92fa-3d995b6d2084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614cfde5-67ec-453b-b82b-1698b6123322",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540051f6-5aa8-4dfb-9078-6fd1692141e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "300256c6-5c3a-4e2e-9233-e4badff74e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1444dc3b-3d95-4222-82d2-d566e5c322d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e99f21-e4d2-4515-962f-7e20f75a708f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad84add1-729d-47c0-9454-13f0159438fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05e7b85d-5d23-4645-b750-9a7fffae209c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513b4e83-22dc-4e46-97ae-ae6990dda422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f1a62b1-ea71-4d4f-afda-bde32c9065dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695af05a-5c36-440f-828b-87f08af18bd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "140889c3-2bc4-4a9d-bbe1-46d9aab15892"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f72ed250-121c-4550-9ea8-c7adb50f1d3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b5842e6-ac33-42e6-ac6c-d55356706b6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b2003d1-dc44-47fc-8e1c-f4cd3c5d2a37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01cb5d15-0ea7-49dd-a21f-8638a3426cb3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "017c845d-e131-461b-b44d-ea3ea373afdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bca9caef-f538-4f27-a86e-750efe76e636"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8bb5b796-313b-4e07-ac4e-f1dfc7aa69a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05e86e24-3861-4b15-9019-99bd85913508"
                }
              }
            ]
          },
          {
            "id": "9276920d-00d6-4c42-bd68-8f4d8815f244",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5986f52-7358-4600-b177-4170db3b4e98",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5642f96f-486a-4e60-81b5-1e63c8277444",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98182e4c-0939-4169-89b6-be822cce7277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ae6788d0-848a-42e0-921e-e50ffb830988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc58919-7a41-48eb-aaa4-2252309c1dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd171de-2b42-4084-b029-5f76586d6c23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45e9eff3-d4b5-4259-be36-9445943ed9f6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c03f116-68c1-49bc-958f-4ed5c0168c3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f46a59a7-d648-4e92-aada-5ea7a2161b4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd38dd4e-d915-44f4-9c82-55c82bed9b15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8804faa7-94b2-4b6c-b09f-62f99a4066e8"
                    }
                  }
                ]
              },
              {
                "id": "891034db-45a3-4498-a978-1e3ef0178462",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c72422a-33fd-4977-8c24-ab92b198783f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ed91929-ea87-4b2f-bf8c-fe82785f063d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5eb2f07-3391-4273-8f0a-66a334fd13e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a7a6279-f8ed-45ff-b2d3-74bc1f7deee8"
                    }
                  }
                ]
              },
              {
                "id": "9623e7a1-d323-4b8b-8485-ec8613082e0b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88da969e-8cd2-46b6-b1d9-1c7a14473082",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40151ac2-8d24-4dde-bc6d-33d5defda169"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4ff2ac4-607a-4259-8591-b660c346d751",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4337154c-496d-4168-b1b5-c59b8f5a5377"
                    }
                  }
                ]
              },
              {
                "id": "2c76cebd-3a60-4b9e-bdaa-3fe80455bc16",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94c6bfd5-28b0-464b-9f8b-757b8ebd4377",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5fa0d48-657b-4a72-b546-a27fed9f0956"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa4b75f5-fc2f-4b64-a4c0-84811a004ebe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e003abc8-f322-4253-957c-b547d06b9382"
                    }
                  }
                ]
              },
              {
                "id": "19f287a7-94ca-4883-8e4b-656ed51413af",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "266b7c42-6203-42b2-ba02-af7405a4dbe7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd037a3c-f64b-4a9c-b608-febcb1956149"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9e594f0-08ad-488d-b5e7-52887a2e1bc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3367d3d9-3079-4bcd-aee6-a3cb5671e6d0"
                    }
                  }
                ]
              },
              {
                "id": "4e203bdf-843b-43ec-868e-a63233fe3a9b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c0fb773-4c2c-4cdc-8e26-c72fcb3ac4ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28b870a8-6d78-4f3d-92d0-cd304501bed2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c7daf59-d945-46fb-82d2-e681b021d4c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "988a4ad7-75d8-4433-9e9e-2b5be5ec91be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78feb67c-bebb-4886-9be9-7ae9e7c588d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8166fc5b-898b-4761-96c5-f6952db13f13"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "80e858be-f1cc-40f5-aa4c-278aba46a6e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "961bab85-e622-4439-8fc0-f8a6cf01323d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "515dc09a-7ad1-48f5-b8e2-9070d474b1bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "80d90f56-bad0-4c67-b3d2-76122a9ad456"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbb53387-c054-41b5-a876-5255d94790f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77694dbf-b47a-4ab8-8cb2-07da77e7b695"
            }
          }
        ]
      },
      {
        "id": "70c683fb-e69c-4dc6-97d4-5e3b9b207c8d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3fc670dc-3627-4703-9bc2-702778f68077",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfa085fc-93f1-4051-b3e7-4ee801602ced",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e296ec68-4255-467c-b55d-cea9db02cb81",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29619f5e-4f96-4811-afdb-431bd945c82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c10b4ea-f829-432e-8189-48468db50ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7896ec7d-2769-48d2-acbe-1a5454a5f8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "50172924-2e9e-4f99-b684-39a850581202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cad9773-1d69-472c-85fc-ed05cf6c88e8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3df4d1-f2a2-4048-b69f-cd806ec56732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146f70b8-319e-4b23-94da-d344f1b67d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548d890a-780d-4028-826a-af51f9ec6ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a139de1-10ea-49d6-8fd5-d603bb744383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054123c9-0913-4286-b9fd-a3ab8b872df5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9bf05d-da09-44fe-bd2a-1f3ac95836a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbb6e32-de84-4e4a-8775-fdd97d0bde28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871a4a62-d495-4fc9-825e-1689b8baec8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f0e280-f5a7-4ad8-9018-844b18242465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3193e0f8-fdef-4815-a24a-98fceef91aa4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34a4332-d9cd-4110-94a5-ae239e402e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d81597c-2775-4a3e-a7a1-e9a66333a5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d7267c-4d54-403d-9f8e-40ed9783a89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89751b5e-ee73-419b-b1d0-4dac9fd94280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e285b89-c041-4cc4-abe9-6bf1366be97b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a346ca9-ec2a-46d7-95d9-5b4ca4cf7ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58c72df-0ccc-483f-87c3-18a28682c6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa652980-eb3b-44ce-ba80-2337d52e08c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2189cc7-db52-4c4c-a807-13bc83e705ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a05088-864b-4ff6-86a9-5aa1df492c05",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbf81fc-4a89-4ef5-9da6-31f10e2b8b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48aeb733-9fda-4d25-bfa5-6ecf2104baed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321b70ba-6e23-433c-a4c9-8f85613d999b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b07ec611-5775-4f45-9f28-90fe76e1e52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce14d02-eb53-4f0d-a749-d141f2ce079e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1505f537-ccc6-40d9-9760-20111b0eb0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144e059c-8383-48d1-8cf9-a7b5f3b4e324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb17f0a-e6d7-496d-b6df-af4f6cd1c14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa18d152-ae38-414c-944b-7215f2aeaa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f929ec-5e79-4d95-9d32-d27154e778fb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12939921-ffa2-4657-907f-269d3e56e590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d13a33c-11cc-40cc-9ee0-20944ea17d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4b29e5-308b-4cc2-8ab8-d871722f0045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a01c93ce-94ef-49e4-b302-8001e4bf393c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae7aba5-1100-488b-ac50-d80f56be0771",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac111cad-cf07-4ec2-8c93-8717520870a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbea948-08af-451d-b2f0-cce4381cf991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95efe51f-7028-4c7c-a0a4-7ccc0a1a065f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01cb5297-83a1-4c89-8d4b-a11ce0292270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9372aab6-8201-4609-b335-fe3b5c30d5f3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6786ddb-0f18-4f01-8fff-19daf603bdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdd882a-9a53-4808-8e43-4f923946f548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fae19c-82b6-45fd-ab4d-fa156500ebf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6023dc1c-18e8-4abd-9fda-66b7644f4116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cd14bb-8778-4cbe-aa0d-35be0fe13e9a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a491d41-e965-4e02-b5bb-6f8a3f1eebef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab3d278-9e36-45b9-a9e6-547b75c48f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da2738b-1790-44d0-bfb6-ea8d8c3a1456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "454829c7-32e3-4c7f-b5b7-ed20d9cc740d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f768d073-3411-418e-a6cc-bbd3c6061082",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3e1369-9253-469f-afc8-4bf12e4d4d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb743c3f-41e9-452f-aaee-870c45500892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9eabb4-5ff2-4496-90f8-f43ff47eb721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd4f007-0ec0-401d-8cc4-896ea22da643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b09c082-c728-470b-adfa-081a20023d6e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709c651f-07d5-4bd6-9bc1-0e3067da7b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f859ea-f251-4c0b-be8b-9bdbc54ea7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48a680e-47c5-4843-b92f-febf1e83c1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e99ee3a-7cba-4881-b740-c030d3663fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17266607-2819-44a9-9a2e-20399cd749ed",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6298a682-2ca4-4ef3-b28c-a0ad89d5203b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754ebbfe-97e9-47ff-b3f0-ce126dd84853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b596d00-1d60-4451-9317-8d850576b60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aba3be3-1153-4ad1-84a1-c6e52867dabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc5bcd7-d425-4bc3-b66b-81607f9c37ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70130e14-3ac1-4a01-8a05-b2f21c762862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305b2464-e7fa-475d-9ad4-1dddbf3b69f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e931ded-0b55-4997-a1b4-4222c41b43ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0afe3287-2c67-4a34-b022-92200a9440b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c619c56-98ba-44bc-9ff5-f67ee708c368",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84e4bde-ff56-4511-bc17-e507cac7a326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645d5748-84c7-407c-8d77-833d1d341d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115444b8-29bf-45ec-b256-a32a5ce640ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e465da-4429-4519-b1f3-d37fcc6dce02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32737c3-dc3f-40bc-9852-5c56ba1762d5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fc7255-d4b2-4c9f-92dc-ec7657c0d9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64f3bc9-ede2-4005-83e5-8c03f32de521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a803b5-7181-4d00-87f8-16b4e64f1ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcbecdd-0cf9-4de5-a3e4-ce6542e31e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d5754b-b874-4a01-bbfb-32c2a0f0b00c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b3c314-679a-4602-b1d7-503156df4228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6294772-fcea-49e2-b009-9ff0f4632215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b91fa0-d216-46d6-ae32-70c0f1b47b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2465b93c-d5dd-4433-9aaf-92a35ea448c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2c628b-9ad3-41c0-aff7-27d755d47523",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad5454e-b077-447d-bb5e-94d6ef96e45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15d290c-f6e9-44c8-a407-43b68d59900a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f56527-6177-4cbe-a6e4-d877aad94937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afe5a1ba-f848-4024-9eeb-f28efd40dd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208295db-ec32-4742-9d3f-84d67f150393",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d89ad6-142d-46c4-879b-2ecb337536f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba56744-427a-46d5-8424-439919aba65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a955ba-fb21-494b-a985-f031725a889d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c83447-6fdd-4d65-bc2a-d61cce91dcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60777c1-1309-4497-8926-4c80d8ce3662",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a136e4-1441-4b42-88fe-0cb2080e86de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626a6b0a-4952-4f66-b407-7a3b7b01f96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f300a473-1b29-42f2-a6b5-80b887da7fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6019c7fc-52cf-4f0b-b2ab-895764bf10a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639adaf2-46bc-4f19-84b9-8925202c6e87",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3930ff7-2b4c-4df0-96bf-bf525cf750d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5ee0ca-48b5-4d82-a537-a39cc2b6dbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c75027-76a9-483a-9a3f-6995a34c41e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fbdf0c-bfd8-47d9-bcbd-ba646bcdc870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2453d157-b821-4673-a345-ae56c57e2074",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d8ca9d-2e9c-4150-acf6-4b09ae438b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ece78a-0b54-4570-89b9-6758a5fa0fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091254c8-27a3-483b-b84b-336fc49248e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7830c3f-24d3-42a1-a0a2-088c55c1a344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac255dc-a746-4452-a200-fe204abf1560",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6e04d7-8e86-4653-8c84-a98b70365d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc79de6b-2ff0-4860-ba47-076e0f0beccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed4f4ff-f9b5-4d99-97dc-a571bb213449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c3a04b-b92b-4ea3-a2dc-238034a00638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3d81e4-5b1e-4ad0-b301-381e5df96e9b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7e3a3c-f3ab-49ff-872f-d3d7305cec2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b15a6eb-84bd-4e95-97b7-f97c504df89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c172f667-25c4-466f-bcb9-0f19c12b24bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf2c15e-e212-42c2-a4aa-c8b73f4f2439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad4c96a-c9f9-4e7f-aa72-7e60dbf5391a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de3b834-d061-43d3-b9da-a5534ff5681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311b54ee-5e30-4f56-a17f-305292d0fb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1f5dc6-aae8-4db6-b7d7-63d4c2d29728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a1c818-1e56-4702-96c3-f5a773c250cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1922d714-3aef-486b-af9e-691bbb41d691",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9e446e-7249-4d8a-b8c6-e0e5c185a397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e475609d-b406-4c14-921d-8e84934911b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb08a1f-2651-4c6e-9eab-a513a961b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76ccc40-8c86-498f-9232-a775aecaaabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54bf8c2-f494-426a-93b0-c3b0180d9b1c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a97493-9e41-4a62-8f0e-d2f0bdd87600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89137817-29a6-43dc-8b35-f5c807a38570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81de424-4893-477d-962d-b00516380ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5abc2fff-54c7-421b-9e14-ec04004a1521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bddeb0-5bd0-4ee1-b740-477e416a9989",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdecad1-0b30-4945-af07-ddcaaa050573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb74a070-91fd-41b7-90bf-e606f4d33ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b2a6bd-2826-4c85-9958-58c644f36289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50558048-18e9-4db6-9caf-f0a83e5110c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5cdde1-c09a-44c2-a8ad-2db7672216e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b93a1d-fa43-40a8-9106-97b8776fb510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca44007-a3a5-4ca3-b714-0511c06290e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7d0968-36ba-488c-8816-585c5ff504c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8484a3a-03e2-439e-83f6-84ca15217510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b93100d-db2f-4754-bce9-f94046d62f99",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4977a13-c7ea-432f-845b-e791f6e13a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cdc809-7b0e-4d8c-86c8-8d8a016721de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff7061d-c90c-4948-bec3-9e6eecc9273d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "484ccce8-d880-44f4-8c88-d28bd885f6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a09cc0-c343-4d74-a9e1-bf48fa75de0d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083b2e7b-49a5-4889-81b3-e09be6092d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32e0fb3-ac8f-4845-b612-068f6429c379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7814fdf9-fc5c-4edd-bee0-ba26ccbd3f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "877252bf-bfc3-4677-b7d8-b7a400762733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c287e057-8c9d-4a77-bb92-37d6a6396e01",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76364671-705b-4ed8-909c-067c0610543b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a27ffc7-1368-45d5-871c-f674a8958379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7710f3-3b6a-4829-b1df-d32e6ce8447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82ca6c5-16b0-4a27-bd20-068de7a3f465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29fcf08-396c-47d4-b68f-2680c06fadc8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc52241f-3add-44d7-87d8-503fbb148517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57b3e83-2621-43d8-900d-37ae9afdd367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ddbab7-e31c-41a4-bb3a-72e74e81c21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a56fed2-7baf-4554-bd56-a5fac58da569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d268a2-a130-491c-acfc-c8e02c87011b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afd2338-5e52-4fa3-8076-aa126ba59b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792f59dc-39e6-46c6-a45f-abe6cbf23b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d5e641-43d0-4244-953a-c7ebdc23e84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "043009ac-7534-4b0f-b75a-95658d0bdadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5c0f39-ba94-4f55-aa9e-fe8793a7b97e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de980e4-2726-43b1-9ff6-d661f39ee9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e490fa3-ea44-4557-9f14-f5045844f1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05c8daa-c1c4-4e30-824e-bf0d0279b98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "368683c2-dcfd-4268-ad67-ae1e1443f2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22233e9-1bc7-478f-87c2-79bc75c1e5f5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04afc57c-f492-4c5d-a434-593058c6fd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce621ddb-f1bd-4599-85ce-bfbdb4b83796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49492718-b338-4ad2-a1be-ad8fc21d75f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e18572-cc34-4c4f-b54f-61a7b09e81ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "93b53933-3e18-4569-8981-2f2a6955f90e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "262a2b5f-0f32-4243-b104-881f7eba2547",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba3a52c-b8ac-44a9-8d52-01f24d2b333a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed4d197-95af-4d01-b552-be034c2ae13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0576751a-0eed-473c-bba1-d4707614dab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08b5095a-b41f-409f-81b2-fa9ae506fa39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8e3016c-6f07-42e1-a29e-6b965824f3f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5e1e107-f28c-49bb-8f0c-ad8c1b12652b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9a1f600-6220-4097-bc9d-842e0ac815fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d583026f-2ad2-4970-87c0-a98fc698017d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aae3f943-f0de-428e-93a9-aca7f9997824",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9bc9c488-b938-4f30-80a0-e42c21280642"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77c65b0b-2d59-4d9a-93ba-672adf03da39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ed03bea-4e6a-48cf-acb6-87eaff0f3285"
            }
          }
        ]
      },
      {
        "id": "d366dc10-075a-4da7-9d98-0abe45d49241",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3607af61-d1f8-4ef2-9111-fc8f28f694a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34b2906a-b04b-4b4c-9277-8b1e3185b080",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2fe2f63-d502-444d-8d7e-09c719f2facc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ca8092-0b58-4c44-9418-08dfec33eb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a641347f-acde-4a8c-a5b2-53c687704c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb68d638-7bef-4af5-ac28-998cf0d79dc5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbbc946-aac5-4951-bf31-39472f647a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177c09db-f10f-4aed-912b-8f070d603255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b4a023-75c5-41a5-8002-f246057554c0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e064621b-1754-4dcf-b0f3-2cf5113c4bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc124c00-86a0-4645-99f3-fa29aff6ec76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c3d173-6611-43c1-abe3-e25494e3fcff",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bb3420-eb00-4447-87e4-6c5de0c59bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cdcd7c-095f-42c1-bbf0-89e477cec398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff72e165-455b-4837-87eb-ec0acfd1cc25",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fbd665-c34d-4ec9-ba48-e94affc7246b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c1ec33-60b1-4d08-bf71-a06928d578c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbda1fd-f8cf-41ad-8a20-35a7338cfb13",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b52803-15b3-4ac3-8959-4869cff6c8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff96819a-1ad8-496b-a2dc-75cfa4019d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dfd9e2-8acf-48b3-b3b8-715808d4d66a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8b959d-b201-4830-b7ce-25ee782b80be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc79f2e-0d7f-4da5-9cb9-94da733da8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0704c6-a58f-412a-aaa7-2d8417f17a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd75356f-d540-4412-b138-12f729e7506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1e4f09-f668-4cd7-a233-85538138b08e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f40a08-2c55-462b-b341-ea224d5f07fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f3fa31-f324-48ff-b860-37c3888397eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab911ec-0e6b-4ea5-badc-d7da4d9ab3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a7d29d-6f53-4cd7-aff7-b1bb7f3bc2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfcd7dd-d9e7-485c-8a93-2faf735a0155",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995a1175-978d-40a1-924a-6a36b0cc80f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "224e7103-2690-4684-b474-c462262de07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b010b06e-776c-4328-b3fa-3c894c57c72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c05687-21ab-4c57-8b5f-a0d86db1cbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267f1c1a-e528-4e21-95ef-88cca30cf085",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f402ec-ddbb-465c-822e-3d335f25c9e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fb1a45-6721-406d-9e18-8a09a044777f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f4e878-45d7-4c88-8d88-9e8e7fcbd26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb09432c-90ff-4057-bec8-22c4f2b3fd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021adc5b-a755-45c0-ae9f-6423a49cdc11",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da38eb6f-7889-48c6-b7e7-cd35dbc5f594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6f84ab-0ac7-4789-84e1-5782e9fc1d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f5f4d8-4311-4ea9-8ff8-4d63c2eaffb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf75e23-51e9-46a6-aed1-021085b15f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23377b06-692e-433c-a254-47ca7062144f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1b0356-e407-4a9f-8ea5-1c3e845dc80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e02d86-cc72-4c14-a246-64c8ca06ef65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b144d15-f6a3-4525-bf42-b256550d9735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c27c95-fa0c-49bc-9a1d-1f6bdd84950b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcc6348-05b9-4328-b9ad-23485b4abb07",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97e238c-0d17-4f87-a648-63581c92c458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "042062e8-0240-454c-9212-a70a8c94d3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d64c16e-ab43-4abf-8e91-d8e5dfd3ab6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb174ac1-79db-4712-91bd-0526790d011f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246fb88d-e6c9-4b85-9854-872fc5c14509",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894064f5-4316-43fd-961b-22c09f189e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89bc7f4d-8889-45a1-8e05-dcf29bf3de8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1bbadc-410d-4f12-b983-e021bd93efa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f31a75-acc9-45a0-ac53-9f3e2a9913f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97faa09-ca8a-45c8-aa8e-621958ff9b92",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f551d7-5556-4c0d-8903-ebc5bf7aabdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb332ed-42b7-412a-874f-640986043410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b43ad4a-fd83-42fc-9d94-53d6041efdb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65841149-7b6a-4602-b1b4-67694dfaeb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f3f0f4-db5f-459f-b5c5-dc0846377f09",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fff4af-c4aa-446e-acef-a54db4d6ef5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0b0df7-81ab-4000-9fcf-44d553aecfa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fba2daa-eb63-4dd8-b24b-e3330401290f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1573fff-cd84-4c6b-8fe5-2bfc762fb101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3cf740-ca51-4a1a-9ef8-021fe6296a1d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e77710c-3671-4677-a0db-c7c2f7c2c3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a091f2-1c26-4ece-891d-87f9b0f2acb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb4694b-909f-4fb3-9a4c-e33214476bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a168917-137a-4492-9b13-2e11a252ccca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4a0c5d-32ea-45ef-a017-0986dd3018d7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2dd8c8-f436-4a88-809f-db6a8be0bed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77601c61-825d-4591-9a18-9dff3abba6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e87cad-f482-4afd-99dd-10021ddee851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb11279-9df1-434a-9d10-2cc244d2ce80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57de118f-8288-4e38-98a7-0eabaccef5fd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfa1495-d118-4413-ab87-b058e576ffb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19296846-144b-4c4f-bda4-2ddb06716b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a476aad0-18c5-4da0-abaa-b0256b61a675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be4d063-9c0d-4b3e-8aa0-893f15024e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04599234-7298-4f17-b911-b358e0390fd4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f85131-f8a4-4d6d-8fb0-62067426085d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c705a07-987d-457a-bca3-4b83ba858115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd83d6d2-6718-4fe7-ad96-99ba090e9322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472827b8-5b6d-40d2-95fa-b4e8c604b574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca62ee81-71cb-4c9e-89ed-deef79ad891d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fde1ae-47c5-4461-b2f5-dd4ab676fb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239c0cf1-a8c7-4385-b6f3-49f5edd6a82b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497ca5ef-e9ef-4f56-8470-ab4b1b67aca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c23923-23d8-491c-b031-700577d1c81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976a42a7-8ae4-45ec-aa79-f3fa6eae9485",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052163f5-d526-4cc8-8273-a671ded5ee7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a08dac-f27c-47b3-a8f0-56bcb72c8602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d8845d-5f50-40ff-bc87-b504af429a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd498a51-6254-4a34-9ad9-60b276fdb839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be851d3-dc00-4681-a8f3-ec45cf77d7a9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffec50d5-eacb-4544-8054-21a4d069c605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d1d991-1a6e-4db5-b0c0-417b9f317a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1472e107-eae1-48db-abbb-650706c4a45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975ab5f1-fb8b-4498-a9ea-6d15ea620e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f040ddd-0fc2-44ae-9297-5c4a20cc0638",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd950f0a-572a-432a-b3a6-62a297e09fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4390b0f8-1f95-4a66-9030-3d47b9d9c02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771f53ec-3458-4216-8d2e-fd8ffdbe23aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3046f7e-9f5c-4e73-b575-70c015f96f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1f601e-8cc0-4978-98cd-6274e8f9aa97",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0f741e-bd8b-41ca-820a-0c9dd91f4dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1758a247-6ab8-4bd5-ae2f-f192c6d7e3f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869632e5-1654-4c43-b268-970d069340ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd408b35-be18-47f6-b04f-4062d4439aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755a1709-5c5b-42cc-bf98-e5014eb3599f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f208289-ad1b-4141-97b9-4101a1583fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50df2970-2001-4c54-883f-4b889c7ae76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b79320-a57e-4e14-a00b-d9d9d880f0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc677df-3a4a-4656-9ea5-7fd851651bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724201e1-571b-469e-88e7-af28a9d2c824",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d610b34-4946-4628-8149-f9e3fc011b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd66b79-1da7-4a10-b6f5-32ab74a59110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874b5ad5-5202-467a-b1bd-373df77ce252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684e6890-be79-4f64-b186-01b48c7a2e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502abb39-c582-4251-8ed7-899441d284bf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b2c2d2-2a8f-4584-b881-69ca54b017ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbe081f-1b68-4702-ad49-1ac9697798e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988e9d1a-c3d7-439c-8a61-3b861f3d57ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6cbe97-8c56-4425-94d3-9a663d60ed6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35366e73-1116-4ebc-a4ca-1f1320b4178d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b410883c-874d-4005-86da-793e2b35c9e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95be3946-9203-4158-a2d7-89b6aec3f5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3d2daf-ffdd-4065-93f3-b353450f5be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291a7238-7528-4c2e-8167-457ff2bbbe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25ade76-eccb-4c42-89a5-4dfdbe259843",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fd02b2-32d9-4aa9-a2db-bafc1543f748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4407dcd3-06fc-429d-91b7-853db60dd197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdc272d-7440-460d-9c96-e667b63361d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb2fa32-13e0-4fe7-b7aa-1162024e229b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40240643-68a4-4fc9-8114-cd9f371f33a2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25ef2bb-f846-4af5-8911-348afadfaf2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1a07d8-68ee-4197-b898-7729bbb838ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98b713e-aa14-43ee-a558-b0be8c1a80e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e80cda-6f41-4c9c-a0a1-51acfa79287a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7188f5-8f2d-4d68-8b6d-da1abb08e6df",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093dcb0f-ada4-42f4-ae57-d71af937c400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2da84f99-4628-4682-8017-ac3222480b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df5e35c-d070-496e-8e32-9bdb3cf782bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb6ab60-a9d6-468e-81e9-505668745dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5804a9-e49e-4754-8356-219dd652037c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528c555a-7590-4248-bc29-3d55430256d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdcb6d41-3daf-4276-b5da-db6335343232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e151402-21ab-460e-98f5-6315d8061d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885c15d7-e850-4984-a9bf-683f3c929f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604877fa-581b-45e1-b2d7-90814aaaa6c9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04db0753-069c-44c4-9888-05aacec566d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd103364-7a2e-454c-a918-db0fcc2838b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1d8bf2-31f8-4217-b379-7fc69caa20a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02142018-74b5-491c-b2f6-33733c99d2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d3c80d-4bb0-4c4f-b9d9-c7d96476d44b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc394de6-e6ff-48aa-8387-bacb9bcb83f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b73217-9566-40a9-ad8f-7d476d54552f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96880fc-26e1-4ed2-bb02-6972877649b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c928909-1bbf-4d12-ae47-6f0db5eeae85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad20b7fe-a8fa-49d0-99b1-1b597526a248",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00896131-9136-44de-915c-d04f33e08536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b94f0b1-75fa-47f6-b360-78accc37b027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8320ed-f2ca-4eb8-96c1-fbdeb9eeda0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c627ac-782f-4a24-960e-99b381f15bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c477730-fb0c-4b7a-949a-b738d3eebb9a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7312b90-8320-4ed0-9a5f-8ae5f31ea18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b9a1b5-c49c-4e93-b1f9-3d898ea5f3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dd5a95-b98d-4a10-acba-b499343739e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa7ee53-8540-4c11-b87f-df2a05805b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec36ea5-41c9-4f3e-9b5c-aeee378990c8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1473d4c4-962b-4fcd-9414-d423fc112b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72fddef-13d9-4bff-be45-655ca122030f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c3b5f8-cb08-4984-94d6-6264f4d28403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60afb9b-713d-47eb-a83c-ab0fafe41847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976fa50e-2fbd-47af-a7b3-daaece9807d6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b73acdf-9104-4cd8-8a2c-8c36b0bd4b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8891a4d0-a130-46e8-9347-14a5e2b29fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e2a642-37a4-4641-83a5-b1a816430739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60493219-e970-49c3-b1a8-8fbbae25ce7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03c3af1-3566-4020-9dab-e9e70d361311",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dff9bd8-087f-4291-8011-a4bbdaf080b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962625d9-4a8f-43f0-af2c-5b3e3dd84b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25897dd-90ea-4592-b59d-45d3407ca4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8be700-3891-46b1-829b-9867daabaef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734afa50-cb5d-4adf-a405-8e2da1e17d3f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef032b17-334f-42a2-8187-af7de6bf4669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8e6a73-9d42-4387-8223-fd6b173e3d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9038a347-a526-4bc8-8937-d073dfcd05d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aceb3b1c-8a69-433e-b539-03df8356bdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f6c527-4f87-4f41-9bd1-c293055ccb74",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4891d9a-2fac-4e39-8610-a00dcc459c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ce38e0-a055-43f1-838a-77ee53a7cfa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f806491e-8850-4f04-aee4-2a2d8dc10639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f6138a-813b-4ad2-a0be-8dd4e704529a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b96162-0770-46c1-bd8e-50d2846181d1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0dc0fb-9123-417a-b0c3-57ef96e32b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9105d403-13e6-49e9-9652-0f822887df40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1859ee8f-1130-4781-b8c7-c342e93fd50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d226d512-11bc-4ca6-9d44-5632693430c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2822e189-bc38-4d22-9112-474dab3f93e3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172fae5c-b175-4a6a-aed6-23c6e4e06797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8faaaa8-c41b-4e28-adb7-6817adb1b911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cac53ec-46a5-437e-85d9-94695ea3eb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a7b24d-4aa3-49e2-be6e-3db4d05504eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83687ba-d781-41a1-989f-5db340de9a69",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e54c62-2485-4927-bf5a-9ab898a1c04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5b762c-ca7e-431e-8c23-9fb317c43786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cbae91-9fa7-4cf6-9c4a-e4554b8d939d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21eabb9c-b34d-42ec-97d6-ad072e47e258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ba16ea-fd42-4495-ad0d-aea3a4899ee4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23fd295-484c-48a2-9e8e-599a21a18d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc72ad6-1dad-4381-9070-326e2bc89dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f5876b-2263-4627-8eba-9c1a84c21f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cb15ef-61c4-4ea7-8143-a175fd8d6e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee3d2eb-7c42-41f8-8128-3aa45b042f21",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8ce181-cf3e-467c-b002-b2805af580d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d150e86-2636-43d4-b475-7de2f109c949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831cb7eb-af74-4c14-8e50-d8f52ff0e7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7a018a-2f67-42fc-b32d-0906ef0b195b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d69969-b33b-4af8-b7c8-5f94bf32fad6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bef1b8-00be-4ffa-b799-bd572344b204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6081fa-117a-4447-b85f-2eec9b7a54e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a055a9b-9f28-4fd4-ac7f-b4da0169b95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7aa65d2-0294-421c-b83b-dafa56bc8b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4bdfc4-039f-4e72-b1d6-eef2937de346",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6ff4df-6c1a-471c-9932-0076bfd53a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b100ecf-9384-48ba-8c1a-4594551fa690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fef35f-0a9c-4258-9268-a818583be5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1226269-6796-472d-8b95-35491f96c604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f91f0ac-1053-4fb3-b389-212c4f2b51ae",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfdfb32-5055-4eba-a301-403857a061ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b637bc55-b2fb-4dc7-8c30-ac363264e46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df8d655-5c7c-46be-b572-2fb572eb5e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fcbc01-8b7c-4095-85e1-328d6b90f84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7914b054-8092-4605-b218-fccd426d8f29",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8811b80f-a1f9-4ccb-a970-287e2f6d6566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b62d1a4-4e41-463c-a023-b8e2a4fac208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4d934e-81d0-4925-b3a5-e9e6f4f954d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfb5959-9983-46ed-b300-c70642db4d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c34484-eb04-444d-95e3-e5edc60474ff",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0e23dc-451e-4349-a424-85c00816a6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e181262c-f756-455e-9508-23c9d0405f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f3b669-023e-4591-8799-80309cbbeb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f530726-5440-4f27-8bb6-798ab6abf4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd93cada-9bcc-4b08-a377-ee08cc099656",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aa99d3-c101-47ed-8148-8d0d7f2ff715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5852075d-a96a-475d-998e-1c8f8d3a384c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843e699c-481d-47cf-8184-72c1ce824cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb51483-a745-42a1-a69c-078018a3af88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7845c85-71a8-49fd-b07d-2de3a29161cf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10dd06f-3d09-46dd-8f51-697c6125317d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e4edfe-870e-49ac-b692-9efb4c289b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e531399e-039f-4944-ad8d-a2886c7bff41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3694ae4-d2c4-4f9f-9a64-9d12efed7f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5120ec9-3bf2-4863-a3d8-5f0f3a6b69e0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696cd9a3-c5b0-4857-9cfb-69cf484564ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89d8592-905d-4c7c-a851-3377a1653b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d53eb5-db75-428f-9b31-9541cd2275c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d731f94-218a-4ad0-bbd9-7761f07ab15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c230cba4-5154-4d34-8346-11fa5598544c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f97c66-b130-4a00-b30b-c62fd0489ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d796bd-be85-4a6f-ac96-92cdbf21783f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9b72bd-6f42-4dfa-bae9-2f643aa51b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05af029-0c4b-4668-b21f-d0f2c1eaa8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e0e125-14f0-4a6a-ac2b-e8f3f14cefe1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3812df-0cfe-478c-ac8c-0d414071a370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe35264-127b-4de6-8912-fa66cd17ae1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e51e71f-85b8-4cee-9713-d2ddad4cba9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9aa3c81-9266-45a2-971b-5a548ec24148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd10dcb-552d-4c3d-8780-3426a206e462",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a50c10-c02e-45d1-9485-341afc839799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073f8af3-1219-42e0-912d-99f29de4864e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd72c03-f459-4a7c-8c98-195928acfc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4ce607-02c9-400b-9ad4-8e149edfff4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eadecb9-aca6-405b-9446-7d24f84ef1ea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f8e27f-91f0-401f-ab4b-393935c90a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cd5d71-2c5e-41b9-842f-162939d86a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3f26ec-67cb-42c3-9152-45d69e9e720e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbd40f7-110a-4cb8-8b9e-43312faa15b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b55c2a-2986-4c9b-8d3e-2e61a00899b6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbe96c3-f1c2-4a5e-9721-347089173144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb74bfb2-5b8f-4bd2-999a-4a81b584948e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20469de8-522b-4a6a-b3fe-3aae18cd4dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fd4331-58b8-48d2-a8ca-92333a174d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57a31e1-978d-48d2-9715-1c803d5bbb8e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e493383-25d7-47eb-aa2b-17363208bed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c801ec-0ae7-4b14-9c62-fc857a85661a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52192f7f-75c5-4ac8-81fc-dea2ec50c1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9abe8a-2514-40cd-9cf1-5f002f5d48a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd9ba26-073d-4feb-a680-1889f639b6a6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2baea82-c560-4578-8eb9-a7cdd7e09b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06944c52-ff50-4434-a76c-b551ebb52ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59eeba7-9913-427f-ac13-3c08ac0e4f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61219e8c-e1a6-4de1-826f-cf81509a0ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bec30b-5574-4b30-bd11-f92aa82af72f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557a0362-78ac-4c22-8688-7bde4a9279d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7decb5-1efb-4289-9224-1375a4adfa9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ad3e13-360e-4658-92d2-986dfe933603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c024d615-13c5-4d41-ae03-033ef6d7da12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fbbcaf-13b4-4b16-b2b3-23461f1da27b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd6f920-7255-4ddb-a7ca-fd8222c11b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1182997f-21e7-44a0-bdeb-ec109b262536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa234a8-0da7-4cf4-95ba-7625f3c614cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029d6c44-3973-4fe4-bf97-a10ed5a41853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc4dea0-ec51-4832-99e5-f00050282296",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cbee59-7ec1-44f0-95ec-55347b467a0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ddeec2-7aa1-479f-b99d-c3538cbedc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8690f442-78bd-4344-a8b9-19b69a40f725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd2ee36-4063-4952-8148-82dbfcf92735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76641d5-71f3-459e-8a2c-b9776d6afb0b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3436a2d-6c26-4d9d-812d-dcf602a5874c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e595a5-9b5b-4b7d-bcaf-9c13cfce9c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f76dbff-28fe-464f-9eb5-2c281a57d36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b84c4a-319f-4816-9274-6d122d198be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a885a69f-0be8-428d-8168-7591f8a3c1de",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f33703-3a8c-45f5-bc80-0cbd2ffc4502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd95314-2ef0-46db-a822-06c90be4e075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c788b4-988d-47ea-b715-04ff7ad132fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afe4557-0cbb-4d72-b978-124c7cf1aa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e68e65-e39b-4926-b8ee-65659593f52e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cedfc25-cb9a-466d-9da4-7c4ae7bcb805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3a8237-c643-4816-a819-8d301dd1d022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db3bcc3-711d-4be5-8bc0-3a171c643598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5ecf8d-4cfc-4054-8041-2bc2d94071a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6aa436-c985-48d9-8fb9-6f54e09fc07c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b15c40-394b-49c3-a7a3-064f8da37759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "447c35e2-1cb2-46cf-9c43-00ec352f02a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f23a9d1-1b95-4183-96e9-384eac4c133a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ff8213-5b58-4b9f-8fef-19671bcd529b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe090265-02f6-482b-a1da-047bd3a70c8a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bfa5aa-8275-4759-92fc-c9050c3b1cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74a4e7b0-3187-4123-b190-66d3b682b7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f42ef39-4729-4c82-8e8b-c26952bdc3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4090a36-8683-4278-8691-4074aa9bbed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00baffb-4077-4e26-baaa-f7a00e5a604d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b983db-374f-4a84-b3d4-ab364899e80e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54da4c40-0c5a-4643-9a16-15960f4605d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc43d86f-58ac-4baf-b8aa-b154920efd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560625fd-43db-4d98-b4be-9b22ea7c974e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaa71de-d26f-4087-ada1-d10949be8571",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b21c0e-c3ef-47aa-bdf0-609bcf0297ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cb0666c-293f-493c-b069-9ac768b6be73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e32149-fd2c-4892-b1b6-eace1a482b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9377506-30f8-42eb-8d1f-292a48d8d216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6727418-7847-462c-a4a5-33628c120e16",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecefb58-07a9-48f6-8d1d-931582ea6bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a76d0fb2-5a54-45aa-a5cb-b7734d9e6701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd30d45a-0544-4850-8ae4-af473b5e3879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67822679-da74-411e-8d5f-0de0ee2c07a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f001001-f203-4ab6-9c62-5df9dd1eccc4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a603fb38-65ba-4b50-bfd9-f1bb6b38b5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9ce45e-32ab-423e-bff3-dcf618a982df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8701f85-101a-43a0-a13d-b669e11cac84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247dabab-013f-4e09-a819-6c1f13092db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c70b9b-9c7f-4319-b292-2d756b42e695",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73d9c6a-db2a-43dd-bd97-a1aba203be5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80251811-5756-48f4-9251-f2c71a0d72cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c159d9b-c533-4eba-882b-11e134c4927e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faba3368-9b14-4db0-b7bc-76b51a361477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84fd7d9-4c7f-49ee-b80e-424325aa115c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ebd5e2-0b1c-42d0-82a6-4e4251e12750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "512a8247-2ad7-4085-9712-83b1b1249491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795e30a0-bfaa-4456-a830-6d2337693400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c61bcf-2eaa-463a-ae61-e050255ebe41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe01503a-c60c-46e5-a118-792d714b41c9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19afc40c-6082-43a1-9e40-6992ec9961dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfae07d0-96e2-4419-8135-cbfe286a2c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8ce179-966b-49ae-b6ab-0b6bd2efb2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a24204-dc57-4b84-b7a9-153a128a8cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf4cac-b1e3-49f1-a18d-f7b16f672278",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3def1b6-4790-4f1d-8183-582d418a69db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f58b603-f9a8-451a-901a-c8acdc0272ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0950e68a-5917-43a5-a6a0-9ec40ed3d706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40e6ab7-01b5-44f8-ba09-802f7d28a826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffc57a4-a8e5-449c-b219-78e28271aa56",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa64719b-729d-49ee-9320-e2f0c971a385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef33fbb-8954-428e-b247-34dd5816411a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696c6e39-a397-4722-99dc-0c0b477f4e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127c7c1a-a0ab-4abc-a5fc-5ca64eda5bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5411312-67b2-44ee-95ad-1556fc28ebef",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcddbea-606d-4911-b92a-057be6733af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1800964b-92d3-42d9-8077-cb6b3dbebc59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074e5b67-139c-4f09-910e-c5a1073577bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9620bc-d2ad-4619-a762-003b255358e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ffd35d-3a89-4758-b6a8-4106cf293326",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef99396e-7006-4421-b82b-0893970a6757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14dab8e2-80c9-4486-a528-dfb7f6863d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed52b7c8-c9ab-408d-9bec-0a26acac9dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4009456-ca31-4124-bab4-e9f266ad9b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a657b690-846b-4435-8966-5c6ce967ac4d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1d1766-ba12-4986-84e1-185c8599bf59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f319eef4-7886-4bcb-840e-e3ee2ca91a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec97c05-33a2-4e6a-a107-9e4ccf570360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b41c7ea-3961-4e01-9aa5-78575f588937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eed6684-eb40-4b1d-9b66-c1d95fc079c1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c234e6ad-b34c-4671-96a6-47d4d3731200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca920af1-349e-48b4-af49-88ea7bb0cd2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8514edcb-a7dd-4519-96f1-1e4d787c0784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7a08e5-da90-4be1-a083-033d68f7a921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbb68dc-1c4a-494f-ad89-7ab214dbaf09",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fb8452-3354-47ee-8dd2-99c0ede1ddc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e4f62c-6917-481a-bd40-4ca9a8a73b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87739ad5-0da2-46e9-ad98-c1423e8677f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57160c74-0f44-453f-bdc5-c658f40b1907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1c04e7-52f9-4466-8782-05dcb4fafc9b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd87863-87c9-44a3-86e1-ccec24ec74cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0694e225-aaed-43c7-b82a-c1ba7dcf97e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f5c09b-9611-40dc-a123-3e556854053d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a500353-441c-4d34-afa5-2390b85188ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632c18f7-6912-4445-9a03-afa06c0dc192",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082f8d55-aeae-488c-910a-27abb16ee379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974f586b-7b6a-4984-b47c-fad9f515990d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10806bfc-c900-45b0-b37c-666ecf26d1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916a4675-ba77-456f-82aa-8c1d1d8722a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8dec77-d2e1-481c-b86f-ca72dcfbae24",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1594ea3a-1504-4474-977f-3686f399c5c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "513d0d71-8ec6-4d74-93ce-0fbe2a9970ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15220191-a661-41a5-b79e-228b83c548c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2149f707-6202-4ffe-97b0-90727e6c22a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aea736-b4f7-4faa-9aa4-3532600f7943",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3082a1-adb0-4a01-b47e-54bbbd89a8e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded3b13c-16e2-421c-9161-c1ad0c6e101a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06a805a-b894-44c0-89fb-88a1ecad3e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f086edf-aaab-4746-aeb5-3a73b41c6b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530c5a99-bc88-418d-8ff1-acb3e5f31b44",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d535656-1980-4517-9511-2177daadf030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d8546ea-5cc0-4f59-9933-52b29e419839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba56461d-9922-449a-9db2-1c90066ee6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8862e949-39f2-4d8f-ae42-abd1cf409092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6b74c3-95bf-4f9f-b3d3-5a1b07a31302",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef288191-de4e-4ef9-b74b-0ef3afaa4155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b38e70-3095-4522-8460-14879885f9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7a2ca0-1a64-4076-ad1a-8bc5cc16390b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05039681-ff2a-4965-956c-5637dae33bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e0d70c-081a-4ad7-a231-a281670d9c91",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0e6c36-52c6-4b1b-8e9f-7ba95046e077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f3752d-db57-42ac-a78d-2da7045b2a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59fe461-51e9-4eef-86c6-98d71821d122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a447ff4-3f7a-472e-ba7c-fcf35b4315d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1941d776-c25f-4057-8c79-2fe107bedd2b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979a0306-12d8-447c-a51c-6eae9fd432c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5986e864-e988-47ed-9d56-05058fc82122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e888b85d-b0db-4514-b312-9e55ebfc7528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057ee26a-70f2-455a-9f71-2ca30acf8c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8decc7-6304-4e6e-a4d2-0acfb97f486e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16737661-39e9-40d4-8be8-958105f46a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870aad04-8f05-42be-9578-b287798d7db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec0dbae-1489-4846-9c20-c835d518c5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8932e9e4-b17d-46ae-b86f-f6b67e707bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fbb68d-84ff-4c98-a623-c5974679e815",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d156278-d025-49f5-a5ad-860b0fe74afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1c553d-d06c-42d6-bf36-53f7c353ceea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34af87bb-f491-46dd-aab0-f84afa1b2af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045a07d5-be85-4049-bf01-16ffbd57284b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed68d312-9a32-43a8-bef9-f8a1e55f3923",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac26a9b7-15b1-41fe-af46-605a21bf39ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a831a4e4-a744-48d6-9cc5-a9d126399843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8320ad56-a3bb-46ae-b10e-96720e4067d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7078cb7f-56e5-498a-bd67-d902f3af9731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cda78e0-be8d-4880-ad79-af3c74dc19cb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cfddd0-d49f-49b7-b0ca-65f902c522a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e45e60eb-2b1c-4a29-940c-bc1ca010b4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3292912-316c-4518-b680-b5f716c2c0ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c858b4d-72ce-4c4f-9082-ac06c4617858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde12b3c-540e-4f29-bdc5-4bf75139eb69",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf64f7da-43f1-4a12-91d5-42b4f959453a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc059fcc-f2a6-4c4c-aed6-51b75503fba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901a23d2-711c-4aaa-8bdb-0a6ef2c9b70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712a6362-1df0-44d6-bf11-73c79e0dad2e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8accc1a0-0c9c-4de0-9556-0b744cd58158",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "567b48eb-ee2a-4944-9f7f-76edb0871630"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cec8174-7644-4029-bf71-12d7443a2ca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23852423-adc8-4ed3-a29d-c9a28a3ee0a5"
                    }
                  }
                ]
              },
              {
                "id": "bbf4d0e2-1f7d-4cf8-a3bf-ce7c5e7936c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a353854c-8667-49d2-a01a-7356f0947ff1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f72961-5e71-4bec-b310-2f3c70e50dee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a9cdbd36-558f-4de5-ac1a-2945ca5f1b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172f9c68-4617-4d42-90d1-b2bb554cb275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdba4f47-b864-4e79-b8bb-5cefe360bb25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5be4516d-822b-42c1-9641-7fc7931c751e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a07bb707-e948-444e-870b-13c7887d2574"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4eb1b23-aedd-4a1a-a544-c22670366395",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4b2ec7b-8cad-49b9-9aea-5c8af5deaa80"
                    }
                  }
                ]
              },
              {
                "id": "7d82c1ed-41a1-47c2-8114-2ce1cbad873f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "23f8f785-f8a4-4227-9ed5-b5801b3b1e42",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fd4b2d-12c3-404c-9a83-af162de956a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "98fd83d3-e2c3-4280-a234-36ddb0f9ac23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57062b7-7103-4d57-b330-3992c891cd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1dd1f4-dd30-4d37-9d28-e9049ec45957"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1e2257ae-76ed-4561-84b2-3381d5c41e78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2948fb35-d6f7-4752-b513-f24b603dd54e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e64115df-ffc6-424c-a673-8327c7f427e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "018acfee-722f-45bc-9033-0a2d6069580f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95750ac3-4667-4961-8805-815351b6e966",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f62b3bd2-c5b5-4489-981b-50ef43cf4843"
                    }
                  }
                ]
              },
              {
                "id": "d611ade0-9b00-49ac-8a48-361b54b8dec6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3aa2b52c-bd67-43cc-9e2c-cc10aaf22ea8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aa555c08-0388-4402-8c1b-42b0adb46c80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66ba19d9-8dba-40c2-be53-b2c7e9f8d735",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d33c646f-2497-4f79-bc95-50bf9ba60d82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31c677d2-205b-4972-9a0b-6d2620531e7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f5d6799e-4d70-4357-969f-a92a11fc4fcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "008ec453-e475-4a02-aae6-ac92dc8cd2e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e3b0e83-379e-4498-8e79-efaef097d1d0"
            }
          }
        ]
      },
      {
        "id": "c99aec7c-1d8d-45b3-b31d-a33cfc7ea243",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7e32ed55-c997-4eea-92f2-38dd40b3342a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cabd1f0-efed-4b71-bf2f-74f23f7337d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a8f22d8-f729-4be2-87e6-586beab8562a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47467169-0bde-4056-9365-bfe9cfe922a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3426ef6f-5e5f-40e0-81cd-3fc9183a11c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542e1557-cc0d-4f17-bf46-63293346f6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1309279d-8946-4aa2-b3d5-152ce898ec4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b02f524-4c47-41ab-b591-e85950662b3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cc7e8c3-8e82-48af-a53f-4fec0e384831"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7664b81-8d74-4fe4-8d48-543953a51d9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e79030e8-0141-4d4a-a8d4-c553dee5ee0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f573aef7-17db-4c38-a1c0-942492b07db7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f8237200-6d21-46f3-9f9b-b80022373fdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99156b4c-8350-4943-859b-57db934923ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d554b45-0e5d-4281-b3d2-92cacfb6c4c8"
            }
          }
        ]
      },
      {
        "id": "170a411f-534b-461f-a155-faaa9e5c1d8e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ac5e20c7-fe55-4ab7-b520-fe973ab2ca4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da091d8a-495e-4618-88f7-c70c97c37d77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80c9878d-9a57-48fd-929e-69920a1796cb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac89a09-31a7-4ee6-9fe5-20ea4855dfc0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f79cb7bf-d2a5-41c8-8bf7-723c56429a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d308efb8-d467-48f6-a8b4-e556107b555f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8a28e99-f036-42dd-ba35-c39b4dc0a6ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56b1c617-caa9-43cc-847c-496285f03aa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a3611d8-8075-4949-a605-b940917ed5a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "884ab315-e2b7-49e2-a66a-fc4a22e57551",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b66f305-5212-4abe-b7d6-ebf4115e4dc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18b3ed00-ba8f-4211-8c27-0719157d540a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "138e43b1-9956-4034-96c1-9a9714b5d11e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1517e15b-d92d-4ffe-9fed-765da08440c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "770b22a8-d011-463f-b171-215103468c6c"
            }
          }
        ]
      },
      {
        "id": "f89aa794-2e21-4331-bc85-fcc13fad4a0c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0de8286e-5bbe-44a0-a21c-d56be7e3f1da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "faec5897-1fab-480d-939e-8b13042f78c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dc38808-4226-493d-b6cb-f6cd136c8368",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b03829-d08b-44b8-91fd-3e8306fe2986",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f032c1ff-615a-42c1-83ec-dc7e4576e42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375a8076-dc43-4e1f-a776-f36a5e89e753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75d83cdf-e19d-4dc5-8b40-218c88440854"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dde1d3c-10b6-487a-85e3-f4424eb7697a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70c0ec23-137b-42b0-b95b-3992c5c2de35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4050314-3a57-476d-8e08-d46056e07f38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc98d909-f5b0-4ea2-8b35-47a76823eb70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81e12fbf-1d7a-4a70-9fda-31e60927cff0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "81dba4e2-3332-4e78-80d4-14aecce5ce2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f7d256f-28f4-495b-a8b9-186b1b12c1e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0dbcb95-c5bd-47ef-aefa-4961fb4c2f37"
            }
          }
        ]
      },
      {
        "id": "27f0bf39-1c68-4307-968d-a6aa59d7a380",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fd6faeb-f3bf-4759-9697-8bc5ce7eafa2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53bab960-de54-4c0b-b08a-34d2319bfa22",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8e7aa6a0-ccfd-44f8-9ed2-2a4db158d179",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e1f1a8a-ddf4-4e42-835c-0e37f0bd664b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a7a296e-dc4b-4e81-b8d9-0c3c44a9c431",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 106.65476190476187,
      "responseMin": 7,
      "responseMax": 6075,
      "responseSd": 532.2435479202367,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720917823351,
      "completed": 1720917858577
    },
    "executions": [
      {
        "id": "0a161656-7a0b-4ace-ba96-9e329ee0c86e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d0abd36-fb8b-4348-8efc-f707283462e0",
          "httpRequestId": "3e25d72d-920c-4167-b669-f04dadfde1fc"
        },
        "item": {
          "id": "0a161656-7a0b-4ace-ba96-9e329ee0c86e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ee996c99-5fcc-4b4a-8931-6afbf25d0589",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "5c485fe7-8553-4434-888d-135bbbbbf841",
        "cursor": {
          "ref": "7eff2b46-6fc3-43b5-b405-48f7e7ba25a2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "76d56ac9-872a-4d08-ba46-e45a59ffd017"
        },
        "item": {
          "id": "5c485fe7-8553-4434-888d-135bbbbbf841",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "76275042-ef84-4344-873f-6e3b59d71d00",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a6334561-00df-4c1d-add5-83caf69a5506",
        "cursor": {
          "ref": "20a125cd-0c85-40d2-9e2f-9429bdbfd49e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dd96f1f8-eead-4cc3-ab5d-36a57239b8c1"
        },
        "item": {
          "id": "a6334561-00df-4c1d-add5-83caf69a5506",
          "name": "did_json"
        },
        "response": {
          "id": "18aeedd8-8a4e-4c91-9ad7-aa4e344c5d50",
          "status": "OK",
          "code": 200,
          "responseTime": 248,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9410ac1-85ea-4fea-b623-557ec987aba0",
        "cursor": {
          "ref": "f178d31a-88e6-4ca9-90a7-f37187dbc8a0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27d5edfd-b904-439e-af94-a3608aa84cb9"
        },
        "item": {
          "id": "c9410ac1-85ea-4fea-b623-557ec987aba0",
          "name": "did:invalid"
        },
        "response": {
          "id": "083f91dd-1d4c-4a29-9e05-ed2d78df7c1c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 475,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9410ac1-85ea-4fea-b623-557ec987aba0",
        "cursor": {
          "ref": "f178d31a-88e6-4ca9-90a7-f37187dbc8a0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27d5edfd-b904-439e-af94-a3608aa84cb9"
        },
        "item": {
          "id": "c9410ac1-85ea-4fea-b623-557ec987aba0",
          "name": "did:invalid"
        },
        "response": {
          "id": "083f91dd-1d4c-4a29-9e05-ed2d78df7c1c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 475,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3df0ab-0e24-450f-bd45-c2e09e01c816",
        "cursor": {
          "ref": "900363a5-558b-42b5-8b5c-3c24399f3b9f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "614309d3-d576-4505-bede-2412c5f1b3da"
        },
        "item": {
          "id": "1a3df0ab-0e24-450f-bd45-c2e09e01c816",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ebf60c9b-efd2-4fc0-871b-782c945e3731",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f621d2d0-09bf-4fb9-86a4-f9043a377efe",
        "cursor": {
          "ref": "2e67aca4-5426-45b2-9c6d-f7e971f712d0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "48e4dc86-f86a-47c1-837c-d9ecc53ada2f"
        },
        "item": {
          "id": "f621d2d0-09bf-4fb9-86a4-f9043a377efe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d8baaa1d-0ce4-4dc9-b236-33a2cf5a39c0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f47b49-baae-403d-a3c5-8378e4f1e6a4",
        "cursor": {
          "ref": "30c70d79-b6e7-4089-a5f6-636a3ac17a19",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3e7cb04a-5fa8-43df-bf84-aa497c03c8e6"
        },
        "item": {
          "id": "a9f47b49-baae-403d-a3c5-8378e4f1e6a4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e2ff1ea7-990a-4fc1-b91d-06b86776aefc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5354b3e6-e021-4982-a79d-f0d6af8f2b79",
        "cursor": {
          "ref": "216bb8f0-da9f-43d1-acf4-b9d83b1c7122",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a7e44338-de42-4c38-a04c-c885617ebd76"
        },
        "item": {
          "id": "5354b3e6-e021-4982-a79d-f0d6af8f2b79",
          "name": "identifiers"
        },
        "response": {
          "id": "dcf3b460-42e1-4caa-9c37-1acf083a75c1",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b470f364-94fb-47c8-80fe-23118c878804",
        "cursor": {
          "ref": "f5b3a37c-a530-411f-8068-cd1867107b28",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "28d7ebff-bb2e-46d6-9dcd-3a7df595edb6"
        },
        "item": {
          "id": "b470f364-94fb-47c8-80fe-23118c878804",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ffa4cfd0-1e26-4489-8b07-f786632eb64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86735e94-27b4-4721-8977-100d2860d6c0",
        "cursor": {
          "ref": "2664013a-c0a9-4b0b-9423-5c231d97c0b9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1415b8dd-55cd-4ab0-898c-7b3685f48816"
        },
        "item": {
          "id": "86735e94-27b4-4721-8977-100d2860d6c0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "da3e383e-fef4-4286-b9c1-1c203e983657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cb2e4d-c4ed-4212-9d1b-49f4f585381e",
        "cursor": {
          "ref": "03412efa-cba5-4db5-ba28-df98dd3be3e4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d0ec6f68-715b-44a6-a583-a41c7e155f13"
        },
        "item": {
          "id": "b4cb2e4d-c4ed-4212-9d1b-49f4f585381e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bf6848f4-62eb-40e8-add9-d65a8c54f164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0a5e75-28ba-45bb-96ce-4c2bbb92d231",
        "cursor": {
          "ref": "e4edc48a-a878-4c51-978e-ea5c77a268df",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6f7251b3-0e78-4c84-906f-1df5ede6fc95"
        },
        "item": {
          "id": "be0a5e75-28ba-45bb-96ce-4c2bbb92d231",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "667f8bb7-1888-4eab-a3ba-666ceaa721a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a78789f-6e4e-45fe-8fb2-fa3dd2c1942e",
        "cursor": {
          "ref": "6afc2ad8-b0e9-4283-9d50-988e14e741a3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5961c917-0538-471d-ae3b-f20346c2b157"
        },
        "item": {
          "id": "8a78789f-6e4e-45fe-8fb2-fa3dd2c1942e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "09f5a7e5-7f7b-4e5a-94c9-63c5f80adefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6233cb60-d417-4c2d-a069-8301c3bcebdb",
        "cursor": {
          "ref": "9e0233d7-2f6f-4d06-b927-021723185acb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bca29917-4333-438b-9014-041a90f0359c"
        },
        "item": {
          "id": "6233cb60-d417-4c2d-a069-8301c3bcebdb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5013e4a8-1809-42e0-a96f-0803371ccdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e72fbd9-2e2b-4bc2-8d3a-2655b4a374d6",
        "cursor": {
          "ref": "0cf7e109-2d53-46c2-9b0b-8aa49d280747",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4f0afb59-741b-4542-b79a-87c855a7860d"
        },
        "item": {
          "id": "1e72fbd9-2e2b-4bc2-8d3a-2655b4a374d6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4e337b3b-11d3-44c2-8da2-c97105ff7470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357ddf05-9860-42d4-a53b-014d70f2b840",
        "cursor": {
          "ref": "bbee4da0-6a03-4d0c-9bdb-2c67cc007f83",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4234d1a0-5bc0-4673-a8b6-f422031322c9"
        },
        "item": {
          "id": "357ddf05-9860-42d4-a53b-014d70f2b840",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e5f7dbcf-ca77-4bbc-aabf-b798dcb0732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d44acbc-fe34-4e13-9dd3-47b37173d8fd",
        "cursor": {
          "ref": "c6a47ceb-768c-4a43-8a30-9097a501f1ed",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cc426abd-9b53-482a-8b2d-62ea94202a6d"
        },
        "item": {
          "id": "1d44acbc-fe34-4e13-9dd3-47b37173d8fd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "549a37bb-6bbb-4822-8721-8081edd0efe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a127be6-026a-4de9-8941-8d8e576f4817",
        "cursor": {
          "ref": "4e797bd7-3259-407e-8042-5ecd1c6b82c3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3f7a5bd3-82f0-4d1d-a0bb-7de810e5ab85"
        },
        "item": {
          "id": "5a127be6-026a-4de9-8941-8d8e576f4817",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dfa591a8-45dd-4c9e-8287-6da1d52fb027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dda66e-69f9-4e6b-98be-67555c809d0d",
        "cursor": {
          "ref": "163f0371-68c8-4d0b-8940-b471de6d560d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c765bc26-252f-4a83-8403-dd8b273795d6"
        },
        "item": {
          "id": "d1dda66e-69f9-4e6b-98be-67555c809d0d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "58ba6bbb-a25f-424f-940f-cdc7e628685a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f05802-c67b-404e-8e7e-2037810edd37",
        "cursor": {
          "ref": "621ce24e-b784-4f4e-9e6b-7fba070de765",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3d802361-33ec-401b-aefe-f0b739bcd52b"
        },
        "item": {
          "id": "c0f05802-c67b-404e-8e7e-2037810edd37",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2c843e7b-d538-43d1-840a-5212d7511235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd4ff7d-b484-4193-8418-ccabbb73b388",
        "cursor": {
          "ref": "02be59e1-d114-4f02-9789-eeeb9671d887",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "615262ae-43af-4034-a96d-1c124af378c3"
        },
        "item": {
          "id": "9bd4ff7d-b484-4193-8418-ccabbb73b388",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a18f702a-6375-41e5-b56a-08a5db28ae73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571455d1-cb9f-44ca-bf82-776eb9fcb459",
        "cursor": {
          "ref": "a8f11835-a30a-43f6-8622-5e8f67d69132",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "65a9d988-0bca-44af-aac2-5c7491084303"
        },
        "item": {
          "id": "571455d1-cb9f-44ca-bf82-776eb9fcb459",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "caace711-40b6-4e2d-aa98-7bec38aa668d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058ffc42-1adb-44f6-86df-11e2cc8e3f78",
        "cursor": {
          "ref": "36c695bf-e759-4792-ad23-e5f79b8c42fb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "509c51b0-a53f-486c-a50a-f3f41a829a9f"
        },
        "item": {
          "id": "058ffc42-1adb-44f6-86df-11e2cc8e3f78",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3e9eb9d5-2179-4cd0-9e2f-31a1ffaf0ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3b4331-646e-438b-b1d6-a7944daad332",
        "cursor": {
          "ref": "8653b0b2-8237-483b-b938-24f3c6972db3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "920ebd5a-5440-4cfd-98c3-b58e64b85fdf"
        },
        "item": {
          "id": "4d3b4331-646e-438b-b1d6-a7944daad332",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "eef583a4-9e4a-4bc7-8ab4-700156935940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8a417f-a512-4b90-a81f-e0abbc6721cf",
        "cursor": {
          "ref": "33cd0443-3a82-48a5-908d-dd355d66a82e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e4db4d60-7eeb-493c-8d95-9cbcafc63561"
        },
        "item": {
          "id": "3c8a417f-a512-4b90-a81f-e0abbc6721cf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4ddda89c-1e81-42ea-8538-3e8e5be497fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a8d7b3-68c7-4f8f-8334-81c46071ceca",
        "cursor": {
          "ref": "d0065c05-d295-49dd-97cd-4a862ed68f09",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a98772a0-c67d-42cc-a258-e577afaf65d9"
        },
        "item": {
          "id": "a9a8d7b3-68c7-4f8f-8334-81c46071ceca",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4eba4158-6e74-4d99-aaca-3173c277a8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f927d12-9d41-435a-b2c0-bfb22ba27ec0",
        "cursor": {
          "ref": "7f71622c-05e0-4b7e-8c34-01db8f6ff614",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "98274b0e-b668-48cb-8abc-436502d1a93b"
        },
        "item": {
          "id": "6f927d12-9d41-435a-b2c0-bfb22ba27ec0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b385663e-35ea-4c41-9f53-4c10a7b6717f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b0eea4-39f3-4e25-9cd4-379d5bd13f70",
        "cursor": {
          "ref": "b16dfe5e-66cf-4858-95d2-0b3d8dd094b8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "106de3cb-07f0-43c5-8dd9-90c23695157e"
        },
        "item": {
          "id": "b6b0eea4-39f3-4e25-9cd4-379d5bd13f70",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6a73035a-ab7f-4d4b-8814-43595672dae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89345ed8-c54a-41cc-adc4-2f889c54da1a",
        "cursor": {
          "ref": "78cf6bb2-f671-4173-82f9-5eaea2112a1d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "928c8930-e897-434e-b7bc-b4d764c6f6d4"
        },
        "item": {
          "id": "89345ed8-c54a-41cc-adc4-2f889c54da1a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b3568ec0-89ef-41b6-8d41-55c0dfe722d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a702428-55ea-4172-bf1c-92d1a9dd5e19",
        "cursor": {
          "ref": "f177fe29-62a6-4076-99f5-dd47f608d5f2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e716c2aa-1c9a-4549-8f71-563cff8f0aa2"
        },
        "item": {
          "id": "4a702428-55ea-4172-bf1c-92d1a9dd5e19",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9b593280-b268-46f2-a103-70233602c93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195ed372-d1a4-4d06-b070-a5eade8f44aa",
        "cursor": {
          "ref": "6494d1cd-89e7-4bfb-b637-674e80c856ff",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "396d2ab9-9bc0-4b1a-8dde-76a51fc7e8d4"
        },
        "item": {
          "id": "195ed372-d1a4-4d06-b070-a5eade8f44aa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9e962c41-b83b-411e-83e5-d20290505c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7133a6fb-a729-45ff-a5a4-eaa795ac7195",
        "cursor": {
          "ref": "2b6dca64-b306-4427-a822-9506b5ee37e3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "79322171-0166-4f54-8e37-c9b1ddb36a61"
        },
        "item": {
          "id": "7133a6fb-a729-45ff-a5a4-eaa795ac7195",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e2eed5bc-1945-40a3-9117-e2ded8350400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8897ca0e-f6a8-4e14-8236-a104fe479562",
        "cursor": {
          "ref": "7354e898-828e-4b63-b568-b50b942d8037",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b56e164e-104d-4995-ae4b-5721546c8ffa"
        },
        "item": {
          "id": "8897ca0e-f6a8-4e14-8236-a104fe479562",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "15dd2842-2461-4f98-bc52-ec9386119ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b16fef-93b4-450c-9430-50bdeda87765",
        "cursor": {
          "ref": "0abde60a-a40d-4f89-a466-aea928d0868b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "942cdba9-9b71-425b-9497-0559ad33a657"
        },
        "item": {
          "id": "79b16fef-93b4-450c-9430-50bdeda87765",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6ac53c58-ac51-4d5b-82bd-cc675f351ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6c2319-f7de-4c3c-8b5e-8c2c256ec67e",
        "cursor": {
          "ref": "1713b995-b8b2-445b-a94b-e518f9b32fb6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "075d9d37-d6c2-4ee7-9305-44901871efcc"
        },
        "item": {
          "id": "6a6c2319-f7de-4c3c-8b5e-8c2c256ec67e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9fd70a7c-0e2c-4df8-ba0a-895da4fb5248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d87e58f-8a2f-4c74-9f3c-c606652f8221",
        "cursor": {
          "ref": "f0677253-c0a9-4505-8bfd-ff7298635f9b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bcb17d1b-97d8-4134-8311-a24a1badf03b"
        },
        "item": {
          "id": "9d87e58f-8a2f-4c74-9f3c-c606652f8221",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1d548a5f-a315-4a5d-b4b4-3d36bed0cc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451cba24-6bd4-4125-93aa-f629a11fa49c",
        "cursor": {
          "ref": "a19eabe6-4b88-4a0f-95d2-126ec43abb62",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "568ddd54-4be4-4b0f-a641-3cee564e0427"
        },
        "item": {
          "id": "451cba24-6bd4-4125-93aa-f629a11fa49c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "52e2f04b-bed4-44bd-ba48-e171828afac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09343085-dd90-477c-99c3-eaf83668f415",
        "cursor": {
          "ref": "a2f9529f-bb6c-4af2-922a-ffc40ba35404",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2a355f24-75fe-47c2-859b-084a56c800e8"
        },
        "item": {
          "id": "09343085-dd90-477c-99c3-eaf83668f415",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bc20b85e-e472-4f26-bf0e-f5cf8fe2470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7e138e-30df-42ab-a1ca-c6294e0fe526",
        "cursor": {
          "ref": "cb0c72fe-8e51-4e9b-abcd-c89492a8b5bf",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c259271c-7420-4a48-8e13-4ba97858828c"
        },
        "item": {
          "id": "3f7e138e-30df-42ab-a1ca-c6294e0fe526",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f3d35f68-d08e-4816-a60b-674bb91ab04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a2ee67-6d4f-4fc0-85f8-39473b6daef4",
        "cursor": {
          "ref": "9ec4f263-bb30-4baf-bfed-10abab7dcf6e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c697403d-5697-4b09-83f3-af2d885adf4d"
        },
        "item": {
          "id": "96a2ee67-6d4f-4fc0-85f8-39473b6daef4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "62d6ddda-afd4-4c82-86a2-6ce51840b117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d8e2bf-6fe3-401d-a903-9de049e2abf7",
        "cursor": {
          "ref": "a7990a97-f9ac-4165-bd2d-6ba11f2c2e17",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e517f9f0-2eda-4edd-9882-dd6152452e01"
        },
        "item": {
          "id": "d4d8e2bf-6fe3-401d-a903-9de049e2abf7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "697e99e4-97d0-4bad-b8f4-9232cf574ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b78785-f5ac-44d0-ae2d-c4f72ddf2ae3",
        "cursor": {
          "ref": "ec1cf703-bc08-4795-bb65-e175d90d9eb8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "be1d2658-fb01-4a76-905d-141622961e3d"
        },
        "item": {
          "id": "62b78785-f5ac-44d0-ae2d-c4f72ddf2ae3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "75633ebf-67cf-4c91-964f-b4f0287c45a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee62048-76ac-44ca-893b-7e0f7dc89705",
        "cursor": {
          "ref": "41ddb635-87e4-4059-b670-6a680a5f94c5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2cac2927-91f1-4f4e-b497-4ebced024965"
        },
        "item": {
          "id": "fee62048-76ac-44ca-893b-7e0f7dc89705",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "63e354c0-1317-4af4-a300-bb104881af4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb3fcec-2c3e-468b-abc2-216b24dfd1d8",
        "cursor": {
          "ref": "bf82a34a-c9e7-497b-95c5-0218a1fda1c7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "75b9fdc3-157b-4e15-b942-faa66e13010c"
        },
        "item": {
          "id": "bcb3fcec-2c3e-468b-abc2-216b24dfd1d8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "af32ecc9-dc40-4f7d-a9c9-43828102d2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3716b400-f683-471a-aecf-a2e375bc1a94",
        "cursor": {
          "ref": "4225737e-4476-4096-90db-060b4d946f56",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "085771df-2457-41cb-b280-1f4504902703"
        },
        "item": {
          "id": "3716b400-f683-471a-aecf-a2e375bc1a94",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "161103c8-c0b4-49ce-938b-50693982da7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f32e7d-c2dc-4475-8569-22e6491750a3",
        "cursor": {
          "ref": "19749cbe-fd3c-439f-ba81-de0b0847a6a8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cf161835-3972-4914-b699-2093a4196dae"
        },
        "item": {
          "id": "30f32e7d-c2dc-4475-8569-22e6491750a3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "29524667-ad22-4215-acaa-0e02701df7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c88ce7c-3af0-46d4-b680-df87349e4710",
        "cursor": {
          "ref": "36caa41c-9c0e-4f92-800d-fb41658cfe30",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "49722fb5-f610-44ad-b5da-012fb9dfeac8"
        },
        "item": {
          "id": "8c88ce7c-3af0-46d4-b680-df87349e4710",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b71fb2b7-007f-4339-a5e9-8438bb8f5da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47056899-4fca-47f5-aad7-a7ae31960a4e",
        "cursor": {
          "ref": "71f19644-f17e-4b5e-8c0b-87a5812889a5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6de32202-394f-4e04-ba59-cd80a21273be"
        },
        "item": {
          "id": "47056899-4fca-47f5-aad7-a7ae31960a4e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4487b9f0-5cca-400f-933c-770170a950d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3f394b-49cf-41a1-acfe-ed6816f783c3",
        "cursor": {
          "ref": "04ef94e0-f193-4446-9f96-103dde3804e5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ba21ea78-a6ff-4329-82e5-0c65501ef7f7"
        },
        "item": {
          "id": "6f3f394b-49cf-41a1-acfe-ed6816f783c3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "09d1d42f-3bad-4fc0-9077-f2eca6f933b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42ab48a-992f-4dfd-879b-f55a59dcc5ce",
        "cursor": {
          "ref": "c7ec51af-8514-492b-9c47-d94996679f1a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7a5d5b8f-6346-4a4b-9887-c2e259f9230b"
        },
        "item": {
          "id": "c42ab48a-992f-4dfd-879b-f55a59dcc5ce",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "faa01645-7bd6-4058-9641-883b2dab3aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832f352-ff09-400a-8903-f74a2eafb5d3",
        "cursor": {
          "ref": "3df9a00e-0b25-4084-9985-79fb6d51ff3a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4c1c0c2a-caca-4671-ab6d-a6d80c3df8e5"
        },
        "item": {
          "id": "c832f352-ff09-400a-8903-f74a2eafb5d3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9af31c46-7ead-4a56-85ef-26853bc0ba04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d805e499-76f1-46af-8272-5b7ee7e1d282",
        "cursor": {
          "ref": "10988128-e836-4b36-991b-83e633015959",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "798b4e7a-349e-4382-bd0a-c8cb1a5dda81"
        },
        "item": {
          "id": "d805e499-76f1-46af-8272-5b7ee7e1d282",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8dde84be-0ad2-479a-8750-ed799c85db77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7987010e-8ce3-4bc7-a51f-da573932ea76",
        "cursor": {
          "ref": "614a8c48-0945-415c-9e0b-cc860ebe3539",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dccc1869-4074-4bdd-93be-a1746638c6ef"
        },
        "item": {
          "id": "7987010e-8ce3-4bc7-a51f-da573932ea76",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "526bb5dc-08bf-4203-85ec-1aece39e06d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd9e47e-b9bd-4349-91d9-bcdd2a35a2ec",
        "cursor": {
          "ref": "b67ecb02-20aa-454a-886d-f2445e04f49c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "399c2478-58a3-4131-bbed-a485eabfbec4"
        },
        "item": {
          "id": "9cd9e47e-b9bd-4349-91d9-bcdd2a35a2ec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a0b8a6cd-f919-4a7c-97f8-47ec7ee9c73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a85a99b-98ae-401e-9c22-37aecaec6209",
        "cursor": {
          "ref": "95ba8b23-3b48-4b29-affa-23ab76ca73bc",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "68978dbd-baf4-4d7b-b4ea-7880a4589fd9"
        },
        "item": {
          "id": "3a85a99b-98ae-401e-9c22-37aecaec6209",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9049efb6-fd07-4efd-b03e-285eb30dd4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e336171-aab9-403a-94ff-c4f2efef6191",
        "cursor": {
          "ref": "a027554a-db8a-4623-abfb-2962503e06df",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "455b7393-15ee-4a2a-8566-f2de5ca54d04"
        },
        "item": {
          "id": "1e336171-aab9-403a-94ff-c4f2efef6191",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "29f5e5e7-983b-496e-a738-a77469dc9d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6e071-94ec-447b-8079-ecc4f5eeadd4",
        "cursor": {
          "ref": "c672ac65-bc2c-46e3-99e8-c35d2f88a92e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c11cf725-a777-4d50-a5d8-866a6bdf1cda"
        },
        "item": {
          "id": "41f6e071-94ec-447b-8079-ecc4f5eeadd4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5047391d-a1b4-436e-8312-62bef7199374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad41dee-2cc9-4d44-ad35-46439e2f4f27",
        "cursor": {
          "ref": "fae3d19f-a676-4c8a-b6d9-fe8d4adecf18",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "597f3563-b2c3-4ddb-90b3-c678257b8c3a"
        },
        "item": {
          "id": "1ad41dee-2cc9-4d44-ad35-46439e2f4f27",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c00bd3bf-2e3c-4bb8-8a42-f852e03c7657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1afe62-42f9-4bf6-ab99-03979142aa4c",
        "cursor": {
          "ref": "a91f16e1-f442-408d-82c8-cad7a08902d9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dc43e308-3359-4aaa-abb7-4e8b90ab88ea"
        },
        "item": {
          "id": "9e1afe62-42f9-4bf6-ab99-03979142aa4c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5f190323-e3ed-495d-8309-0b260707abf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867042a0-47a9-40f1-ae96-a46499a66c6e",
        "cursor": {
          "ref": "f6396339-9fc1-4e25-b28a-cd17feff1cc2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8cff2e90-47c7-4552-85f9-c3017712a0cf"
        },
        "item": {
          "id": "867042a0-47a9-40f1-ae96-a46499a66c6e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f3685eb9-e8ca-452c-adb8-6540193e6be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b2b5dd-9ccf-42af-8f2e-1d855bc0f638",
        "cursor": {
          "ref": "b62388b4-4d79-4bc3-a80a-0fe8715e96a0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ee4f8ed1-d4ae-4aff-9f64-190fec01991e"
        },
        "item": {
          "id": "99b2b5dd-9ccf-42af-8f2e-1d855bc0f638",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fc510b6d-48f4-4578-8b20-20d57c49aaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db5d70c-7147-48db-9003-60b4c9d380d8",
        "cursor": {
          "ref": "645ea112-47fe-42f8-a47d-9ebc91a7729c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d547a83f-38d2-40ac-9d5a-4afa52e1441b"
        },
        "item": {
          "id": "1db5d70c-7147-48db-9003-60b4c9d380d8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "75936255-0e00-44d2-87db-e4dc4446ac8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1651d0b-47c9-4991-aeee-a5ad98405c5a",
        "cursor": {
          "ref": "9314e409-9cb8-4fbe-a3a6-dcf13ba0e37b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "63e33c86-9c1b-411e-99e8-e3f7b12519f2"
        },
        "item": {
          "id": "b1651d0b-47c9-4991-aeee-a5ad98405c5a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c4882e20-1b5f-4171-b0b6-95ee4727b166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d6e07c-995e-4806-af59-12dc745aae36",
        "cursor": {
          "ref": "57e52fd5-e730-4c9b-bae1-0f463e641379",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "524ab4f2-ad9e-46b6-972c-7f7c3edd4984"
        },
        "item": {
          "id": "14d6e07c-995e-4806-af59-12dc745aae36",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cd44d22d-8088-4206-bb26-062e5aa36cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45bbda3-ccd2-4be8-a116-07f1e2744c90",
        "cursor": {
          "ref": "869999de-80f7-4aa6-b2aa-f70e46e34d94",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d6e54c71-6769-4002-ae70-9598c8ca69ca"
        },
        "item": {
          "id": "a45bbda3-ccd2-4be8-a116-07f1e2744c90",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "66dc978a-4023-4e78-999f-260cd9165cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59d7317-dd62-4b09-b8d8-43dda42c6df9",
        "cursor": {
          "ref": "c0339174-98ec-4a68-a71e-e8ac963bb154",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d81cdd9b-025a-445f-9471-6f76b7ec58ac"
        },
        "item": {
          "id": "b59d7317-dd62-4b09-b8d8-43dda42c6df9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "acb04666-70d3-4fb8-aa19-67560fdaeaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa88f88-aa86-48ab-b9ce-82d0c1e430b6",
        "cursor": {
          "ref": "c6a6d745-15fb-4031-9355-2d134ddaf07f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7c2d6085-c2f9-480d-acd5-46f7800e187c"
        },
        "item": {
          "id": "4aa88f88-aa86-48ab-b9ce-82d0c1e430b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "223ad9ad-0862-44c1-96ef-68f0f9aca67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108bb871-654e-43b2-a19c-9654972bda3e",
        "cursor": {
          "ref": "d05f6174-e92e-4216-add3-880c47d5db4e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3bdd8274-a46d-45ef-87d1-693da576b517"
        },
        "item": {
          "id": "108bb871-654e-43b2-a19c-9654972bda3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a9049b2f-b064-4bc3-b6ed-271797d70cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617f9776-8415-4a57-89ce-0e652ffccc57",
        "cursor": {
          "ref": "41dfed83-59cb-4244-9159-fda44aa4e822",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5a124acc-dd81-4acd-b799-e9c354debd6c"
        },
        "item": {
          "id": "617f9776-8415-4a57-89ce-0e652ffccc57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "053409ba-6bfe-4d4e-9896-40cc0a26b6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7583fc7b-3b48-4444-b89d-91756cfd22b6",
        "cursor": {
          "ref": "62507718-3e24-49c0-a185-6c007d738d46",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "55da349f-fc02-4ade-8798-53dbfd1e79eb"
        },
        "item": {
          "id": "7583fc7b-3b48-4444-b89d-91756cfd22b6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "29edf36e-d305-49d5-95a1-11108eec3d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846d357a-2a79-4f3a-9e31-74b24fe2f5f0",
        "cursor": {
          "ref": "e936147d-8062-4945-ad92-59c482d057b6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d60c0f59-5206-436e-9276-a2f1b472c53e"
        },
        "item": {
          "id": "846d357a-2a79-4f3a-9e31-74b24fe2f5f0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f7091701-4637-4bc2-afd8-a77eeb30c99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f4e81b-4c54-48d6-8be6-4a623d9357f3",
        "cursor": {
          "ref": "a19bd3a3-26b1-4db2-ac2e-9a851ba26c5e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b20f97f8-3fbe-4bd6-bf18-99853c4c2061"
        },
        "item": {
          "id": "96f4e81b-4c54-48d6-8be6-4a623d9357f3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "81a684a1-3853-4aae-8754-00c0c73956ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cd7d5e-93d6-4897-80de-a5c5a9b6ccfd",
        "cursor": {
          "ref": "b68cac82-e049-4a8d-99a4-d9e52652e0b0",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "74672d58-5aee-4e63-ac9c-ef1a71d36a17"
        },
        "item": {
          "id": "51cd7d5e-93d6-4897-80de-a5c5a9b6ccfd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c2ac8f68-ec74-43fd-96f2-39b94e7eebe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fff968e-bccf-46a4-b3bb-819fe49bdb98",
        "cursor": {
          "ref": "03ee4072-8617-4685-acc2-2945e45fbbbf",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c2e2fcd7-3a1f-4cd6-8f4d-5be5e96b90bc"
        },
        "item": {
          "id": "5fff968e-bccf-46a4-b3bb-819fe49bdb98",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fc845203-4277-4db5-b532-b9c665d9bacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8897a380-f655-4b0e-8c30-f92b0ee0cfa1",
        "cursor": {
          "ref": "41ad548f-2964-4930-a2a8-ee3b0a020025",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8f65bbf5-ae3b-4cdc-8e57-b2f05d6bab01"
        },
        "item": {
          "id": "8897a380-f655-4b0e-8c30-f92b0ee0cfa1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "783b0088-f0a4-4eac-a9a4-bae87aa0657f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919ccb1e-addb-4887-80cd-9cc3e99b4bb9",
        "cursor": {
          "ref": "71cf9e4d-a826-44fb-8b62-fbf2af05f66a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c87b4ecc-b93a-4d77-9e5d-b665b8fd7330"
        },
        "item": {
          "id": "919ccb1e-addb-4887-80cd-9cc3e99b4bb9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bc1edfd3-7abe-4382-8b54-870b9a473e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e07430-d87d-4a0a-a1ea-b1f314b707c4",
        "cursor": {
          "ref": "8cc06c3a-e4e2-4308-b104-2904f1fd9eae",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "183a0430-0988-4cb6-babf-45ad8ad1069e"
        },
        "item": {
          "id": "29e07430-d87d-4a0a-a1ea-b1f314b707c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "52c9ee1f-91d1-473c-a4e5-7ea51edf88f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c9cc13-5dae-45a5-ad49-82f219bdc968",
        "cursor": {
          "ref": "c5da93f5-38e9-4555-9895-54889aab89cd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "76e3029e-518b-4cab-bdfa-5aba5549056f"
        },
        "item": {
          "id": "24c9cc13-5dae-45a5-ad49-82f219bdc968",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "33f3ee89-0e98-49a2-92b8-ddab1c206479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f066a8c9-7c9e-4198-b58b-1d80cc1212e4",
        "cursor": {
          "ref": "32dadb0e-3bd0-4256-9442-a8bf867311e3",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6ead15d6-06b4-4c32-840f-ed3ee4fbb92d"
        },
        "item": {
          "id": "f066a8c9-7c9e-4198-b58b-1d80cc1212e4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7545aa50-b67a-413d-8c49-961e32dcb546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea243ff-5524-47a7-ad9d-d706f316f2cc",
        "cursor": {
          "ref": "4967c265-a658-4f29-801c-67599d578e23",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4bf85a48-a556-4548-b828-c1f60a3663b5"
        },
        "item": {
          "id": "dea243ff-5524-47a7-ad9d-d706f316f2cc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c9579b8d-9615-45da-835a-f1bcb4d8f299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c6bd7a-5f5c-42b7-b4c9-b3f84c771608",
        "cursor": {
          "ref": "aeb03fff-e2fc-4787-96cd-8975d0601899",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b43cec78-abda-4bdf-a29f-cbf2d39a1559"
        },
        "item": {
          "id": "b7c6bd7a-5f5c-42b7-b4c9-b3f84c771608",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e51ed9b3-660b-4fd5-8102-ee7cb68ef8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364dab14-6988-423f-b899-839ac5a7d460",
        "cursor": {
          "ref": "3cc3e3b8-9cef-4cff-b07d-515fe96cf570",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "69c21560-7799-488c-8932-a9e69377c429"
        },
        "item": {
          "id": "364dab14-6988-423f-b899-839ac5a7d460",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "11a85ef4-554e-4f44-bd7d-79429afbefed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3398ed-7934-48d1-bd17-f453cc7446c9",
        "cursor": {
          "ref": "06b75ddf-e6dc-44bc-b331-fd46bd504d67",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "be24e564-2f22-4fe5-aeb3-c15dd6b04eb2"
        },
        "item": {
          "id": "9c3398ed-7934-48d1-bd17-f453cc7446c9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "317e7680-67d5-4005-b3a7-93fffb94848c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df905a66-7f53-4ccf-ab66-e5025ae8ef1b",
        "cursor": {
          "ref": "5e7b0606-c338-4a7f-a8a1-471ed5e5b97d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "918ef078-d95e-47b1-8945-b37bab9422eb"
        },
        "item": {
          "id": "df905a66-7f53-4ccf-ab66-e5025ae8ef1b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8fe4c66b-a28f-41ed-b7ca-4c7d3360d7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908a6df1-b550-4b01-885a-730d7cd874f4",
        "cursor": {
          "ref": "329f1c23-766f-4753-beff-9e78bfb31387",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e9844c12-aa57-43e6-9ce1-e8aa13fc8cad"
        },
        "item": {
          "id": "908a6df1-b550-4b01-885a-730d7cd874f4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5d69923b-20d8-4ea1-bdd4-09c1b46689de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4451aca-2631-47f1-b388-48beeb345b8f",
        "cursor": {
          "ref": "af802696-1adb-46ba-ac09-446b92365500",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cfc2b621-df32-4b35-815f-dfeeb591c73f"
        },
        "item": {
          "id": "b4451aca-2631-47f1-b388-48beeb345b8f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2ce6503b-c56f-4302-b0e2-6b52053567c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99b990c-6f1c-4e70-884e-16792efb0242",
        "cursor": {
          "ref": "55da321c-bca5-4279-8c15-2c8ad1680c42",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dbbac53d-c57d-40cb-bbec-1675a7020969"
        },
        "item": {
          "id": "b99b990c-6f1c-4e70-884e-16792efb0242",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "453d8520-87fc-4890-82a5-edeac6ab25fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a134c1a-f25a-4586-88c4-c1c12d3b316c",
        "cursor": {
          "ref": "d55688fd-181e-4490-94f2-5a294dca66d2",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9d9f38d8-f220-4a0c-9796-fb1cb8c48825"
        },
        "item": {
          "id": "3a134c1a-f25a-4586-88c4-c1c12d3b316c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "713fbd20-fed7-47e1-a0de-e407ab910cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787fb553-b636-4dab-9411-ecf4248d3d1a",
        "cursor": {
          "ref": "caa45c9e-feec-499f-bedb-39be28cec2f5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ae880088-d3eb-4892-b129-d0d2b13db619"
        },
        "item": {
          "id": "787fb553-b636-4dab-9411-ecf4248d3d1a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "30a665fb-d349-4f05-84ef-d91bfc9578bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390e3b55-a58e-4061-8923-6b9cb70996fe",
        "cursor": {
          "ref": "15d384ee-4325-47ad-b713-42fa7cfcaf2c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dede924c-410f-49aa-b2e3-d2b85dfb9df0"
        },
        "item": {
          "id": "390e3b55-a58e-4061-8923-6b9cb70996fe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0f6e8fc7-ab13-495d-8c41-017717aadbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a1a2f3-9951-48b4-8edc-cd7ef11bce68",
        "cursor": {
          "ref": "4a985c48-a380-4449-8c96-a563a65c9db2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2959e863-2e26-4e0d-b984-9ca96532f02d"
        },
        "item": {
          "id": "e5a1a2f3-9951-48b4-8edc-cd7ef11bce68",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ceb1abc9-7b4e-4330-92e9-7d207dd6dffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d934806e-ddd8-4268-8d81-181a555938ed",
        "cursor": {
          "ref": "7b5694cf-a76f-4177-b3da-84f807663e5b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "eb81ad2b-f7e8-4694-9d8e-aed32fdef2ca"
        },
        "item": {
          "id": "d934806e-ddd8-4268-8d81-181a555938ed",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "39e37092-7a44-4c7f-bd80-2658587fefc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e384994a-b5f6-42cc-b24c-00d50fa8214a",
        "cursor": {
          "ref": "e0f6bbe0-c488-440f-be4b-ada00f8b4933",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1d78be19-e2d1-4206-9983-c838c02249a7"
        },
        "item": {
          "id": "e384994a-b5f6-42cc-b24c-00d50fa8214a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "35486d32-dd9e-4c4a-ac90-2874ec1a93e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937fcabb-b218-4cb5-9739-1d600e2ed668",
        "cursor": {
          "ref": "26725181-6475-4c3c-8065-315e6c902863",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4f9f6794-ebd1-4853-8fa2-b4436a6df17c"
        },
        "item": {
          "id": "937fcabb-b218-4cb5-9739-1d600e2ed668",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4bff61a2-00a7-4ce7-b951-a7b6e9c5b3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ac3ccd-2158-45c3-9419-fd89d5bd25bd",
        "cursor": {
          "ref": "955e10b9-8903-4249-b2a5-a13ad7ad7b96",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d7a68cfc-e86d-44ab-ac47-b3ac9cfe72a2"
        },
        "item": {
          "id": "51ac3ccd-2158-45c3-9419-fd89d5bd25bd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9ba4659a-9c77-4c76-a481-a4f8da4c3609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f6ae56-32cd-416e-8c53-c1e556bdeb2f",
        "cursor": {
          "ref": "6499745e-bec4-401d-a74e-943a409b55a5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "948de6db-1a1c-4436-9ea6-ade123b59106"
        },
        "item": {
          "id": "d5f6ae56-32cd-416e-8c53-c1e556bdeb2f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "08c787ca-baa2-4b08-ba6e-b847340297ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19826cc8-18a2-44cb-b91f-dd936d942c1e",
        "cursor": {
          "ref": "4ef01593-2127-467a-989f-d28bde632ee3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "44a673e5-322f-4308-8c92-049c4609faa6"
        },
        "item": {
          "id": "19826cc8-18a2-44cb-b91f-dd936d942c1e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6f749252-6ed4-4d24-9b26-47e6d3e913e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1919907-d271-400e-a134-9dbf73b78e17",
        "cursor": {
          "ref": "581e9d17-e1ec-4b1d-b8bf-0b746d1b5484",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "57a43afb-a2e2-4490-bccc-bfeb1712de43"
        },
        "item": {
          "id": "e1919907-d271-400e-a134-9dbf73b78e17",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5fb15b96-a6a1-4810-b8a3-1d97dab13a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b683e4-62db-4b07-bc06-ef84107cd0f8",
        "cursor": {
          "ref": "445d5289-aa06-4955-90c0-d660899ff6ff",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "868868c1-8c22-4dc4-a1ca-3d85c3aa9020"
        },
        "item": {
          "id": "b3b683e4-62db-4b07-bc06-ef84107cd0f8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e941c5a8-80dd-4f2c-805a-d21ed720f01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614cfde5-67ec-453b-b82b-1698b6123322",
        "cursor": {
          "ref": "4661262e-e2f8-44a7-8e57-fe17755945fb",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e6d31a56-0178-43ce-9265-ef6c9020e1ee"
        },
        "item": {
          "id": "614cfde5-67ec-453b-b82b-1698b6123322",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e3050c7b-4675-40e9-8e04-8763fe0d1add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e7b85d-5d23-4645-b750-9a7fffae209c",
        "cursor": {
          "ref": "5cce7cd0-4fff-45e1-93fb-a77055c9e21f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1e0b9ad5-c33e-406e-9ff2-d2b3fb0384cc"
        },
        "item": {
          "id": "05e7b85d-5d23-4645-b750-9a7fffae209c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6b82ccc1-84d2-4cdf-9f5e-2ccf9b00bb06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5642f96f-486a-4e60-81b5-1e63c8277444",
        "cursor": {
          "ref": "1c9f6dcb-15ae-44a6-ba9a-f55c8cda69a0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "868dbf6b-f9a0-475b-88e1-fe761cfc7eb9"
        },
        "item": {
          "id": "5642f96f-486a-4e60-81b5-1e63c8277444",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d7d8b7c4-266f-4938-bc95-b5333fa0e162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "45e9eff3-d4b5-4259-be36-9445943ed9f6",
        "cursor": {
          "ref": "69b9e892-bb85-412e-a4cc-7c275922e304",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f5262a18-81d6-443d-aece-89af6212133c"
        },
        "item": {
          "id": "45e9eff3-d4b5-4259-be36-9445943ed9f6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5b32ca3a-c018-4dbc-8638-3cb98fea4090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "891034db-45a3-4498-a978-1e3ef0178462",
        "cursor": {
          "ref": "f7c92728-7cee-481a-ad33-588b65eec962",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "19d9c7bc-d7ed-4c2b-ba59-9c40f75646dd"
        },
        "item": {
          "id": "891034db-45a3-4498-a978-1e3ef0178462",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b56d335a-7f7c-4ff7-801c-3e0244c1139c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9623e7a1-d323-4b8b-8485-ec8613082e0b",
        "cursor": {
          "ref": "ef7a6d7c-425c-4bf2-83db-bc34a739af5d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "648ab3e0-1e02-4ab9-a1f0-030c26de74c3"
        },
        "item": {
          "id": "9623e7a1-d323-4b8b-8485-ec8613082e0b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "403194af-ea0d-4682-9dbe-c8b43d008ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2c76cebd-3a60-4b9e-bdaa-3fe80455bc16",
        "cursor": {
          "ref": "3c8b4399-1be1-450e-8a3a-86495ba965fd",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "096368cc-205a-4f89-8530-bd0c35c6d511"
        },
        "item": {
          "id": "2c76cebd-3a60-4b9e-bdaa-3fe80455bc16",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b2c021ef-17a2-4677-aa76-5093dcfd0542",
          "status": "Created",
          "code": 201,
          "responseTime": 6075,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f287a7-94ca-4883-8e4b-656ed51413af",
        "cursor": {
          "ref": "8492f7d1-a9b4-4a4a-8bff-c7f27efadd46",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cd67b42f-a5a3-403c-9215-5e102b8aa4fe"
        },
        "item": {
          "id": "19f287a7-94ca-4883-8e4b-656ed51413af",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d131d059-bcae-4561-ad8e-074195fd2e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4e203bdf-843b-43ec-868e-a63233fe3a9b",
        "cursor": {
          "ref": "8ce2ef26-1074-428a-b0de-d36d1632da1b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "517e5d41-ff3c-48b7-b510-6c692b8e6107"
        },
        "item": {
          "id": "4e203bdf-843b-43ec-868e-a63233fe3a9b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "015f2935-1c9d-41a1-b06a-1bcfb5f372dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e296ec68-4255-467c-b55d-cea9db02cb81",
        "cursor": {
          "ref": "0ce13da5-96f2-4d34-8377-70aaa27a4269",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cb416adf-2e1e-43bb-ba4a-70f217c282e0"
        },
        "item": {
          "id": "e296ec68-4255-467c-b55d-cea9db02cb81",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "121cbc44-b3e7-4fd8-a25d-506b88695f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cad9773-1d69-472c-85fc-ed05cf6c88e8",
        "cursor": {
          "ref": "222dcd06-ef23-4b02-956d-8750b4e8fcd7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cb7b9a12-0008-422b-b5e8-e8a4c65ccbdb"
        },
        "item": {
          "id": "2cad9773-1d69-472c-85fc-ed05cf6c88e8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "24de1bb7-898c-4354-9cb5-1a686c3faae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054123c9-0913-4286-b9fd-a3ab8b872df5",
        "cursor": {
          "ref": "1a92efd2-7a50-4dd4-b7e6-6a0e4cacd594",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a418ba96-07ce-4311-ad62-8b181d57fc6f"
        },
        "item": {
          "id": "054123c9-0913-4286-b9fd-a3ab8b872df5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5936cb73-dbfd-4ff1-8464-0b9198eeadec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3193e0f8-fdef-4815-a24a-98fceef91aa4",
        "cursor": {
          "ref": "b15579e3-a59c-4036-b7db-1afaef0554c9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "334c44d6-5cea-4933-a18f-3ff6600133c9"
        },
        "item": {
          "id": "3193e0f8-fdef-4815-a24a-98fceef91aa4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8c9890de-33e7-47bb-bdd3-87b2608a1d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e285b89-c041-4cc4-abe9-6bf1366be97b",
        "cursor": {
          "ref": "8501638c-11e9-4230-a9bf-2cd9b7606a1c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "71924202-c439-4c66-9037-20ada5c71ebb"
        },
        "item": {
          "id": "8e285b89-c041-4cc4-abe9-6bf1366be97b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "06932b8c-ad85-470e-960c-f00f7cff54ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a05088-864b-4ff6-86a9-5aa1df492c05",
        "cursor": {
          "ref": "168ede4e-d50c-4522-b815-77200cba9f60",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4c2b3f37-9050-4fe2-acbd-03e78c7f650c"
        },
        "item": {
          "id": "43a05088-864b-4ff6-86a9-5aa1df492c05",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c6b9f4a4-4307-49a3-886d-256d858103ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce14d02-eb53-4f0d-a749-d141f2ce079e",
        "cursor": {
          "ref": "1b3de7a5-09c0-4c54-8cce-4af95977c2f3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ecaad5c5-32b9-4a6c-a917-35a1442cf10f"
        },
        "item": {
          "id": "9ce14d02-eb53-4f0d-a749-d141f2ce079e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d944335a-2dc3-484d-bf8a-3580cd645c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f929ec-5e79-4d95-9d32-d27154e778fb",
        "cursor": {
          "ref": "8e6fff75-7216-494f-bd65-2f025ec2664f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eab87b74-a42e-4051-90e4-4e5cfc6ce575"
        },
        "item": {
          "id": "37f929ec-5e79-4d95-9d32-d27154e778fb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7084858d-dff4-4847-ae61-a9302d1e9510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae7aba5-1100-488b-ac50-d80f56be0771",
        "cursor": {
          "ref": "83a8f233-f51a-41f6-bee4-b8ef2121d7e0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0d9419c2-44ed-42ff-977a-b647125da008"
        },
        "item": {
          "id": "7ae7aba5-1100-488b-ac50-d80f56be0771",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4a6c7f0b-4c31-431f-a883-946f74a51d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9372aab6-8201-4609-b335-fe3b5c30d5f3",
        "cursor": {
          "ref": "043edf0b-87ab-4ca3-b2ce-573ccbfbe532",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "be4e24be-d5ec-498d-9c1b-5a1129c66636"
        },
        "item": {
          "id": "9372aab6-8201-4609-b335-fe3b5c30d5f3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fd2a8c10-9549-48b0-a392-eb2c36e2586a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cd14bb-8778-4cbe-aa0d-35be0fe13e9a",
        "cursor": {
          "ref": "d1ae7339-415b-47eb-9498-81e4da02c955",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "88f8ad16-cd16-48a8-a916-d7be9217ae19"
        },
        "item": {
          "id": "73cd14bb-8778-4cbe-aa0d-35be0fe13e9a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ef41bc8-fcd7-46de-b1e7-387c5a87509c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f768d073-3411-418e-a6cc-bbd3c6061082",
        "cursor": {
          "ref": "16ee961b-5e96-40aa-b38e-feb70b40483c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "32780b2a-7d05-47e6-98ac-b4722d5eaf05"
        },
        "item": {
          "id": "f768d073-3411-418e-a6cc-bbd3c6061082",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eaccd0f5-44d1-41eb-aae5-7a83182d801d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b09c082-c728-470b-adfa-081a20023d6e",
        "cursor": {
          "ref": "fee09294-be2d-45d1-bafa-6ba01f47a1d6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c2d342b2-d937-400a-a57f-1cf3e3f17199"
        },
        "item": {
          "id": "9b09c082-c728-470b-adfa-081a20023d6e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eb5b2540-c376-49ab-a1df-bfa12f0ea1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17266607-2819-44a9-9a2e-20399cd749ed",
        "cursor": {
          "ref": "b91b2ad3-4f01-4602-9a94-6ccde4cbcc30",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "28c53c88-bf07-40d1-a9f6-6f580f89dd7b"
        },
        "item": {
          "id": "17266607-2819-44a9-9a2e-20399cd749ed",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "01589e10-ca0b-49bb-90c6-b4571801203a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc5bcd7-d425-4bc3-b66b-81607f9c37ad",
        "cursor": {
          "ref": "2a2de826-0e6a-44d4-8caa-94d4ce7f61c5",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c71c562d-07f4-4b28-99b0-b02a4ecf88bc"
        },
        "item": {
          "id": "3fc5bcd7-d425-4bc3-b66b-81607f9c37ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4bc6a2f9-0d6b-41ea-a918-f67ad30d4207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c619c56-98ba-44bc-9ff5-f67ee708c368",
        "cursor": {
          "ref": "1c68dc06-6cbd-4f80-bffe-afae1d4ca807",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6604422c-207f-4f43-9ffa-801b26563867"
        },
        "item": {
          "id": "0c619c56-98ba-44bc-9ff5-f67ee708c368",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "85b20762-5683-415d-8e36-b56fa93a5451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32737c3-dc3f-40bc-9852-5c56ba1762d5",
        "cursor": {
          "ref": "388d93a7-6359-4061-b760-38ac30986132",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3b06652e-1e56-4e21-9061-357c583f7cdd"
        },
        "item": {
          "id": "b32737c3-dc3f-40bc-9852-5c56ba1762d5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1418377d-5f30-4aa6-8598-5ff104cd117b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c1d5754b-b874-4a01-bbfb-32c2a0f0b00c",
        "cursor": {
          "ref": "c2fe1a1f-0296-40ff-a9b3-aceace57eac0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "49709052-3e89-4bc2-b1a1-e4d377d2fecf"
        },
        "item": {
          "id": "c1d5754b-b874-4a01-bbfb-32c2a0f0b00c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "abc0045b-1b48-48fa-9f64-8de8f4adbc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2c628b-9ad3-41c0-aff7-27d755d47523",
        "cursor": {
          "ref": "9dab0f88-2566-47d5-bc46-25e948993dcb",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7f498265-b424-4832-b85c-c3c2c3ea7625"
        },
        "item": {
          "id": "3b2c628b-9ad3-41c0-aff7-27d755d47523",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "47a5b014-933a-437d-89b7-b2c026456386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208295db-ec32-4742-9d3f-84d67f150393",
        "cursor": {
          "ref": "43adc036-f668-43d6-a037-c4a2045d9b4c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "21acf539-607f-4a2e-b1e1-b2874be3f8a8"
        },
        "item": {
          "id": "208295db-ec32-4742-9d3f-84d67f150393",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9f47976c-b00c-434f-b8d0-e2762e25eab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60777c1-1309-4497-8926-4c80d8ce3662",
        "cursor": {
          "ref": "bdc9cdb1-5aa8-49a4-b2db-f1c967940325",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1dc9c186-c764-4b2c-85a3-af1533d2b405"
        },
        "item": {
          "id": "d60777c1-1309-4497-8926-4c80d8ce3662",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ee69b41d-bfbc-4cb4-85c6-9fbcc7e8442d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639adaf2-46bc-4f19-84b9-8925202c6e87",
        "cursor": {
          "ref": "2f435aa2-b49c-4857-957f-a9d99e6979e2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "224a722f-cddb-4000-ae6d-8fbe67965003"
        },
        "item": {
          "id": "639adaf2-46bc-4f19-84b9-8925202c6e87",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "42da9faf-14c9-4042-a8ef-e574dc38a08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2453d157-b821-4673-a345-ae56c57e2074",
        "cursor": {
          "ref": "0f59e48d-a6fc-4f1d-be54-6949400b68bb",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "babb9a80-19d2-47e8-bd69-73d53794d2b3"
        },
        "item": {
          "id": "2453d157-b821-4673-a345-ae56c57e2074",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aebc3533-44ab-475f-bfa5-30dc94084e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac255dc-a746-4452-a200-fe204abf1560",
        "cursor": {
          "ref": "6a1757e4-018a-45e5-95e4-242d45ee5f89",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3913a11a-1f32-475e-be39-d16a3686add3"
        },
        "item": {
          "id": "fac255dc-a746-4452-a200-fe204abf1560",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "80bbe1df-9467-46a2-83c4-d5fdfefa113a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3d81e4-5b1e-4ad0-b301-381e5df96e9b",
        "cursor": {
          "ref": "f87b61f5-1ad3-4839-83b6-8d7e9198133d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2f464c63-4d22-453a-abc5-80187af6a0ab"
        },
        "item": {
          "id": "2e3d81e4-5b1e-4ad0-b301-381e5df96e9b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "599d8388-2184-4b7e-90a8-6d625b585b81",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0ad4c96a-c9f9-4e7f-aa72-7e60dbf5391a",
        "cursor": {
          "ref": "0cf5adab-687b-4904-9631-531eaef5f99e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "190b3997-3558-4ef8-be74-916986328888"
        },
        "item": {
          "id": "0ad4c96a-c9f9-4e7f-aa72-7e60dbf5391a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f8f64e62-e69b-4619-bc67-57db05001e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1922d714-3aef-486b-af9e-691bbb41d691",
        "cursor": {
          "ref": "5fd269f3-6b08-4355-af81-4aa8782ec5bd",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "07306b2d-4c4d-4279-ab53-9a3734b07704"
        },
        "item": {
          "id": "1922d714-3aef-486b-af9e-691bbb41d691",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7f790ecb-8210-4474-9197-9eb5d2ee77f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54bf8c2-f494-426a-93b0-c3b0180d9b1c",
        "cursor": {
          "ref": "f4902b25-c0b1-4ff0-9fe7-84cffdf820cd",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7045b50d-e3e2-4b5e-8781-6c8c30fde030"
        },
        "item": {
          "id": "c54bf8c2-f494-426a-93b0-c3b0180d9b1c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e2c4eeb3-f216-4455-a708-778465082467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bddeb0-5bd0-4ee1-b740-477e416a9989",
        "cursor": {
          "ref": "d0fa66ba-99c0-4c1d-9ed0-d3ab423222ff",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4af67002-4791-4730-b4d3-c6eee99c9c7f"
        },
        "item": {
          "id": "88bddeb0-5bd0-4ee1-b740-477e416a9989",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fd087135-183e-4642-be10-eda7d32febcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5cdde1-c09a-44c2-a8ad-2db7672216e6",
        "cursor": {
          "ref": "5e30a0f8-0447-487a-97f3-cdef04d9f9ba",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e660286f-68d4-4e7f-af04-ae6b61ed4589"
        },
        "item": {
          "id": "db5cdde1-c09a-44c2-a8ad-2db7672216e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "daebfb1e-ce64-43b1-bea5-cd7b724ffbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b93100d-db2f-4754-bce9-f94046d62f99",
        "cursor": {
          "ref": "d9b65c22-ea10-4465-b8f2-b2f81526b1ca",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4cf006f1-c915-4044-8dbc-a5a66787a737"
        },
        "item": {
          "id": "9b93100d-db2f-4754-bce9-f94046d62f99",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "676550b4-55e6-47a5-b80a-5ab3b20e0ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a09cc0-c343-4d74-a9e1-bf48fa75de0d",
        "cursor": {
          "ref": "6ddf70fa-1568-4b11-b3c3-031d46267e48",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d1e0592a-a460-459a-8fff-c08bd4050160"
        },
        "item": {
          "id": "74a09cc0-c343-4d74-a9e1-bf48fa75de0d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "342c9749-9640-498a-94a3-15e53db5d232",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c287e057-8c9d-4a77-bb92-37d6a6396e01",
        "cursor": {
          "ref": "0d1fd1ce-3e23-4af5-ad5a-f24c57f7a766",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "58b5e083-29a6-4062-a393-407ea2cdb990"
        },
        "item": {
          "id": "c287e057-8c9d-4a77-bb92-37d6a6396e01",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a9eeac54-5941-4a1f-b81c-f320db12fbd8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f29fcf08-396c-47d4-b68f-2680c06fadc8",
        "cursor": {
          "ref": "3da6f1ad-cb0e-4c9f-bd3d-a6af120bea54",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8164cda6-86e4-42a5-becb-7aa1cfc92b5e"
        },
        "item": {
          "id": "f29fcf08-396c-47d4-b68f-2680c06fadc8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "195cff53-dc78-4daf-b458-167ae5f36d5f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "b5d268a2-a130-491c-acfc-c8e02c87011b",
        "cursor": {
          "ref": "1407c59b-64b9-4153-804e-86f7213ba248",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "300966d7-1555-4a70-91d6-ab0a67dadd6c"
        },
        "item": {
          "id": "b5d268a2-a130-491c-acfc-c8e02c87011b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "834d8bfb-de56-4a43-aafc-4433ee6efb4d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ba5c0f39-ba94-4f55-aa9e-fe8793a7b97e",
        "cursor": {
          "ref": "eebd5335-dbe7-47c2-bd27-dc570acd4727",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2757603d-bbe2-4a68-b369-c154b1e607ba"
        },
        "item": {
          "id": "ba5c0f39-ba94-4f55-aa9e-fe8793a7b97e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "128505b5-d230-4a5c-a838-4d122461dc01",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "a22233e9-1bc7-478f-87c2-79bc75c1e5f5",
        "cursor": {
          "ref": "5a1f3ae2-1e0e-4b2f-846b-8f0553880f17",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "805f9930-82dd-4a5a-9fbf-615f2e417b75"
        },
        "item": {
          "id": "a22233e9-1bc7-478f-87c2-79bc75c1e5f5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0ee4f4fc-ea92-41d5-9525-fe66ee012052",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "262a2b5f-0f32-4243-b104-881f7eba2547",
        "cursor": {
          "ref": "021c1698-7494-4edc-a49b-819dd983a277",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1c94a40d-05c8-4b9f-88ee-5771fd0cc716"
        },
        "item": {
          "id": "262a2b5f-0f32-4243-b104-881f7eba2547",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aeea5ec9-6412-40e0-b371-80dadc6b45ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fe2f63-d502-444d-8d7e-09c719f2facc",
        "cursor": {
          "ref": "a0d84436-60e1-4cd7-a2fc-81fff6692c91",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f159d8e2-21ba-4b53-aba6-df0bc2b3d196"
        },
        "item": {
          "id": "d2fe2f63-d502-444d-8d7e-09c719f2facc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "561323ca-4f1f-4369-8ade-c55568975006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb68d638-7bef-4af5-ac28-998cf0d79dc5",
        "cursor": {
          "ref": "acd63722-9e29-446e-b245-4bf091d574ab",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e095edf7-0cb8-42ac-91ed-c1137104744f"
        },
        "item": {
          "id": "eb68d638-7bef-4af5-ac28-998cf0d79dc5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "19f72c6c-f419-4b6e-a632-4114119d8377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b4a023-75c5-41a5-8002-f246057554c0",
        "cursor": {
          "ref": "e5eb3e75-5a52-4a3b-bf12-b707b6c26e0d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "def8f70e-f237-4571-b5f3-fb298317d06e"
        },
        "item": {
          "id": "f2b4a023-75c5-41a5-8002-f246057554c0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4c4beb43-9802-4b9c-ab9e-cfc1bcfd43a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c3d173-6611-43c1-abe3-e25494e3fcff",
        "cursor": {
          "ref": "40636a81-3516-49a7-9375-07d8b72cc602",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "472f2f55-950a-4563-b1d9-f54857319c55"
        },
        "item": {
          "id": "83c3d173-6611-43c1-abe3-e25494e3fcff",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ba8099b2-a455-4d5f-a687-0000b0dfcd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff72e165-455b-4837-87eb-ec0acfd1cc25",
        "cursor": {
          "ref": "dd192026-0304-4b24-b149-5cce663939c4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d3a974f5-e9fc-4792-8a56-1253f2db1531"
        },
        "item": {
          "id": "ff72e165-455b-4837-87eb-ec0acfd1cc25",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "61a67667-a041-48a7-9c3a-aae301fa8e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbda1fd-f8cf-41ad-8a20-35a7338cfb13",
        "cursor": {
          "ref": "61b23561-df68-4b6c-bf9d-3401f1dd77c6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "adb24d39-7418-45ab-a9d3-f85d3c62bc01"
        },
        "item": {
          "id": "4dbda1fd-f8cf-41ad-8a20-35a7338cfb13",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d22b395e-eb43-4ced-94cf-dfa81701a987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dfd9e2-8acf-48b3-b3b8-715808d4d66a",
        "cursor": {
          "ref": "5123deec-f093-47b5-997d-c44225a55b06",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f506fa12-5a42-4fd4-9dab-de26e99c1336"
        },
        "item": {
          "id": "07dfd9e2-8acf-48b3-b3b8-715808d4d66a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e75041db-1099-475b-960e-7abeb18f485c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1e4f09-f668-4cd7-a233-85538138b08e",
        "cursor": {
          "ref": "62807c7e-1cca-450e-b466-3ccbe6c56751",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3ec52584-3365-49c4-be57-558603a842ab"
        },
        "item": {
          "id": "ff1e4f09-f668-4cd7-a233-85538138b08e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9281a12f-be4f-4fba-80b4-bf187edcee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfcd7dd-d9e7-485c-8a93-2faf735a0155",
        "cursor": {
          "ref": "25b7b710-08b1-4fb5-aa29-2c14b2c45692",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cdc905fd-a787-4f1d-993f-62c50dbcfb15"
        },
        "item": {
          "id": "7dfcd7dd-d9e7-485c-8a93-2faf735a0155",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5c383831-ce83-43d3-8c32-93eaa4f1f8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267f1c1a-e528-4e21-95ef-88cca30cf085",
        "cursor": {
          "ref": "e5882f63-db2f-470d-bc97-aeb6f85db2ac",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "41353cbf-d029-4638-a0a4-dd0f95f5b5d2"
        },
        "item": {
          "id": "267f1c1a-e528-4e21-95ef-88cca30cf085",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c201e99c-9807-4c86-b23e-4a12cf7a256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021adc5b-a755-45c0-ae9f-6423a49cdc11",
        "cursor": {
          "ref": "ab2da240-c793-4289-abfd-8498aa52d21e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e3823f92-e4eb-4aac-a31f-46745a9a640a"
        },
        "item": {
          "id": "021adc5b-a755-45c0-ae9f-6423a49cdc11",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "75c10601-1e21-455d-9d38-9a1af5c92bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23377b06-692e-433c-a254-47ca7062144f",
        "cursor": {
          "ref": "62e24589-d6ce-4264-a1af-ac1a37f9c609",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a51b0880-1bf8-47cb-b5c9-3fc00da790b1"
        },
        "item": {
          "id": "23377b06-692e-433c-a254-47ca7062144f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2b96f4b7-68f3-411b-9d6b-3809fce80fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcc6348-05b9-4328-b9ad-23485b4abb07",
        "cursor": {
          "ref": "6afe633a-47a7-464d-af4f-b7b8669a0685",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c1f6ae4d-bcd0-4c19-8b08-dc17a1c15810"
        },
        "item": {
          "id": "afcc6348-05b9-4328-b9ad-23485b4abb07",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cec75ecc-0e72-49ad-b4ce-970d34c65132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246fb88d-e6c9-4b85-9854-872fc5c14509",
        "cursor": {
          "ref": "ba9c9d28-5179-4405-9898-d8bdd13dabcb",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1cd1c992-1754-416b-af13-6da713c2ebef"
        },
        "item": {
          "id": "246fb88d-e6c9-4b85-9854-872fc5c14509",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c728b4a2-de07-494f-aa5c-9983598b938b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97faa09-ca8a-45c8-aa8e-621958ff9b92",
        "cursor": {
          "ref": "ae9fa85f-7e7e-40cf-977f-03f3a3025de8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e66bea5c-5537-40aa-aa22-d86d843e62e5"
        },
        "item": {
          "id": "f97faa09-ca8a-45c8-aa8e-621958ff9b92",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "44f2ae26-9b64-4a60-a2db-d5c913cc9202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f3f0f4-db5f-459f-b5c5-dc0846377f09",
        "cursor": {
          "ref": "3b72ccfb-832f-4cf0-a827-6b1c415086dd",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cd64e14b-6c40-48b7-9ded-cd3dea69a8d9"
        },
        "item": {
          "id": "f9f3f0f4-db5f-459f-b5c5-dc0846377f09",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5fb526ea-9b4c-45de-9942-88f6f4b1aada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3cf740-ca51-4a1a-9ef8-021fe6296a1d",
        "cursor": {
          "ref": "685e3b5b-b5c3-4fa1-aece-a25fdfafc94b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6e2f99ca-1536-47f3-b7c3-79c6487f9e61"
        },
        "item": {
          "id": "9d3cf740-ca51-4a1a-9ef8-021fe6296a1d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2d1dd045-2105-4d41-a0c6-5adbcca231e8",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "7e4a0c5d-32ea-45ef-a017-0986dd3018d7",
        "cursor": {
          "ref": "36c758f2-cd58-49ca-acb2-8c993d4a0ec9",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fce95cd2-3376-461d-ba56-10d818ad21dd"
        },
        "item": {
          "id": "7e4a0c5d-32ea-45ef-a017-0986dd3018d7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "97a6f018-1cdd-44af-b831-7eaff189882a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57de118f-8288-4e38-98a7-0eabaccef5fd",
        "cursor": {
          "ref": "bae49654-3cc4-4d8c-b596-0edd69310a36",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ecfd88de-b9f8-4ccb-816e-4e0c7c629d3c"
        },
        "item": {
          "id": "57de118f-8288-4e38-98a7-0eabaccef5fd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f228b64a-7dd4-4756-9819-c1bc59569579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04599234-7298-4f17-b911-b358e0390fd4",
        "cursor": {
          "ref": "c9f54208-4c44-4ba7-aaa6-220f70233852",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2c188235-bb89-4f38-9697-ec80de581a01"
        },
        "item": {
          "id": "04599234-7298-4f17-b911-b358e0390fd4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "62f9f285-4692-45c3-84fe-0f1c9e0e6da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca62ee81-71cb-4c9e-89ed-deef79ad891d",
        "cursor": {
          "ref": "ca194247-3147-4d9f-9a94-f7838d114053",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "504a6be4-2537-4957-b4ca-43608c064dc8"
        },
        "item": {
          "id": "ca62ee81-71cb-4c9e-89ed-deef79ad891d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9210602a-14da-4737-a512-0a2cdced8e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976a42a7-8ae4-45ec-aa79-f3fa6eae9485",
        "cursor": {
          "ref": "e64abf5a-43f2-41ee-acea-e4773d668039",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c2681306-17c4-472e-b1e6-9227bbba777f"
        },
        "item": {
          "id": "976a42a7-8ae4-45ec-aa79-f3fa6eae9485",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "181a5d72-a19c-4310-8499-b17e7e5a30ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be851d3-dc00-4681-a8f3-ec45cf77d7a9",
        "cursor": {
          "ref": "d75c66b2-73de-41f9-8a78-0194e8e2cc3d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d48fdcdb-5367-4385-a098-c81d81b7adcc"
        },
        "item": {
          "id": "9be851d3-dc00-4681-a8f3-ec45cf77d7a9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f45536eb-8fcf-42c9-8984-b125bf62e8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f040ddd-0fc2-44ae-9297-5c4a20cc0638",
        "cursor": {
          "ref": "2c91d90c-3919-45b7-8971-e7fca9c798c9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b8050c30-c565-47aa-a7d5-45264cdc8321"
        },
        "item": {
          "id": "2f040ddd-0fc2-44ae-9297-5c4a20cc0638",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "37d265a1-e879-4d75-8222-f1a7fd3d3b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1f601e-8cc0-4978-98cd-6274e8f9aa97",
        "cursor": {
          "ref": "9b82e7bd-b2bd-4d60-bc7d-61fcb1971ef4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "46396d29-6d07-4cd1-8f46-ad7a7fe27898"
        },
        "item": {
          "id": "8d1f601e-8cc0-4978-98cd-6274e8f9aa97",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aa2a12fd-54d2-4464-9888-77dbcda120f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755a1709-5c5b-42cc-bf98-e5014eb3599f",
        "cursor": {
          "ref": "09e69bc1-37a3-49ed-8623-8f56a48adaa8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "083b3584-37e2-44a9-91bd-a39a6505f5d6"
        },
        "item": {
          "id": "755a1709-5c5b-42cc-bf98-e5014eb3599f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "08b4c24b-26b1-4fe8-9a34-08b73d3e34c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724201e1-571b-469e-88e7-af28a9d2c824",
        "cursor": {
          "ref": "381cb905-2b97-4394-b741-dab54b529592",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "03bd77de-ff31-4d72-a4b0-f2fc4cb27348"
        },
        "item": {
          "id": "724201e1-571b-469e-88e7-af28a9d2c824",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "331fcd83-74ef-436f-b363-fdb9d9c85ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502abb39-c582-4251-8ed7-899441d284bf",
        "cursor": {
          "ref": "27258fb3-abf5-441c-b2b5-b66e652484be",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "34bab839-0d52-4235-a868-f4ac14e7fee4"
        },
        "item": {
          "id": "502abb39-c582-4251-8ed7-899441d284bf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dde1ad33-2101-4a0c-b4d0-1ed0e8372324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35366e73-1116-4ebc-a4ca-1f1320b4178d",
        "cursor": {
          "ref": "e58303bd-634a-44b2-a122-090e5178d73d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2782580a-315d-43d8-ba8c-6c544c92407c"
        },
        "item": {
          "id": "35366e73-1116-4ebc-a4ca-1f1320b4178d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f071f49d-a43e-447d-b18e-af58793a4b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25ade76-eccb-4c42-89a5-4dfdbe259843",
        "cursor": {
          "ref": "df4512c5-8309-4f54-b8cc-91cbeb2ba9da",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6292b6d3-e337-44c4-92bd-b4049727e350"
        },
        "item": {
          "id": "f25ade76-eccb-4c42-89a5-4dfdbe259843",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0e9009ff-5aef-4107-8fb5-ec30bf5fde8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40240643-68a4-4fc9-8114-cd9f371f33a2",
        "cursor": {
          "ref": "6cb63937-5163-4589-bc4e-6c7cf584a5e6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "37c18e81-8a6d-4599-bc22-642d0847636f"
        },
        "item": {
          "id": "40240643-68a4-4fc9-8114-cd9f371f33a2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "70cff1c0-28c6-4407-8f78-2f00358d2289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7188f5-8f2d-4d68-8b6d-da1abb08e6df",
        "cursor": {
          "ref": "da37aa69-5806-498a-af3f-6552f9305f83",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "97c3c925-0f96-419c-a919-cddda0b995e6"
        },
        "item": {
          "id": "3c7188f5-8f2d-4d68-8b6d-da1abb08e6df",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ca6c590c-116c-4891-bf08-0bf2415a5783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5804a9-e49e-4754-8356-219dd652037c",
        "cursor": {
          "ref": "47563b69-84d8-4007-a95e-0cfc17dafab0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ecdeae66-e8f6-4d75-85b0-71725e518356"
        },
        "item": {
          "id": "1d5804a9-e49e-4754-8356-219dd652037c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a9734ffb-6f18-42a1-9039-4d7fd0d70c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604877fa-581b-45e1-b2d7-90814aaaa6c9",
        "cursor": {
          "ref": "cd0ff50b-4853-4f72-bec9-a3aa573254b3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8f6c9bd7-bb1c-42c3-b141-01f608a36d33"
        },
        "item": {
          "id": "604877fa-581b-45e1-b2d7-90814aaaa6c9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4a8099c3-5f60-48e4-acbd-1034f2c45327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d3c80d-4bb0-4c4f-b9d9-c7d96476d44b",
        "cursor": {
          "ref": "29c1e08a-c924-4aa1-acb0-3fb69bbbd37a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ec36c3fb-ce1c-4d3d-9cc0-95bdddbaa3b9"
        },
        "item": {
          "id": "54d3c80d-4bb0-4c4f-b9d9-c7d96476d44b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d5804e98-963d-4b40-9d6b-fb077cbd75b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad20b7fe-a8fa-49d0-99b1-1b597526a248",
        "cursor": {
          "ref": "225703f2-d9d3-4c89-aed6-658f6055b47c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8b3711ca-0fd5-40a8-8252-6d7fe7ba79ab"
        },
        "item": {
          "id": "ad20b7fe-a8fa-49d0-99b1-1b597526a248",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8c8cdfa5-2479-439e-b601-2139348d1fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c477730-fb0c-4b7a-949a-b738d3eebb9a",
        "cursor": {
          "ref": "3536b977-9ae3-4116-a139-053d6012f163",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9ba6bcdb-3776-4cdf-bd66-2bb145e5a1db"
        },
        "item": {
          "id": "1c477730-fb0c-4b7a-949a-b738d3eebb9a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4d00743e-8930-4ceb-850e-cf64b90e3e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec36ea5-41c9-4f3e-9b5c-aeee378990c8",
        "cursor": {
          "ref": "4ca6597d-48c3-4d49-8dae-d33d405a224e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "86f7d04f-dd8b-40ee-b3df-4cb3b0af4c66"
        },
        "item": {
          "id": "1ec36ea5-41c9-4f3e-9b5c-aeee378990c8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e754d9ec-e8c9-4e71-a11b-cb877ac167c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976fa50e-2fbd-47af-a7b3-daaece9807d6",
        "cursor": {
          "ref": "f1305272-024d-4b8e-8e9d-6565d133d90f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "16b1f7df-8116-4e5b-a825-b977d12d82f0"
        },
        "item": {
          "id": "976fa50e-2fbd-47af-a7b3-daaece9807d6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3b87fc12-d141-4c0d-aea7-d9a4c3de4464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03c3af1-3566-4020-9dab-e9e70d361311",
        "cursor": {
          "ref": "9e3f5a31-9d73-47f5-af43-f4051598a1c4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "06017346-361e-4f18-aeb2-35db374e3e28"
        },
        "item": {
          "id": "a03c3af1-3566-4020-9dab-e9e70d361311",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1cadd17b-2fc8-4e57-9699-71787a0405ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734afa50-cb5d-4adf-a405-8e2da1e17d3f",
        "cursor": {
          "ref": "68762cd6-1a1b-4dc5-bd3b-c0e578134f29",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3038bb73-2829-4267-85e8-2f20d7db7d20"
        },
        "item": {
          "id": "734afa50-cb5d-4adf-a405-8e2da1e17d3f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "68cb1a69-2bb6-4049-afe5-8714421f27a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f6c527-4f87-4f41-9bd1-c293055ccb74",
        "cursor": {
          "ref": "876b26cb-a12c-4d75-9745-0524d7727890",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fd05d47d-00fe-485a-b2a5-b5d713cf1bdb"
        },
        "item": {
          "id": "b0f6c527-4f87-4f41-9bd1-c293055ccb74",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d2faf896-78f3-4dc3-914f-931f5220efcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b96162-0770-46c1-bd8e-50d2846181d1",
        "cursor": {
          "ref": "433feaf6-5652-4ae5-86df-ffe13d3a62e7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "225053e6-641f-4960-9bab-3ac026e989e8"
        },
        "item": {
          "id": "10b96162-0770-46c1-bd8e-50d2846181d1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5b07fa86-2fc3-4717-b866-22c0adc0019b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2822e189-bc38-4d22-9112-474dab3f93e3",
        "cursor": {
          "ref": "54db5cf3-edc9-4f04-bf23-3715e43b1ea3",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e4cdcf3a-c9bf-4ee9-b373-0cf7a4b88550"
        },
        "item": {
          "id": "2822e189-bc38-4d22-9112-474dab3f93e3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9684f977-7909-4ebb-8d96-29dd617236bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83687ba-d781-41a1-989f-5db340de9a69",
        "cursor": {
          "ref": "b7df21f6-56f4-42a0-94fb-b96aa6581839",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ba5e1d7e-7bc1-4b61-8ced-f6ebef61f319"
        },
        "item": {
          "id": "f83687ba-d781-41a1-989f-5db340de9a69",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "860a239e-9cb6-4596-8148-376c38cf1a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ba16ea-fd42-4495-ad0d-aea3a4899ee4",
        "cursor": {
          "ref": "d80984eb-0987-479d-b551-86254e6e2ba1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9fa41d42-80cb-424e-9392-48b433c568dd"
        },
        "item": {
          "id": "29ba16ea-fd42-4495-ad0d-aea3a4899ee4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "60ff7e6a-8e2f-4618-8776-51fb94a7adf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee3d2eb-7c42-41f8-8128-3aa45b042f21",
        "cursor": {
          "ref": "4f0c1fd7-c391-4eb8-8574-68ea63afd236",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "421edc03-c574-46bc-8f27-9a9df5f67bbe"
        },
        "item": {
          "id": "5ee3d2eb-7c42-41f8-8128-3aa45b042f21",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "24c19afe-5553-4be8-91bf-b927f08a358f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d69969-b33b-4af8-b7c8-5f94bf32fad6",
        "cursor": {
          "ref": "d08693d9-3e59-4e19-aeec-06743c1e2b8c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fbe52ec4-ec27-4b10-b433-cda1d0eac613"
        },
        "item": {
          "id": "83d69969-b33b-4af8-b7c8-5f94bf32fad6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8762f1a1-193f-4b0b-ad65-ab5c9f2b4f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4bdfc4-039f-4e72-b1d6-eef2937de346",
        "cursor": {
          "ref": "7a95c9fb-4b4d-4402-bd58-d2168d0a5cb9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "57846f05-d39a-478b-911d-2202fabb0d5d"
        },
        "item": {
          "id": "ee4bdfc4-039f-4e72-b1d6-eef2937de346",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "67131cf9-1c73-4515-b0dd-3f7cdd0f6d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f91f0ac-1053-4fb3-b389-212c4f2b51ae",
        "cursor": {
          "ref": "1a807f46-bd55-4ce3-bcef-c25db2f27efc",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2aad0970-bf5d-4512-b1ec-da133d5c14bf"
        },
        "item": {
          "id": "3f91f0ac-1053-4fb3-b389-212c4f2b51ae",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "09557f14-abe9-4cb1-a363-6cedf1219d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7914b054-8092-4605-b218-fccd426d8f29",
        "cursor": {
          "ref": "bcdca8b7-9478-40ee-a9d6-23ed290cb1ca",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a985d449-e939-4127-abf4-792fc59b8f6e"
        },
        "item": {
          "id": "7914b054-8092-4605-b218-fccd426d8f29",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bd7b4425-6f80-46f0-b0b1-739de542271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c34484-eb04-444d-95e3-e5edc60474ff",
        "cursor": {
          "ref": "93038f65-8625-4d72-bd39-f2ea6cd2954a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "53bd5c18-3cb7-4f49-ade2-05188a00f579"
        },
        "item": {
          "id": "19c34484-eb04-444d-95e3-e5edc60474ff",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a855cffa-b3c2-4752-b4f3-741bc5619484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd93cada-9bcc-4b08-a377-ee08cc099656",
        "cursor": {
          "ref": "277595bc-3973-455c-a7bf-4aa85a5dbf9d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9ed7ed93-c072-4443-986c-c1e6cbdc2e63"
        },
        "item": {
          "id": "bd93cada-9bcc-4b08-a377-ee08cc099656",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c562eb50-5988-4f03-9f04-d6b664a24bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7845c85-71a8-49fd-b07d-2de3a29161cf",
        "cursor": {
          "ref": "ea3de1fd-9250-4076-8524-e4a879ab04ff",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "df1530b8-048b-4fc2-8b5c-b26f68382513"
        },
        "item": {
          "id": "d7845c85-71a8-49fd-b07d-2de3a29161cf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e1d6691d-4bd7-488b-99cc-62402cc45849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5120ec9-3bf2-4863-a3d8-5f0f3a6b69e0",
        "cursor": {
          "ref": "ac9b94b0-e508-4e53-8390-4ac6ebbc40ad",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3d3c1c0d-e6dd-48e6-b03c-04803bdd7988"
        },
        "item": {
          "id": "a5120ec9-3bf2-4863-a3d8-5f0f3a6b69e0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "62d19d27-8029-4959-920e-e22f95b40b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c230cba4-5154-4d34-8346-11fa5598544c",
        "cursor": {
          "ref": "b8686ffd-49eb-4f93-8f13-9f6b90e2a1ce",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "768629d0-4d59-406c-95b3-3976c3553c36"
        },
        "item": {
          "id": "c230cba4-5154-4d34-8346-11fa5598544c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "377c5e28-ca33-4c57-a760-160399ca1341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e0e125-14f0-4a6a-ac2b-e8f3f14cefe1",
        "cursor": {
          "ref": "c94108e1-be3a-47b5-9bbe-a2f579cbb8f8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cd5f9c51-1c5a-4157-9bbf-f6ac21eae644"
        },
        "item": {
          "id": "66e0e125-14f0-4a6a-ac2b-e8f3f14cefe1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e9cce827-bdaf-47c8-96ca-252e699660cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd10dcb-552d-4c3d-8780-3426a206e462",
        "cursor": {
          "ref": "c5728940-8a65-4f39-b9fa-40e95856c793",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fc342c6c-335f-4bf8-9fb8-3b29bf6fe946"
        },
        "item": {
          "id": "7bd10dcb-552d-4c3d-8780-3426a206e462",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0abb2484-5edf-4bae-a919-3045c21822ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eadecb9-aca6-405b-9446-7d24f84ef1ea",
        "cursor": {
          "ref": "d41a7856-6b3a-4433-9f2f-24b70f93e738",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f4df4e46-b114-4abe-a6a1-72d9a825ac95"
        },
        "item": {
          "id": "2eadecb9-aca6-405b-9446-7d24f84ef1ea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c10741da-759d-4b67-b550-85362ca15860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b55c2a-2986-4c9b-8d3e-2e61a00899b6",
        "cursor": {
          "ref": "e60bb7fd-635d-4a20-bb15-6c76d953f4ff",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "96123f6f-2b28-4622-9ca5-fdd718a8d9ff"
        },
        "item": {
          "id": "86b55c2a-2986-4c9b-8d3e-2e61a00899b6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d892cfd0-f3f7-4e75-8acb-a620989c2e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57a31e1-978d-48d2-9715-1c803d5bbb8e",
        "cursor": {
          "ref": "b9743abc-360e-44b9-a17c-9f40873a4a37",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6bc2cf56-d7a1-4749-8da8-5c3bf81d30d7"
        },
        "item": {
          "id": "f57a31e1-978d-48d2-9715-1c803d5bbb8e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4a5b7f2a-785f-48c6-a0e5-d765673dea92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd9ba26-073d-4feb-a680-1889f639b6a6",
        "cursor": {
          "ref": "08c1e734-62bc-4d59-9ec7-317f1d9429de",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b87b0032-0c52-409c-8347-462a6457d089"
        },
        "item": {
          "id": "7cd9ba26-073d-4feb-a680-1889f639b6a6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "528c82a3-ff0b-4ff7-be55-bce359eaa213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bec30b-5574-4b30-bd11-f92aa82af72f",
        "cursor": {
          "ref": "3245f003-f37b-4cea-954e-20ce75e5a498",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "53824ef3-cf30-409a-a2b4-545f387ea21c"
        },
        "item": {
          "id": "60bec30b-5574-4b30-bd11-f92aa82af72f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ef1db184-7c01-4b10-9d8c-c576b0b4852e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fbbcaf-13b4-4b16-b2b3-23461f1da27b",
        "cursor": {
          "ref": "9179dada-0e24-4a4b-a23b-e3ae3ff052ed",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d2084d55-a3c8-4d30-bacb-c7d027c37ee6"
        },
        "item": {
          "id": "c6fbbcaf-13b4-4b16-b2b3-23461f1da27b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "42cd9c67-c617-4f08-8687-27e1d76ecdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc4dea0-ec51-4832-99e5-f00050282296",
        "cursor": {
          "ref": "4cc06509-51a7-46fe-abb2-1cd1f6bfea42",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f7dce2b9-41b9-477b-b265-d2f8df64bac0"
        },
        "item": {
          "id": "bbc4dea0-ec51-4832-99e5-f00050282296",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "746450af-4f6f-486d-86c9-ca0fbb620cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76641d5-71f3-459e-8a2c-b9776d6afb0b",
        "cursor": {
          "ref": "3edb1f7b-97be-43d1-ad6b-b04a3cc264d7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8f491f4b-ae1c-409e-adf3-55ea76b8af8f"
        },
        "item": {
          "id": "e76641d5-71f3-459e-8a2c-b9776d6afb0b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5cf2869e-b5bc-40e7-9d49-53b53f861ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a885a69f-0be8-428d-8168-7591f8a3c1de",
        "cursor": {
          "ref": "57c24a9f-958b-4751-ac47-b2f116aab872",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "523fd08d-da49-4a74-b7ca-a5d8a7dc85ef"
        },
        "item": {
          "id": "a885a69f-0be8-428d-8168-7591f8a3c1de",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9398a8c9-8d55-4cd7-968f-286e13fb4476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e68e65-e39b-4926-b8ee-65659593f52e",
        "cursor": {
          "ref": "92691851-9571-4022-a90b-9861eab25b2e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a2e84961-32e4-4fa6-9d43-ec50df19eb66"
        },
        "item": {
          "id": "95e68e65-e39b-4926-b8ee-65659593f52e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "88e459f3-2951-4715-b759-6521bf04cda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6aa436-c985-48d9-8fb9-6f54e09fc07c",
        "cursor": {
          "ref": "600f1c10-766d-43a1-b612-f98b34fb4c6f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f364b857-e559-4c81-bd39-3379343e5f2a"
        },
        "item": {
          "id": "9c6aa436-c985-48d9-8fb9-6f54e09fc07c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "af20649c-25b0-4c2e-b86c-c571bdec65bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe090265-02f6-482b-a1da-047bd3a70c8a",
        "cursor": {
          "ref": "e53be905-3cd2-4617-9f62-14f83bd83425",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d731f40d-1f38-40d9-ba89-af7631c181d7"
        },
        "item": {
          "id": "fe090265-02f6-482b-a1da-047bd3a70c8a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6ced6b51-9d54-4d9d-9a82-e886ce1a04d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00baffb-4077-4e26-baaa-f7a00e5a604d",
        "cursor": {
          "ref": "b410396d-633e-49c5-85ce-bdfea84278a4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4a533f21-b4fd-4fa5-8cf8-53348f8f767d"
        },
        "item": {
          "id": "b00baffb-4077-4e26-baaa-f7a00e5a604d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "49d1bde2-49b0-4259-b9e2-203bee15c767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaa71de-d26f-4087-ada1-d10949be8571",
        "cursor": {
          "ref": "d296c9ef-f634-4e77-8cba-d8852b8f7ae5",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9747c8f0-56c3-41f2-b8e5-e595fbbef325"
        },
        "item": {
          "id": "ffaa71de-d26f-4087-ada1-d10949be8571",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7db33250-0a4f-41a3-8a86-e1d1dfb99f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6727418-7847-462c-a4a5-33628c120e16",
        "cursor": {
          "ref": "a55a1886-b657-40bc-bf3a-09d182330cee",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "40ed13da-8955-4ee8-9fee-fd8027ae7b10"
        },
        "item": {
          "id": "d6727418-7847-462c-a4a5-33628c120e16",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b175f3e7-42f1-42bc-9939-092f001aa4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f001001-f203-4ab6-9c62-5df9dd1eccc4",
        "cursor": {
          "ref": "ad69ac98-43cd-4f8c-ac13-dd8f0e94ac2c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1b3c85f4-8e07-42cd-9dde-0aedf439ca94"
        },
        "item": {
          "id": "7f001001-f203-4ab6-9c62-5df9dd1eccc4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "32a09b9f-a0d7-4735-a4bd-9a7bf4208ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c70b9b-9c7f-4319-b292-2d756b42e695",
        "cursor": {
          "ref": "3b1a7369-a260-46ee-8cb4-b2e9dc70ceb0",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "35ed6840-673a-4bb7-a55d-e641102804e3"
        },
        "item": {
          "id": "a1c70b9b-9c7f-4319-b292-2d756b42e695",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "038c9c9f-aa56-4b8a-bcc0-4fef613d7bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84fd7d9-4c7f-49ee-b80e-424325aa115c",
        "cursor": {
          "ref": "287383f5-a31b-4473-b20e-a6875cd0a4f0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "85e10c77-e57a-4041-b9b5-5d4322274ed3"
        },
        "item": {
          "id": "b84fd7d9-4c7f-49ee-b80e-424325aa115c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6b9256d8-96f6-4999-ba83-a53c2c72186c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe01503a-c60c-46e5-a118-792d714b41c9",
        "cursor": {
          "ref": "f939548a-5596-45a4-a124-0fb52b729c2b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e4005a29-a34e-470f-9b56-7fd6068db282"
        },
        "item": {
          "id": "fe01503a-c60c-46e5-a118-792d714b41c9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fb74faaf-c371-4b96-bc58-120236b40233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf4cac-b1e3-49f1-a18d-f7b16f672278",
        "cursor": {
          "ref": "d92e1ee1-f2d0-4b01-88ef-db1799b969ab",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6d466d48-a744-4ceb-9c71-c98f4cda360f"
        },
        "item": {
          "id": "40bf4cac-b1e3-49f1-a18d-f7b16f672278",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "95d40faa-ce5d-4fd7-8c3b-7de685331b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffc57a4-a8e5-449c-b219-78e28271aa56",
        "cursor": {
          "ref": "88868c62-a5af-4b29-a8b5-8ed0d13c2a31",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "87dfd2b9-9f48-4fb7-87de-fc6c9d6359e2"
        },
        "item": {
          "id": "5ffc57a4-a8e5-449c-b219-78e28271aa56",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ad8b5b38-653e-4442-a71b-1add28bc0b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5411312-67b2-44ee-95ad-1556fc28ebef",
        "cursor": {
          "ref": "661b0a58-ea0c-43e7-aae6-9dc94d18dbda",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fed3fa45-1355-414d-8ae1-dc58529f56f0"
        },
        "item": {
          "id": "c5411312-67b2-44ee-95ad-1556fc28ebef",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1e34e1ba-389f-44e7-9867-312825704fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ffd35d-3a89-4758-b6a8-4106cf293326",
        "cursor": {
          "ref": "d8295629-dc39-439e-8aa6-ef005c1de373",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fce91508-72e8-4a60-ac73-6fdab57ef225"
        },
        "item": {
          "id": "11ffd35d-3a89-4758-b6a8-4106cf293326",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4f060b38-f1d3-4a6a-8ded-204f5c45ea4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a657b690-846b-4435-8966-5c6ce967ac4d",
        "cursor": {
          "ref": "dbcbb4bf-1cdf-4a7f-b859-a045b875b5f3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "19c66cdb-60e0-4851-aad7-1d7b9f181b5c"
        },
        "item": {
          "id": "a657b690-846b-4435-8966-5c6ce967ac4d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "77216b73-01d5-4734-8be5-8058fe6f51e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eed6684-eb40-4b1d-9b66-c1d95fc079c1",
        "cursor": {
          "ref": "d0df0ee7-0867-4071-8815-404be1ce8581",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "66a35fa2-6a70-4269-bb80-fe4dd9ce39d2"
        },
        "item": {
          "id": "6eed6684-eb40-4b1d-9b66-c1d95fc079c1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3aad2d50-75b6-4a85-a3bb-e1e41ec3faf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbb68dc-1c4a-494f-ad89-7ab214dbaf09",
        "cursor": {
          "ref": "0679ac85-c970-41b7-ad57-7ee09254996c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4cb9070d-005a-4482-aa3b-4c0e0b6c90cc"
        },
        "item": {
          "id": "1dbb68dc-1c4a-494f-ad89-7ab214dbaf09",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d0d698d8-c5f5-4e9d-bec6-779f3c0a8757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1c04e7-52f9-4466-8782-05dcb4fafc9b",
        "cursor": {
          "ref": "c4b81144-7a0a-49e8-84b2-42aa5be0cb9f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a4320497-d54c-4a19-af04-4e6c0e6b5422"
        },
        "item": {
          "id": "1c1c04e7-52f9-4466-8782-05dcb4fafc9b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a3f1dd92-e7fc-45e0-9d00-de8789fd9564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632c18f7-6912-4445-9a03-afa06c0dc192",
        "cursor": {
          "ref": "f3de5ba1-afe7-4bae-94d6-aeab26a7c554",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d597d0e1-db20-4101-8742-19d7fc11ea1a"
        },
        "item": {
          "id": "632c18f7-6912-4445-9a03-afa06c0dc192",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4f03ccb1-b468-4c99-8f0e-847028b95258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8dec77-d2e1-481c-b86f-ca72dcfbae24",
        "cursor": {
          "ref": "5d9ed43e-2f9b-4a6f-b62c-a0fc7e717192",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "83e140e3-7bd4-49d1-89a5-6b052b85deb8"
        },
        "item": {
          "id": "8e8dec77-d2e1-481c-b86f-ca72dcfbae24",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d8766d4b-3a25-4924-8b05-b9f87cd2d81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aea736-b4f7-4faa-9aa4-3532600f7943",
        "cursor": {
          "ref": "44f62af4-45bf-4b33-bca6-e656a574c947",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7640f5a0-d6d9-4acd-b4fb-fc1099ffa655"
        },
        "item": {
          "id": "b0aea736-b4f7-4faa-9aa4-3532600f7943",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bef39ba0-7025-4bbc-8320-50a1704e43c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530c5a99-bc88-418d-8ff1-acb3e5f31b44",
        "cursor": {
          "ref": "c666832a-6017-437a-b1ff-8b5511f752a9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1217528b-c79b-4abc-814f-86fc826239d8"
        },
        "item": {
          "id": "530c5a99-bc88-418d-8ff1-acb3e5f31b44",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "856b1554-6ffc-47a7-8f46-b7235243053a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6b74c3-95bf-4f9f-b3d3-5a1b07a31302",
        "cursor": {
          "ref": "e29bdd29-16b9-4510-93e9-5e48fea3bb2e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9a7c56fe-aef1-4eb6-834b-1d44caae58e9"
        },
        "item": {
          "id": "ee6b74c3-95bf-4f9f-b3d3-5a1b07a31302",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "404ac9bf-8081-4595-be04-bccccf81a64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e0d70c-081a-4ad7-a231-a281670d9c91",
        "cursor": {
          "ref": "491de85c-72f0-4508-82d6-32c3b98309c5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c063c59b-61cc-40d1-8615-3ac5f56fd91f"
        },
        "item": {
          "id": "86e0d70c-081a-4ad7-a231-a281670d9c91",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6eb70a2f-8869-4b3a-b022-ce0e3aa64e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1941d776-c25f-4057-8c79-2fe107bedd2b",
        "cursor": {
          "ref": "10a23e61-285b-4271-a6fb-18502a4b77f7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c100b395-3e9b-41a7-be54-37c2da428bf2"
        },
        "item": {
          "id": "1941d776-c25f-4057-8c79-2fe107bedd2b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cae29308-a4c5-443e-942c-8c79de8401ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8decc7-6304-4e6e-a4d2-0acfb97f486e",
        "cursor": {
          "ref": "d142b6ca-f949-4c1f-aa48-2068e3ea5fc4",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f7d03d45-5ea6-4d2d-a54f-f4b9ec60e395"
        },
        "item": {
          "id": "fe8decc7-6304-4e6e-a4d2-0acfb97f486e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0eddfcf0-f229-45ec-bee1-0fd950e0cd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fbb68d-84ff-4c98-a623-c5974679e815",
        "cursor": {
          "ref": "3b8e27c8-80fd-423e-a464-dafc9203ad3d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0fe7f679-b48c-4e60-82a6-627b25ee87e0"
        },
        "item": {
          "id": "b6fbb68d-84ff-4c98-a623-c5974679e815",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7bf520e4-b092-4bbc-a17f-039944e7e6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed68d312-9a32-43a8-bef9-f8a1e55f3923",
        "cursor": {
          "ref": "12f898e6-5d74-42a8-922b-401862a2844a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bd914fc2-1793-4293-8a6f-4d715088dec7"
        },
        "item": {
          "id": "ed68d312-9a32-43a8-bef9-f8a1e55f3923",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9a94bfc7-7c00-41b6-b1fe-fb0f19825660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cda78e0-be8d-4880-ad79-af3c74dc19cb",
        "cursor": {
          "ref": "58e8f80c-d5df-45ca-95a3-93be288fa66a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7a093fdc-8d37-4019-bbb1-658cb8424713"
        },
        "item": {
          "id": "9cda78e0-be8d-4880-ad79-af3c74dc19cb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6989bb12-be9d-4eb8-bbdf-2bde1d6cafe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde12b3c-540e-4f29-bdc5-4bf75139eb69",
        "cursor": {
          "ref": "db2aba8a-e4bf-48b2-8627-1a4065ba0c30",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b1dd8000-71e5-47aa-846e-56a29fa6d567"
        },
        "item": {
          "id": "cde12b3c-540e-4f29-bdc5-4bf75139eb69",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "886f600b-7013-42f7-96b1-3ed0ed9e6ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a353854c-8667-49d2-a01a-7356f0947ff1",
        "cursor": {
          "ref": "a0d29bfd-89a0-4c49-b9e4-85e8643e9d3d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "677ab6e3-dcbb-44c2-a5bf-a88025033754"
        },
        "item": {
          "id": "a353854c-8667-49d2-a01a-7356f0947ff1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d5c71022-cd35-40a2-b810-9247198b308c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f8f785-f8a4-4227-9ed5-b5801b3b1e42",
        "cursor": {
          "ref": "c7d5da1a-d3fc-4cb8-ba6c-c4df1558cf63",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "32fcb973-6cda-4fe2-bb50-687bbbecb01a"
        },
        "item": {
          "id": "23f8f785-f8a4-4227-9ed5-b5801b3b1e42",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4e99758b-a06c-4793-ac45-2888e6b1cfae",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2948fb35-d6f7-4752-b513-f24b603dd54e",
        "cursor": {
          "ref": "3bd01ddd-59c1-410a-8063-3e47a7f9094d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dc7880ca-2c25-42b9-94c9-1b035ef73421"
        },
        "item": {
          "id": "2948fb35-d6f7-4752-b513-f24b603dd54e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a7596c2a-477c-4854-992d-2c5657ff5a89",
          "status": "OK",
          "code": 200,
          "responseTime": 5298,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d611ade0-9b00-49ac-8a48-361b54b8dec6",
        "cursor": {
          "ref": "b31e3bd5-7f1e-4a9c-83ff-38b4724a588e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "12ff0a6d-ca53-4e03-986e-3ee58beb6054"
        },
        "item": {
          "id": "d611ade0-9b00-49ac-8a48-361b54b8dec6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3604f329-7ab6-4451-a0f1-a9d78640df51",
          "status": "OK",
          "code": 200,
          "responseTime": 2713,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8f22d8-f729-4be2-87e6-586beab8562a",
        "cursor": {
          "ref": "1010d2d8-2796-4e64-9437-baef41361269",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f77ab9cd-3ac8-4c93-921d-d7c1fd1c99b3"
        },
        "item": {
          "id": "7a8f22d8-f729-4be2-87e6-586beab8562a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45325fa9-3afb-4842-9b91-7df43cd84cb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8f22d8-f729-4be2-87e6-586beab8562a",
        "cursor": {
          "ref": "1010d2d8-2796-4e64-9437-baef41361269",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f77ab9cd-3ac8-4c93-921d-d7c1fd1c99b3"
        },
        "item": {
          "id": "7a8f22d8-f729-4be2-87e6-586beab8562a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45325fa9-3afb-4842-9b91-7df43cd84cb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c9878d-9a57-48fd-929e-69920a1796cb",
        "cursor": {
          "ref": "19091469-d2cf-4538-8503-7a8e2de3eae0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d0618e5d-e16a-4684-b0a1-b601a12d116b"
        },
        "item": {
          "id": "80c9878d-9a57-48fd-929e-69920a1796cb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0cd48c7f-2028-4a25-8eaa-c23b15180a55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc38808-4226-493d-b6cb-f6cd136c8368",
        "cursor": {
          "ref": "4287cadf-0386-4e99-92c6-68d45b06384f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "16c71359-93e4-41b0-9685-3bedc6816a1f"
        },
        "item": {
          "id": "6dc38808-4226-493d-b6cb-f6cd136c8368",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "08fc6a62-243e-4a8b-a3dd-f186a388abe6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}