{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c6806156-97cd-477c-a0c4-1e9428c751d5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7efa1c75-b357-4a91-9d04-50e58306f675",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76986e18-d022-4d02-b8e6-04f580b48b88",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "45a3aa69-384b-422a-ba05-ce53c53dfa7f"
                }
              }
            ]
          },
          {
            "id": "ffae968c-2363-46d4-896e-65ade094ef50",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b578d72-9560-41e0-ba24-196731711529",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c637a552-02d8-43f8-ac35-e40a11e7cfdf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4a9a544f-00f6-4345-bc45-b2a01c7d2f6a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0d507fa0-810b-42b5-9528-155ff2bd1cf3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f4747273-c46b-48b3-aba4-d55ccd083c3c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca0847df-7a1a-4dfd-b6f2-55eb6cb9ff8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6bb704f-af87-4fda-9d37-17ed9b5c39dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e08d2d4e-4a53-424c-97d1-f3083cc7b84e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbe6c00e-dc28-49a2-bc0c-df941aa79274"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a27f7368-1acb-498c-ab30-2b89b3979774",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eef06eea-1f1b-4686-8495-7e1838384a72"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7608c4a-216e-46d7-b88d-d059868c36cf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3db4e25b-79d0-40e5-b40a-cd3289038e13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74f3758f-ef3f-431e-99f9-35a339c249e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad0bdd11-2353-4fb6-a521-8271548f12cb"
            }
          }
        ]
      },
      {
        "id": "e3731aba-2cc6-4333-bd3b-adf4975f3a30",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "887c290d-d5eb-4f42-9caa-10f13f524192",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0455df19-f874-4869-87a2-6faad3154608",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40a6e3a4-fbd1-421a-af5f-8b62d2cd217a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f21bafa-6272-4cff-9bfe-f7becca23456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6ca3988-e3af-4b0f-851e-5cea9db209ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067a223d-347d-47af-a991-88a701c9c8f0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b8c920-6707-4e3d-9ab1-0be9c7f88e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "298905db-1881-49b4-99fa-b5e5a43b1c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b91f15-6308-490f-8c71-23dd0ef4df6b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13c6aea-cf3c-4776-b2bb-75f631b1c3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d76fc6bb-a863-49ee-877e-b1c2e5a0bf74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0af40431-bc4e-4367-8161-9e1f254a83e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b746b62-1a40-4b51-a484-e348d52e81d9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dab516f-ef99-4fd5-be21-3159934e418f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05d1c5f9-9bed-4021-8f7f-83176dd80daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea0c12a-f9e3-47b4-a230-c2633d54ce2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f62a48-116c-4e2a-a2ec-00a67a421226"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2c951009-584d-4b4b-a9b6-08165c19257d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f418eafd-9343-415c-9841-0fb7683b16c0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f79a239e-0b82-468d-a3c9-231966b3b91a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e7ab46ed-bd1a-4f57-82c6-cf08bfd5e74d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e1d6e54-4650-4950-9003-14111be5c72a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "90f067c9-7b16-467d-b207-f2a035147257"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d1aaeed-0087-46f0-8e3a-4e758c271154",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1e87b36-0bfd-4cae-8741-ca268e00dd75"
            }
          }
        ]
      },
      {
        "id": "f801a778-102d-41ab-af07-a02f13510dcc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6af88427-8760-436e-bcce-8192288c4fb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fe3531f-5f6c-4a7f-af5d-ca2ed4465c7b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a33a8831-f571-49e0-b13c-172f6f54911b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8347d28a-c4f4-4fc5-8792-c53ace192288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c25247-dbbb-4d4d-b944-79b0ef5d75bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d292787-a645-4cf9-8579-af70f12269e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8084c6eb-c57b-4a6b-bec4-56be2be4cb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f13560a-d632-4fdb-b9a4-7610e6d1e637",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a980b9b8-8341-4ffd-8922-5657e3475bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a33a69-6bd2-449e-992f-725fff3606bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11bacd2-4e7c-4b7d-9ff0-d79f01fa410f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "086d9444-70b7-46c6-9fe9-fdfdb704e296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417597ac-824d-4b1c-ac18-6937a1f880d7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cda820-65cb-4f66-aefc-094785efa5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab55ce7c-556d-491d-8e67-13734f1c4884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7327dc01-0f01-424f-b530-a8ed72a83886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b67aaeb9-2912-40ac-b4cb-ad02b74b3e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f180c4-f718-4035-9702-4f55db4ebb83",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa57512-7087-4a4b-a249-7a00491ff2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16742e5-6756-4ba7-bf7c-dfc9951a8a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c1c5f0-bb4b-434b-800a-74c5b7fbda3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8563128-d4a1-44c6-823c-3e4802345351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bf4a08-4829-4d76-bcbe-467584aaa910",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2678ccce-4356-48a2-84a1-0e50a655bf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fd9835-97ad-4120-9781-ecaefc7896e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a17c843-be42-48d8-9f66-dc0d4388c387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c6fdfd1-d44b-49d3-b021-f1550eb22e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9160582-7f29-4ded-b7d6-f53c95eadffd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f12dbf0-9d94-46c9-9945-57524d4f546e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feedc6d8-bd27-4e87-a39e-fc8ca744680d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f728cd-ef40-4e49-9967-a698224fa12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e5e44b4-bc17-455d-8fa6-d9d18441a878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b849cc-5ae7-47d4-bb31-92f4430123dc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa87c69-8f63-4d9e-b27a-b0ce9fe77fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643efae5-3b76-4512-a327-ea626ef41959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144b64b0-0c62-4db4-8918-44181a525813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6634687-4285-4df2-810a-661ab535eb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183f78a1-ccf3-422d-a4cf-bc290ee4af7a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1a7ea0-b3fe-4522-a451-4baaaa99460e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1668ff43-5b91-4552-ad6e-d68e371447ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3921ce-1ce4-43ad-8a3e-391f83884032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d038b647-be8c-4640-870c-290c8035ad37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec89af02-b180-4c98-9b02-cd1fca1f69e8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32d8852-2721-4e0e-978d-d0382c01c75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c6b5af-5541-43b5-bb21-c2ca9f35f45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288b7e17-b760-4bb0-a7f7-666d2b034182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a276655-6f91-4765-ae66-db3358ac3123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5211ce77-1cb9-44b1-bfe5-b6fe375083f4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd36dadf-ced7-4e4c-9339-4f595e150a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f29d47f-dfc6-41ba-8b67-5244f9bf7a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ed591a-e0bb-46ff-a271-413286f801dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "977aeae3-82ad-4b4b-899d-de612791c4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6a3213-f7f8-4110-9c30-75580f47bc69",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65247f3-05ca-45dc-a53a-791d0779213d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc3e334-5153-4b1f-b27d-4449aabe6ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc0cbc2-9244-47ee-a015-5b43f5ffaf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5e32d0a-672b-4a58-bf51-6813952ca6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aafcd78-7246-4f5c-ab1c-3ff981abe8ee",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d905e6-423a-495c-9b7d-a98127087dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4e7671-acb4-48f6-9a20-9b3f63fe4d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8baace16-b900-4e50-b748-b745a5df3ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "339a27b9-12b5-4225-90a6-ff6d539047cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e183d2c-b12d-4bc4-aad9-2f831408b043",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e056a50-6ca1-498c-9adb-51670be34ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f457bf98-215c-441e-a8e4-7e5301c474b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00494133-414a-46ac-9c41-cec5daa52e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29c22a68-7af3-4cab-bdff-11db6dd114d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58bcbfc-d5a6-4f2e-b7e6-8adb88f0d317",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f23dfcb-dff0-4f22-a76b-5cda58201ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd7ac96-de37-4355-8b98-70911591f547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87c0dec-bc2f-445a-b4fc-c71c46a9ff95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7f773c6-590b-412e-abc9-b73fe0f1a3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11badf4-ba3a-41a3-b68f-668f33fc20e9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2f827f-a876-4e7d-a05b-906f93b90e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c32afe-bb01-4724-92a8-18341e755e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a9a994-a528-4364-98b4-d806a6801124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa13a0c5-bbdf-4e3d-b186-64fe2c79a25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cf81cf-b217-4631-bb20-ff2b6e298b2d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3332aa7f-e747-4c64-9e7a-cce939dc1df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8892cd-b8ba-4726-b534-9fe5df5fcfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a54ba30-077b-43ee-b181-726ba0a8a12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ac8558d-e298-424c-afb5-5f01d026be22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40477b3-cdf8-4545-892f-2ba347256b37",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f834be-60c9-47af-afab-e9c242942a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fbfc45-b426-46a5-aa86-f68ec669c275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d2978e-f3af-4000-bbd8-a16dc6426a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd5e7b9d-2498-445a-829b-6a2d14e2cb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7aa080-1db2-4abf-8095-0dccf81d9972",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ee7ca4-a571-4683-adf8-001342518d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83949e06-9922-4830-b38c-8dc060922292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fcb8cd-8f16-4d9b-a1f6-fc09f5ab2668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fae0303-9583-4aca-8dd8-eec73ee67dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f060f60b-f47c-4ae9-9b0b-cd04ba6b034e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f5c453-34e3-421a-b86b-3b2045686d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346619ce-cb3e-46a6-ae7e-6089822d43db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254ccc02-9fd8-4ccc-ae8d-0536a03ccdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baddcfcc-7203-4cae-8055-6e6d0b172478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a13041-5289-47be-8f60-408fbeafe48d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e97d59-32b9-4d57-8005-b47a37f0cb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e597f4-7cb3-4300-a9f5-c1c9cb0854d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7691eae-bdea-4045-8d20-9f6929d6d0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "644e91b9-6c34-493a-a307-fc4b2a421936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f8f794-58f5-4f67-ae45-f97ffc3fbfd4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e703f8c9-b55b-46a0-9c32-696002d1b3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc69f4e-fa3b-4b15-8a88-abeb304606af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c04b70-9a4f-43ab-a54c-8d4a3dd9d349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2a3ac5-9d2b-4f3f-a2f6-10ff85d4649f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5fffe8-115f-4168-a33a-507c9a558f72",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c04b6d-6527-45ac-8d9c-db0d48959ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8e4c91-9117-4208-b57f-e3b38be27e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d46047c-061a-41f7-9d79-1fda0d83d779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0861dd8-6b64-487b-9616-da096e77abdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7519cb1c-8611-4936-9d09-368df3f86818",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba502eea-7ff1-4ad5-9e52-349d156bd07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee644bd-6656-4ad7-81b7-9a8fedb8957b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab1d77f-8091-4dc4-b392-bf90b65245e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e51eeab-16d5-4abd-81bd-5993435adfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ed6868-4661-487b-8a7f-6e6121667959",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc40c9a-a4ef-434f-b91a-27fbff811119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3f1f50-171c-4f1e-8ea0-dddb71c3d115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb6e1b0-2cba-48a1-b705-b92af4a23db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4405769e-e3b0-4dcf-8fb0-6b17a410257a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0737a0fd-25e1-4943-b152-9967597985d6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6648c5f7-16e5-4987-bd8c-9f24ddf739f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6e5e9b-d90e-486f-8909-0c67ab119e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79eb1160-5b49-4551-b918-63f17695a626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6def22ef-f2b8-49bd-854f-11e1a0232138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986383cc-7025-4ad4-847d-a5aa373bc70a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac7e983-48a4-4d85-b185-6e3ce70c0106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a886d513-55a2-4b93-9da2-14539c94121d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3cd64a-e569-4765-bc4f-045a8f8126f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5063077d-1f52-43a4-a510-29b704f4d740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7b19e9-7392-408b-a467-b6466030d9af",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ea44b1-c6fe-4030-b35c-4eb11fdc14a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01233ed7-81d2-4aeb-b580-bebd4d33a3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aea8ee1-9f2b-4eca-b94d-f4cde1dae757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c10c74-cfc2-4dbd-842b-e34b4e0ba983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81ba227-84d9-4766-a392-65539b5cbbc3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf0ff59-edcc-48e1-98bd-4b0a43fadee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581bba47-e325-482e-8611-ee8b5522d093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edc2cd8-b928-4eb3-8558-e0c20437f535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60adb09a-6699-4369-81a6-109bc0183920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c700215-1075-478a-895c-5692664be9f6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12871689-e080-4394-b803-22cc99c73cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8be70c-5681-41f1-b0dd-8c189883d15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8026a02-ab4d-4252-8df6-04e05945ddab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0a71fc-ea65-4a50-8ba7-e22f902c8348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350e47e1-3084-4818-861a-216762bc7e2f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819ac2f1-6569-48c3-8c23-a2dd5b6f9197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ddeba9-6841-46d5-9bfd-39da782984d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117f9892-8351-4c06-9796-2d757259b3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b380b3aa-ac44-4d7b-94cc-6f3be721dafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769b13e5-0a6c-4120-b221-50958c39992a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216eee39-f10f-4243-9ad6-10c1b943f369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae98255-6e6e-4b47-a35b-84d0347af752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66395e11-d3c9-4205-9883-66acfa79b534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f20d6bf-3a60-43b4-bdfa-99fcba5be48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a07d87-a244-4de1-b436-33295382b57c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ce4e7c-4e50-4b0f-a1db-f3ca7373dcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d8895c-48cc-4144-b036-d3038581b90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce715f48-2a14-4a9f-86d2-e448b72efe6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34af6158-8e7b-42fc-acd0-10351f7a62c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632e192e-2362-4b68-9ce8-9d6b76d8d7e5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f583128c-dd04-4eb5-b29b-64085b96c400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f6262a-9e78-45d2-a1a4-6cc0bd6a6136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c3909e-d6de-490d-8788-2cebde9aea4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c526e352-b052-433d-8972-a4030042903b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fc39fb-ae5a-430f-b870-cce33cb0ca64",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba68a94a-a729-44e4-915d-df2690dd1f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9771a2-c2f8-412a-b861-876347ce0202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5bd592-ffdd-4614-9dd8-a9434a10a8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9e8753-5488-49b3-8658-ad49789298b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ec0290-3fd0-4d2b-82c7-fbdbb78b1361",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7139276-aab2-48a6-b8bf-6068a812b444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39742e26-30ba-46f4-9f67-9a0378f855a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57358bd9-218b-4bdd-a3b4-e90e85cb515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "61a97f16-87a5-414f-af9e-c6bef411b0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b0978f-098a-41ad-8709-f64d5533c6f1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cdbd26-bf8d-4621-97d1-58ce5608eac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58efad4e-0262-4b4a-b6a4-316943c1b580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc112d91-7cbe-4f7d-9ede-b4a50d4d1ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21885312-f170-4a5a-a360-ac961e91ce96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c365b3c-f6bb-48f5-875d-4b4dc3c18701",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d597995-9657-4c6c-9e73-fb2f603f34e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ba16da-22e1-4055-9dfb-9c96e0798024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e8418a-46ad-42cd-927f-7d37f2a1e08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20a6b03b-3a88-4bdb-bff2-0d1eb9e7dfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d08e0bc-bca8-40ad-a696-3d493b513cc5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dba629f-b066-4040-8b35-9cb2fc946d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2db982d-3ce5-43f0-bb6f-f0f0adc39ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809eece4-36cb-41e9-8157-39b1bd641202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac3e6fa-fdd8-4eaa-af47-5c7982541fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64209934-c028-4afe-b94b-24c6321457d1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351ec253-3ab2-4f24-b1ee-f7d74e17566d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20495fb-2451-4363-84c7-67441a844edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdb123e-d77c-4474-bc5c-5d90b6556044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73c3d817-5d85-4ae2-84f0-1277905dfe6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1264378-8029-40ac-871f-3f9128e594d3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fa453e-d8d3-4d6d-afe2-5f905fd2e03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b440fdf-4585-4c5c-a136-b9c196d0d6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbd7264-ffa8-47a0-810c-f8a98d526e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee92dcab-b18a-4e1c-bc30-bc1c917c73b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3a5461-c989-4657-8147-212e94b67227",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ae0487-ba35-462a-95bb-04bcb4226cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c74256-e66b-44a6-8c6f-e18d5c6fd635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191a5897-941a-494e-8cca-87e4c2ac3ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb9af3d-db61-4f71-8dab-72ffb66b75c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc534e6-4b9a-4842-84af-c63ba8dbac95",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a74b587-c438-405e-ab14-79da5cd04422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705422f5-badd-4a89-955d-e38d6913a4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a55420-d162-4476-bca6-1362dededaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "807bbea8-ce6e-4cb5-a7c8-26c4400b7c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e0680d-aabc-479a-8494-56cf32fda0f6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ed7099-a18c-476a-a27c-263121dcad8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eaaa4aa-b9e1-4b1c-9afe-183816f74ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65e064c-7077-4bb7-8d3b-293058a8a99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "65a1e062-a6f2-4bec-9ca3-8c928b2c4ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab28778-40eb-410e-87b9-ad1356145398",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe05b688-45d3-47e7-b749-b0b42664da83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2ad073-89ad-4284-aba3-2cd43575b851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c517e0e-1d5d-46bb-8acc-ce83e54da6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "82de12b4-60a0-44cf-9f1f-05417b454d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0987e6e3-5880-4820-8c62-d4fe9617f546",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4c6025-e8fb-480a-b87e-aeaf10c48f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfa621f-7012-42a7-b825-7b42e01c9da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e8bbf6-3a4e-4786-b838-e7104fcaf41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed514766-7615-4f13-9454-1969f2eeb8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68739b9d-325d-455a-8b92-fe33ffeb19fb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26a7030-5e43-49b5-8f1a-267a5f83f975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6151a38c-9734-4c5c-8b79-63ff196d9662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44051d19-629f-4f64-a835-bb0c405ff8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af990e69-140a-45a4-93c3-514e0275f95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fc0ce6-7105-4f6f-896c-cf3b494f8cf8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd58679-b296-4e6d-8e6b-762b7542a4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cc59bf-dddd-4011-8339-4a624c5de2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c40c1eb-486b-4109-9905-a816a331372d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de5fdf48-2b12-4f0b-b1fd-7bff8f544e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b204fc-c50e-4ccb-ac0f-0d7ec43caab0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958c51d8-ae8e-4104-9517-b96a682701b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa664f6-8249-4497-ae53-c29b5fbb3d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f77984-7887-4656-88d6-a0f33486a020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1226f282-5d4b-46f1-a2c5-540869008e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1ad08d-2373-428b-9b9f-b64ea3a97b00",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1bcd66-ee2e-46fe-8e5b-ab0c4ec7ad50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082f85dc-32be-4530-858b-5df4611e4ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d99c17-fff7-47cb-aee2-c8558e28bf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbf87ad-90a3-49fc-9fc3-18add8d90c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010f9f32-9317-46b7-9735-1d751b2941c2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0af8171-772f-422a-b24f-4fa9e5d55b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ac0073-3006-4adb-8b3b-a21da8596029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec835c73-3086-43c5-a920-5b1d2252094c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c53f62-186d-4ec3-b9e6-8254df13f486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b81928-0c7d-4525-a25f-700f75889b20",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef34dfca-ed0f-4e2f-b984-a6ac5f2e3849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a777af76-7d36-41e7-865f-6f7c81e01913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8f901a-5b5c-4b5e-abbd-dd7563661182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd3c4d9-9051-4f94-8155-4805c401af33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dd609a-5f34-4f90-be0b-aaa0f6bce47a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f56f7bf-c0aa-4d2a-8ca1-0c8867a2f345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd5a83c-1fe9-43e4-9d5c-710b185b96b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47bcadd-2118-430b-8c69-47ceaf4066db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6434fe-457d-4d29-ac9c-3eadb38e3f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96cbbe3-5d6a-400c-8f7e-25e26e3a3c9c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69e9da8-e0b8-45dc-a95c-84dd349aeceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9859f20d-03be-48b5-b3bb-a76220fea3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f131680f-7ff6-485b-b68c-c0fe69420a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53cbfed0-87b3-487d-a6c1-328eccec002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24446fca-8521-4dd2-978a-860c1954c20b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e12fa8d-bde7-475c-b44d-20e888359d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6afea2-e659-4fa8-92d3-116d73e4be58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7736721a-a51d-41d3-b02b-37b56a137575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30b597be-8209-445e-98ab-88701c690810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49e981e-f3a0-4e61-a0f7-d36ac5b51e16",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6535e046-a3b6-4c37-93ea-d67de413ad17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a8983c-49a6-489f-8a6c-b3dc1cab6636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54ae9ea-d223-4d90-b0d0-9eeec8d1633b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fb0509-518f-41de-be1d-9e2cdc7472ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c308d34-70d4-4f1f-865f-b943c579e50b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dedce8f-d622-4836-ba25-5110cae7a2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d7ba4e-5d17-462c-90da-3e599361d03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c7816f-c47e-4ae2-b647-d637403481f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b1c054-3e1a-4dd8-a9fb-ca1caf60f5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a867c46-f904-4403-b74d-d2bef247799f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e6ff84-ed75-4e88-ad41-97f20b18cd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6660d1b5-5c76-434f-8522-1e18aaa4d0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e5881c-935d-4106-980c-3bcc10aa50f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa999334-a5dc-4d46-9fd8-4068bdbd67b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4682984-cdda-491a-a74a-1ac4f8ef4c10",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c606665-574c-4f57-a0e5-535fad70d50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ebb8c5-e39c-43cf-a375-8a1bad9ecd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68ddd60-91af-43ab-a873-cb93d1485436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "140aa907-3199-4a2d-9ea1-536d68dee941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bba0fed-1531-43ad-bad7-b7136ed9238e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95c2087-38dc-4fec-a707-3b3f031f62b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47296792-f0ac-4856-9ced-4e2bda3772c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20197bb1-773f-4fa7-be89-ced9c37ad7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00eaa348-8abb-4b8e-9e68-ee5a464936a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff1400b-ee46-45ab-a56e-ef92e148ca05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0229db-66ae-4546-9caa-5f2f17fa8ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff7f7ec-f7e5-4020-bfd5-81ea27e72e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28558503-cbc8-4530-9964-c7a0cdec626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7515a77e-5f48-483f-8194-8375feab7a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ad069b-3ba2-476b-829a-517a7ccabd08",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9619d6-3e5e-4055-96b6-f912fbf21095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfeae1cc-43d5-4746-9fcc-c8787adea597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb29440-a0c5-4dda-8570-5fe6b25269da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "43e90114-b603-47a4-b3a9-af601978a39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5805ecd-b6ec-4337-b544-631c1f90c70e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502fa2c3-ec10-435c-beec-59deae6cf338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43735041-fe91-4832-8085-daabba24ded3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8123efa-ed50-4f12-ae38-934b3dae7c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d893b3-738e-4c2d-8b03-448e93e1be5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bebedff-2d07-4b72-ae3e-f13eb9c8583a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435f6631-c2ed-4947-86e2-ca9a0b6cd6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95072c8-76ba-440b-818e-7f395703bcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe7788a-b7e5-4e24-a338-f9cf179917a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b1c901-f3b7-4067-bede-2645c5e1c4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2de89c-608a-407e-967b-2d9f0586d0ad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a9a622-e22a-42ae-8462-bf82c9742037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbca345-1e5b-4346-b27b-ea0223c4718e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bebaf1-3d72-44b5-8b54-776ffe3dc0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1533d8-5092-4a1c-997f-a0632577c996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d604f720-a4ae-4ae9-ae6a-fb271c320b18",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e60071-3452-4b55-8a31-e5d2b9fc58a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8add1a1-672e-4a3a-ab18-1c6101d3dc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a9858a-7e4d-4be5-bbb6-970f19fcfa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c438dd52-d621-49de-aff4-942d545ae338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238028f4-f6ef-44cc-87d9-a93705721223",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c67b5b-0d4e-4ebf-aa38-391b38823de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa17f9a6-4e7a-4961-84e8-b60888a88ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48680c04-3e12-4600-b6c1-96b73d24e3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81810539-18e3-4473-8afc-6353eadcb1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55870e2-2cf1-4e54-867c-63c29b7319b9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9db116-63e6-44bc-ae1f-2aaf3f3a58f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a56b6a-c8e9-4531-8f0b-15989f4cafc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54575ed1-a6cc-4a15-a60a-a824fda52c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea61b288-0050-49f4-a4c8-0d77e2201343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d14cb8f-cc0f-4dd6-8129-c4cc308a04d5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c0d18d-3423-4e71-82bc-f91c597387d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b6fec5-1e0c-4aae-8898-74d5aa25262c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2ea1a5-4182-41dd-ba14-ba4a91b63796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "07574349-3f1b-46c5-b6ff-35dd534ff8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3465b4a-dda9-4c33-bfa2-c7f8fdd30efc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea61693e-6d2f-4356-878c-622bd7e52976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2287549c-cf0a-4daf-a62a-6b30d64e190b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6904e8-c394-4203-890b-a3722aa2fcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72909c51-0877-4a3e-b70d-5ae9e879f3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4429b1-82f9-4c39-8454-44aabf4b7285",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f524fd93-383b-474d-8370-cbb3274d30e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31590f2-0265-4d02-9600-b0bc70d67a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b23ba35-887e-495f-88a1-46c789f0c333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b6112e-b717-4b23-92b3-57589a1c3d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2613d02-e4da-4879-9573-a0789bf84d92",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8af1362-bb75-4b89-a31a-a5770e11dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d19267-4e5c-4378-941e-4c81d715362f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9ee972-e3e8-4047-be3d-c7b5eabd59c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02668c8-3bb7-480d-ae33-e168ec6ace8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb8cd90-1381-424a-ba97-5406fd6b1b5e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e9ce03-989c-46ce-99d9-762e9a92bd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6dc0d88-fae6-49f6-8b0a-ed544fc303de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542192c0-adbf-4955-9fa6-c1e1ba26ea74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7d3a27-5b60-41f3-bb70-99cfe054b433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505a2905-e540-4aba-a240-c20ca73197c3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b048bbbb-ebad-4101-8ec2-26e3faef8de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81a8af7-c1d3-4432-bb80-4e833ec3524c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b397008-af28-41dd-b208-6e85a3c9abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50c6d7e0-3c8d-4467-8270-b648d81e9dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e60fb89-9f48-41e9-a347-1cbf207b78aa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bb0cea-81d1-426b-88f6-f17d8e603329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3100554-a81d-4c5c-8991-ca286dd42d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2fb147-ac21-4a77-bd59-2f1e16e50975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbc43f1-8679-423b-af2d-5b571e15645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12adf73-4249-4fc3-a93b-16eb2611daa3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379b428b-b7ee-4cdf-8238-992a204a561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698c8fb4-5e8e-4c57-8f1c-ecf2faff4862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa04faea-cd5a-4642-9911-a368837419c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d737b87b-ea4c-4df0-963e-79bce5b23b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d848eb-155e-4602-9ae0-d3bd5a17fd6e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262876a8-791f-4a46-9176-6bb6bf66eda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd1fd11-2e4c-49c6-91f7-16b4d53140aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087c196a-67f0-440a-957f-9f542c1b67cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76882b79-189b-4ed8-bc2f-b4127ebe93c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b0a7c2-2585-44f5-9a51-de7ab01dd4c1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8fd48d-4382-41d6-8c71-687123c4e39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c09cbc-f382-43c7-8356-9088c9006ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59d5b20-9f45-4814-807f-0c1a332bc733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26074dc-2a0a-419d-89a3-ff1b280d440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fef0cad-f1e3-4ee2-87f5-112f2ac58c47",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8519611a-6f5a-4ad1-8306-1acf0635af13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9216d631-40a4-43d7-ad06-87cd498fdbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200b531d-cb9b-4cc9-a21a-61b358be6df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23347378-65da-4aa5-8546-1a3e4dc08a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b763f8d-fad4-428a-8d11-7a0f31e9b28e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93881f0-75a0-4819-b3e1-d909eeb8f6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74ea8f2-c9f2-4b83-9306-daa6c160142a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0f5baa-7ae0-4901-afcb-b1fabdfe9823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c69f77-3845-4110-8f2f-1e61ebb33865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebec865-e4f9-4411-bab9-0398ebd5b8e4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81e0c71-50ce-4144-bf0a-4864f9d07a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b989177-b35c-490c-ab95-52baf17e5768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4ed01e-76ae-4921-b173-0a0d5e618b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb91441d-d659-4f7e-b184-a99fa53734eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4503bff0-3816-4288-9721-0aebee6c8bb1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7be366-664c-4df6-93c1-7465babf2a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158732a0-e948-48ae-acd4-d06a449e73a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37011ce7-b64f-4042-a32c-2b11211402f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8859302-2b42-4ff4-af16-6b3e04a2b022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91fdb74-3506-40f9-9604-f15656193ec7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872441e3-e855-4292-9802-fa4a00d21700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4d4109-4b51-48b0-858f-45588a332919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e7691e-a6df-4234-8dc3-68323548cfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cddb8973-bdc6-48f8-8efa-bca1f9584936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e0b4eb-5e9d-4aab-b8d7-54899f5870cb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c68913-e4a2-4728-adbc-c7d5b70238ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b868d99-7580-44e2-828b-268d2ac03a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49cdd8f-1664-4f61-84ec-a5d293ab5856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62a4905-4c25-4763-8822-0b3c30557b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dff5af6-99cc-4598-99f1-9884635ceedb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3da0d51-bad8-431f-9da6-4cf76ac388cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e609d8-f5d6-4691-bf02-a31e9734b60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f510792b-a1e7-460a-8a14-beb97f2ac4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3168d9be-8f42-44cb-860c-3ae1e38cb9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6de1263-785e-4377-8861-e7647aa5c2ef",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6342be85-7fbb-42ce-8e92-b64e04b8679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78efcd20-f8f4-486e-9a76-7c3602977728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d717271b-04d6-489c-b98e-6119f9f91983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f63fb072-f64b-4209-bbcf-15083575ec3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd869c33-bb48-49f6-8b7d-05d5235de3c7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268e4ca4-33bd-4992-abac-b7bdd5df955c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a181db0-3912-4d83-9832-ca1f07027ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a613066-7c1d-4d04-9385-865a645825c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "974ba3e6-7b3e-4818-84ef-a4e19ccaac82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225243c2-439c-4976-8d36-5183f4fad7e2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757585c5-6814-46d3-8f5c-76cd29c52f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2948ace1-2c2d-4180-a4a0-ed277e6e6e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da96913-0e64-4d77-aaa3-c7b71ce91180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97d9decb-4545-4d59-8a18-b17ffc6f97ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528966cd-43ba-4aba-971e-73a128f9ebc6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b870ec4e-996f-4403-9a36-7368eeebb5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3813e9d6-4339-4cff-8c53-1967d7cf40e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde6848f-ccce-4017-84c8-001a6dab0b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8d2cd2-957a-44f4-8a07-20cbcbe42874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e2146e-bd43-4bdb-b615-de05c1cb3ba4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a6d5a0-f131-4789-aabd-3102b361373c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6e72ca-28ec-4b40-ab68-df72dccbdea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be74b3f4-1774-455f-abbf-6c04e10533b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99821a7b-b131-4ca6-a63e-4ae272cb6a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acd66f2-9787-4a1a-9ba3-1fe05d1726f6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaa1837-c331-423c-b646-8b0f93175482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4df11d-9198-4470-b687-133e4fcc00f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d31b8ff-5ae1-4070-bc61-aab46a56eb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f0bd7b-861e-4009-aacb-71231eb92f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c004a84-40b5-4f17-964a-53352dd4f2f9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7924a45f-7311-4d6c-bc0d-ec294b9ab64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b4fe69-c7c3-4f9d-b5e9-b9b9cea1fdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa637392-e5e9-4b08-a4aa-58dcf0f8e0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4cca18-2057-4159-a8e1-d5fe3350b40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c857467-c38c-468d-8f16-59a42f36c145",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe6fe3a-729a-4390-970c-46d74006db10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "97f2058d-42a1-4d08-9d4a-504731a83e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046cf76c-a823-4327-b677-4d409218c980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dad2054-a230-4c8d-9ee0-7a347bd84a5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1586f5b7-c62a-41ed-986f-587c0ceec063",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f543b3bc-72dc-4909-bdd4-e023cd958abd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d01c483-814d-45ea-a41d-d00d731233ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53b5fbd3-dcba-4050-98d0-62b78cd772a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb1826b-f086-41d4-a418-af2cede0db16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b7615bd-ea3e-4b62-b6af-b6a5cde2c2ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "466b6821-2ebd-45e0-892d-d676143e1978",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c58b9dc4-a1f0-4477-8962-550e87ec1329"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ea9e814-5a6d-4c0a-8a4b-c8f82ffc091c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1c407cd-2e6b-492b-87c5-9cee73956d83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16114fa6-136f-4685-a252-df7cb5bacf00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4922ed14-21ab-4f5b-a3b9-752eb1f0c8fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "88f3a5f3-3807-442e-ba95-69687d189f90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7aca03e5-201d-484c-a9ec-ebe72c323022"
                }
              }
            ]
          },
          {
            "id": "34416f3f-3f51-4e3b-bc8a-50cdbbe38ada",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b0cf179-bdcd-4b95-8f80-9478058213fd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d34bf44e-2f72-4017-b0b4-7f1af0533509",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67260ee1-d6a6-43e1-a95e-2bada11a4e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ca599778-8414-401b-a3b7-2dba18a5419c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2666928a-5df1-49d5-b18b-6ebe77c0392b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca70715-1afe-4414-92cd-1458b4e31897"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "253292e1-5549-4010-ad5a-c66aa8db8bb6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20514856-573d-46f0-8204-3cb455353337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e3b1c4b-4adb-4ca5-9595-435f50a05d24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3943867e-9bb9-47f1-a656-05a4086036b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee7e4e7e-d96a-4383-a866-b47c7b879791"
                    }
                  }
                ]
              },
              {
                "id": "f5192682-7ed2-486b-9119-cee654d0bc37",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6162dd4a-f7fc-49d5-b30c-2c6cead1f09d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "825f7a50-6437-4bc5-8dc8-ae35d0fa0b4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0c06ad0-6497-4c89-a7b9-24bc1896e405",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fa4600d-c8d6-4cd4-9af7-dc17a61dee34"
                    }
                  }
                ]
              },
              {
                "id": "860f0c62-2f97-4c1a-8c6d-dcd8186cc459",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "530308b5-4dbe-4510-86dd-fd2485a2e92c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de948528-2097-48c2-ac5b-5a18f2ce6984"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b4912ad-77aa-4bfc-8e73-1606a21ff737",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "acdbe3d1-4295-4fff-be92-d7203f1d4de8"
                    }
                  }
                ]
              },
              {
                "id": "a036390a-372e-47e1-adcd-a00cb6bfaf6f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "529141a2-ad9c-4d4c-a1a2-fb35ea80fa6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e62a8149-c81f-4880-8adf-bdb968f7abff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4006793-cef4-461b-bfa7-d3b01a8b6dbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2e0fec22-1ad8-46c2-9e98-138d621f3e3b"
                    }
                  }
                ]
              },
              {
                "id": "911f74b9-f975-40d4-bed9-a3c5d5af3f3d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db948f5d-f744-4cd4-a406-99ee2327a2e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00d1b264-0a79-4ee4-9d42-f9ce414f76df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e16a667a-0e70-4e52-9704-35b010abe64c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "139a82b2-e289-4935-a6ba-4baf08d75603"
                    }
                  }
                ]
              },
              {
                "id": "aa480c01-5189-4135-b59f-10334e41ea1c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8f02dc3-72ca-4785-a9ec-09627711a791",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa5763a9-2b5f-45a5-b3b7-bdeea48c6b7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ad700c8-b64f-4ee6-8629-4c5eaa11f45e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25fb2dcd-4c69-4cab-a726-2e628664ebb1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed15a106-b57b-4fc9-81a1-85b9c491a7ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1754623-55a8-4bbc-ac0e-343153402321"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ef4ad3e-2e30-4c62-8191-1265d6343754",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f75caddb-2cd4-4b6e-b553-81afdbe60fa2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31b1254f-6901-407a-8c28-d48e0d853e10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f6dc96b-6879-42b1-a0b1-f6a21e6c9c6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a318582b-cfb1-4cf6-b967-a1965e807776",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18218a1d-498c-4df8-9f0e-2307019f0f93"
            }
          }
        ]
      },
      {
        "id": "41817471-9508-43d9-bb13-8810982610c1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1570bad4-e53f-4cc7-8083-efa515091dbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3da5a499-b42a-47f4-83ef-53a7ece97fe7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ecd16be2-1939-410a-babf-8f2ab3e24e5a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf77930-fdfc-4d93-ba01-84fb59ad084d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbe3762-c743-42e5-a801-810ffff65684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1be81c6-127e-4eba-8961-e7da063ea0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cb8dd0-2bb9-4865-a29d-f4f01f1364da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c827fba2-9ed1-4657-93a2-bc7fcbae9e3d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abaedad-5b76-4c3a-9539-5c127b565c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74dab3ef-7ad6-4b72-947c-4599cca58a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcfdb69-755a-463b-8b35-e4c858b889cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb6f932-87ad-48c6-86c6-86ad7929fd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e45a374-c35e-44f7-bd6b-d682879e8213",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a953187-4ecc-489a-aef7-71e0e1eadabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48612021-8a31-4fce-95ee-60c12a043715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67081068-1f95-47b6-bf66-0b659305cdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f60b4d7-9586-45f0-8c4c-79697c48841b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9309fb-2ae9-47ad-a155-9c9146b3c6ca",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab744623-7e4e-439b-9c3a-960a91d1e003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9fbbd5-7b72-4f73-bbc9-74842cc5eccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fee870-a83c-4340-8351-b33f856fc3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64547fbf-51ce-4547-9ea5-229eb131e021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de989df4-7218-45de-9c81-316021fd1a8b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace07e18-27b6-48b5-af07-e2e6833cf025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e18300-8c99-4f8f-b242-45b38e5b589c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a1b039-670b-4364-8b03-04e6452bf6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "941e3094-2079-4214-8a40-add46b0156dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a854edb-aba4-4e9b-91c7-9ae721f88658",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b0a4c5-d0c8-4a1f-8560-c8ff9ba6c427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c40cf2-c93e-4ade-8664-e63df5213418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2fa3ac-c1a3-43de-9824-2bf1010a00ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "914db590-6270-4742-9040-edc674cdcf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79ccc79-36a0-434a-8d90-82e5804b1acc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45356be1-72a5-429f-8375-d103681d36e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f10bde-edaa-4735-a605-a53eea7ea5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a5135c-226d-4c0f-a8ce-bca11c6b1296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "281b9e05-7711-4f33-b2aa-5898c00afdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179ad14f-dd41-41f3-ac90-13b0a37a8331",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3d5226-93af-46fb-b68a-69bd929d8f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b724554d-a880-4934-9c9f-8bf09b0d40fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b20818-823f-4dfb-b5f7-cc76f21526e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaafb24e-a359-4e29-8dcc-0de17a6e13d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0b4a8e-310d-4f0d-9697-82f86b10a42c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f6a77d-b8e9-45de-b376-4aa2ee97b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea001111-9162-4585-90ad-5cc73dbf2dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d702e97-5226-4c20-b3cb-0711abc484d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93de4719-bd7c-41af-bd81-46b080bcf6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c3e30f-e03d-4356-be59-34ea968f93a3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750b719f-4ecd-4e0d-b812-0b2fcb0ed3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a32dbcb-58d5-4969-a017-0de833245cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092e446f-df09-4f31-8562-79b936a7b177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2f0a62-72c6-4a62-9147-b5a6baa731a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2881f321-fddd-46d1-8f6d-6aa74eca715a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e672532-e35d-449d-be74-bd8d233c4ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc7dfad-5456-4bd4-b4a7-513f783075f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a7ef49-857a-4e87-9845-d1fd0fe5b0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e11066f2-fe07-451f-8f07-94f84782f765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758a6402-e011-420e-a904-ccf41cb96224",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58a67ea-9ef6-48d6-9794-52ef922d70de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851fd38f-a63f-4fec-b2cb-6c302c92ea3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7401758f-5f07-4e10-8e58-cf26fce3876a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28b047ea-c9a4-4a15-8dd0-8d9ceeaae906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a25197-60ef-4e31-a0ab-cb016fc32bfb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ccd1d0-86ac-4fef-ab0c-3575896d58a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a096460a-9069-46ef-b6ac-b7d0a7f666b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344c983d-3e19-474c-9591-07a50bcbd0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49adb0db-812f-4601-95da-3af53a83ebd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d0209f-d6bf-4498-8b83-612750fc2646",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fe1398-07bd-418b-ab98-b1fb41a6ac73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b013ae6-a82e-4594-b14e-df06c11cccf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3662df2-142c-4f9f-92e4-a896d57a0375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "473cc036-872c-499c-816a-833f4b8f138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71028851-8c51-4fbd-8b43-e67e91358735",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b014fb9b-536e-4999-b6c7-b971ff1990a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2369885-9734-40f9-96d7-f167aa294ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92613d2-0235-4ed1-b791-48da4c948770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f016b6-4f34-4264-ba09-9ad359d50f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5353d654-2cb7-49c5-b57a-0484ef7e1517",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f710dc98-b0b2-4913-9c5d-0db2c3321410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d7ba5b-26fc-4444-ac68-2aae5fe4364e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02da83be-9901-4c92-8077-943bf3096d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e5cf23-85ff-4eac-a4a9-c46699142471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebad95c-ef76-49a4-a252-70e112d74609",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9211e438-1665-40d0-b7ef-7b1c629cdb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed1ac09-a5a2-49ee-98da-cb9b9e39db77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2507a59a-ac9f-46fc-ab50-5065dff8b795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aab0e9e-937f-470c-a6d4-4bd55dc965c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a52e598-d8c6-4538-b3be-dc7091f87b44",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adeec107-419f-4a87-afb5-b4c9f5a10a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b390e68-ed02-4f79-a8d7-7ee64ef857d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd05bbd-16ee-479a-b25f-86a48f9dc6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7846ccd-9b99-4551-8332-fe28bbebd8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460fb21e-4767-4ca6-bc9a-b1417beb1740",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df5effc-104b-417b-acfe-3889f704615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af667a90-6e1a-4a8f-b73b-b01abfcb3246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aab7a71-ce28-4efa-972d-f8f2f49b6f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a88352-dbce-4539-9447-bf5955f8e1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4635f7da-e85f-4506-96a2-dfc62e683c7f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f8a927-07b3-4ef8-a425-699735eef6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5518829f-9e6d-476d-9cd5-6ed1427abca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed55aa8e-1ef7-489c-b96a-226fa1e0ed5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae73644-a134-40e2-8f01-d5120c5ca006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6439b77e-7a0d-41fd-befa-2d07cde5cb69",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c8be83-1f3b-4c04-ab25-0a94fccab17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb953ab9-40e6-4811-8266-e283a8aca24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca27864a-25a9-4f8c-a65a-07918f0b25c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e3292a-d7de-40fe-bbfc-c0c0ae1c3665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931b6336-8186-4aa0-9382-ff99fefc53d6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060d1af5-4416-435b-b7a3-d2c7a6d6eb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6c1185-7ce1-4a6a-be99-6e5b7a65001f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de58bb04-a453-4b3b-b147-9adcaa7285a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11463bfe-1d8e-4dfa-804a-3c63cb5dae2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc37af29-9bb8-4a56-9c55-298210a795d3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47649e77-7550-46e2-893f-f62f8cbdc86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2172235b-1100-45ae-95b4-fc9a86bf82b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355bb8a4-53e5-4e0d-842d-bfdfe35cabb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11eecebc-82ae-4431-b117-500266b6a8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cc5a91-7be4-4a6a-9ba3-3dc00f6a3586",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31485aa8-3fb1-412d-83c1-7d6ae80eb29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31efb904-0ee5-4387-81d3-45e94f1b8eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5283185-535c-4f0f-be2c-effc792c11da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdee80b-f54a-492a-a843-4afc50f22640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d56370f-e46e-459c-89e2-59c28a741f1f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ddda30-bf35-4284-92b5-15d92632a613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2388b2a-d28c-4b28-bb46-6eebcd9c24b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd14a0d-c055-4dfc-bf60-980dbed7c50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26010b4c-5519-4b1e-864f-5454ae609b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d44be4-49c9-4f82-96af-f61af8a45024",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02f893c-5eca-40ad-878f-54254ef6f8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b625af1-3541-495a-9ccf-c98081f180a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4155f7ae-4861-4cf3-93ce-247f6a88b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76d41a1e-17ca-45e0-9253-dd8aab7d83c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85998e71-b7d9-4c84-aa04-982682025ad3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fe12e1-125b-42e3-8f57-cf14150f7424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0da29c-7d75-43ac-8646-7dbb561fea0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0172aa-ccc5-4674-aebf-b44997a519be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af3e977-4739-47de-a146-22093766ca3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440eda2e-9f89-4ea2-a845-1d5e45f6054a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48191c4d-46d5-46ee-9c24-55e208ee629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f95eb8c-7ee3-4db8-aaf0-5ff393941033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5ba6d1-03b4-40e8-980e-7387793f7f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85f0746-038e-480b-9a1f-729e338bfc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fc1ecb-92c0-4863-94f3-09cdf197978b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613c82c6-e580-42a1-ba21-0a29e71c83ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcff8135-980e-40e0-8648-5ec224ccbd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14655cdd-9f42-42ae-bc34-40103b517dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a38004-fc23-4990-bcc0-6be7840658c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34bc02a-bea2-4fb8-910a-4c17a60287a5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0beb924-66cc-41f0-a87a-8aa7b55f833b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bea603d-0178-427a-a1ea-ad87b19e1720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89da3190-c812-489f-bd13-a4551063adc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bea6c477-778c-44e2-9491-693b51a8de02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648c44f7-bbd4-4cb3-8780-2fdd6febbce9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9e1979-eff0-4010-a602-d09943cac93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee0c1a8-925f-4a8f-ba72-40b00fe0bf0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e654e482-5903-4d84-bd95-a9d629a72de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18408ef-9839-49ab-8618-c9ca7a149a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c2f3c8-8842-40a2-8b5b-3bb2ba4a74a5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90433553-8660-4e3c-bcfd-61f94e97b22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d194e513-7741-47dd-898b-748700872bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2396c5f8-bbcd-4677-adde-444d4d3f0fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56efa755-dae8-4392-affc-96124f9b9bbb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aba3df5f-22d3-43a6-bc6f-7e47fb74ff29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8778b56-6d94-4c52-8369-73840af01b84",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898199b1-b4ff-4c02-ad0f-9a60649c3964",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "54d56e4b-5d4e-49fa-87ee-bb3576c7e737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb29592b-1ef6-459f-9591-ee0a013d6f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea8784e5-d38e-46a4-8698-ef7c049364e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "574d102d-ae4f-4acb-a86a-049f9802778c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eb920ac-d514-447a-b3dd-74ad2274f4d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "801c7306-8fe1-4d07-9e9f-0eb4c26065fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b62f065b-156b-4c0c-bdeb-16c88e500ad1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "579fa9d7-7e73-47c8-8792-0869b32ac781",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b8d007d-2b0e-45a4-86b2-03cc9f582145"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26213302-f2b1-49b5-aa7f-43847cf38af2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26a3cb4d-793d-4eb6-8ab9-d0e0ff14270f"
            }
          }
        ]
      },
      {
        "id": "87ad1482-da22-418a-bdd8-7fc3004b8b1b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7d480d22-daf6-4e8b-839f-7eeedec68ecc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "437898f7-1393-437d-9b65-48230e9f64e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36cb822c-579a-4a4e-93b6-80cff2c90ca6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dac9e1-9392-42c3-af57-b2c5e73a359e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7846d4-d556-4ee1-acca-df9645a992d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ba69f3-d1c8-43e5-aa3e-8b663237c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f782842e-1910-437b-b3c2-01212d5cac37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e19c0ae-68e6-45c9-96a9-7dfed25b8aba",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bd1be3-ef71-47bd-b921-5ea1453e8310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edb9850-de5f-4539-9eb9-0af20e0e7382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70c63db-341e-478d-92c5-6d4a401f99a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89396fd9-b2aa-426f-a9bb-c997a4285301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7f3fb3-56e1-48b7-96e1-a018b993ae01",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320f620e-be37-4442-9114-372de859ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c526500-869e-4f06-867a-3e5ba71a0125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230202be-a865-4f6a-90ef-3fdbb241c6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a88e6db7-fb1f-462e-8458-d718612a8702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24bd974-267d-421c-89a5-23514c0a2457",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50106515-7637-4ce2-bc5e-d81eeff2f86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989a5d2e-8d21-46b3-b404-6979bbfedf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b8066f-29fb-4628-97b3-219ab32bd94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecda2df7-d8f2-4bff-a75e-2dcedb4a7625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d0c97e-6de0-4b77-9782-a36636cf4588",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271d0a59-3256-4107-8063-912a19668159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60c2715-31b2-4f9f-a4b6-7ce4d664fc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dabcd82-be31-4e93-bc4a-9de19d6cf954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db7c346-207c-46df-9ad4-b6aab55a82e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5d6a7f-c58f-4fad-a9f5-95d83adecada",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f600f7c-01d8-4dcc-b0ca-427bc7dd96c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfeffca-7b70-4104-9176-d6fa18839d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd02c3f-cc49-43aa-bf5c-250cad4697ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6646254-1511-48ec-8ed8-539fcffeb14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067c1ba0-c9dc-4bb6-82ca-3ade18b58748",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfad2938-5c05-4ede-a527-592e3dedd4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcbfc9f-6e4f-495d-a672-2acf3c666bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fde07a-6af2-4e17-9f6b-c2ac2b79d37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca30deb5-5a55-4ec0-a2e0-820278736c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1fd4a7-7a4d-407c-992d-c7ce316819ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a811c3-ebc2-496e-a4e1-443b6fee2315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893007bf-f3e2-4a51-b700-c69d29cba53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e5a7b4-e64b-4600-97e6-e84ec60d2610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7252b8-b540-4380-93df-1b9c90452a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb9e41b-e650-4108-a147-e4b9269118f1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d386e3a7-3468-4305-a92c-2171383058e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfc6e35-2850-4e00-a468-f16290bce6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf2a334-b264-4f66-9dfb-03a19fd7c3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7515a1-5d19-4a14-9e3e-683ef915e34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e47cf30-31af-486e-82b4-4e7eb4fffeb7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abf263b-9495-4323-9863-2af04dd7e81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b59adc9-314d-4231-8ee6-e696637283df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09559a9-9a86-4358-b78f-8dc1274a7d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe7b5d6-b7b9-4cdb-8f2e-7f1c98c2e953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636e7ab0-7249-4dbc-b299-d57951b23dcb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7638937a-cbf0-4b13-aed0-766dc6045844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0dc04d-43aa-463b-975f-823deaaf2088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1157059-65e6-499a-9a3e-676586796493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dc155597-d838-4ddf-87fc-dff80cbf6557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d38a63-ef02-4a8f-bb09-9f7239bf2331",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0df234-e269-4b0a-9b21-441829fcf4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc79d0c2-9a20-4e49-8178-2f75ffc05ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbaabdf-b486-49db-95e2-f544c754e313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b9d42c-08c4-42cb-9829-09b5c5d36e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e72c9a-ed05-402e-89a9-7cd9e291dba6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb6e394-9d54-4f9c-99e6-b73643bf9f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e962ee5-ab82-4d07-ae7d-766a2ccb2ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce67471f-f6db-45c8-bd8a-f19dd485c702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b81339-fd45-4102-8113-1a7a7348362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4411592-4766-4c09-aed1-a366e0af8a20",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4e136a-3067-4e2f-9c85-1e5078e42513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f87043-2d46-486c-9c55-abf009bbc037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f3387d-3f7c-4e6b-b8c0-e5be27188e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b684ddf-b508-4c39-9896-cad248ca8fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63247b99-c652-4fe6-a62a-6ad20cee5fb0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5115cb-68b7-48a2-b5d4-f783f2e159c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e894fc6-6bf9-408f-81a2-f536662153e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18c0338-b6e0-4daf-98c4-5a97dbb3ca9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "18aaff6b-9c1a-400b-be7f-982b152d8b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac2593d-dc6f-407b-a991-01cd6cef4a35",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dad18f-760c-4937-b22a-fafb7c0c7db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de60283-8428-4ae4-a953-8950b36c2f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcedcbf8-d859-44cb-a2ef-070b1c9f39b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e37977a-fef5-4cc5-a6fd-01c2288b4aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a14109-3397-40f0-8ae2-be192f5a341e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee44946-afae-4553-8901-25d5d75c8718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d00b6bb-b69d-4220-a5ea-dbdd080a6f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7239310d-6648-4754-9fb7-bf928bc7e7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f51b10-a890-4479-9c43-b903c8e70d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fbd00a-d6b8-49a4-a3ea-588e7f651dfc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8fe103-e7da-485a-8c67-c97eb4a04ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36875bb9-e59e-45f2-8240-3dd8e33072cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811fbb5f-cae1-4e82-8c43-bf6aa19ad926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8ed3b1-7a41-4a45-9487-679875859b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217891f4-b868-43ae-9817-409c2b6e2cc1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4e6d71-30c6-42f5-bfa3-235eb9c48358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2a9dea-5f38-47ac-888c-b0be16ee007a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9f8ace-e87b-44e2-9359-43b73eae58dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e459cb-1b39-42d1-8ae2-c470eb2a03f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095f2c18-c32b-443d-90dc-4d1c74915716",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e27aab7-da77-453e-8942-8d2468fdd0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7742f6b1-9a63-4507-8515-8a897240f8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058c47f0-a36d-4ac3-a864-762cbe0c70ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1e8ee2-1ebe-4423-8f98-936979d8acc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c39725-638c-41db-8833-629f741f8ee5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227615f6-bf51-4bee-8d68-037ea1f19a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d341f3e3-fe26-4cfc-ae6c-d43ece32ed2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250a91cb-8897-4e05-a52c-b9c37536665c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1218f21e-d159-4af7-ac18-2ee72dd45655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7795f26a-051e-44d5-be5f-2cda49a08b3e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13152dc-f72d-4111-ad4c-5e74fd650cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992ef74d-916e-4e29-9ca2-d96093a28909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6c71bc-9b97-4e7c-846b-0fb1a463c972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1c8686-fb63-444a-b0f8-5069507d5299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5093f5ea-1e68-4ed8-a5fe-57e6bcc61bde",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b30f26-5287-4734-a812-3bb81b66c066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5aa15a1-5cd9-4da4-9c01-482c71d608f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35ee513-9886-4502-a0f8-f298278340e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e8556a-ccc8-4b89-98d8-e93ff88c79d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64331ba-249d-4aa3-a0be-bb7eb683abab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e723e009-1e60-4bf7-a231-101789c5f585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199c7316-8d6c-4bdf-9736-389fd808894f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4903a650-6dcf-4f20-86c5-6f85ac6ca8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "869766a2-ad30-47c3-93b6-31e44b71902c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4717cb74-8fb2-4472-8e17-8369110f4ceb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4862623-fa06-44cd-92f0-a200eb422d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca82dd4-af20-4e4d-ac09-ca0b76377b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392a35c9-8ec1-4861-97d8-343c8ac9ad9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06971407-f705-414f-98d7-4b0da781f9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa34528-775f-43b0-bd6c-64184cb1bc08",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cce9ab-fdfb-4668-9cf2-43304ef3aecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199cb0a0-4845-4600-9d01-8c7f4085ce43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cda378-8ef7-4fd4-bcb8-738e0d79db45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd562ae9-7b83-46e2-8d18-3577a58adf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4d41fe-4e21-4b1c-9842-f36a5688984a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a81ed6-2a66-412c-830b-434e173094ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc0d306-1ec9-4e98-a3e4-fcd354d8e8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56252c9d-6a00-48ce-844d-cffae7d11ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "716321c2-e937-431e-b9b5-ecc4f859203c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3258f92-48f2-45d7-8856-289a332f29e0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf415965-eaba-415c-aa48-8dc7229c537a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8cc193-ae00-4d21-bd02-7f21626bebbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b0db64-104d-4389-be7a-4e009766edb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "707aded8-54bc-4aa4-a4c7-38d260c2b3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457b0bb5-a745-4eb7-82b2-bdcc50161870",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a87344f-9e96-4bff-8371-a4ffbf01e920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a044c1d-1daf-48fa-a8ae-02f5e67ac9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eef5df-a0bf-44b5-8935-0c79929e088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e30928-9339-4995-b3cb-0b2ba19036e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ecaa12-4899-4045-a5c5-c98f80475643",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90942362-4767-4938-8b81-14109800e0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f95c199-0421-4246-9a46-2f6ca464671a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07aa08e-285a-41ae-97a0-0784f5d095da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ac0ed9-ba13-4a26-b4a0-074a2bfa4ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f73dcce-4ddc-49a3-868a-1a4d08cab771",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98f1dbf-fa7e-427f-817d-16e95ee4a83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9520d82-7027-4f0e-8f2f-4b8a3bafdda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062eec16-7cc2-4bbc-808c-b3eed3ba8ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b339d2-a5ba-4f5d-a62d-32b53a808c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7ef2e4-df84-41a9-a71f-6bf8404021e1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950fa509-f4b9-42a1-b6b6-52f9648c98bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956e660c-0cc3-496f-a4df-8c3cc9084314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e75e4ad-a35b-4b41-89b9-0fc6b093a7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e78f330-f13c-4ed9-a04d-0cf9e98e57c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74cc7a6-d6db-4081-a357-d0675465d9aa",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e35c02-2aa2-4185-9500-82ffebb9038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7e7c3d-3681-4ce7-941f-8e52f7ae2828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95cdeeb-ff28-41f3-ad93-8438a93e539c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "302fe957-b1bf-4742-a3cd-e5c5e882199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e6c22b-4cf2-4586-8126-573af3477717",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ba27f9-bd7b-422d-81c5-6e23bf2f8806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919801dc-0f0f-4f34-bacc-f8d9914e6c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e95e55-a201-41a5-a439-800721e5a34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b3aa52-b720-497b-8a20-6724b144bd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a88801-06c6-451d-9e21-f78970c16473",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4047131-911e-4841-a868-8aad06d49c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68a46c8-17f5-46bd-ad4d-595104c0213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3022d97c-b241-42f7-8d17-49f43e381fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "616f1cd5-7aef-4fbf-8ebe-0e8235a3c368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa2ae27-2130-4fc5-9b8d-3d29e1889f9b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c107c33-f7b0-4300-9a28-069bbe65ca38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8b0d7a-9b8f-4a5c-a9d6-2c1ecf080a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af643f4a-18c1-47a6-ba5a-efdadbeaf750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71708b98-887e-4be7-a3fa-1dae73f3bf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c620fd8e-c03f-45d7-9425-392bc7288c50",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a0d47-6210-4f1e-b2e2-a5cf7aab6c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a963ea84-80e5-48cb-8f86-4ed8356c3d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add25534-887f-450a-95ad-8c5da3ee1ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6250de94-543e-40ab-b2cc-6efe068c6ae2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fec8a1ae-9c58-4335-90da-8ecdb756a2af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ab0674f-6ed9-4673-990b-887a0e9775db",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f0a77a-51d8-4f39-b114-447d370bdf75",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aafc1d8a-f133-4c67-a1c7-2d3c186465a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96c0599-4833-46ce-9d67-463ee9066f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1f02e85-4723-4de8-9f8f-c2fb819055cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5891c88-d74a-40e8-a90d-32e6c6e4949d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c19432b7-69cf-4141-b4a2-c2e3e29c59bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aeeb956-3bb6-4b7f-bd34-44d3a1056061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8379741-7c73-449d-8dda-6e9277005f8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1ba5c05-44cb-4567-bc3f-5cbc1b9523de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55e04322-0418-4202-9959-0457fd186a40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a1798e4-d6fd-4838-9a17-785527bfebf0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a782d98-7ede-4bf0-9dfc-d17f6f8880f8"
            }
          }
        ]
      },
      {
        "id": "e17b3137-b95c-4416-a359-b1fc34db0cd1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5d961cac-9834-4de4-a01f-19104732512f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddd787c5-2948-49d4-bd5f-177e2d609cb4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "960bb5c3-5ba1-4c51-b4d7-63f1685254e0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e43bea0-195b-4d1a-80f0-d5da8d0b6239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93df387-98e3-45ca-ba31-4ed6f3649d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156fa78b-3207-460b-b0a5-18bc88e24640",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a58206-b580-412a-b785-93bb9b061c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f30253-9f53-4988-981a-cdd947e9d9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb9c0e1-1df9-4ef2-8c98-7c85c3175563",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2037b82a-d470-4cd2-b6ce-0e023f904aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd73ec5-3a4a-482a-8ba2-a1d20b63693d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fc6b86-e8f4-41d6-979c-00007bf0dc5d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6a332f-e808-4ca2-8ebf-33c448e503d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04c1b33-59d7-40c4-a7de-8917f7e3ef9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c831c336-7b93-4c02-b2fc-044b63f30776",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736ab4f9-ede8-4661-afa2-208af72f5105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a115f14f-fd53-4a2e-84aa-12653bad1786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc9fd17-e39f-4773-a796-37f132d4ca54",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e9dd17-29cd-4f9c-8ac3-3bf1c929271c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cca94cd-823c-4a2f-a03a-7c4f8ba0ecbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e44044-4794-40ff-990b-9762d1455688",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501c2b60-4dad-4625-9468-a70dcba25a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9cf264-a6a8-4ec4-8b82-fa4d1c5bc0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5db1319-1986-4471-897d-131652d3bc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56701310-63bd-4835-993c-5a8d5781dcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9d78b9-a281-4198-814a-0316974a2dff",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2362e013-6021-4511-b532-9c64faec05f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49828bea-7316-4198-8177-abe5ec6e3e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a1006e-765c-4de7-8674-fa5ad9ae01f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6218ca76-2b29-49da-9acc-2a9372f2b77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cc573a-5d07-4689-9361-c55744c1d596",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0165fbb3-3b01-4779-926e-5ce493dd4925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d0a5c9-641c-4a97-ad8f-47101043560b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f141ffe-aeb1-442a-a434-f6ea090c7d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa1abe0-cb4e-4575-ad48-2ff43a309700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434ef001-b7fa-462a-9d24-8991946c9916",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f035ef-50e2-45e9-a2bd-d995dabe1545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e1f1de-db5c-40bf-bd87-362e38a93938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c205f9c-e4f3-490e-bbbc-e6a7bc786c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6128e697-e088-4c36-af34-97fe62c7613c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d382284d-59dd-4433-a0b5-23bdb9e224ce",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4107a99-f96f-4cb0-b169-c4484b135e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eff6af6-c920-4aa6-b378-82fe10517367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f436e94c-b5c1-4aa8-a65a-8694b5178faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8e0b67-0942-4218-9284-f9ad5f1860ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294938d3-190a-43d9-85f1-dd1575833070",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e439d45-f956-4bfb-a221-0f4fa5fdc6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30aa8ef3-aedd-4d67-8b50-224ad5a21209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09795749-314e-4f04-8c6d-f2518d039ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5f83a7-9801-4f2b-9f48-3d92337b3516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf67d7d-74ea-4542-a8f0-63468c01df4f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1932ee96-ffa7-4e00-9c90-efbd71c4151b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53efa51-189f-4f5f-85e3-d053e7b5689d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945376c0-b7e8-4cf9-8582-9c01e984c978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b7a6d9-526f-4973-b365-deb05667cd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4493e20-543c-465d-95a2-947c50815849",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7efbf1-5c2f-4228-96c5-2717fa389890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fa17a6-a72e-44ed-86fc-3642ebecd8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8012bd1-883c-496a-8656-c85d53f90ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7f39cb-b80a-4fea-984e-74288429455c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1c899a-d1d6-4d89-9f68-672236420ff4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054c7f27-360f-42ba-bff5-b64c2d84b82a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a12f992-ba77-45b3-83ef-3691891358e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28942fe-11eb-4775-b185-b704065d290d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3623a002-265f-43f4-9eae-8a729d477cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58b9c7e-b2b2-4003-bd06-875c977ba5fd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b474935-d9bf-495e-b0b2-0101cd147789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3556bcaa-9886-46af-a2e4-59531dccd524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca71d45f-1100-46d5-a93c-643b08fe0817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2298bb-7aac-4c77-b349-a34f97f5f120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6a8b04-fe66-4a87-896e-fb21396df867",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f127b4d0-3e86-40b0-8943-095ba469b1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be8a01e-5fe2-44d1-978a-c139fc445277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7990efc7-ddd0-45d6-991c-bbca32c880c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787500ed-da11-499f-a1c8-5e2a2a16a957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4f4b13-c857-4c4c-8c39-5059e5c12c91",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70711b76-fb1e-488f-9912-b69632c1f276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476569e8-3186-430a-86b5-0da1e4242019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f42d7d6-377a-466a-9902-dbfc992785ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e12bd1-acca-47da-ab83-e4e9dbacf5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f4ed27-c4ea-4fb1-9aaa-8e04ffdd6049",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddd3eb2-fdbb-4529-bc46-1020768772c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e762f21-a706-4059-99b0-aa778c2514f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52453885-2472-43d3-bf18-4eee4b9047dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c83fd1-a032-4413-870b-044be1adc297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038b4931-ee6c-4b7e-9519-c7c145a28713",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a1b12b-d65c-4809-b770-bfde5d285564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a222e75a-9e7f-4690-ac1f-8b5009128d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffe1010-ba3d-488c-9fff-4420c3fe0561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d848be77-9bae-4538-ad29-931016df9458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf064878-c6e0-407b-bd06-e6a7d0bc67a5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b318bc2b-89dd-4703-a1d6-b17d51e53af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a993124-037b-4000-90fa-37d6ac266b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d746a824-77e3-4394-ba28-0d9bfe8554ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d7a74f-742f-4ea3-b644-dd6c095bc076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c072df-933c-49d9-bf94-bca535e1c0a5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ae504b-2ba0-4737-989a-53bb95b5fce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0242c5cd-b3a3-4a12-8223-1024040b8cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fd7984-144b-4b12-8ed1-21beea39169b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0d3df3-0bc2-4ef3-8ca5-12e72a15aceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1290fe-f8d2-436a-9c9d-3bcfc7fa6138",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f64e4e8-0180-4a22-ac21-2b7491bb51ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee79417f-8c24-422b-98b2-cea2683caff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f73438-5b5c-442f-94f8-81e75b5d00db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f287b3e-24e8-43e9-89f3-8e70c49a500b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709c305d-e37b-4680-be85-0d5aa16e711a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b017936-1470-442b-973a-7f1662f0d5ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1e322f-84bd-4b16-aeb0-09689f197371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae506402-0598-4836-b5bf-a9475d2905c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3266bd6a-5797-48f2-83c5-66f969f71062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37860d50-43a4-4d65-ab25-abcb1308c1f9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce0c13f-ce54-43da-99c7-d09853d893f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4410ac05-5319-4ae4-b496-56f53058d920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e3eb63-b18e-4324-af96-9345999949ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8677adb5-442c-43c0-9f3d-12f5d66922d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffd9954-0fd9-44a5-b56b-78099391d19d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4197666d-e437-4c2b-9c7d-a256097e80c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ded2c5f-ee78-4517-9720-af56deab4fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ffee41-43cf-4f8b-ad2b-06c6200318b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f542db76-456c-43f7-bbac-1ef576cc297c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faca3c3-a2a7-4a9c-8b6d-01251d368753",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227646bc-1ae2-4da4-8a63-3553a797f3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ff8676-6a2c-4e91-b2d5-78b990e593b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f64c78-7862-4fb9-abbe-b50a39a0080b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59236483-9779-4ede-af0d-bf42093947f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed350886-608d-44a2-a75c-d941cf5b0988",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9756abf-de80-454e-ad5f-8599fbfbcf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9ebdc8-9641-44f9-a3be-94cee5b9197b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f80912-b998-4c98-846f-1af735d7d348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fba1d6-b91b-4440-b70b-0cd8a2e4ab0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba0fddd-bf38-4d55-9a78-e939dc4f1f82",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb5e6f3-bc1b-4801-8bcd-e80591879b5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aefbf69d-59cb-4bd6-9ca3-1556e319d032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea6d180-5e20-4efc-9019-1b86915dc733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fee326-a38e-4107-a491-211a1198c6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e59011-859a-48c6-87bc-651836945a5b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ffb29f-8eee-4b94-a938-28ac78dd12c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a88f02c-4e09-4a9b-86c1-ea50701304ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a15c09-cb05-41e7-be5e-32f14e3ef6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef0063f-ce97-47a9-9d06-d22a9d2a8726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587d26af-e876-476f-892a-b7cd1fbd8486",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1269d8-74aa-4127-b298-6f313e5417dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1fe377e-0f34-4b60-9471-d3a9e867577b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2df449-7a7a-413f-a5c1-e0f2c9a6fb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430f9898-7e4d-4aa4-8ad5-f566a18b7d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2016dd-3f05-445e-adff-0528b9f896f2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f7a5ca-4fad-4acc-b1af-baec347df76e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21e630d-4d9e-44b3-81cb-a446a05d1055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc1d141-f5f8-48b8-b721-9099ff06bd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3ce349-ba89-4dbf-8d02-1eaefc2b1b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48381c6c-2cff-4ac2-b283-dde7164dea35",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c500409-61a4-412c-b8f6-26a4767f2c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4062c9f4-e74b-4880-8354-43a9d6b6f20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4611d64-27e7-4c3d-8a4d-62a2207e2d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e175f59-a8c3-4ddd-8ddd-5fc628d9cdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3defc17-5d8c-4efa-9c33-c0199e0f699c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e069c72-e38c-464a-a830-5ac7e73a7ede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "869c201d-9995-4ca9-a2b9-fedefc084cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66211f6a-cf97-43c9-a23c-01e637cf5e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce4eb2d-85cf-41a8-b275-13aec08b5e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910464da-3604-434d-afbf-d7f6b94e7601",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eb76c5-8503-4159-8451-f9fa96c8caa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b9d26d-290c-4adb-9e0d-5d50c0d0f000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bb7009-f1eb-4575-9674-370e70c83bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68058782-8e73-44b8-8e32-8fc185d50355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab42b17-af5d-4517-ae85-45e621b0c1a0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2df5812-d62f-4c18-a64a-417605273698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62218f22-7e32-464c-86d6-364a11692195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6565ffe-1880-491d-97fe-79953e70a9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39018134-2a17-4953-81b5-8b3e08eacf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9f863e-2d43-4f88-af62-8978accf26a3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1b9c45-dda3-45df-9fa1-e59bfc8c0cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60e73be-ac3a-43cf-87ae-e0bfe6512cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21765835-3708-467e-8d89-5e98753523e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ae283e-d349-4237-b089-3d7f2d85bee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baa095d-1e7f-409b-b8b1-3ed2655f7d0a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b95f3b1-afc9-4165-bc2e-4c1118de3608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8fb6ac-6d66-4f2c-a07a-e8bd9d0f087b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4567aad-7520-48ae-a312-ad580e702fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c443378-6af5-4bc0-b4e1-65ed7c1e365d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c89b3f-64d3-465c-9029-fb8b672cbc98",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d9655a-e4da-4c51-be85-09e6e097110a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2daf396-2666-43bf-b6f5-6f69c67332d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54cc622-4c57-4d5d-8f87-51f905fc6fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cbc5c5-9daf-44c5-bbf0-9a5a9e933161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dddc641-3791-4ada-9dd1-eb81127cdef9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa35c07-be05-4745-9905-0e293c57456d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d85bd2-49b8-4cb6-a945-8ef8778e08b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa10b3c5-9f10-4cbd-b382-5ece1396c5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d9f287-f94e-4b3e-8690-433b8ec81136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf7d825-8834-49f5-aaa8-baf25ff5d038",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fad040a-43ab-4897-9df9-f75e75ec2c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8db9d6-40d9-4f60-92f0-ff8f82a59cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b49cd7-0588-4899-9a20-6830d0d559da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0564d064-a979-428d-9069-e3b2b2cbf465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67698a11-1a99-401a-9193-8f709fb57fc0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa70772-7e39-4d4a-8057-1693a709af08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c87d9ea-e011-4d64-bfdc-634a981f3448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94c921e-bd06-4870-93af-46f54c3a5c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8451c309-b180-4116-9994-60d76dc2ed5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efac8bc-fed8-4942-9ce6-5aeaf3f84245",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c6370a-cc12-4289-8757-2cf256e1963d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bb2896-f9ac-48cf-9883-0cb8a4756cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e98d30-e572-44d2-a9cb-35875f8aec2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3698e526-11c1-4495-8324-6d164f25f3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15a6e9f-07ae-45bc-b585-3c175baec0a3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca12ca1-02b7-4d35-9bf3-ab93e3bff05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c91fd7-58be-4dc5-b298-f85eca9c31fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79eb3ea-9773-4935-b0f4-4a6d9bf7647a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc50a20-b5ab-4730-ad5f-6a789ca3e8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8d87d6-5463-4147-83c3-724d49a1825e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0b3789-2b73-496d-b6bf-90956cea6c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd28cb1-b5f0-4d48-83dd-bac1a2236559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87654b0-58c2-4948-977a-7f9d6b0c3c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286272c0-af80-4a70-9505-43ae639f401d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28111bd-d455-46a3-beb5-7f72ab8ba184",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6108db17-dcb1-4710-b2f5-5d51de698188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2649296a-ca24-42bc-a0f6-ad24d1144ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1925de2c-56d3-4afb-a61b-f224eb0fa8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f326dc62-50b9-45b2-8b03-cc31a57cc5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cda005-6697-4eca-9a94-075a7b17aad6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d8a2d1-d48b-4d38-8380-92ef113b954b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26eefd2c-4b45-4f73-9500-4d7df3a894da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0497097d-2cc1-4026-bdc4-4e94c4cf91a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eab8b5f-1905-4291-805d-a32a18d49ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37384095-030a-45c8-8840-94de5027aa5e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41116b2f-e369-4067-8d8b-bacd88a2f4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9dd713-9cef-49f8-b74b-dcac8e92af9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb607b28-59a5-437b-afb1-30826a21e34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79ac940-e0db-4d3b-bb24-bad189f67fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45d7ee8-7888-4434-8488-a5f27f24484d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c4dfc3-dc89-4fc9-aec4-e251f402a9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c884ac-783e-4988-9e28-472f5c73210e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1f77a8-4e95-41e1-8a02-7a876e28b0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44678c01-a06a-4858-aeac-bb6b3ba4bf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e669dd3-a876-4979-abc2-34c462315a56",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f6303b-c272-456c-b8c4-c6b2bd472066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21d40d3-1b8f-4f71-b9fe-bf9576d44998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4beff2c2-05ea-4246-b139-d8ee98c3402d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3b3e61-0073-40ba-be0d-0d18fbd9e8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b025078b-77f0-4b3e-8b9c-6839581c6f11",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998f9c63-9e1c-41dc-8005-ef9ec6b45b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b57223-4434-424b-8685-a00b3ad38363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b940ec29-d881-4c5a-8aac-04384018dfb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce8f933-d1fc-46d6-a642-c42eaae032b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f4f1e2-3536-438a-b625-216a56ec1da2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33cf1c6-63cd-43a7-b71f-71a17eb34c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c9fa41-2b2d-4b49-89d0-60cce1382afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faba3a5-8056-460c-a4ce-ea192c536429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d850602c-b4e3-4662-84df-439d65a773b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2683662-af5c-4b12-b946-38873073e58d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5232abb-e147-4b75-a4aa-91eb2c9d47e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e870c9-9867-4fb6-86ff-09193d6fac06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6b4926-65ab-4b5b-93ba-fd34835ea015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c38f25-0f48-4cfc-9351-32c7e1c7d0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9272a8f-6b2d-4007-8723-38876450a6d6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ef3e6a-b6e5-476b-8ff9-86bca84c0158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d9631e-211d-4348-8bb7-39ab591f2fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2d93d1-79f1-49e6-8db7-bc406d6e69a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185dcffa-16b2-4233-9fd7-1a8277beb286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0876c910-9397-45d6-8276-59abc731423f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdd6fde-0c02-4af4-afb7-86dd7222cf4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4c6114-4133-4fc9-b7e5-a3ba72896afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7129b2ec-6818-46cd-9d98-5455dc77378f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100be492-505f-48be-abd0-2fe311ba4b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b60069-892e-4147-a829-8d692926b524",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3e07b3-3062-4831-8475-021129846c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b7bdb7-7d35-4a34-98b8-d14514790ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22c84b8-5474-4105-a8d3-3d12f3a05997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd339bb4-27e7-4b7b-b753-1df453a47ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4247dfc2-3f23-4596-9c59-d1ebbf4bd7ab",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a557a7-e306-48bd-9632-0828740eb7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6373b0ec-3746-4fb3-8209-c453e7b8ebb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41b087a-de6b-4405-9579-1ff1d32d8906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e569268-cb90-4be8-9df3-d4b77b84185d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92991ff0-a654-4c95-bbe8-efc6bb982083",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40469326-1ce3-4788-b8c0-dffacac7f735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35829f70-55f1-4f82-99f4-67284d9f110a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe1545c-114b-42f6-a732-16f9c4ca02af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d87ad3-1c8a-41d7-8537-c2d9f618362b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3c1c56-164a-4dd0-b1df-f6b0934d7cb3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7e8f70-cf2a-480d-b715-6f79fc098a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb6902c-462a-4421-adcd-67553f3180fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e109d3-ad5f-4977-ad96-9703cbcd2fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c312a58d-31f9-4ec3-b77c-571fc00bff93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35845f1-cbee-437e-b943-9d77dbcec34a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04667fe9-1e19-41c8-87ca-a18540990d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51940f45-0b4a-4cec-be82-691d747f2a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0237d9a-1a6b-426a-9445-ec267593d5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ee995f-47dc-418a-af71-41ad3fd9d732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23c7d7c-f073-479b-af4e-e26d5acf9c52",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938ac395-5762-403c-a263-d88fe9a97500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611b69eb-2d49-4b2a-b09b-90f8173d82e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea19ee3-2e8c-41ad-909a-6eb239ef6e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0662426-5929-4ed0-a456-62475c4418d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2373aa83-f020-4a69-a8d5-6eab2cebc41c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d10f8da-7415-4aa3-b585-0ab633602efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c7499f-8bb4-4107-a16f-86806176cb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020e02b3-fb85-4275-b4d8-0a07ea533326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233ecd6d-a8e0-45aa-a0ef-3f898706a322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71597e50-10a6-4273-9e6a-a2efb55d9801",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1010df-a26d-4694-9f53-abb3c8a16a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab8f56c-ecbd-47bc-8bbc-0e7c43dc87d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02761468-a603-45ec-b4a0-b8df58a68e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9296b057-20b9-4076-bf92-f00d474fb234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a44cae-12a1-4cbf-87e0-06aace7ff738",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1222974a-ad40-46d7-8959-b89d2d20a071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d3d1a1-d0f9-40ed-9a2f-52d782e10372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0110ce-f01b-49c8-8f2a-0e06b2f2ed66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6275b06-2d9b-46ea-9cf8-199546bd584f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a96675-ceac-407b-989e-17e69a652fea",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eefa75-6a73-402b-9eb7-148b5080d754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a51b7373-72de-432d-b43e-489e00cfc143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0ee692-088b-43ce-b252-b0790570ffe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ba8cad-03b7-4d2f-9c3d-0a91ad5997ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6af2eff-a864-42b8-be56-6848c99ce02e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a5a199-f057-4e70-ae31-38b422719d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04879286-8a7a-405d-9798-9a69d9060ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f415c755-8daf-4476-b877-b2781493be5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf00c4a5-37f1-4f8f-927f-33166e7b657e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948fa62c-d166-44dd-b6ca-000eaa647618",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e7edac-6be4-4b4b-8d6f-c47b2b9ec9f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f7f829b-698b-40c0-818d-ad5acd07e843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fa3efb-e999-44f6-956b-2a8929b0bc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2d1254-1b62-4e0f-bd54-74b6c788b7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfebf0a8-f470-4fcd-81a8-cb959db0dbca",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a5b428-c865-4784-be47-2dfcb03b11d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8596bf94-e219-44b7-bead-e729a110af8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeae82a0-5c89-4b83-9965-4163c6b3079b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e56330e-db64-427c-961d-00cff96ca101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa28b01-4b69-4896-ba6d-fd7c74ab9361",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175985d1-1eb5-4594-8b84-09038096c73b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e144b3c9-3c35-4a86-8478-cc50f037d3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a04b29a-7454-4e80-b12f-6dc2e0f20e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a884da3-02a1-4bef-a96c-b18ee9243730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760cd1b9-40cf-4259-aba2-63799744d2a3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4dd3a1-8298-4c7f-aefc-7b1e844693af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c5cc04-f10e-46b6-ba9c-8c1014037b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b269ca8-9c17-429b-9888-0fe2295e8e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8c0371-0cda-4e1a-9ce2-2465e3592443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f5e9b1-6340-498a-81af-c492d8905049",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3b2936-76a4-4a0a-b9eb-bab3a6e26fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f0f842-8f80-459f-8ed4-bddeb68bbd10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37ab468-5daa-4b80-bdaf-6ab09245e05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3f3f4d-dcf1-4173-8ff4-317fe61d8d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2b7100-561e-4951-9530-bb2f6b6b89b9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1be972e-96f6-4c06-bcae-6c0bfcdc2280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e0cb2a-b17c-4b1c-a0c1-00e951ba3111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb19210-9007-4d21-bf8c-a4a3b3d59a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9521d4b7-0c0b-4f8c-9f91-fc4949662e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e95e6c-1515-4431-94fc-a7865424a027",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a68029-0a5a-4b40-a96b-da03f5124254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28cec21e-6a0b-438d-8bac-cda38ee443e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfaf40b3-9688-445e-9570-6aa15f1cbe44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a273ad6-d076-4676-af8b-a4cc27df9a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03ee3e1-6982-4346-9431-9b4ef238b2b5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77d85ce-c4c7-48ac-ae25-7d82ab502369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e083b270-3f8e-4a2a-b8d4-76069d688d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0b1213-7554-478d-bcff-7fbb1136f292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6790a9b-97f4-4404-b70a-1930f1442067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbed7d4-07c2-4671-adf7-126f55fc9614",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9547d1d3-4878-4f85-a234-49f355881434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7cfedb1-a4cf-47cc-b144-249e83195738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ccff0e-0537-427a-85a1-74cfa125f772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac10e2b5-d030-4eb7-8a4a-a75383c3b18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7098fcc-9245-4dfb-a2a3-58d12fee038a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70332c24-7ba1-4996-b4d1-d294ae258fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7141c3-ed32-4cf0-a321-54238ec7257c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdc9058-07c7-4c10-a827-73047f2b358d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2249452d-7a20-40f1-90a7-0cba764da530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b32fde-834f-4e74-832e-fde955147757",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3855dff-d1f9-46a1-ba9c-7c8188f25381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7905ff30-fe73-4f09-ae85-9bb6b28c835f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1d4326-0417-47dd-a9e0-7a4d08e90bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a69785-1ea7-4c26-a28a-98a5312879fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30c7bd1-d773-405e-975b-53fa27408d34",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a8ca69-cf7f-4762-b4f8-d02161314047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35035e81-9529-4b7d-8f0f-69247a94e3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4896b54-eb0d-4ac4-a2e5-d683260a1300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939d1331-64f1-4e67-9956-9316ecf38e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834111d0-c92c-420a-993b-85095b24596e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e775ef35-2d1e-45e5-8dfb-4a09a43498b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece1e6f0-106a-4fec-9385-9e75d26c708e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a1ed55-85c1-4f56-a892-0756350e990e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397b780c-87f3-4cac-8024-01d747bf919a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc27480-8b5a-4155-999e-0e6db870e933",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7312cb15-212f-47e1-9f96-98e380bc8775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe409a8d-7179-4f5e-90a7-3650f718d996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e028da6e-7bf8-4586-a423-6406baba8035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06b19f2-f7db-4d5c-906f-6daadf2fc3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e4cb98-079c-467e-b72f-5d864019fcd8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3cd29f-2831-4e55-80ce-bd9ca15e97c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e9a628e-2c47-472a-8031-2cfc4341386e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b9e62b-2919-4e4a-9ebf-54c94f8b115a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9feaa5-0848-46a2-bbef-dec322c74c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76540e04-06a3-45c1-89fa-4108c473f0f2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4829bd-8cea-47e8-ac29-deed25a091b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76675da7-6025-43c9-9bd1-4179e71b552c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0341bc22-63e0-4ec9-9137-528699f777c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05af36a0-c0a6-4359-a9a4-75ea9cc80037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a782179-d5a3-480e-b52e-635f030d10a6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd8a1cc-cde7-4a74-b473-44297db949d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd69bc48-1ba7-4cf1-969b-ff9dae292008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208ba46c-3911-4b0c-b661-4a03b8a16e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39925877-c8a8-4996-971b-d0429c0293ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df3ef67-ba64-491e-b6be-ebf28ece5c1c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8baed91-1642-49f1-858b-0f018d218240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "526baa8c-7b20-459d-b3a5-4931fee82c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6c5385-0901-4cd3-be62-d0edf1db956c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6df6f2f-55e6-4806-bb44-6d5d55c65225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb85c0e-2a8d-43e8-bbb2-2367835916b8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60739bc8-ab21-427f-83f7-41d08de476c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4f50636-4e9a-4162-9c93-636d049f4833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d904f8-30c0-455e-9337-6083e4c742d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a47692b-d43c-4445-83d2-ab41c81b89e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8581eb4-419e-435f-9bef-a2da1b9bbc9a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb352058-f671-43e8-b13e-5b9a81c8a791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6e7545-38d4-4f48-93de-1de9a65554ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40973bd0-c693-4204-ba45-534706ef3cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ebabc7-ce60-4237-b596-9b957a61a5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb2d11c-a205-4a02-9260-d0c28e4b2fb4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d963869e-8083-488b-8c43-3febbc87d144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae00d0a-eb08-47e5-af79-66144e322709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd05678-502b-4a8d-9eb8-4151dcab0f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd14704-13c3-4e79-bba3-f4cbb29b0acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053bf819-d4da-41ff-8835-7a90f0e3351b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79545a7-6819-4437-bce0-cc1e9223751c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d68f609-521e-4eb1-89cd-7e2080cf1521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce3a3b4-1250-4af2-9ddf-cae2dedad94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59acf802-5e23-48af-b964-0527de858770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd4c6ed-0e0b-49f6-9a9f-da85fe5aecbb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a92211f-ae13-4f7e-9b2e-ce510f12247a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed92e21-06c2-4f88-8c5b-bf6c833309a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93b9713-0917-4b10-8d8c-cac2661aedcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022538ea-cb17-46b0-a938-3f1b80ceeadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684c8669-17fc-4ba2-b5a3-e8f51c21030a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86963591-b098-42e8-a9b9-770c378acb45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c3db7c-0091-4098-9987-cadbec7c64e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80267b02-0d73-4d84-b974-d9a63e03f43c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf5f351-f2c9-4a88-b3f4-93a249a4510a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2640a43-1864-49b1-9b6d-a0f8ebc53d99",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91a4f6c-13cf-4de2-87b6-aae54bd87044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f690d878-a503-496c-b8c6-8487d3b27ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab32e0ae-01dc-4588-9b0e-c1f0f8cdf253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc8a03f-af95-45c5-8d90-0d4739edb152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5bb94b-2851-4fc1-8206-d77b324d3d6f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dd6062-bf9d-40ca-97cb-eb5b52ce59b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5284fc22-ca67-473f-8954-5e5eb480020d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60269057-53fc-4738-ae7e-31a2544ed749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842cd6b3-ee0f-41fc-9348-bdad6377d7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd34091-e32d-4f54-b2bd-27d0b5338a0b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0946c923-509b-4655-9c67-688de2b138a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "503532b8-1dba-44b5-bfb7-b2ea631ea308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80046437-08c0-45ab-a135-848aa120efe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c044689-d0ef-43fa-b3b5-c38f15f9f49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227c0e82-9d24-40df-9228-290d208dd4ea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9ba22a-99c6-4978-8284-b8b383fb8ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a73be7-11e2-462d-95b5-46cf6cbc3f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccdf328-e7f2-469c-b419-e78f559043e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870c037b-c33a-4d96-a9ae-fcfed93a7c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26dd5a0-1244-4397-a054-31f1138bb982",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d94936b-70d8-4339-9d1d-d92a4af0d3ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89db4150-8de9-4908-a5d1-49d8f67ea3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fa87f5-0967-48c0-9dd7-93f1bce1ffa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9fd29ee-395c-4fe9-a5b5-096935a029fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aec1db2-371f-4920-ba40-61808ce63cc4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315cee93-d7b2-4df5-b92a-1b02f7f2f9a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6771777-9cd0-4a62-bba5-98ebf8b115ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4809f5e-51a9-4205-a6ee-3867270f230c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6804325-0645-4ffd-962d-9a96cec73913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63e348a-2890-43ae-be63-1c8298b64151",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee54c37e-9d6c-481a-8b99-5bcbea9a0cd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253567a8-14fd-4961-868a-6aa275bffd56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9fa502-1528-466f-ae18-380a2bfa8870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f12f38-8fdb-4938-bf22-cc17f9e36fe4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5e05170-405f-423e-8995-a125e01b750c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33ba8fe3-f37e-4b11-8a8c-69200d07d722"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e8f2b11-3e82-4001-92a5-60808e663156",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3846b3f4-17fc-42ae-814b-6827a3a449d3"
                    }
                  }
                ]
              },
              {
                "id": "4898f498-126a-42db-b90d-23dd75ca3532",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f706cbca-1288-4ca2-abf0-445182bb9508",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a141b2-f3b2-4a0f-a1ec-1fed48d68214",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e5999fa3-b866-493c-93be-b98558cebb24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbdcf63-9c0a-4ab8-ae5f-63ae2a9264e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0952e629-9ec3-4974-8376-781c39f3a482"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0205d54a-426e-4dd1-89eb-84e9841d0b64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a26bf47c-214b-4386-bc18-a9a8fda730a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57fda05d-85d0-4c4b-97b6-c22698354e8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1ea45a3-94c8-4bce-9c20-ef0d98d9a443"
                    }
                  }
                ]
              },
              {
                "id": "ac15b809-dda2-45a2-a3ff-1f350f7407e5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6ba5cf5a-ef55-49db-9dd9-594477b391c2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08787a41-51c8-4196-a664-020ee95e4a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f4e09946-f928-476c-b679-b4a403477abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927c524e-1d29-4741-9cf0-e753dffd0b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb17b3f3-18fa-4df8-a2ce-205684a2a4af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5a25c9fa-061c-40b4-bb1a-4bc910e89608",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af5f9372-a25f-4432-a7c2-3a48dc786edf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "739a45d1-b330-4383-bc38-1c5e94282bdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38573562-3a3a-4707-98df-81884529837c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29bc949b-da32-446f-9922-227e84c24996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9645a7e-f3f5-4327-9aa0-a1421d8f1503"
                    }
                  }
                ]
              },
              {
                "id": "741d04ff-75f2-4dbe-a824-5379c60259ac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fe5ebe3-28dc-4bed-8a50-839afd3793b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac672b9d-43e8-4b83-a5c1-ffb0f2c74d02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ceba93e-bb39-4258-85c4-16a30463a148",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5d80a5c-7ae7-400c-98e3-c9d1e60f170d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aff2ad7e-eb31-4d59-bcd9-e0f19efa0570",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4340ca7f-c105-4a6d-863b-c3dcca5edcc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc5c5b3b-53b5-4d82-a91d-0570747115e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b64d829d-3f09-4bc6-ba68-c6def361be23"
            }
          }
        ]
      },
      {
        "id": "c1a54cb0-6a91-4c6f-88cd-5e5f663a4929",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "92744739-5475-4a74-bb34-794087a6f138",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cffac95-c440-443b-82bf-6053877aab7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fb1614e-5d16-44ee-bc77-e1d155115534",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2afdb4-8624-42dd-ac09-4e87b1b6ce81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ea2940cb-9678-4eff-afc1-3a6f7a643611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e58315-004d-4b8b-85bf-fc76647766c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6125757d-0c7f-4bfe-8295-8559dfbae5d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09db0cd8-f649-477e-b2ea-b1d3d9b08f60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc3da589-eb55-4819-8329-fd84f584ac23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a27b0346-f51d-4da8-9a30-01d36a0677a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "015ef2cd-9dfe-40ad-b3ed-9bf9af42e9da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "128c5621-7262-4637-acde-57656fcf4cbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8a80bd68-554a-419f-9f75-f1394f95c495"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b77da4f-ec19-4089-9028-7b6cc403c967",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f08c321-d7f2-4aea-b8d8-49cacc646202"
            }
          }
        ]
      },
      {
        "id": "563a5d0c-3587-4988-8f4e-10f295e239ea",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "33e50865-d1da-42f8-9fc5-7d55e9727475",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3f12d72-2e1a-45c0-b6ac-ac990a0469d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c626574a-92cd-4bc4-b76a-c5a5dfbd5906",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dae67d-5bd2-4027-8cff-1ec122e4e083",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f41eaea-c971-46fe-bba7-d2baa739753a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab4f908-5409-4db1-9c61-2eda74fa16e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a2f6a5c-5d1c-4e00-980c-5c58ccdd63c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "967e2732-4916-499e-be65-d1f7abf33de7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e393b8db-e762-40f8-99e7-65d9f137e5d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de66cc7b-8d1f-472f-8bec-9c9ba0753d52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "139c190b-f2e8-42e8-9f4d-e00373ddcc01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "912bfa0a-fe3b-4c9b-835c-64f0532881c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91f6afd1-3799-43b2-bd18-c991cc2f17b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d331f33-7347-4404-a5af-def3bb917878",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "975632f0-9000-4965-889f-859537ecd7cc"
            }
          }
        ]
      },
      {
        "id": "8dbafc0a-6a6b-43b5-9acb-856d31dc755a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4a82d417-cefd-4450-be0d-ef8d6429975f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b507239-f042-4247-bccd-53cee25ae69d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a56cf4ff-6f83-44ca-bff3-fb20a9e35296",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914d4918-0ad6-478d-91a0-8ef03f4d88f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4000773-8d42-4195-92ce-6d784b043d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5a47c7-037b-455a-9390-e40497d02021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e4d7d0a-4e6c-4ba0-8d5d-d28824dee99e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25c4270e-3263-4907-b3cb-b0f279400190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "959ceabd-859f-4ce4-af8b-379781a48512"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2afc513-5c3b-4f9e-809a-acc68a1a11e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edb25128-35c6-43c3-a9d3-6da1cdb60c76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50e3e73e-fd30-4f1d-98b3-805f7a27a2a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b4fee4f5-0b54-417a-96d0-0ddfa7a70b54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be95e5bf-38e0-48a2-97e3-7174779619e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8f9d788-45c3-483d-9790-53dcdcd0b41e"
            }
          }
        ]
      },
      {
        "id": "4f492dbf-0807-4025-ae54-d6da304d29cb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4bc7cce-c46e-4c69-9ae3-239dca14540c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e66311dd-c0cd-4f91-90af-c0caa6d061d1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "53241c4b-26d2-43e9-b320-ad3ce9a7a6d3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6fcd0e6-584c-4800-b17c-a2abf9a98ef0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18f36cd7-efe7-43c0-8bf3-fef93e0d1148",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.831578947368419,
      "responseMin": 2,
      "responseMax": 233,
      "responseSd": 17.246399653716043,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703032147587,
      "completed": 1703032158287
    },
    "executions": [
      {
        "id": "7efa1c75-b357-4a91-9d04-50e58306f675",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22d4208c-a1f4-4a4c-968d-d9eaffc0c0b0",
          "httpRequestId": "cbea6bcf-4f85-4800-8751-513391c0e2b7"
        },
        "item": {
          "id": "7efa1c75-b357-4a91-9d04-50e58306f675",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2146eff7-8534-47fe-9b44-a9fe32ee2905",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "ffae968c-2363-46d4-896e-65ade094ef50",
        "cursor": {
          "ref": "d8142e28-d186-40a4-ba42-c614e959fa5c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3070ee33-091d-44b9-9e45-c6991514145a"
        },
        "item": {
          "id": "ffae968c-2363-46d4-896e-65ade094ef50",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a066687a-2ee1-4f22-8fb2-f8b7d26c191c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "f4747273-c46b-48b3-aba4-d55ccd083c3c",
        "cursor": {
          "ref": "5eb218e3-0b79-43ef-9e15-3eb9a7d9aa55",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5a03fb78-2e42-4775-9e36-d9cec8eb3c5e"
        },
        "item": {
          "id": "f4747273-c46b-48b3-aba4-d55ccd083c3c",
          "name": "did_json"
        },
        "response": {
          "id": "864fa56e-bf04-4323-b706-c86e725bb292",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a6e3a4-fbd1-421a-af5f-8b62d2cd217a",
        "cursor": {
          "ref": "672d9cc8-8964-4ba0-a478-2567c8b9dee7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03a7a27e-1c22-452b-9bbf-082b80bf1eb4"
        },
        "item": {
          "id": "40a6e3a4-fbd1-421a-af5f-8b62d2cd217a",
          "name": "did:invalid"
        },
        "response": {
          "id": "00de8e7a-8bae-479d-9369-b9a760d4f755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a6e3a4-fbd1-421a-af5f-8b62d2cd217a",
        "cursor": {
          "ref": "672d9cc8-8964-4ba0-a478-2567c8b9dee7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03a7a27e-1c22-452b-9bbf-082b80bf1eb4"
        },
        "item": {
          "id": "40a6e3a4-fbd1-421a-af5f-8b62d2cd217a",
          "name": "did:invalid"
        },
        "response": {
          "id": "00de8e7a-8bae-479d-9369-b9a760d4f755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067a223d-347d-47af-a991-88a701c9c8f0",
        "cursor": {
          "ref": "d7694411-0cce-4a90-92f5-3c3460eccf10",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "972cd5b2-c3b7-48e1-bd6c-233c63b45d5f"
        },
        "item": {
          "id": "067a223d-347d-47af-a991-88a701c9c8f0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "02cfc505-c0ca-49c2-9e16-af13731c4045",
          "status": "Not Found",
          "code": 404,
          "responseTime": 124,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b91f15-6308-490f-8c71-23dd0ef4df6b",
        "cursor": {
          "ref": "874b534a-4762-4f08-b4b7-3a84dcdf21c6",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "edf9151a-98eb-4f23-a1e3-6ca4ea83a3ea"
        },
        "item": {
          "id": "54b91f15-6308-490f-8c71-23dd0ef4df6b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8a920b54-bdb8-4cd6-a672-d316e9b800d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b746b62-1a40-4b51-a484-e348d52e81d9",
        "cursor": {
          "ref": "4cc31f46-e32b-442d-95dc-823ae862257c",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a4987e9a-258e-467f-820e-7c70ee87b3d2"
        },
        "item": {
          "id": "0b746b62-1a40-4b51-a484-e348d52e81d9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "df4dc22d-a0e4-4842-a6b9-65991bc5356b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f418eafd-9343-415c-9841-0fb7683b16c0",
        "cursor": {
          "ref": "a2a0fad8-be34-44a4-a6c1-8a882e2bc123",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a5f8b95-be7f-470e-9d8e-94481598b4b9"
        },
        "item": {
          "id": "f418eafd-9343-415c-9841-0fb7683b16c0",
          "name": "identifiers"
        },
        "response": {
          "id": "59ac8f79-7987-4640-b513-bcb91e1f739d",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33a8831-f571-49e0-b13c-172f6f54911b",
        "cursor": {
          "ref": "d9ca7f4c-660c-4244-b8f4-8ad5bd0cfeda",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "68814d53-09b3-412d-8bb5-ea75ee6e20d4"
        },
        "item": {
          "id": "a33a8831-f571-49e0-b13c-172f6f54911b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fc67d711-e81b-4c8c-8f89-c0f0cc44c2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f13560a-d632-4fdb-b9a4-7610e6d1e637",
        "cursor": {
          "ref": "f8363585-eb1c-4b9e-9ffe-b29342f34ab7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c8df77b4-1f1d-4752-963e-dff714e91769"
        },
        "item": {
          "id": "1f13560a-d632-4fdb-b9a4-7610e6d1e637",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4c0c9f98-8f60-454a-83aa-c3c42f6a09ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417597ac-824d-4b1c-ac18-6937a1f880d7",
        "cursor": {
          "ref": "8810df9d-b26d-4cb5-a57d-de4a0d15e47a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d205ce04-d934-4f72-9e12-a3ce671fde61"
        },
        "item": {
          "id": "417597ac-824d-4b1c-ac18-6937a1f880d7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8a7d4e6c-67ac-4dfc-adaf-7411017e2063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f180c4-f718-4035-9702-4f55db4ebb83",
        "cursor": {
          "ref": "e1eafb00-1f96-4d5d-b97c-e55fc181556e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "64e75170-0048-46d1-91cd-43f98b251657"
        },
        "item": {
          "id": "f1f180c4-f718-4035-9702-4f55db4ebb83",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "42fd9d17-710e-44f6-8c76-ee5693d88932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bf4a08-4829-4d76-bcbe-467584aaa910",
        "cursor": {
          "ref": "178809eb-461d-4cf7-b155-c4428e58f596",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "063f45e3-272b-43d4-9f5f-193b249c3021"
        },
        "item": {
          "id": "60bf4a08-4829-4d76-bcbe-467584aaa910",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1585c69d-6098-46fa-a41c-09c185189cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9160582-7f29-4ded-b7d6-f53c95eadffd",
        "cursor": {
          "ref": "caea8d3f-73f2-4f76-9fec-3eb3207f0cba",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5f652218-4e4e-475f-8acc-f3d8aa04eb26"
        },
        "item": {
          "id": "c9160582-7f29-4ded-b7d6-f53c95eadffd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d962079f-90a6-4710-9b22-97200e88d2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b849cc-5ae7-47d4-bb31-92f4430123dc",
        "cursor": {
          "ref": "c0d47e6a-3a6a-4fe7-9d3b-fd895ec8322e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "730a86ca-2f80-4b11-925d-56364bc6784a"
        },
        "item": {
          "id": "c2b849cc-5ae7-47d4-bb31-92f4430123dc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "152ccb6d-3e67-4562-b611-ce02961ccf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183f78a1-ccf3-422d-a4cf-bc290ee4af7a",
        "cursor": {
          "ref": "1b74a705-b552-4c07-b60c-5d8cdc8fb832",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d3a8ef6f-9172-4f8a-9301-b29e0a22ee32"
        },
        "item": {
          "id": "183f78a1-ccf3-422d-a4cf-bc290ee4af7a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "673177e4-3e4b-4fea-957c-822abddc96d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec89af02-b180-4c98-9b02-cd1fca1f69e8",
        "cursor": {
          "ref": "1018b724-7a01-4759-9dda-40d8f52901d4",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4b904620-0a6a-4a58-bfbf-3a47d8402093"
        },
        "item": {
          "id": "ec89af02-b180-4c98-9b02-cd1fca1f69e8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d663efd5-c83c-41ea-ae23-115316bdce16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5211ce77-1cb9-44b1-bfe5-b6fe375083f4",
        "cursor": {
          "ref": "e9fc1244-1b3b-4c75-a586-a969b5d9434f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "14c4d102-9e29-4ec8-8a66-32ed66ee6cf1"
        },
        "item": {
          "id": "5211ce77-1cb9-44b1-bfe5-b6fe375083f4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dcc828f0-8cf1-4f2c-9cb2-f36cd75bbdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6a3213-f7f8-4110-9c30-75580f47bc69",
        "cursor": {
          "ref": "eb26d7f5-cd59-4b07-a752-d3f565d1079a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ac867749-1b8b-48fb-8e59-19dd5fdfcabb"
        },
        "item": {
          "id": "ab6a3213-f7f8-4110-9c30-75580f47bc69",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "967121dc-3948-4b91-bbb5-f1f5f490697b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aafcd78-7246-4f5c-ab1c-3ff981abe8ee",
        "cursor": {
          "ref": "755ab3dd-da4f-4712-94a4-097f7f2f0cd6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d3b9e032-8a83-4c47-b1a5-24a7ca5a2230"
        },
        "item": {
          "id": "7aafcd78-7246-4f5c-ab1c-3ff981abe8ee",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "de8bfd06-c336-407d-8b3f-47d3d5819375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e183d2c-b12d-4bc4-aad9-2f831408b043",
        "cursor": {
          "ref": "b53a17a8-b2e9-40b5-93a3-6eddd5a591ff",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "894392c4-88da-424b-9e1a-1462544722f9"
        },
        "item": {
          "id": "0e183d2c-b12d-4bc4-aad9-2f831408b043",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0b5b250b-54a4-4f77-9467-b646e0d8b3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58bcbfc-d5a6-4f2e-b7e6-8adb88f0d317",
        "cursor": {
          "ref": "84a3f0a2-2481-4d54-8d09-b7c393529e30",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "95a475cd-1c0d-4c59-9f73-e19032940017"
        },
        "item": {
          "id": "e58bcbfc-d5a6-4f2e-b7e6-8adb88f0d317",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8923cb1d-2ecf-4174-b2e5-b6b6e15d310c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11badf4-ba3a-41a3-b68f-668f33fc20e9",
        "cursor": {
          "ref": "315f9f93-d2f7-4c54-9135-4cb4578fd485",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "690590dc-f6dc-42b8-b8fc-1dd384d8dcde"
        },
        "item": {
          "id": "d11badf4-ba3a-41a3-b68f-668f33fc20e9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fdaef8dd-e85f-4924-b1b6-529c8a0bcd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cf81cf-b217-4631-bb20-ff2b6e298b2d",
        "cursor": {
          "ref": "ad25d86f-1b36-4480-9507-6eafca65b2c9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "04865d62-4e4a-423f-9fed-bc6976d259d3"
        },
        "item": {
          "id": "87cf81cf-b217-4631-bb20-ff2b6e298b2d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cce24f9b-b612-4158-b602-654363170fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40477b3-cdf8-4545-892f-2ba347256b37",
        "cursor": {
          "ref": "27919713-adac-4b0c-be12-3441cc40166c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f2d7b30b-b931-42f0-a462-4c413feff4d5"
        },
        "item": {
          "id": "b40477b3-cdf8-4545-892f-2ba347256b37",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ddc8b094-a758-4e5b-9fbb-a5c9ca52f309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7aa080-1db2-4abf-8095-0dccf81d9972",
        "cursor": {
          "ref": "b25296fe-3e5c-43c0-b572-e53779e8d91e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e601126c-f338-478d-a38c-6c5bbdf18176"
        },
        "item": {
          "id": "af7aa080-1db2-4abf-8095-0dccf81d9972",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9d831f7d-6679-4315-8775-473564c3bbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f060f60b-f47c-4ae9-9b0b-cd04ba6b034e",
        "cursor": {
          "ref": "ae73ea96-e7b0-4290-9f7e-bbf767da88b7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3e0d2871-7856-45bb-b610-28ba46a0d739"
        },
        "item": {
          "id": "f060f60b-f47c-4ae9-9b0b-cd04ba6b034e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7c591894-091b-4b66-b5e7-6404e5fb81da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a13041-5289-47be-8f60-408fbeafe48d",
        "cursor": {
          "ref": "4604ecd2-d680-49d0-8e61-a487a008f281",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5f715331-ca96-4a48-888b-9623b6826361"
        },
        "item": {
          "id": "11a13041-5289-47be-8f60-408fbeafe48d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c5ca4d1d-823c-4abb-ad44-e2109e68c4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f8f794-58f5-4f67-ae45-f97ffc3fbfd4",
        "cursor": {
          "ref": "ec404b40-91bb-413e-ba74-d1aa6700deae",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0208b8a6-85a5-49d9-a3d9-3f96900bcd33"
        },
        "item": {
          "id": "21f8f794-58f5-4f67-ae45-f97ffc3fbfd4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6a473865-caeb-49da-b7c6-7d0b42d5a6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5fffe8-115f-4168-a33a-507c9a558f72",
        "cursor": {
          "ref": "1e1d310c-4189-435c-a126-d2dc5962ded6",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c9bc0408-608f-478a-b569-3fc377d7dc0c"
        },
        "item": {
          "id": "6d5fffe8-115f-4168-a33a-507c9a558f72",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e01c1302-8b8c-44a3-a9f6-78bdeade568a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7519cb1c-8611-4936-9d09-368df3f86818",
        "cursor": {
          "ref": "43d705c1-3e1e-4bd9-b92c-2633ad16956d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c8a1a40f-fb96-40f9-bf9a-335c1d75e053"
        },
        "item": {
          "id": "7519cb1c-8611-4936-9d09-368df3f86818",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c382b5d5-ddc8-4007-9f57-62ecc4314c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ed6868-4661-487b-8a7f-6e6121667959",
        "cursor": {
          "ref": "33f4f7f0-f091-4f27-99b0-51b4a785454c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d252aab2-e23c-4d6d-9234-2ed3e8c3d736"
        },
        "item": {
          "id": "55ed6868-4661-487b-8a7f-6e6121667959",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4f8d7ddb-b221-4ab4-9894-f79925652805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0737a0fd-25e1-4943-b152-9967597985d6",
        "cursor": {
          "ref": "6d3fc559-69b6-46a0-a1cf-3201e8ab4ae1",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8ed3f9f0-2d85-42e6-8b6a-4f9b59bcaf68"
        },
        "item": {
          "id": "0737a0fd-25e1-4943-b152-9967597985d6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ebf69251-bc01-4133-b542-b4dad81a820b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986383cc-7025-4ad4-847d-a5aa373bc70a",
        "cursor": {
          "ref": "7e47e90c-4d47-491f-af0e-9af3f5a8fe01",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c1f7d913-c2af-44b4-8535-a38a05436248"
        },
        "item": {
          "id": "986383cc-7025-4ad4-847d-a5aa373bc70a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "95667f6c-5fc4-49df-a5d6-2b3fda8c8e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7b19e9-7392-408b-a467-b6466030d9af",
        "cursor": {
          "ref": "115f73bf-a6e8-4fac-9f61-b98a1e30fd6d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ecaf72b0-6750-4ff6-9d2a-a198553835ee"
        },
        "item": {
          "id": "9d7b19e9-7392-408b-a467-b6466030d9af",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d65a4321-d613-482b-a1bb-02639eeabf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81ba227-84d9-4766-a392-65539b5cbbc3",
        "cursor": {
          "ref": "e68f48a4-55b0-4ab1-85de-12febb3e6778",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "40cb6db0-a691-4178-9a58-e3efb83b229c"
        },
        "item": {
          "id": "a81ba227-84d9-4766-a392-65539b5cbbc3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "37d13376-4b1c-4171-8810-2b4b4772c2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c700215-1075-478a-895c-5692664be9f6",
        "cursor": {
          "ref": "7c0bdaf9-9f1a-4f8b-b4c2-bbb4f6b6fba0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9bfe273c-f5c6-468d-8e92-3975affb5ca0"
        },
        "item": {
          "id": "5c700215-1075-478a-895c-5692664be9f6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8c976530-05c7-43a0-9b14-271549c99efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350e47e1-3084-4818-861a-216762bc7e2f",
        "cursor": {
          "ref": "c516f750-d95c-4999-a197-dc1d5aa9e679",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5f48da05-77cf-4b9a-b409-4683e472ea7b"
        },
        "item": {
          "id": "350e47e1-3084-4818-861a-216762bc7e2f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b3dd8e5b-221f-4e7c-8188-653f78b6ab75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769b13e5-0a6c-4120-b221-50958c39992a",
        "cursor": {
          "ref": "8dc9c123-ab37-4cd8-ba7d-34c5d6ea6595",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5cb7627c-2b6d-4ef2-8d84-daee959419ec"
        },
        "item": {
          "id": "769b13e5-0a6c-4120-b221-50958c39992a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6617649f-a0b9-4261-a867-4ddc2373f1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a07d87-a244-4de1-b436-33295382b57c",
        "cursor": {
          "ref": "2e344a6d-5654-44b8-9559-46b084708fa8",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5ff1a68f-5cc7-4f5e-86c9-a5ce8c46294f"
        },
        "item": {
          "id": "09a07d87-a244-4de1-b436-33295382b57c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "16f6fa86-5e1f-4b98-8a43-646739c6cb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632e192e-2362-4b68-9ce8-9d6b76d8d7e5",
        "cursor": {
          "ref": "5d95b18c-8e62-45e8-b04e-19b18ff342f7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5bf45efd-cfc5-46a6-a3c7-88e954241fc4"
        },
        "item": {
          "id": "632e192e-2362-4b68-9ce8-9d6b76d8d7e5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9f89dd38-e9a6-4e90-bf90-acda8063895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fc39fb-ae5a-430f-b870-cce33cb0ca64",
        "cursor": {
          "ref": "bf316d6a-5709-4440-b51a-ebc346426d30",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a0944b7f-b0de-4947-87e7-5c30d40078f7"
        },
        "item": {
          "id": "73fc39fb-ae5a-430f-b870-cce33cb0ca64",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3b7def42-bd3a-458c-bc11-ad6897fc3f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ec0290-3fd0-4d2b-82c7-fbdbb78b1361",
        "cursor": {
          "ref": "d2bdfd48-e093-47ff-9d75-2c9698799f6c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e90c5083-bca1-4408-bec4-da08c57778ff"
        },
        "item": {
          "id": "b0ec0290-3fd0-4d2b-82c7-fbdbb78b1361",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ce02a1b4-edc8-44be-9db8-99aaa8085627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b0978f-098a-41ad-8709-f64d5533c6f1",
        "cursor": {
          "ref": "1f6277db-6ccc-41d6-8c12-88b2a36cc5b1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "873011f7-a053-466f-9eb3-e0a55bfa3211"
        },
        "item": {
          "id": "05b0978f-098a-41ad-8709-f64d5533c6f1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0d0949fa-9c27-41d2-9b1a-956109d1e219",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c365b3c-f6bb-48f5-875d-4b4dc3c18701",
        "cursor": {
          "ref": "7c44ac86-3d78-4b34-ba8a-7096506815d4",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "099d6a8d-c61a-4315-b114-6aa55c510571"
        },
        "item": {
          "id": "8c365b3c-f6bb-48f5-875d-4b4dc3c18701",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e0cc67bd-c209-4265-b74f-986bb26fe671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d08e0bc-bca8-40ad-a696-3d493b513cc5",
        "cursor": {
          "ref": "d7b55d1c-a5c6-4cf9-be7f-063b9edbef0b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "965c8ea0-ceb3-4336-8a63-ce52c478b309"
        },
        "item": {
          "id": "9d08e0bc-bca8-40ad-a696-3d493b513cc5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2ae3082e-d648-42c0-8f82-f9bf225a7488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64209934-c028-4afe-b94b-24c6321457d1",
        "cursor": {
          "ref": "163822dc-8da2-4cc3-895b-fbc457ef7e4a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1326782b-e2cd-4399-aade-67b293ffa273"
        },
        "item": {
          "id": "64209934-c028-4afe-b94b-24c6321457d1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ba386b3e-37d7-4c79-95da-7de6d07e4e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1264378-8029-40ac-871f-3f9128e594d3",
        "cursor": {
          "ref": "f6a4fc23-5a45-4402-8837-e4f5156a12f3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fbde87f5-c75a-4aff-9e0a-3b136fbaf398"
        },
        "item": {
          "id": "d1264378-8029-40ac-871f-3f9128e594d3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d189046b-8f28-4da4-856e-bc17d07858ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3a5461-c989-4657-8147-212e94b67227",
        "cursor": {
          "ref": "161977fc-7d2c-49f2-b60c-da3f0b700480",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "94e174ed-e39e-4e3d-a7c3-89334437d0a3"
        },
        "item": {
          "id": "2d3a5461-c989-4657-8147-212e94b67227",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "58440e54-ef47-4024-845a-11d03adcc4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc534e6-4b9a-4842-84af-c63ba8dbac95",
        "cursor": {
          "ref": "a555733f-a90c-4f3d-84c7-f2e20625f3e0",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3c766c6d-97f9-4732-a7fc-9f5dbf94a4ab"
        },
        "item": {
          "id": "5cc534e6-4b9a-4842-84af-c63ba8dbac95",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ecd9c005-80fb-4bb0-ab20-c51251a4b8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e0680d-aabc-479a-8494-56cf32fda0f6",
        "cursor": {
          "ref": "21b4c302-4f75-4193-ac38-efcb897e2fd5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "205eeaf0-be89-4a52-a543-f7a5acb0d28a"
        },
        "item": {
          "id": "95e0680d-aabc-479a-8494-56cf32fda0f6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "30645c07-f030-469d-b4ff-25f895a55f9c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab28778-40eb-410e-87b9-ad1356145398",
        "cursor": {
          "ref": "c776da97-45f4-4301-a67e-427c337606bb",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2dc20edd-3f6e-4762-8031-a2fed4ca8b5c"
        },
        "item": {
          "id": "8ab28778-40eb-410e-87b9-ad1356145398",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7c7379d1-3548-4ea1-851e-bae622328479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0987e6e3-5880-4820-8c62-d4fe9617f546",
        "cursor": {
          "ref": "0af2caf2-7610-40a0-b55f-7217f7c4790e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bafe1729-00b9-4a45-b1ba-00fccafc8fb0"
        },
        "item": {
          "id": "0987e6e3-5880-4820-8c62-d4fe9617f546",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3893c71d-fba9-4977-9806-99e9715f11ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68739b9d-325d-455a-8b92-fe33ffeb19fb",
        "cursor": {
          "ref": "9674646e-3c15-4028-bd70-7a836bda8af7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "94a8035a-d237-431b-af5a-9aa14a074a2a"
        },
        "item": {
          "id": "68739b9d-325d-455a-8b92-fe33ffeb19fb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "40253f26-edb3-4fbb-82db-782fd291eb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fc0ce6-7105-4f6f-896c-cf3b494f8cf8",
        "cursor": {
          "ref": "2d3e3d2e-e0fb-4f17-a133-489972827c97",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "88c04c8f-bd45-421b-aeef-0ad0267676e7"
        },
        "item": {
          "id": "08fc0ce6-7105-4f6f-896c-cf3b494f8cf8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0199e91f-e66c-46a5-9d14-7f17d781b650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b204fc-c50e-4ccb-ac0f-0d7ec43caab0",
        "cursor": {
          "ref": "da4b4706-dd06-4877-ba07-4ff603263fa3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6d077d7f-4fbe-495b-ac30-f06ab9799716"
        },
        "item": {
          "id": "34b204fc-c50e-4ccb-ac0f-0d7ec43caab0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "26c64a29-d9bc-49b4-98e5-0665b00c6f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1ad08d-2373-428b-9b9f-b64ea3a97b00",
        "cursor": {
          "ref": "1aec4c75-ffc2-46b7-9374-4f73f5107be2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "52aacef3-e5cb-4b61-906d-9630dd0201cb"
        },
        "item": {
          "id": "fc1ad08d-2373-428b-9b9f-b64ea3a97b00",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "355ab75e-8ce1-474d-99e5-c6062955b7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010f9f32-9317-46b7-9735-1d751b2941c2",
        "cursor": {
          "ref": "ea113434-3918-4f72-91ec-dc34dcacdfff",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "314139dd-1335-47f2-8ed8-a991a21808e6"
        },
        "item": {
          "id": "010f9f32-9317-46b7-9735-1d751b2941c2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "98a7bd20-75f6-45fe-89b4-cf2c05bc5dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b81928-0c7d-4525-a25f-700f75889b20",
        "cursor": {
          "ref": "f0519c52-041e-4668-b4e4-f493fc09f719",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a287fa18-7de6-4085-a3cd-f760e399c254"
        },
        "item": {
          "id": "01b81928-0c7d-4525-a25f-700f75889b20",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fb6d6d9e-89e9-4226-9790-dca2a6de8d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dd609a-5f34-4f90-be0b-aaa0f6bce47a",
        "cursor": {
          "ref": "3d3b60f1-2734-4c22-8920-c72bd2a13518",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "41056968-5ca9-41b3-8fca-e96c5c2cc998"
        },
        "item": {
          "id": "b6dd609a-5f34-4f90-be0b-aaa0f6bce47a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b10a625a-46a9-407f-b0d3-8a03382f1269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96cbbe3-5d6a-400c-8f7e-25e26e3a3c9c",
        "cursor": {
          "ref": "965d4857-f68b-4433-8643-3d16ebf4d615",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e7f8ef41-b45b-4756-a23f-1fa24feec44a"
        },
        "item": {
          "id": "e96cbbe3-5d6a-400c-8f7e-25e26e3a3c9c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8deb074a-04d1-4d40-be7f-100ec574dd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24446fca-8521-4dd2-978a-860c1954c20b",
        "cursor": {
          "ref": "540e4ecb-5c4d-42f5-af85-ef1628d4b042",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "330f02a2-ad9b-4de9-bbe7-1fa6b698f4ae"
        },
        "item": {
          "id": "24446fca-8521-4dd2-978a-860c1954c20b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a7c46b82-cd95-4627-a37e-8c4de53f7b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49e981e-f3a0-4e61-a0f7-d36ac5b51e16",
        "cursor": {
          "ref": "8e2f4631-1e2c-4467-9181-9b35a7b4b2e2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f24a2abe-8cec-4ac3-847d-9714ca0326eb"
        },
        "item": {
          "id": "f49e981e-f3a0-4e61-a0f7-d36ac5b51e16",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "10c4ac5e-fbaf-4554-9b10-9337ae4436a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c308d34-70d4-4f1f-865f-b943c579e50b",
        "cursor": {
          "ref": "f1511150-294e-43c0-ad3c-3583cdd09cd8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a69f83e6-d902-48fe-ab95-01dc8c07eb5b"
        },
        "item": {
          "id": "1c308d34-70d4-4f1f-865f-b943c579e50b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f1fc4b59-6a08-404f-97ac-53770a7014c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a867c46-f904-4403-b74d-d2bef247799f",
        "cursor": {
          "ref": "88cf3a33-6f9a-4131-a03d-f0232c9b1139",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "27346c6a-ff82-4332-9a31-e0f9f742de3d"
        },
        "item": {
          "id": "3a867c46-f904-4403-b74d-d2bef247799f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "84db0465-489c-40f2-bdad-f1645dcd9e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4682984-cdda-491a-a74a-1ac4f8ef4c10",
        "cursor": {
          "ref": "64eba2cf-a98d-4864-8201-0b935fe5bc50",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "41d2ef79-7a02-4a55-ac4f-0dbb04e5db12"
        },
        "item": {
          "id": "b4682984-cdda-491a-a74a-1ac4f8ef4c10",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "13f070b5-0ebd-4dd1-bcf3-df9d95ad2df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bba0fed-1531-43ad-bad7-b7136ed9238e",
        "cursor": {
          "ref": "d8c16478-4c10-42e5-a2b3-5235fb2c5a3f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5e93f891-a83f-422c-8272-96dacdd0d553"
        },
        "item": {
          "id": "9bba0fed-1531-43ad-bad7-b7136ed9238e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7d3dc74b-7f47-4ba7-87a1-b281ab85bf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff1400b-ee46-45ab-a56e-ef92e148ca05",
        "cursor": {
          "ref": "20834708-7c37-4250-92df-6a86fcf6cc0a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "20da4ceb-0b5b-4962-9519-49a9cfaad6f3"
        },
        "item": {
          "id": "fff1400b-ee46-45ab-a56e-ef92e148ca05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "063005af-6d9e-4d75-aed6-b13c4e5764af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ad069b-3ba2-476b-829a-517a7ccabd08",
        "cursor": {
          "ref": "a0882436-5bce-4fd8-b892-7982c1d72536",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "147078ad-5462-4e61-af82-fd9120e327f8"
        },
        "item": {
          "id": "00ad069b-3ba2-476b-829a-517a7ccabd08",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "48685798-561e-4d1d-bf58-1803945513e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5805ecd-b6ec-4337-b544-631c1f90c70e",
        "cursor": {
          "ref": "c383189f-d10d-4b01-896b-f05949baad3d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4c46482a-e8c6-4f7d-835c-3a60fb820396"
        },
        "item": {
          "id": "a5805ecd-b6ec-4337-b544-631c1f90c70e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "55d12f9d-98e8-4038-b174-2b66f1d7e908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bebedff-2d07-4b72-ae3e-f13eb9c8583a",
        "cursor": {
          "ref": "a1d5bd9b-b842-4e55-b8ed-36fb6bfda158",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c401cae4-3001-48d7-b622-15466f569848"
        },
        "item": {
          "id": "0bebedff-2d07-4b72-ae3e-f13eb9c8583a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bba2ce75-2ff9-4cf9-ad7a-aa50fa078372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2de89c-608a-407e-967b-2d9f0586d0ad",
        "cursor": {
          "ref": "296b9a10-8551-434b-8359-9fb7aa1dff81",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bd9fe26e-60b0-4867-8341-47e49075f3c2"
        },
        "item": {
          "id": "1e2de89c-608a-407e-967b-2d9f0586d0ad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8f3ba18d-c7d9-487e-9c57-cdd728a47e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d604f720-a4ae-4ae9-ae6a-fb271c320b18",
        "cursor": {
          "ref": "a1684afc-ba40-40eb-9b4a-b294532092df",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c28decc1-45b0-4e7d-bc4d-ce4e169cf884"
        },
        "item": {
          "id": "d604f720-a4ae-4ae9-ae6a-fb271c320b18",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6c6b3130-d2e2-4a25-b01e-53eef588ad29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238028f4-f6ef-44cc-87d9-a93705721223",
        "cursor": {
          "ref": "77a0b8a6-abe0-4a92-a678-577ec2361688",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e88efa24-42b6-42b0-b783-e8b716b52350"
        },
        "item": {
          "id": "238028f4-f6ef-44cc-87d9-a93705721223",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c3e4cfab-b393-4c25-a285-805b4cb6810e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55870e2-2cf1-4e54-867c-63c29b7319b9",
        "cursor": {
          "ref": "c705bc30-78ce-45cd-9c33-22395edef99a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1c1411c1-3af6-4d6b-8e54-c76fadf6971c"
        },
        "item": {
          "id": "a55870e2-2cf1-4e54-867c-63c29b7319b9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7892a7bd-d8a0-4447-b24b-aed1cf5a473a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d14cb8f-cc0f-4dd6-8129-c4cc308a04d5",
        "cursor": {
          "ref": "14cfd7c7-f213-449f-8026-69de4022dc4d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d8dc726c-6db4-4ee3-8e67-b9e743ddb2b9"
        },
        "item": {
          "id": "5d14cb8f-cc0f-4dd6-8129-c4cc308a04d5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "81131c53-fbb1-4c7c-8988-be8ebd2fd7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3465b4a-dda9-4c33-bfa2-c7f8fdd30efc",
        "cursor": {
          "ref": "dfa7e4d6-74a6-4c6d-ad88-ad46c26b84ae",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3ace8c38-ccad-485c-a37c-2c85ff7f04ee"
        },
        "item": {
          "id": "b3465b4a-dda9-4c33-bfa2-c7f8fdd30efc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "132bb58c-4dc6-4273-82b8-e5f8b11468c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4429b1-82f9-4c39-8454-44aabf4b7285",
        "cursor": {
          "ref": "43ec51bd-74cb-4efd-908f-faed86daa28a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7ec07e7b-c80e-411b-97f8-9a8717bf9735"
        },
        "item": {
          "id": "3a4429b1-82f9-4c39-8454-44aabf4b7285",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "052e4f54-578c-4a90-975d-95135abab954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2613d02-e4da-4879-9573-a0789bf84d92",
        "cursor": {
          "ref": "2d45a0b7-c1b0-47fc-a495-014900a0668c",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4319920a-e8d6-4819-a133-33fe0c8d3fcf"
        },
        "item": {
          "id": "a2613d02-e4da-4879-9573-a0789bf84d92",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c517799c-3d68-498e-88ed-d71aee2eff61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb8cd90-1381-424a-ba97-5406fd6b1b5e",
        "cursor": {
          "ref": "4af99e26-0653-4302-b1db-0bfd2c88012b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b2b755a0-89b0-4d17-a0d4-3c7ededdaba2"
        },
        "item": {
          "id": "4eb8cd90-1381-424a-ba97-5406fd6b1b5e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5bce568e-3920-43f8-9067-d1a2764e3de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505a2905-e540-4aba-a240-c20ca73197c3",
        "cursor": {
          "ref": "a791ac9a-1e0b-4870-a065-7a9e2eb21c51",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b7f610b2-51a2-4c05-ab99-b8911072ddd4"
        },
        "item": {
          "id": "505a2905-e540-4aba-a240-c20ca73197c3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c8f9e6a9-2f4d-49b9-9e8e-ed8c5d643ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e60fb89-9f48-41e9-a347-1cbf207b78aa",
        "cursor": {
          "ref": "d244173b-13c8-4ef8-84a9-ab16dd4a066c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8feb8f30-9b21-448e-adf1-c506322dc593"
        },
        "item": {
          "id": "5e60fb89-9f48-41e9-a347-1cbf207b78aa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c44539c8-c321-4bd9-95f7-7dd1d0726609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12adf73-4249-4fc3-a93b-16eb2611daa3",
        "cursor": {
          "ref": "236486f0-2b60-468e-814e-122d8e6d1b92",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "baa56522-1862-44f5-8935-e4622811f9f3"
        },
        "item": {
          "id": "a12adf73-4249-4fc3-a93b-16eb2611daa3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a769c968-5109-4ce1-b7ca-23f0c3b9cd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d848eb-155e-4602-9ae0-d3bd5a17fd6e",
        "cursor": {
          "ref": "43c14c33-9de8-4734-9ac1-937da9270bba",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "55ca74a2-32f4-4509-a1e5-24e95a4f9262"
        },
        "item": {
          "id": "54d848eb-155e-4602-9ae0-d3bd5a17fd6e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3da4ea62-c24e-4a5c-8350-88d149a84733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b0a7c2-2585-44f5-9a51-de7ab01dd4c1",
        "cursor": {
          "ref": "a0da6352-041d-49ed-aa8b-801ea3e2210c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5176d4e0-e29a-4a76-be20-9171846d4aac"
        },
        "item": {
          "id": "37b0a7c2-2585-44f5-9a51-de7ab01dd4c1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8c5d82e5-e5ac-4019-aa7b-b3eba50cbcb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fef0cad-f1e3-4ee2-87f5-112f2ac58c47",
        "cursor": {
          "ref": "6e76b170-33a3-4e25-b231-d2d08e5d8893",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e1b96afb-4464-431b-9382-1ddbc27bdeef"
        },
        "item": {
          "id": "1fef0cad-f1e3-4ee2-87f5-112f2ac58c47",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f7d1d7d5-650b-4d2d-bb62-b3354d927e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b763f8d-fad4-428a-8d11-7a0f31e9b28e",
        "cursor": {
          "ref": "50564831-a87c-4a39-bc3b-04aee72d4e17",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7b06993a-90d0-42d0-a33c-e77b73de4663"
        },
        "item": {
          "id": "1b763f8d-fad4-428a-8d11-7a0f31e9b28e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "943ff7c1-d5e8-4870-86ea-3d1e8244a01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebec865-e4f9-4411-bab9-0398ebd5b8e4",
        "cursor": {
          "ref": "0508b420-28c5-4197-9d3c-b7a676d9020b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8efb0c45-9f40-4f97-8023-96d4b5552b4e"
        },
        "item": {
          "id": "9ebec865-e4f9-4411-bab9-0398ebd5b8e4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9e803da1-d41d-4198-bcde-d198f4088f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4503bff0-3816-4288-9721-0aebee6c8bb1",
        "cursor": {
          "ref": "aa9c024e-dbc8-4d8d-a1bf-2ad73e426040",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7f880c2b-1b27-4c20-8142-0ccb7f113b08"
        },
        "item": {
          "id": "4503bff0-3816-4288-9721-0aebee6c8bb1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "83304955-726b-41e5-a110-5c300b23dc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91fdb74-3506-40f9-9604-f15656193ec7",
        "cursor": {
          "ref": "f10dcf03-44c9-470f-b9f6-a5c8f6835b3c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e8e30303-0245-4600-935c-ffe613c2430a"
        },
        "item": {
          "id": "a91fdb74-3506-40f9-9604-f15656193ec7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d36e9a2d-ae16-417a-8cb2-3d7049afff68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e0b4eb-5e9d-4aab-b8d7-54899f5870cb",
        "cursor": {
          "ref": "f3a19b79-11c2-4203-8790-c266b071c339",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5c051cc0-b285-47ef-9113-5d4abef98cb3"
        },
        "item": {
          "id": "a7e0b4eb-5e9d-4aab-b8d7-54899f5870cb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "91f5ee45-b5d7-496b-8228-001016da31d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dff5af6-99cc-4598-99f1-9884635ceedb",
        "cursor": {
          "ref": "23185dce-6484-4057-9094-660ffae0c0c6",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "55cfd46a-cf50-4011-b22e-2944510f1916"
        },
        "item": {
          "id": "2dff5af6-99cc-4598-99f1-9884635ceedb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7eec978f-fc1e-48d3-b091-978e507c543f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6de1263-785e-4377-8861-e7647aa5c2ef",
        "cursor": {
          "ref": "f00e38a7-5616-45e4-9a7c-ac54125b7b58",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "45f3890c-ec40-435b-8eaa-c4f11777c754"
        },
        "item": {
          "id": "b6de1263-785e-4377-8861-e7647aa5c2ef",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "565b125d-98a4-4785-9216-e19953e3e37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd869c33-bb48-49f6-8b7d-05d5235de3c7",
        "cursor": {
          "ref": "9081e4d0-c532-4217-ae5f-e3246761ea86",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "915231e3-6f15-448d-aa4a-7813253d6ae0"
        },
        "item": {
          "id": "fd869c33-bb48-49f6-8b7d-05d5235de3c7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d5ad3b53-b851-47f1-8e9a-7f2a16bf488b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225243c2-439c-4976-8d36-5183f4fad7e2",
        "cursor": {
          "ref": "27b0a9bc-7a6b-4f13-b458-176b96dacc7a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "84367f53-607b-4f31-9557-b0c40667184f"
        },
        "item": {
          "id": "225243c2-439c-4976-8d36-5183f4fad7e2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a89dd68b-5147-4a28-af67-b18c9b01bd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528966cd-43ba-4aba-971e-73a128f9ebc6",
        "cursor": {
          "ref": "1b14b713-c6e7-43e9-a563-78775c23d10f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "27904a63-659a-48d4-8b9e-223a339bb911"
        },
        "item": {
          "id": "528966cd-43ba-4aba-971e-73a128f9ebc6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d4fc53bd-13b0-44d8-b661-1faa96e82a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e2146e-bd43-4bdb-b615-de05c1cb3ba4",
        "cursor": {
          "ref": "793e7f01-9270-412a-b3bb-5a3517b883ea",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eaa0beb1-e4a5-407d-9300-ec9af187a75a"
        },
        "item": {
          "id": "21e2146e-bd43-4bdb-b615-de05c1cb3ba4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "46a45251-aeff-49cf-9f0e-3552612e6f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acd66f2-9787-4a1a-9ba3-1fe05d1726f6",
        "cursor": {
          "ref": "2d65b021-49c6-49fc-b18f-7d66234d0383",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d6eeaaa5-644d-439a-8cb9-383d3a13ea48"
        },
        "item": {
          "id": "0acd66f2-9787-4a1a-9ba3-1fe05d1726f6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "22d3777c-5085-492e-94b5-d0a3200c6ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c004a84-40b5-4f17-964a-53352dd4f2f9",
        "cursor": {
          "ref": "c4df3581-7fcc-4dd4-9384-832ca7c3e70d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "90ec2358-3310-4215-81ff-ef64fc9dec9b"
        },
        "item": {
          "id": "8c004a84-40b5-4f17-964a-53352dd4f2f9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bb2b8525-a80c-45e4-a503-f1066345c3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c857467-c38c-468d-8f16-59a42f36c145",
        "cursor": {
          "ref": "124292d7-d500-4751-9afa-a8093c28c875",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8e92c422-2c3c-4ee8-afa9-27a30f8b9d8f"
        },
        "item": {
          "id": "0c857467-c38c-468d-8f16-59a42f36c145",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cc80640e-aa32-479a-b150-f72e88f72e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f543b3bc-72dc-4909-bdd4-e023cd958abd",
        "cursor": {
          "ref": "3308416f-2cce-4dbb-977b-d89892752cb4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d3c78be5-c2d7-4567-b2d4-d5016ad41953"
        },
        "item": {
          "id": "f543b3bc-72dc-4909-bdd4-e023cd958abd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ccf3e8e2-b7cb-4918-9eae-0ae66728be50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34bf44e-2f72-4017-b0b4-7f1af0533509",
        "cursor": {
          "ref": "96d380d9-e7a8-43f4-9638-cd57fab4df04",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c6d19ab8-8b78-4a67-9d1b-8eab91a1a759"
        },
        "item": {
          "id": "d34bf44e-2f72-4017-b0b4-7f1af0533509",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "42198147-3b0b-445a-afac-03bc8ba97686",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253292e1-5549-4010-ad5a-c66aa8db8bb6",
        "cursor": {
          "ref": "c30225e6-55ea-48d4-9451-b08b7a3ea23f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0964693f-8086-4a18-bac7-9e1e2f4ab321"
        },
        "item": {
          "id": "253292e1-5549-4010-ad5a-c66aa8db8bb6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9ccc8cc1-38f8-4e29-85c0-d3f3dc6648c7",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5192682-7ed2-486b-9119-cee654d0bc37",
        "cursor": {
          "ref": "f4458b4b-8f4a-401b-8392-121060a2df73",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cc593a00-a30f-4612-9090-d7a61aa665c2"
        },
        "item": {
          "id": "f5192682-7ed2-486b-9119-cee654d0bc37",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "97ccfb57-706d-48f9-8c46-53bbace5226a",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "860f0c62-2f97-4c1a-8c6d-dcd8186cc459",
        "cursor": {
          "ref": "1b1cb6e6-2c73-4d9b-ad17-118c62271e81",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e547e05f-6de1-479f-a658-c76094666f3a"
        },
        "item": {
          "id": "860f0c62-2f97-4c1a-8c6d-dcd8186cc459",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "84863ce7-57b0-4689-a424-3ecd9098ae09",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a036390a-372e-47e1-adcd-a00cb6bfaf6f",
        "cursor": {
          "ref": "5cab8c3a-94aa-4226-8be4-37715b0ebb9c",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c8367346-4e60-4f68-8a93-21d2a2f0f150"
        },
        "item": {
          "id": "a036390a-372e-47e1-adcd-a00cb6bfaf6f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d4f259f5-09cd-48d5-93b7-26ee3d7b5588",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "911f74b9-f975-40d4-bed9-a3c5d5af3f3d",
        "cursor": {
          "ref": "b5eba6fe-f9b0-43a0-a41d-a52b746ed90b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f2deb1e4-049b-46fa-b032-666f6e139e5a"
        },
        "item": {
          "id": "911f74b9-f975-40d4-bed9-a3c5d5af3f3d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1e804805-14ac-4304-a1a7-43b5ea6d6210",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa480c01-5189-4135-b59f-10334e41ea1c",
        "cursor": {
          "ref": "65a58da6-019d-4d0f-a30e-8b6f1cd099bc",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bc4be4aa-3a9e-4c79-bb3c-0a7e63cd7f5d"
        },
        "item": {
          "id": "aa480c01-5189-4135-b59f-10334e41ea1c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9e2514e5-865f-4133-a646-47bd34f75a48",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd16be2-1939-410a-babf-8f2ab3e24e5a",
        "cursor": {
          "ref": "d55ccd40-e008-4a37-b0f5-6f4872456173",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5aad5def-fd5a-4dc7-9281-5c7e1a73fd6a"
        },
        "item": {
          "id": "ecd16be2-1939-410a-babf-8f2ab3e24e5a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d4b0c54e-d9fb-419a-8ef2-f1d96297a7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c827fba2-9ed1-4657-93a2-bc7fcbae9e3d",
        "cursor": {
          "ref": "bb5ae96a-1e60-4547-a402-6883ea87b9ed",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8765a803-3dde-45e0-b7fd-11f778cc190b"
        },
        "item": {
          "id": "c827fba2-9ed1-4657-93a2-bc7fcbae9e3d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b500f67c-7e4b-4ccc-85b5-231e07853927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e45a374-c35e-44f7-bd6b-d682879e8213",
        "cursor": {
          "ref": "01bdfe83-9fdc-4d5c-b1d4-9ce3423f4270",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "77fa5bdb-d4b0-48c3-b8b7-f801667b88e8"
        },
        "item": {
          "id": "8e45a374-c35e-44f7-bd6b-d682879e8213",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4c83d123-a3ea-4032-a163-55587c6cff56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9309fb-2ae9-47ad-a155-9c9146b3c6ca",
        "cursor": {
          "ref": "ac381c7b-7421-4f10-8aeb-8f2801c4fb2f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "49a7f73a-bf08-48c9-9f85-29e25ee4c4ba"
        },
        "item": {
          "id": "9f9309fb-2ae9-47ad-a155-9c9146b3c6ca",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ae52cffc-104e-4e36-9340-c96d34cbb79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de989df4-7218-45de-9c81-316021fd1a8b",
        "cursor": {
          "ref": "754a37a8-c69c-4a99-9f82-663fb8c91a03",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7a22b4c8-26ca-4109-9526-407db3cdc3ed"
        },
        "item": {
          "id": "de989df4-7218-45de-9c81-316021fd1a8b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "548dd580-a49a-4b75-bc3a-ed803dbb6e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a854edb-aba4-4e9b-91c7-9ae721f88658",
        "cursor": {
          "ref": "6d002b86-da07-42ba-bdf5-f88b64093d2a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "011060e6-9efc-4139-996a-322317c92091"
        },
        "item": {
          "id": "3a854edb-aba4-4e9b-91c7-9ae721f88658",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae72a46f-61cd-4d0b-a732-408c745089ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79ccc79-36a0-434a-8d90-82e5804b1acc",
        "cursor": {
          "ref": "d69c8dbb-1615-460d-a10c-39ad59c53ebb",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9552968a-6bf5-4188-b6d8-37338bbf75d4"
        },
        "item": {
          "id": "a79ccc79-36a0-434a-8d90-82e5804b1acc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e735b9a4-6a87-4d9d-9fd3-97124a54c7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179ad14f-dd41-41f3-ac90-13b0a37a8331",
        "cursor": {
          "ref": "05f2fda1-b82c-4956-95e5-d3e110042a0c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "56ae97d5-57d0-4405-a766-bb34e49eda89"
        },
        "item": {
          "id": "179ad14f-dd41-41f3-ac90-13b0a37a8331",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1362285c-bbd8-4128-bae2-c9eaec7e9ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0b4a8e-310d-4f0d-9697-82f86b10a42c",
        "cursor": {
          "ref": "b8414f62-7779-4021-89c2-f8b384f6f17a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cafa4787-7666-422b-8673-5e5e68cf21fb"
        },
        "item": {
          "id": "2b0b4a8e-310d-4f0d-9697-82f86b10a42c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "55b0c1fe-cdf2-4850-8299-ace10f0bbf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c3e30f-e03d-4356-be59-34ea968f93a3",
        "cursor": {
          "ref": "b67d39f5-9eb4-4337-8b44-f7c3dffb88a2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c783de5f-944a-4bbe-8114-01d57db131d7"
        },
        "item": {
          "id": "60c3e30f-e03d-4356-be59-34ea968f93a3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d30cc4e6-1ae9-42d2-949d-8505ad5bf205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2881f321-fddd-46d1-8f6d-6aa74eca715a",
        "cursor": {
          "ref": "cdc9f8d9-0bac-4749-a220-2e81b19676d7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1e22dca7-2913-407e-b27a-d0d0007861d5"
        },
        "item": {
          "id": "2881f321-fddd-46d1-8f6d-6aa74eca715a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "41ab56ca-951a-43a9-bb7d-69e57134b80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758a6402-e011-420e-a904-ccf41cb96224",
        "cursor": {
          "ref": "afbbee6c-1dc3-4a90-9757-b1cac471aeeb",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b41e25f6-0af7-492e-aaeb-75ff1f4eebe7"
        },
        "item": {
          "id": "758a6402-e011-420e-a904-ccf41cb96224",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "684a89f6-2b08-4c08-9a9b-d92385d8985a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a25197-60ef-4e31-a0ab-cb016fc32bfb",
        "cursor": {
          "ref": "2d452f35-e128-4b35-96e9-413a9fff1143",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "34f3eea4-4a3a-4044-a955-1f1709b7fff3"
        },
        "item": {
          "id": "03a25197-60ef-4e31-a0ab-cb016fc32bfb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3e741303-7541-49e4-a835-05c26eac053a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d0209f-d6bf-4498-8b83-612750fc2646",
        "cursor": {
          "ref": "cfdc9959-f758-4076-9293-00cfbdae0466",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f6b1b61a-ce78-481e-8bfd-b9d2a4367b16"
        },
        "item": {
          "id": "e9d0209f-d6bf-4498-8b83-612750fc2646",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "549b1517-e133-4c02-8ab1-74af1cf37f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71028851-8c51-4fbd-8b43-e67e91358735",
        "cursor": {
          "ref": "0fb48114-325d-4f04-8d37-d8b21afc7257",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d830ae65-358f-4372-93d5-8114c60c75d3"
        },
        "item": {
          "id": "71028851-8c51-4fbd-8b43-e67e91358735",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ce756feb-cb7c-4d4e-afee-7151038c91be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5353d654-2cb7-49c5-b57a-0484ef7e1517",
        "cursor": {
          "ref": "a02461c9-2e17-4170-bd4d-526c7f4d7e5f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e956873d-3649-4c5b-b574-1525ff51e6e4"
        },
        "item": {
          "id": "5353d654-2cb7-49c5-b57a-0484ef7e1517",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "649df35d-beb1-4c6b-b34e-fc20b691477a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebad95c-ef76-49a4-a252-70e112d74609",
        "cursor": {
          "ref": "a368940f-decb-4712-9691-059ebb677b98",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2203c398-20a6-4d97-940c-84308caa6011"
        },
        "item": {
          "id": "0ebad95c-ef76-49a4-a252-70e112d74609",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c854257e-4236-4653-b23f-fe680f986045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a52e598-d8c6-4538-b3be-dc7091f87b44",
        "cursor": {
          "ref": "2a7489dd-8bb9-4ce9-b650-4527ac6acfd9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "06a082ac-04d0-4944-b28f-018dd37dd117"
        },
        "item": {
          "id": "6a52e598-d8c6-4538-b3be-dc7091f87b44",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "99d5f0ef-4241-4188-b063-d3efd0628077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460fb21e-4767-4ca6-bc9a-b1417beb1740",
        "cursor": {
          "ref": "9799dd8e-1bf0-47e2-b37d-ab1b8c8aab25",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3d5e2263-8c65-4933-bce3-142ec5f9f434"
        },
        "item": {
          "id": "460fb21e-4767-4ca6-bc9a-b1417beb1740",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81afcf6c-13f0-49c4-9c12-13bb41b4c810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4635f7da-e85f-4506-96a2-dfc62e683c7f",
        "cursor": {
          "ref": "163b7912-a0aa-480b-aea0-c4e4434cca61",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f9e58656-9b07-4899-b167-57e7754a5e14"
        },
        "item": {
          "id": "4635f7da-e85f-4506-96a2-dfc62e683c7f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eb25cec6-4d03-47fb-9649-f6df4f94ce04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6439b77e-7a0d-41fd-befa-2d07cde5cb69",
        "cursor": {
          "ref": "85439d3f-7f9e-4c0e-8e86-b66a025d0a95",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f14e91a3-8c70-455d-9c0f-b9bc8694e3f1"
        },
        "item": {
          "id": "6439b77e-7a0d-41fd-befa-2d07cde5cb69",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "db09fac4-5c2e-49a1-b18d-cc9f4a7a899e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931b6336-8186-4aa0-9382-ff99fefc53d6",
        "cursor": {
          "ref": "6e7c7b35-59c7-4dc4-878a-55636de49806",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9cdcc83c-9da8-4d86-999f-a573a56947ed"
        },
        "item": {
          "id": "931b6336-8186-4aa0-9382-ff99fefc53d6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1987ee73-4bc5-43b7-bb78-e2f851f7f058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc37af29-9bb8-4a56-9c55-298210a795d3",
        "cursor": {
          "ref": "e8ad5acf-d7a2-4613-98da-66e72e9d815b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ffcc6903-4b0d-42a6-a83d-04e4a068ad95"
        },
        "item": {
          "id": "fc37af29-9bb8-4a56-9c55-298210a795d3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e84e7788-ad76-4803-96e8-aa042ee53e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cc5a91-7be4-4a6a-9ba3-3dc00f6a3586",
        "cursor": {
          "ref": "612ac401-3250-49ec-97be-5c36ba698260",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1280e043-6bb0-426f-ae11-0f65e9e6e461"
        },
        "item": {
          "id": "64cc5a91-7be4-4a6a-9ba3-3dc00f6a3586",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "68dec50d-2a88-44c3-ad90-a80149c46938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d56370f-e46e-459c-89e2-59c28a741f1f",
        "cursor": {
          "ref": "2c5603dd-d1cd-4ba3-b526-4d2a8e3b8b04",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f39e28df-d64b-442c-be14-133aaae363ae"
        },
        "item": {
          "id": "7d56370f-e46e-459c-89e2-59c28a741f1f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0e43279a-8d6b-49e4-b111-010b318f1863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d44be4-49c9-4f82-96af-f61af8a45024",
        "cursor": {
          "ref": "51951447-02cd-4ec8-afdf-82731c1ba1e9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6cc2f96d-73bd-4420-bea6-38c510beb9d5"
        },
        "item": {
          "id": "f0d44be4-49c9-4f82-96af-f61af8a45024",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "19d44df7-2e57-402e-88de-18362536761b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85998e71-b7d9-4c84-aa04-982682025ad3",
        "cursor": {
          "ref": "a4bf9840-37ba-4a6a-a1cb-e3594460c233",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a9dc85e0-6b5d-4ee2-ab3e-0eb4124a6309"
        },
        "item": {
          "id": "85998e71-b7d9-4c84-aa04-982682025ad3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c8846470-ef94-4b6a-88e0-11b28d22b02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440eda2e-9f89-4ea2-a845-1d5e45f6054a",
        "cursor": {
          "ref": "f2563c29-9387-4186-83b4-c8b6234e89ee",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a181265a-fead-470e-a9cf-1ddef55885b9"
        },
        "item": {
          "id": "440eda2e-9f89-4ea2-a845-1d5e45f6054a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2c1e9d73-00bc-4b1b-86b3-6e011766c0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fc1ecb-92c0-4863-94f3-09cdf197978b",
        "cursor": {
          "ref": "f6814b93-b133-43ae-ab89-708108183129",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8007e223-8ce1-4ae7-8beb-8024d55aea3f"
        },
        "item": {
          "id": "e1fc1ecb-92c0-4863-94f3-09cdf197978b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "21fdb96b-56b2-4860-8074-41acd9223a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34bc02a-bea2-4fb8-910a-4c17a60287a5",
        "cursor": {
          "ref": "868ea646-e962-40ec-bfde-fda5a4df66ff",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "81e7122c-2ee3-492b-ab91-3dee29c1a117"
        },
        "item": {
          "id": "d34bc02a-bea2-4fb8-910a-4c17a60287a5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "da12d95c-2f55-4e9f-bd28-a1b5f63d8e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648c44f7-bbd4-4cb3-8780-2fdd6febbce9",
        "cursor": {
          "ref": "d0f58651-c587-4d67-9602-3846fa383ab3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c729608f-cd1d-4d45-a989-cc27ab066b67"
        },
        "item": {
          "id": "648c44f7-bbd4-4cb3-8780-2fdd6febbce9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "606d8952-2c1c-48db-b8ab-52a79aec4606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c2f3c8-8842-40a2-8b5b-3bb2ba4a74a5",
        "cursor": {
          "ref": "295b2555-e97c-4fab-b867-89724a56e421",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5ffa45f2-7302-4055-9759-04eea2732bd6"
        },
        "item": {
          "id": "83c2f3c8-8842-40a2-8b5b-3bb2ba4a74a5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bc8e102c-ca60-4bf9-8b4c-5b57b400500f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8778b56-6d94-4c52-8369-73840af01b84",
        "cursor": {
          "ref": "3e695743-43c6-4ccf-8d91-35c4a4c4d28c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c717815a-a971-4736-8a7a-dd8097a24bab"
        },
        "item": {
          "id": "d8778b56-6d94-4c52-8369-73840af01b84",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e8cff9bd-068d-4e29-9a49-36d1ff5373d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cb822c-579a-4a4e-93b6-80cff2c90ca6",
        "cursor": {
          "ref": "d7825b89-1c62-4ffc-9c81-a5f9bfd35593",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bfc401c5-3adb-4d2d-806d-2efaf13b8073"
        },
        "item": {
          "id": "36cb822c-579a-4a4e-93b6-80cff2c90ca6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "57bfc746-990d-41c0-a2cc-7551da206d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e19c0ae-68e6-45c9-96a9-7dfed25b8aba",
        "cursor": {
          "ref": "707df5c8-fafb-4ab8-bdb0-89cbf0934415",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d8b2c6ad-a927-418f-a14a-1eb6eb86adec"
        },
        "item": {
          "id": "9e19c0ae-68e6-45c9-96a9-7dfed25b8aba",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b7d3af90-165c-47bb-9da2-427a507273aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7f3fb3-56e1-48b7-96e1-a018b993ae01",
        "cursor": {
          "ref": "5ba86c14-b0d4-4682-bd2e-a981dc3e5fba",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a4c5235e-6b19-47b1-bf3b-2d4c797390b2"
        },
        "item": {
          "id": "5f7f3fb3-56e1-48b7-96e1-a018b993ae01",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "04623595-f698-4b30-877d-ed1d060e813e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24bd974-267d-421c-89a5-23514c0a2457",
        "cursor": {
          "ref": "3e9508c5-1b74-4178-b090-30e35cf96e47",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "782601ad-f8ba-4dda-9a80-f4ec70478753"
        },
        "item": {
          "id": "a24bd974-267d-421c-89a5-23514c0a2457",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "088ff1c4-97a6-46cb-9fac-611d77db97ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d0c97e-6de0-4b77-9782-a36636cf4588",
        "cursor": {
          "ref": "5a3186ba-1751-4e0b-98a4-e8622c19a941",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4ded0cdf-90ff-466d-906a-72249b1c5e51"
        },
        "item": {
          "id": "46d0c97e-6de0-4b77-9782-a36636cf4588",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "85d5cf57-9446-424e-8f7b-1e20677b1221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5d6a7f-c58f-4fad-a9f5-95d83adecada",
        "cursor": {
          "ref": "4bd4e149-553b-451d-b04a-47782521643d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e4910a1c-872a-40ca-b3c2-87af9cc16408"
        },
        "item": {
          "id": "3d5d6a7f-c58f-4fad-a9f5-95d83adecada",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "193c3c1f-0c26-4ab7-b13f-b9a80d72a510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067c1ba0-c9dc-4bb6-82ca-3ade18b58748",
        "cursor": {
          "ref": "45810281-2a14-40fe-8562-30bd7cc3ddb9",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9bd9904f-dbc4-49b2-afe2-69a5a6d40d9d"
        },
        "item": {
          "id": "067c1ba0-c9dc-4bb6-82ca-3ade18b58748",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c70ce6f2-2225-4174-aab7-a7f083069f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1fd4a7-7a4d-407c-992d-c7ce316819ac",
        "cursor": {
          "ref": "f63ce353-de09-4f42-9137-32b15b8f4386",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "42c29f0a-7063-473b-962a-a608a9a2279d"
        },
        "item": {
          "id": "4a1fd4a7-7a4d-407c-992d-c7ce316819ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cb31ee96-9bf2-40c8-91e8-80eed71353cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb9e41b-e650-4108-a147-e4b9269118f1",
        "cursor": {
          "ref": "6bf891ba-15d8-44c6-ade3-c72a0cada887",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b42c0fd4-c258-41a2-bbf2-79f1e12bcfda"
        },
        "item": {
          "id": "ceb9e41b-e650-4108-a147-e4b9269118f1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7cb7659e-ea2d-419f-ad6c-4207d492d976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e47cf30-31af-486e-82b4-4e7eb4fffeb7",
        "cursor": {
          "ref": "289b727c-dd0a-4a60-bedc-196066549fc0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "87ae2d01-6fda-414d-b638-8e640103b567"
        },
        "item": {
          "id": "3e47cf30-31af-486e-82b4-4e7eb4fffeb7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a857c96b-a6f2-447c-9b3e-e8361d271613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636e7ab0-7249-4dbc-b299-d57951b23dcb",
        "cursor": {
          "ref": "18033d12-be89-4ab9-ae4a-1ee358eee9d8",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8efc2bb2-2951-48c9-bbbc-9ef8f0182365"
        },
        "item": {
          "id": "636e7ab0-7249-4dbc-b299-d57951b23dcb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "38ef8061-4677-4a4e-9462-328248100629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d38a63-ef02-4a8f-bb09-9f7239bf2331",
        "cursor": {
          "ref": "dc7d1c59-cd92-4cac-a4e8-401abe42e55d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f9e6035b-ebcb-40e8-9abb-e30838daccda"
        },
        "item": {
          "id": "a3d38a63-ef02-4a8f-bb09-9f7239bf2331",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "54e5952f-6ee3-4980-b1ee-397c8b49eba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e72c9a-ed05-402e-89a9-7cd9e291dba6",
        "cursor": {
          "ref": "24af34e4-57a9-4e20-b207-f111683ee7fd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1c89f589-e45d-4e84-b6d9-b0838708470d"
        },
        "item": {
          "id": "95e72c9a-ed05-402e-89a9-7cd9e291dba6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a31d6bb1-98d9-4c66-afab-eb9bf4683e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4411592-4766-4c09-aed1-a366e0af8a20",
        "cursor": {
          "ref": "85b40382-8799-4df2-9fe5-75ccdcaecd67",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "97bb8be1-fb1f-4411-a8cb-54dd98aba860"
        },
        "item": {
          "id": "a4411592-4766-4c09-aed1-a366e0af8a20",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "51293de0-d452-4248-b760-fdf9ec7cbb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63247b99-c652-4fe6-a62a-6ad20cee5fb0",
        "cursor": {
          "ref": "285c92c9-534e-4c84-8df1-d7907a060566",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b055bb7d-3c5a-45c4-b3c9-3b5bef0b6ae0"
        },
        "item": {
          "id": "63247b99-c652-4fe6-a62a-6ad20cee5fb0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "13035803-fbde-4ba6-8ea3-bfbc232a4de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac2593d-dc6f-407b-a991-01cd6cef4a35",
        "cursor": {
          "ref": "d11b8418-5452-4cc8-b35e-265829b70c7f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4a7c946c-ea8e-4e31-875c-09dbe8a56210"
        },
        "item": {
          "id": "eac2593d-dc6f-407b-a991-01cd6cef4a35",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "976d6c69-c764-4671-9441-d758c9f84b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a14109-3397-40f0-8ae2-be192f5a341e",
        "cursor": {
          "ref": "d2e37720-7609-4a21-9a43-77aba8ee3920",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c8ccf956-ed2c-432d-b7c8-0d50a42ad739"
        },
        "item": {
          "id": "03a14109-3397-40f0-8ae2-be192f5a341e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "88856015-42f1-439d-ba40-f304f616ea4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fbd00a-d6b8-49a4-a3ea-588e7f651dfc",
        "cursor": {
          "ref": "8b0ebb60-fd93-46a0-9f03-5fd92bb3c3aa",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "90be7467-bbe1-47af-ad56-0ee6b891870b"
        },
        "item": {
          "id": "e4fbd00a-d6b8-49a4-a3ea-588e7f651dfc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b461419f-3a94-4933-8444-b62a0865fac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217891f4-b868-43ae-9817-409c2b6e2cc1",
        "cursor": {
          "ref": "a233d4b9-58ee-4b40-a50a-dc0ebeec6733",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c311a665-5afd-4f2e-a261-7281d0f84510"
        },
        "item": {
          "id": "217891f4-b868-43ae-9817-409c2b6e2cc1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3d68a38f-8a2b-49ce-b298-6cea3c58d93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095f2c18-c32b-443d-90dc-4d1c74915716",
        "cursor": {
          "ref": "b8409fee-5e35-4cd3-a207-b493c0892066",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3fdb3bdc-1672-49ee-8cd3-a43dfac75397"
        },
        "item": {
          "id": "095f2c18-c32b-443d-90dc-4d1c74915716",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "56cdd901-353c-4440-b104-f8b869b6a98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c39725-638c-41db-8833-629f741f8ee5",
        "cursor": {
          "ref": "e30dd0ab-3c56-4759-a93c-22c52c2908a4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a8269d00-1118-4741-a0dd-9664a42aeafc"
        },
        "item": {
          "id": "94c39725-638c-41db-8833-629f741f8ee5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3c1d73c7-3742-4b7f-a178-6d76e15f4f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7795f26a-051e-44d5-be5f-2cda49a08b3e",
        "cursor": {
          "ref": "4391c508-2cfc-4625-a416-d75cd9fdbda1",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f22f82a9-d1a7-4f51-b966-0ee32ffaa4f5"
        },
        "item": {
          "id": "7795f26a-051e-44d5-be5f-2cda49a08b3e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e50160ff-347e-4812-9b09-60fc4e201dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5093f5ea-1e68-4ed8-a5fe-57e6bcc61bde",
        "cursor": {
          "ref": "9efb34de-0f78-4238-8cb1-1d4d0757c8f2",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cbdffe84-359a-4c11-9074-289c0863d14a"
        },
        "item": {
          "id": "5093f5ea-1e68-4ed8-a5fe-57e6bcc61bde",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f288f3d2-b472-43a0-8b56-2f5c735b98b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64331ba-249d-4aa3-a0be-bb7eb683abab",
        "cursor": {
          "ref": "e491c9a2-5792-4e5f-a196-f4042e64af1c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "248f88c3-30b7-4197-98aa-d7bf8768dc7d"
        },
        "item": {
          "id": "e64331ba-249d-4aa3-a0be-bb7eb683abab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c9309bd5-29a2-4107-acb6-3a4fa39d84f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4717cb74-8fb2-4472-8e17-8369110f4ceb",
        "cursor": {
          "ref": "0cb9f501-58f2-4b99-b241-969d4ae3c3e1",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "36485a5a-5ad3-4f19-99d4-0cab7045ac77"
        },
        "item": {
          "id": "4717cb74-8fb2-4472-8e17-8369110f4ceb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9849e96e-22da-4ad1-8a19-23ed849237de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa34528-775f-43b0-bd6c-64184cb1bc08",
        "cursor": {
          "ref": "1c7de6ef-7216-411b-86c7-66025b3092ed",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "53163cfc-5e80-43db-9ae0-ea443832f8f3"
        },
        "item": {
          "id": "2fa34528-775f-43b0-bd6c-64184cb1bc08",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "965ecc84-fa1e-4e7a-b6e1-929087e3fff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4d41fe-4e21-4b1c-9842-f36a5688984a",
        "cursor": {
          "ref": "f73ec61d-fc9e-4277-b675-1e1c117f63a6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6f36d810-f2ea-4793-8bcc-d2700d7d06b1"
        },
        "item": {
          "id": "6b4d41fe-4e21-4b1c-9842-f36a5688984a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "943b93d2-fd52-412b-89c8-afe9f155775b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3258f92-48f2-45d7-8856-289a332f29e0",
        "cursor": {
          "ref": "fd1369e0-bb1f-4f2b-a3d7-35ffff21ad6f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0c4063d4-ba1d-4644-bce7-030bcd536598"
        },
        "item": {
          "id": "c3258f92-48f2-45d7-8856-289a332f29e0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b737f3f8-0a84-47d6-b1ec-3b2a630ea5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457b0bb5-a745-4eb7-82b2-bdcc50161870",
        "cursor": {
          "ref": "0449cca8-58c0-4f1d-9f49-2be4a6de3237",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "84f3031d-07a5-410b-97bd-d0a5bd8de34b"
        },
        "item": {
          "id": "457b0bb5-a745-4eb7-82b2-bdcc50161870",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6d4ac6bc-c41e-49ec-982a-dd06d0ee3524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ecaa12-4899-4045-a5c5-c98f80475643",
        "cursor": {
          "ref": "72f2b3e8-3270-4767-a896-db83e0e5fefc",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ef5bf4e1-795d-4d23-937e-41d7add1e8ab"
        },
        "item": {
          "id": "92ecaa12-4899-4045-a5c5-c98f80475643",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bfdbd18b-f526-4289-8192-2e70ad451505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f73dcce-4ddc-49a3-868a-1a4d08cab771",
        "cursor": {
          "ref": "22019b14-8b3a-4535-8ba0-48b5be49af69",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "309959ad-0f5b-4317-9fe2-078634df74b0"
        },
        "item": {
          "id": "6f73dcce-4ddc-49a3-868a-1a4d08cab771",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6bcaf6ca-34ee-465a-96c6-1a5f43833d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7ef2e4-df84-41a9-a71f-6bf8404021e1",
        "cursor": {
          "ref": "505acf68-dc1f-47f8-aefb-d3687e729d4d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "23805545-7da6-4e27-a47c-39540fd1440f"
        },
        "item": {
          "id": "9d7ef2e4-df84-41a9-a71f-6bf8404021e1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d61e3384-2574-4040-b695-ccea19a41269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74cc7a6-d6db-4081-a357-d0675465d9aa",
        "cursor": {
          "ref": "a2d34dbf-16ef-4cac-9169-a3a95e393f5c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "47e748c9-a999-48ce-a346-dd001a4acc15"
        },
        "item": {
          "id": "e74cc7a6-d6db-4081-a357-d0675465d9aa",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "da2664ba-456e-4b33-bdbc-6141acd6dd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e6c22b-4cf2-4586-8126-573af3477717",
        "cursor": {
          "ref": "6eb3baaa-9fca-4b06-8c20-4871bfb701b8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e283a424-5869-4b7d-85b0-562c922f2652"
        },
        "item": {
          "id": "63e6c22b-4cf2-4586-8126-573af3477717",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "485d18ae-40a2-4a0a-81a5-a6a522da2e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a88801-06c6-451d-9e21-f78970c16473",
        "cursor": {
          "ref": "9728dac5-45ad-458f-8164-07dfa966baae",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aea56bb7-7a2a-475a-b4bb-451f5d8f3afb"
        },
        "item": {
          "id": "36a88801-06c6-451d-9e21-f78970c16473",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "01f0caec-b4d7-4dcb-9625-6bc7209d9ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa2ae27-2130-4fc5-9b8d-3d29e1889f9b",
        "cursor": {
          "ref": "c1c40e7b-81c9-483f-976e-81d65b2a2ca3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a551b615-a2b7-4086-a6ac-b3dfed3b75f1"
        },
        "item": {
          "id": "0fa2ae27-2130-4fc5-9b8d-3d29e1889f9b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "db29aa7d-94af-410c-940f-82b854702e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c620fd8e-c03f-45d7-9425-392bc7288c50",
        "cursor": {
          "ref": "60465595-53bc-4c19-b568-84a1b5b7fb3b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "23f27b9e-fd8a-4958-b476-f97d368b1f56"
        },
        "item": {
          "id": "c620fd8e-c03f-45d7-9425-392bc7288c50",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "db491253-2aa6-4ebe-947b-4d38504bfc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab0674f-6ed9-4673-990b-887a0e9775db",
        "cursor": {
          "ref": "9e0881c3-1055-4676-b3de-605150a4b203",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8d74f917-5625-4f7a-940e-d5fdb00e2f77"
        },
        "item": {
          "id": "5ab0674f-6ed9-4673-990b-887a0e9775db",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a20df8b1-f6ef-4472-b7b4-7857e997d0f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960bb5c3-5ba1-4c51-b4d7-63f1685254e0",
        "cursor": {
          "ref": "3d930a08-431f-437d-b6dc-43e404bd8480",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8d3ba13e-b7c2-4888-83c9-3cbe513a0e37"
        },
        "item": {
          "id": "960bb5c3-5ba1-4c51-b4d7-63f1685254e0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b11eaafa-e5df-4ebb-9c25-290a6eca8f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156fa78b-3207-460b-b0a5-18bc88e24640",
        "cursor": {
          "ref": "4626e3c3-a8ec-4f40-8f5a-d47c63a59f5a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "99216ee4-d52c-41e3-9a06-756d9838b405"
        },
        "item": {
          "id": "156fa78b-3207-460b-b0a5-18bc88e24640",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7e5f8958-fb01-4de4-95f0-6226e9fc9c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb9c0e1-1df9-4ef2-8c98-7c85c3175563",
        "cursor": {
          "ref": "d57c57c4-19d4-46b4-9d0c-65614d383e57",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9df62729-fb74-4774-85cd-42040728a01e"
        },
        "item": {
          "id": "eeb9c0e1-1df9-4ef2-8c98-7c85c3175563",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f9451c75-0cc4-48e0-9c29-219eb29acd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fc6b86-e8f4-41d6-979c-00007bf0dc5d",
        "cursor": {
          "ref": "79cbf719-db78-45bd-9aa2-6a6736e5a03b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6f43c241-873c-4132-bb7d-2dfa46d4e564"
        },
        "item": {
          "id": "81fc6b86-e8f4-41d6-979c-00007bf0dc5d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5b415836-93f2-4e68-917b-f0169f82106a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c831c336-7b93-4c02-b2fc-044b63f30776",
        "cursor": {
          "ref": "cd543000-72a3-4429-aa37-6a2ad58af748",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8e6950f6-cf07-47eb-9ee6-0b4cc2c8c5c1"
        },
        "item": {
          "id": "c831c336-7b93-4c02-b2fc-044b63f30776",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "073e3845-59ec-4aec-a101-117db498cd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc9fd17-e39f-4773-a796-37f132d4ca54",
        "cursor": {
          "ref": "36d97c2e-14dc-4bc3-8474-bc2cf0f5403c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "658c234a-3149-4ff7-bb39-78b3c66bee25"
        },
        "item": {
          "id": "cbc9fd17-e39f-4773-a796-37f132d4ca54",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "549203ab-d5de-4c15-ba4c-2574e5b88f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e44044-4794-40ff-990b-9762d1455688",
        "cursor": {
          "ref": "f95c0406-5401-404a-881a-90e527d1375b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c6b5f562-ba08-4700-91f4-3d774557124e"
        },
        "item": {
          "id": "74e44044-4794-40ff-990b-9762d1455688",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "07b3c81c-7bd3-4bcb-bc3b-5aa71f0861de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9d78b9-a281-4198-814a-0316974a2dff",
        "cursor": {
          "ref": "c5d48864-c0d2-4a04-ba47-a6cf2e1b82d8",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e072f6ff-a284-401d-9ddb-e6ea0cc33901"
        },
        "item": {
          "id": "1f9d78b9-a281-4198-814a-0316974a2dff",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8e08ab26-51ae-4a40-b85d-679e742a9d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cc573a-5d07-4689-9361-c55744c1d596",
        "cursor": {
          "ref": "547fbb4b-4bd7-4334-bf0b-cb7614a2d160",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "503f877c-1b55-42c8-ad39-8fe49cd9fafd"
        },
        "item": {
          "id": "52cc573a-5d07-4689-9361-c55744c1d596",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0f4d65c6-f4f2-4314-8af2-6a99487c6f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434ef001-b7fa-462a-9d24-8991946c9916",
        "cursor": {
          "ref": "7e2ed653-123c-4df2-8c00-f9f4d47139a8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "628b2ba9-dcb0-4d11-a9eb-b6b6cef93ab1"
        },
        "item": {
          "id": "434ef001-b7fa-462a-9d24-8991946c9916",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "953fbff2-ba96-45f8-8c1b-e05be06ba97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d382284d-59dd-4433-a0b5-23bdb9e224ce",
        "cursor": {
          "ref": "c8671ba3-4c80-49c1-abcc-1140ce9be32e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "76c42009-2f0e-467e-873e-0ea2d4879d79"
        },
        "item": {
          "id": "d382284d-59dd-4433-a0b5-23bdb9e224ce",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7466c7f4-fa77-4b8f-ba14-88b87e61a02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294938d3-190a-43d9-85f1-dd1575833070",
        "cursor": {
          "ref": "e5e343f8-84a0-44d2-850c-4853591c794c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "86d2bc86-5fe7-4708-ae71-285960552af1"
        },
        "item": {
          "id": "294938d3-190a-43d9-85f1-dd1575833070",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7f9e67ec-7e5f-4c82-b96f-f53b83779889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf67d7d-74ea-4542-a8f0-63468c01df4f",
        "cursor": {
          "ref": "352f5e04-a4fa-4c81-bb3c-46dfc90d5672",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2167d096-e3a8-474c-b95b-4840edb27ec4"
        },
        "item": {
          "id": "cbf67d7d-74ea-4542-a8f0-63468c01df4f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e8aa8af6-7201-4f12-a59c-4e361f67d6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4493e20-543c-465d-95a2-947c50815849",
        "cursor": {
          "ref": "72dbf045-1b6b-4165-bb4a-048b307befaa",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c4b3bc82-8420-42db-863e-8952e24b8081"
        },
        "item": {
          "id": "f4493e20-543c-465d-95a2-947c50815849",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cd596082-cb2d-4337-9bc5-6934d9c9aedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1c899a-d1d6-4d89-9f68-672236420ff4",
        "cursor": {
          "ref": "9c623d89-5a4b-4b22-a081-94595662a2a1",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b3dcd780-1a6a-41fa-9c3a-e09de747629e"
        },
        "item": {
          "id": "4f1c899a-d1d6-4d89-9f68-672236420ff4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "72f93557-9fd3-47ae-a675-7dbaa75fd099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58b9c7e-b2b2-4003-bd06-875c977ba5fd",
        "cursor": {
          "ref": "3364c59a-8c7e-4cc1-89ad-43154b514e60",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "431452ca-adad-494f-b871-b6805bf5f194"
        },
        "item": {
          "id": "e58b9c7e-b2b2-4003-bd06-875c977ba5fd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5a15c987-d9d9-4b54-983f-9da25f1fbf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6a8b04-fe66-4a87-896e-fb21396df867",
        "cursor": {
          "ref": "1b769f72-7de1-482f-8e3b-63f3640422ba",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "743f982c-1d87-4540-bc87-c907a49b391e"
        },
        "item": {
          "id": "1e6a8b04-fe66-4a87-896e-fb21396df867",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "36c4927a-34a0-4c40-a722-e8c8308a2768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4f4b13-c857-4c4c-8c39-5059e5c12c91",
        "cursor": {
          "ref": "22050d03-89c5-4d03-9823-4a151f1fba18",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "83a78b4a-49d4-4bfc-a74a-baaf13dff48e"
        },
        "item": {
          "id": "cb4f4b13-c857-4c4c-8c39-5059e5c12c91",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d94074fc-adf2-4558-bd46-25f88efb407a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f4ed27-c4ea-4fb1-9aaa-8e04ffdd6049",
        "cursor": {
          "ref": "1717247c-6f9d-4b48-953b-764b095b3605",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "12d55bb1-7390-4219-b0fe-3452dc3dc267"
        },
        "item": {
          "id": "74f4ed27-c4ea-4fb1-9aaa-8e04ffdd6049",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "882702bb-4d4f-4a79-84d7-e7b96a418bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038b4931-ee6c-4b7e-9519-c7c145a28713",
        "cursor": {
          "ref": "54c71bb7-fb51-4855-9fd0-9f42961fc6f0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "52c03c49-377c-48ee-ac90-37ac3785964b"
        },
        "item": {
          "id": "038b4931-ee6c-4b7e-9519-c7c145a28713",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a48142ef-b949-42bc-be0d-b82eb96052d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf064878-c6e0-407b-bd06-e6a7d0bc67a5",
        "cursor": {
          "ref": "743b6117-eace-4cb4-a42a-6013c8329589",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4790bc69-dfc7-4b8e-a2cf-4af629689342"
        },
        "item": {
          "id": "bf064878-c6e0-407b-bd06-e6a7d0bc67a5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f7385654-fde1-4605-8817-ae63ab0a8a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c072df-933c-49d9-bf94-bca535e1c0a5",
        "cursor": {
          "ref": "2918a6b2-2f7a-4a73-bbc0-d2409a939af8",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2f794190-8976-497f-98a2-3d2538788d51"
        },
        "item": {
          "id": "a1c072df-933c-49d9-bf94-bca535e1c0a5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f78b3bae-ce7a-4d50-a5d3-b8d268aadd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1290fe-f8d2-436a-9c9d-3bcfc7fa6138",
        "cursor": {
          "ref": "06eae50d-5ea6-4e74-aa4d-3a5236150995",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "115cb0fc-b8cf-4ce5-8bb7-99ca19f89bcc"
        },
        "item": {
          "id": "5d1290fe-f8d2-436a-9c9d-3bcfc7fa6138",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "01fe2310-84b6-4abc-8d32-dbc59c72e859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709c305d-e37b-4680-be85-0d5aa16e711a",
        "cursor": {
          "ref": "7c79ec06-826c-45af-8fde-3a81bb68c703",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d85e2fbf-7a20-4741-9197-9fb01a173821"
        },
        "item": {
          "id": "709c305d-e37b-4680-be85-0d5aa16e711a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1a9ca23e-814f-436e-b104-5f6757507bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37860d50-43a4-4d65-ab25-abcb1308c1f9",
        "cursor": {
          "ref": "6e323bc3-64fe-4c0c-be9a-f0ea1a11d514",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "783c9c59-61d3-4c1e-b042-4d9b743ee28f"
        },
        "item": {
          "id": "37860d50-43a4-4d65-ab25-abcb1308c1f9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "83cd2aae-91bc-4e7c-bb49-a8bef89e1ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffd9954-0fd9-44a5-b56b-78099391d19d",
        "cursor": {
          "ref": "ef918456-8304-459f-84bf-6254fb31a42c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cb639da9-8d30-47b4-94f2-4faa42155cf7"
        },
        "item": {
          "id": "2ffd9954-0fd9-44a5-b56b-78099391d19d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "80876460-d915-4c5c-bda5-a8c8640797e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faca3c3-a2a7-4a9c-8b6d-01251d368753",
        "cursor": {
          "ref": "9bffa400-7bfb-45b8-84c6-4b6605d157b5",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7f66ca54-3662-4b6e-beff-fbd5aeb01590"
        },
        "item": {
          "id": "1faca3c3-a2a7-4a9c-8b6d-01251d368753",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0436c5fd-0c0c-42a8-9678-4d580d3856c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed350886-608d-44a2-a75c-d941cf5b0988",
        "cursor": {
          "ref": "27b840d8-0ca3-457e-bf26-ad3f787c5b76",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "36424e15-2a36-438b-9660-0224a05aefbb"
        },
        "item": {
          "id": "ed350886-608d-44a2-a75c-d941cf5b0988",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c1528df8-9439-409a-9c29-73ec2c7374d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba0fddd-bf38-4d55-9a78-e939dc4f1f82",
        "cursor": {
          "ref": "435b9300-28ab-4a1c-b754-59ed1071513a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d1f31276-e1aa-461b-9dbc-c24b427f803f"
        },
        "item": {
          "id": "3ba0fddd-bf38-4d55-9a78-e939dc4f1f82",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "079ebc6d-72aa-45cf-b9b6-abe7da4034c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e59011-859a-48c6-87bc-651836945a5b",
        "cursor": {
          "ref": "311e46bb-a639-4cad-985d-3ebced2b0472",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "86a5824f-0fee-4e72-9967-1188b18ca71a"
        },
        "item": {
          "id": "c0e59011-859a-48c6-87bc-651836945a5b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "665672a1-35b4-453e-9a63-43ad18e0556c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587d26af-e876-476f-892a-b7cd1fbd8486",
        "cursor": {
          "ref": "6d10c63e-b181-4313-85bd-8136c2523635",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "df2d35c5-20fa-4393-98e2-76523d87d162"
        },
        "item": {
          "id": "587d26af-e876-476f-892a-b7cd1fbd8486",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3d91ac09-7d38-4b25-9a63-f63ce473576d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2016dd-3f05-445e-adff-0528b9f896f2",
        "cursor": {
          "ref": "e0ac033f-8d26-4cc0-95c1-ef43f76bbac6",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f83a2ed4-7516-4243-8e51-c629ef31262c"
        },
        "item": {
          "id": "5b2016dd-3f05-445e-adff-0528b9f896f2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0f571425-338f-4513-b94d-479a104e0335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48381c6c-2cff-4ac2-b283-dde7164dea35",
        "cursor": {
          "ref": "0efbae91-3e46-4aa5-bd93-d7acd1a2741d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "42ee7fb8-2ab2-4f11-8882-0ed8b7a325f2"
        },
        "item": {
          "id": "48381c6c-2cff-4ac2-b283-dde7164dea35",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "83da2641-48d4-49d3-8e74-0611edab8571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3defc17-5d8c-4efa-9c33-c0199e0f699c",
        "cursor": {
          "ref": "af475ea7-ab55-4fe4-a4d5-18b1f856589b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "60c472ac-0c7f-430b-be69-215376300b64"
        },
        "item": {
          "id": "f3defc17-5d8c-4efa-9c33-c0199e0f699c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fff765be-d6dc-4afd-a99f-b95327dcb4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910464da-3604-434d-afbf-d7f6b94e7601",
        "cursor": {
          "ref": "9df1201f-0507-4483-b86a-73339734b36d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c0c8ce49-be7e-4872-9696-880e8dd86112"
        },
        "item": {
          "id": "910464da-3604-434d-afbf-d7f6b94e7601",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fd2ee4db-db5e-4ac3-b304-ca461ccaa2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab42b17-af5d-4517-ae85-45e621b0c1a0",
        "cursor": {
          "ref": "c1e8692d-fd6e-4fd9-9efa-fc89f4ae4fc4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b7a6d3fd-2f21-448e-bc72-ab4f94d19a4f"
        },
        "item": {
          "id": "5ab42b17-af5d-4517-ae85-45e621b0c1a0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1d62b0a4-db72-46c8-828f-64740ab5bd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9f863e-2d43-4f88-af62-8978accf26a3",
        "cursor": {
          "ref": "04268aa7-b130-48cc-a35f-882ccf4cd54b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2a41060d-c785-444d-9c8a-9d541f911cbc"
        },
        "item": {
          "id": "1d9f863e-2d43-4f88-af62-8978accf26a3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "aca91794-ac06-4b3a-b1bb-130f92439cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baa095d-1e7f-409b-b8b1-3ed2655f7d0a",
        "cursor": {
          "ref": "519a2f20-92cb-434e-8dc3-904d1f462a0b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "19f837df-8622-4466-a3f0-6e8c119c96d3"
        },
        "item": {
          "id": "8baa095d-1e7f-409b-b8b1-3ed2655f7d0a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "62008079-dcd3-4bb8-99eb-6e0b85b6a24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c89b3f-64d3-465c-9029-fb8b672cbc98",
        "cursor": {
          "ref": "0aa2c35f-4178-4b78-a6df-df76c17be7d4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4f7ce677-2f6f-4ec7-9590-540291094757"
        },
        "item": {
          "id": "65c89b3f-64d3-465c-9029-fb8b672cbc98",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d18aa7e1-23d1-4831-9d42-d853c3af1040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dddc641-3791-4ada-9dd1-eb81127cdef9",
        "cursor": {
          "ref": "2c26e21f-e0bc-4950-8fb4-cffaccd36e42",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d6d5cda3-1169-437e-89d0-28ad921fb6f4"
        },
        "item": {
          "id": "5dddc641-3791-4ada-9dd1-eb81127cdef9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2bcded37-9347-412d-a2ce-664096ecd0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf7d825-8834-49f5-aaa8-baf25ff5d038",
        "cursor": {
          "ref": "2cc03025-9ca5-4575-a683-3204bd7bc085",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ae8199af-3fca-4a78-bbca-b680dfa4e962"
        },
        "item": {
          "id": "7cf7d825-8834-49f5-aaa8-baf25ff5d038",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c1e20cd4-aa6f-4fc9-bc22-89d2e23db3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67698a11-1a99-401a-9193-8f709fb57fc0",
        "cursor": {
          "ref": "109e642b-f620-4335-aa7c-2dbf230425ef",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8545eb15-6602-41e7-a3c8-fcf53357d027"
        },
        "item": {
          "id": "67698a11-1a99-401a-9193-8f709fb57fc0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a868ba5c-f07a-46f3-ba9a-ebeb9c851f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efac8bc-fed8-4942-9ce6-5aeaf3f84245",
        "cursor": {
          "ref": "b109c2ff-238c-41c9-8215-69492286efb7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "afc76c4f-1284-495b-9c3a-af0e437acbee"
        },
        "item": {
          "id": "8efac8bc-fed8-4942-9ce6-5aeaf3f84245",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5a9ffbab-df4d-44c6-86a5-5cdefd29df55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15a6e9f-07ae-45bc-b585-3c175baec0a3",
        "cursor": {
          "ref": "9c7b9a8f-2ff1-4691-8e28-8b57d6f77347",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9b7925e9-ae9c-432b-989e-c981baab1e20"
        },
        "item": {
          "id": "f15a6e9f-07ae-45bc-b585-3c175baec0a3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "99291da8-0167-4bb8-b775-d014117bef1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8d87d6-5463-4147-83c3-724d49a1825e",
        "cursor": {
          "ref": "542dfeb6-3788-45a9-8dab-10629910e4de",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b3580a5b-62c8-405e-989c-d0792c34310b"
        },
        "item": {
          "id": "5b8d87d6-5463-4147-83c3-724d49a1825e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "43291eca-f97a-42bb-8663-a40add6ec587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28111bd-d455-46a3-beb5-7f72ab8ba184",
        "cursor": {
          "ref": "eb4df377-7cbf-4ab5-b4b2-7d04c0bc53cb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6da336ec-4e92-4439-88da-9f85a2c98634"
        },
        "item": {
          "id": "a28111bd-d455-46a3-beb5-7f72ab8ba184",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "449b36a6-2ad7-4fc5-895d-0affc8229a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cda005-6697-4eca-9a94-075a7b17aad6",
        "cursor": {
          "ref": "32da206f-e369-4322-995a-a1ceb6526a87",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ee143948-bc77-423f-8b1a-763eb5f24691"
        },
        "item": {
          "id": "23cda005-6697-4eca-9a94-075a7b17aad6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6c2215fc-57c0-44dc-80f5-cfa106f70ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37384095-030a-45c8-8840-94de5027aa5e",
        "cursor": {
          "ref": "e1e872c3-6cec-41d8-8bf8-85aa429b9c46",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "408691c2-b92e-4ce4-b656-5efeb22d72af"
        },
        "item": {
          "id": "37384095-030a-45c8-8840-94de5027aa5e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b6d217a8-4316-4b87-bd9c-53bbc93dc995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45d7ee8-7888-4434-8488-a5f27f24484d",
        "cursor": {
          "ref": "07727c70-9e41-4641-b838-bdff5e94a14b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d0596b0e-4ee1-45d4-bfde-a2aedf7e6c96"
        },
        "item": {
          "id": "e45d7ee8-7888-4434-8488-a5f27f24484d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "68292b5c-546b-496f-9f93-d5e6fa66e1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e669dd3-a876-4979-abc2-34c462315a56",
        "cursor": {
          "ref": "4d930e77-6afa-4de9-8852-3af76cb39a90",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "162940d4-b3cf-4a3c-aa19-058ce78346d7"
        },
        "item": {
          "id": "4e669dd3-a876-4979-abc2-34c462315a56",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "03cf416a-201b-4100-8231-755eb068ed79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b025078b-77f0-4b3e-8b9c-6839581c6f11",
        "cursor": {
          "ref": "3ec73d26-eda7-402b-9fad-fa64696d6f74",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "11aaf17c-f035-4ef6-be1d-eb87c8bf94fd"
        },
        "item": {
          "id": "b025078b-77f0-4b3e-8b9c-6839581c6f11",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f33a9aab-683e-48cf-ad10-11d89a5f7669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f4f1e2-3536-438a-b625-216a56ec1da2",
        "cursor": {
          "ref": "3659c76e-2e03-4266-a885-e291ee5d6d84",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1e14d9b7-b292-4b73-b949-6c0b625a1a7a"
        },
        "item": {
          "id": "82f4f1e2-3536-438a-b625-216a56ec1da2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ea67f76f-f492-40c2-8a3c-e23cd5006ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2683662-af5c-4b12-b946-38873073e58d",
        "cursor": {
          "ref": "503194b1-391a-4d97-8ce3-be3876a0767f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ea63f782-d576-4c7a-83ef-2329d95e4aac"
        },
        "item": {
          "id": "a2683662-af5c-4b12-b946-38873073e58d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "07c4e31b-5bc1-471a-b22b-7f5f1984d988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9272a8f-6b2d-4007-8723-38876450a6d6",
        "cursor": {
          "ref": "f5c93625-c219-4ca2-8c40-554d414de30f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8d15662c-060f-4f69-875d-2df5d97d8f55"
        },
        "item": {
          "id": "a9272a8f-6b2d-4007-8723-38876450a6d6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d9261af0-b7b5-4e5f-b916-212c69e30f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0876c910-9397-45d6-8276-59abc731423f",
        "cursor": {
          "ref": "64dd64d6-d8ed-4e1a-ba33-36626074d2f1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3b7b0a84-0edd-4d5a-b5c1-32ae928b331f"
        },
        "item": {
          "id": "0876c910-9397-45d6-8276-59abc731423f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b3f64131-4d8d-4c36-a8ce-831c63881fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b60069-892e-4147-a829-8d692926b524",
        "cursor": {
          "ref": "89c10fb2-1641-4616-b705-e30a8304db27",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "55a02152-aa28-4b07-a4d2-22fc26fca9b2"
        },
        "item": {
          "id": "74b60069-892e-4147-a829-8d692926b524",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3d299009-8131-4c4c-b9b9-55e7a47285f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4247dfc2-3f23-4596-9c59-d1ebbf4bd7ab",
        "cursor": {
          "ref": "8aacea52-41e5-43c8-85e1-a18bfe755dba",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "731b2f29-3650-4709-8600-def732fa8b3c"
        },
        "item": {
          "id": "4247dfc2-3f23-4596-9c59-d1ebbf4bd7ab",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "82b793df-0e08-4434-aa1a-c3f9ae36cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92991ff0-a654-4c95-bbe8-efc6bb982083",
        "cursor": {
          "ref": "141f28a1-ee5b-4c0e-9fca-4a072495b0ad",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "87411891-d31e-432b-81ea-f05c6671c64c"
        },
        "item": {
          "id": "92991ff0-a654-4c95-bbe8-efc6bb982083",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5fb6af2e-c25a-47b6-9f7c-ff3fb5d12f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3c1c56-164a-4dd0-b1df-f6b0934d7cb3",
        "cursor": {
          "ref": "647da25c-dab0-4764-8c80-06f2b9464381",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a04cc7f7-732b-495c-a69e-c6d5ec04da12"
        },
        "item": {
          "id": "9d3c1c56-164a-4dd0-b1df-f6b0934d7cb3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b96ea734-6a0b-4015-99eb-e6fa96fe27ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35845f1-cbee-437e-b943-9d77dbcec34a",
        "cursor": {
          "ref": "4ff678e9-46f6-47b4-87a9-f0259259d6f4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "12aff4d6-ae55-4ff5-89a6-ebab519e72c3"
        },
        "item": {
          "id": "c35845f1-cbee-437e-b943-9d77dbcec34a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9b52db17-8f10-4362-a626-f96582cbbb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23c7d7c-f073-479b-af4e-e26d5acf9c52",
        "cursor": {
          "ref": "d3177a57-63c9-46f3-99c6-317276ffc4b4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5c2c8880-e8d1-4c3f-8bfa-e6c728d7cfc7"
        },
        "item": {
          "id": "b23c7d7c-f073-479b-af4e-e26d5acf9c52",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e6167709-14d3-4751-8ee7-4111ca9d0f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2373aa83-f020-4a69-a8d5-6eab2cebc41c",
        "cursor": {
          "ref": "85fd26c9-1b37-4a36-af09-d13c7257da31",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "595bfd89-c3a3-4439-949d-13c74b0aca00"
        },
        "item": {
          "id": "2373aa83-f020-4a69-a8d5-6eab2cebc41c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8b8f2c95-f0ec-4bb0-9218-1b6bdb638329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71597e50-10a6-4273-9e6a-a2efb55d9801",
        "cursor": {
          "ref": "515c316e-2dae-4af1-9b31-e7fb2b6efa95",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "984ca3c2-79d1-4305-9767-ac4bb9165459"
        },
        "item": {
          "id": "71597e50-10a6-4273-9e6a-a2efb55d9801",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8a85b324-eb67-49fb-95fd-0b038a1a5789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a44cae-12a1-4cbf-87e0-06aace7ff738",
        "cursor": {
          "ref": "8427c4db-0723-494a-a9a1-e885e4bdb3dc",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1f56bdd1-144e-4806-83bb-71d7948845b2"
        },
        "item": {
          "id": "f2a44cae-12a1-4cbf-87e0-06aace7ff738",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "46c25a0e-371f-4031-8069-b517f4c350dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a96675-ceac-407b-989e-17e69a652fea",
        "cursor": {
          "ref": "7591da56-37d5-4932-ab08-7a6e6be03961",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1a74fd7f-7c0f-4c14-8b38-80f3b8c812b9"
        },
        "item": {
          "id": "34a96675-ceac-407b-989e-17e69a652fea",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "14df348e-7787-4300-ba45-9831f43cf938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6af2eff-a864-42b8-be56-6848c99ce02e",
        "cursor": {
          "ref": "0a2e7a14-99f8-49c0-9866-9535a6cb3571",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "59c26038-c0ee-402e-98e8-023c4df715e0"
        },
        "item": {
          "id": "d6af2eff-a864-42b8-be56-6848c99ce02e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c5aba855-8aa2-4349-9a3f-0c6ff1c37322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948fa62c-d166-44dd-b6ca-000eaa647618",
        "cursor": {
          "ref": "6e1affb1-84ee-4800-b4be-38266ac3db72",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "99aa93d6-8e1c-4435-8aa4-e0a30149c120"
        },
        "item": {
          "id": "948fa62c-d166-44dd-b6ca-000eaa647618",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e954a838-f240-4182-a943-92754c11fc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfebf0a8-f470-4fcd-81a8-cb959db0dbca",
        "cursor": {
          "ref": "294616ee-c95a-4911-8ee0-59515e42743a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c2fdb04f-4040-4690-b8e6-53747279ea96"
        },
        "item": {
          "id": "dfebf0a8-f470-4fcd-81a8-cb959db0dbca",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a9de6dc0-ae49-4431-8c08-c7fbc00c07e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa28b01-4b69-4896-ba6d-fd7c74ab9361",
        "cursor": {
          "ref": "8d5f57e5-aee6-43be-aee0-bd09523ca806",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6e7cd24c-3c26-482d-b043-d2c84985f4fb"
        },
        "item": {
          "id": "8aa28b01-4b69-4896-ba6d-fd7c74ab9361",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b27fc2f9-a1d6-47ea-8458-abd06d0d824f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760cd1b9-40cf-4259-aba2-63799744d2a3",
        "cursor": {
          "ref": "75681957-216b-4b52-a3e0-c43b7ed7032f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3bda88cb-fef0-47c2-b533-9274bd866f53"
        },
        "item": {
          "id": "760cd1b9-40cf-4259-aba2-63799744d2a3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e18bd919-6fdf-4f09-86c0-c943f4ec44bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f5e9b1-6340-498a-81af-c492d8905049",
        "cursor": {
          "ref": "56ebad79-d159-46ab-8de7-cb115d275283",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a9f9faff-5306-43b8-bf63-8c55d6a5bc9e"
        },
        "item": {
          "id": "29f5e9b1-6340-498a-81af-c492d8905049",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9b95fe16-9b6b-473c-9b62-b3bcde16c7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2b7100-561e-4951-9530-bb2f6b6b89b9",
        "cursor": {
          "ref": "0a27a4de-b7d8-4589-a401-fa212b399029",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "183a13ac-5d00-4b7e-8b10-a1dfbbe00dd5"
        },
        "item": {
          "id": "fc2b7100-561e-4951-9530-bb2f6b6b89b9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b3be112d-1498-42a8-8f2e-7142f7d4d15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e95e6c-1515-4431-94fc-a7865424a027",
        "cursor": {
          "ref": "f3604ffd-27c6-4539-b3ff-50d11fbc7adf",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "75824b97-510a-46eb-a801-cef55f33a8ee"
        },
        "item": {
          "id": "45e95e6c-1515-4431-94fc-a7865424a027",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "09c31feb-b068-4def-8398-5b958c8ef1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03ee3e1-6982-4346-9431-9b4ef238b2b5",
        "cursor": {
          "ref": "9a293929-59f1-4d0c-bcf3-c6be86510efa",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8818d406-bd0e-4e3d-b73d-da63db004486"
        },
        "item": {
          "id": "f03ee3e1-6982-4346-9431-9b4ef238b2b5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1d5f49e8-0120-41cf-b5c2-591ef2ec357e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbed7d4-07c2-4671-adf7-126f55fc9614",
        "cursor": {
          "ref": "83067a14-dfff-46bb-8d50-ff93f783cd1b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "74421036-a2fc-495a-8b1f-98bdd35d9eaa"
        },
        "item": {
          "id": "bdbed7d4-07c2-4671-adf7-126f55fc9614",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "947f1ced-d1f9-45c9-9c79-48936b723802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7098fcc-9245-4dfb-a2a3-58d12fee038a",
        "cursor": {
          "ref": "0e90b7c9-2522-4f6c-abd4-1f7dbd4b2770",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5bd31a0a-16e1-4b8c-a94a-538908b9ae22"
        },
        "item": {
          "id": "c7098fcc-9245-4dfb-a2a3-58d12fee038a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "47db3006-c393-43d7-aa5e-29795ddc2447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b32fde-834f-4e74-832e-fde955147757",
        "cursor": {
          "ref": "0ce02832-b7ad-42ed-a115-abdd7762a160",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "36c9475e-e46b-490d-a1e3-79f5b3da0feb"
        },
        "item": {
          "id": "92b32fde-834f-4e74-832e-fde955147757",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a5254171-971d-4db2-84a4-a28124993541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30c7bd1-d773-405e-975b-53fa27408d34",
        "cursor": {
          "ref": "98330ae9-87f9-47f3-a9e7-91d429ec7a70",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8ead8f2a-9be1-4276-8be4-d0b871e0c733"
        },
        "item": {
          "id": "e30c7bd1-d773-405e-975b-53fa27408d34",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e976719a-1438-4479-a332-bd29135ea3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834111d0-c92c-420a-993b-85095b24596e",
        "cursor": {
          "ref": "96fb5d94-8fd1-4475-a7d7-fe6580093d64",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "55e8cd30-f6ce-44d1-8f4b-9a545ed3592c"
        },
        "item": {
          "id": "834111d0-c92c-420a-993b-85095b24596e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "95edbb5e-4c2c-4d9b-95a3-4ffa58d9c85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc27480-8b5a-4155-999e-0e6db870e933",
        "cursor": {
          "ref": "4f25fe0b-dcb1-4079-9f88-c306b620d272",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6621ae6e-9c71-470b-a288-aa0b2ccbcac9"
        },
        "item": {
          "id": "ddc27480-8b5a-4155-999e-0e6db870e933",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2b1a081e-b867-486a-bc2f-e680acc5d375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e4cb98-079c-467e-b72f-5d864019fcd8",
        "cursor": {
          "ref": "e6ca76dc-345c-47ae-a32b-d775edcd0a3d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "666370ea-0944-4043-9033-c97b9c818da0"
        },
        "item": {
          "id": "b3e4cb98-079c-467e-b72f-5d864019fcd8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f9e9b84e-2dd1-430b-938e-08cfbd66a2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76540e04-06a3-45c1-89fa-4108c473f0f2",
        "cursor": {
          "ref": "b3ecad64-2d35-4142-a973-1b52d550a4cf",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2447c078-291f-4fd6-8323-d8fcabbbbc24"
        },
        "item": {
          "id": "76540e04-06a3-45c1-89fa-4108c473f0f2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "35203620-323b-496e-9d54-3e388231eaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a782179-d5a3-480e-b52e-635f030d10a6",
        "cursor": {
          "ref": "39930373-503a-48e2-a453-f15212595612",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f17e2179-768d-43b9-9437-5c791afae92b"
        },
        "item": {
          "id": "1a782179-d5a3-480e-b52e-635f030d10a6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "41033d4b-3f8a-4d2d-92e6-76e8681c8dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df3ef67-ba64-491e-b6be-ebf28ece5c1c",
        "cursor": {
          "ref": "ee0f8e2a-685f-4052-a7d8-a361e6417ca4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "376f9d69-e43b-413c-836d-9f944a8abfbc"
        },
        "item": {
          "id": "0df3ef67-ba64-491e-b6be-ebf28ece5c1c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3cc91952-6939-4b61-ae74-657847925e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb85c0e-2a8d-43e8-bbb2-2367835916b8",
        "cursor": {
          "ref": "8bb6fa2f-3b10-45f6-8acf-1a8b8b3e1b74",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4dea31fe-a4a6-4cf2-bbaf-dde963530883"
        },
        "item": {
          "id": "afb85c0e-2a8d-43e8-bbb2-2367835916b8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9117eb4d-7b77-4bdf-a3a4-d55e3d5e7afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8581eb4-419e-435f-9bef-a2da1b9bbc9a",
        "cursor": {
          "ref": "ea6f9549-c2a1-497b-8a6a-bb26a389ed55",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "dc8b239b-f683-4425-b132-4545b4c7a9ca"
        },
        "item": {
          "id": "f8581eb4-419e-435f-9bef-a2da1b9bbc9a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "601db3db-3376-4940-8b20-c74040e40d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb2d11c-a205-4a02-9260-d0c28e4b2fb4",
        "cursor": {
          "ref": "4e6fc36a-88d9-4b1e-ae2a-9632273caaf6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "797c4a0e-13b5-4d5e-bc12-af95fd82858e"
        },
        "item": {
          "id": "2bb2d11c-a205-4a02-9260-d0c28e4b2fb4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4f354c46-6a0d-4c19-ae96-68094df20d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053bf819-d4da-41ff-8835-7a90f0e3351b",
        "cursor": {
          "ref": "e79e59ac-5b87-411a-9ab6-9fbaf362fe49",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b765eb8f-4c07-4dae-a7c6-61f95f23f1d0"
        },
        "item": {
          "id": "053bf819-d4da-41ff-8835-7a90f0e3351b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c2098456-699c-4e48-bfc1-48a9a4f8a700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd4c6ed-0e0b-49f6-9a9f-da85fe5aecbb",
        "cursor": {
          "ref": "d1bad510-eacb-479e-a962-14075b377672",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7c95c622-f1c6-444d-a41a-75b7908d1c59"
        },
        "item": {
          "id": "bfd4c6ed-0e0b-49f6-9a9f-da85fe5aecbb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f59212f8-8de9-4ee7-97c9-3da2d3ffb7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684c8669-17fc-4ba2-b5a3-e8f51c21030a",
        "cursor": {
          "ref": "c1810400-8bfc-4036-bef3-d1dbbe780e4f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c10eaf1e-41b8-488a-93e9-f3b43fcccde9"
        },
        "item": {
          "id": "684c8669-17fc-4ba2-b5a3-e8f51c21030a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "052033c2-4848-4cde-853a-99a1e4faa5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2640a43-1864-49b1-9b6d-a0f8ebc53d99",
        "cursor": {
          "ref": "11950a82-2115-4a5b-b085-c7b5de8c2a01",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ae08abda-df38-40b4-9950-0901078c9804"
        },
        "item": {
          "id": "c2640a43-1864-49b1-9b6d-a0f8ebc53d99",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4b013c11-97ab-4481-9931-43decf8ef272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5bb94b-2851-4fc1-8206-d77b324d3d6f",
        "cursor": {
          "ref": "a1266f97-8cc1-4418-8f4d-c336ecd84ad3",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3126a46e-59f0-48a6-80c4-16327e215009"
        },
        "item": {
          "id": "5b5bb94b-2851-4fc1-8206-d77b324d3d6f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ba3b9a3b-b52c-4859-8d63-3edf5a12b47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd34091-e32d-4f54-b2bd-27d0b5338a0b",
        "cursor": {
          "ref": "66c5b726-e111-4581-b6bd-00af8c4f2ee9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6edd0c17-b5ec-4707-9e60-e0cd18213c74"
        },
        "item": {
          "id": "3bd34091-e32d-4f54-b2bd-27d0b5338a0b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "93942400-ebee-420f-b796-e3a635de0fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227c0e82-9d24-40df-9228-290d208dd4ea",
        "cursor": {
          "ref": "09e28a37-6e81-4b3b-bdfb-a227622fd5d5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "aeab935e-a0bc-45e8-915d-c909a73f4132"
        },
        "item": {
          "id": "227c0e82-9d24-40df-9228-290d208dd4ea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "44bdf106-1c2f-4840-978e-31fc54252560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26dd5a0-1244-4397-a054-31f1138bb982",
        "cursor": {
          "ref": "3d7d895f-595b-4e7e-906c-8e8b4deeb63c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5055076b-88df-4621-a943-55b29ff01b4e"
        },
        "item": {
          "id": "a26dd5a0-1244-4397-a054-31f1138bb982",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6f8b528d-76a2-465c-a568-dc61501769a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aec1db2-371f-4920-ba40-61808ce63cc4",
        "cursor": {
          "ref": "081eb629-9df2-4f0d-a737-de99e905e5df",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "02c2e85a-f72a-421b-a539-21396ff9c758"
        },
        "item": {
          "id": "4aec1db2-371f-4920-ba40-61808ce63cc4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9b4ee8e8-ef08-4279-bb2a-c57820621994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63e348a-2890-43ae-be63-1c8298b64151",
        "cursor": {
          "ref": "18f02cc4-65da-474e-b4b9-50e2ec571885",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "deca0f51-022a-4787-b166-7f6fa1882909"
        },
        "item": {
          "id": "e63e348a-2890-43ae-be63-1c8298b64151",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "63261c27-b07f-4b64-a71f-f288a42fe9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f706cbca-1288-4ca2-abf0-445182bb9508",
        "cursor": {
          "ref": "0e50b725-3773-453d-91eb-f8259a930935",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "398b0e5b-ef8f-40db-bf90-041c202abc76"
        },
        "item": {
          "id": "f706cbca-1288-4ca2-abf0-445182bb9508",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0ec400f0-8660-4577-8970-3816b4550a26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba5cf5a-ef55-49db-9dd9-594477b391c2",
        "cursor": {
          "ref": "a85e681d-8a07-4ba0-998e-033ed1ff5d09",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "37a594ce-8476-4ed6-89af-1945e941500a"
        },
        "item": {
          "id": "6ba5cf5a-ef55-49db-9dd9-594477b391c2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fb73ade0-e116-4738-bea4-9c168898e6f3",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5f9372-a25f-4432-a7c2-3a48dc786edf",
        "cursor": {
          "ref": "a7f00ad1-3e4b-407f-877f-810a73e6bb60",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8f4fa410-7559-44b1-a6c7-e27357855166"
        },
        "item": {
          "id": "af5f9372-a25f-4432-a7c2-3a48dc786edf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "97b036f4-d26c-43eb-b1b7-f131ea016015",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "741d04ff-75f2-4dbe-a824-5379c60259ac",
        "cursor": {
          "ref": "c2ab9e6d-7750-4ad4-92a7-894907d40abb",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6c9c94fa-ad49-4917-8a24-82b362d595ff"
        },
        "item": {
          "id": "741d04ff-75f2-4dbe-a824-5379c60259ac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3c7b7952-625d-4ae5-95f3-17620f843cbe",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb1614e-5d16-44ee-bc77-e1d155115534",
        "cursor": {
          "ref": "e563b1a7-0003-4225-983a-e7f6c1c7c783",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a0055021-2eae-4f52-9fff-55c0a4e58ddd"
        },
        "item": {
          "id": "9fb1614e-5d16-44ee-bc77-e1d155115534",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0c60b05a-d457-40bc-9c92-1ad1601bcc96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb1614e-5d16-44ee-bc77-e1d155115534",
        "cursor": {
          "ref": "e563b1a7-0003-4225-983a-e7f6c1c7c783",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a0055021-2eae-4f52-9fff-55c0a4e58ddd"
        },
        "item": {
          "id": "9fb1614e-5d16-44ee-bc77-e1d155115534",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0c60b05a-d457-40bc-9c92-1ad1601bcc96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c626574a-92cd-4bc4-b76a-c5a5dfbd5906",
        "cursor": {
          "ref": "e6d26faf-68ff-4763-b096-6c0bd65f0365",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a10d78d0-1b76-4d2a-a9a4-82bd525585c1"
        },
        "item": {
          "id": "c626574a-92cd-4bc4-b76a-c5a5dfbd5906",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8ac134f5-c25c-47ca-9dd6-86e3b466806c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56cf4ff-6f83-44ca-bff3-fb20a9e35296",
        "cursor": {
          "ref": "409a4c0c-9592-4530-8b82-792397113034",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "bfe50d24-81fd-47c5-9aed-dfd1b0f94b2f"
        },
        "item": {
          "id": "a56cf4ff-6f83-44ca-bff3-fb20a9e35296",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "26a061aa-e9ae-40ec-971a-3dabfac0f64a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}