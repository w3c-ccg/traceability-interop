{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e09db452-b451-4c28-bc2f-fe32808d5eef",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cfa6b87b-fe62-4192-9aae-55033fae2787",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9a6d692-8aa0-44b1-937b-459fb5c70e9c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "02338dae-4f4e-4863-ae45-b92488f522dc"
                }
              }
            ]
          },
          {
            "id": "51d006ca-26c2-4d66-80cb-50e717ffad6a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ca429d4-9f43-43c4-902a-ea6e01295cd2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8e5a0e25-8801-4725-9760-b7d38351d4c6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3e894afc-1577-4a33-8f6b-ce1d33037b8c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d778657e-75a9-46e7-ab60-8c0259c849e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c588a62a-4196-48ac-a15c-cd3b77a6aaa6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37947c84-b543-429f-aac1-2c155646ac6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "268e1e24-3813-4b3d-a88b-096ffe156c42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4cefff9-ad04-4ae5-a5da-0791817664a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9756765f-2a09-4590-9a78-6b609042ea04"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "daeca3dd-72ee-4478-bb40-2835e38116ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e32e17f-8702-442a-ba9d-6a07347489b1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25a44b20-7850-4557-8ecb-ce6333c01b26",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d5957816-555d-4b9f-b029-f8452659786f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e9346b6-1e32-4090-bedb-2e0c299d928a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d2531fd-249d-43f6-a69b-1b045ebd5422"
            }
          }
        ]
      },
      {
        "id": "5524736e-afff-47df-9a39-577825c8225e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5aaf2a9e-c4fd-4089-8dbb-c621e57e2ba4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "899315a3-c8e3-4424-b7cc-08e37a81330d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2edc7b31-8fb8-47b7-9db1-8707a82617c1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de43132-2bc5-4f1c-93b5-113fcbe9b959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c069725-313f-46e9-a268-c8746385d91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6efa454-ee0b-433e-b3e8-0dbb93ac4e83",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538a69cc-7db4-4cae-9ac4-41c43db933e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1dc2938-016b-482b-9828-e08b7c6b1e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d86a281-86fc-48a1-a738-d1aeb7ecdf73",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f9592b-2625-423f-aeaf-678889e29517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4de1b96-4e16-46df-8c14-31086a0c9bb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c43028e-e1d1-4bdb-8771-876515bdc498",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77c7c202-4fa1-499b-8eca-aa8576eb51e0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc3a5b8-58c6-48f7-b072-0e42420ac112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3603c51-238c-4762-87b1-88d042219f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae69917-5acd-4b91-bcac-b3454d211c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d856c94e-2f73-4715-9f30-1659b23c9c92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6be8fbf2-224d-44ce-96af-49c288ee0051",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48084db3-6f1d-49cb-9280-84fefbdf0552",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07732bd8-9e56-4128-a319-3b2375edfa13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c513da32-3615-4245-afa6-29574c2c51a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf3cf2c2-e642-4631-8002-98997e50e335",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "057ef28f-51d7-49bb-ad61-8fa212241c04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81427f09-c953-4507-83e0-eebe4302a67f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e360c833-a563-49ff-b1fb-b4ff4dde7326"
            }
          }
        ]
      },
      {
        "id": "ee39f60c-6d13-4d78-a6cd-ac90960e1698",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a3e7f861-9ca0-4714-82af-bc34e2839a5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdbb4331-a1ca-4e84-8b51-021c1ae0f26d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0b6e4ad2-c1a2-4c43-b446-4771e1c2b290",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6783f8c8-4219-4e99-9029-2e44931b0ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59276dd5-2689-47ac-97ad-605c8f0868b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3559d5f7-c338-454a-9d05-399cf51f9484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1c18ca4-f1e1-4418-8454-29b36805a37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f25ec6-1e9a-4a47-bd5f-ec5a0703cc1c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95cb7b5-aac0-4b5b-af21-8f0f1fe07df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e192d7b4-36af-420a-9658-863ceb47b852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676ff413-a03d-483d-b12c-1ce1439f3134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a6f7972-3571-4e65-a433-49969b3bc644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0925d6-99ce-486b-ad0e-78894eff503d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0948345c-db06-430f-8ca0-7f4b58c3d872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd99d713-2b2d-4120-ad64-dbd0fe744ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a300ee4a-8e9a-49ef-ac32-8bd7c9bfd1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04007d55-9e24-4609-b2e4-24a13b131751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db69892e-00e1-4e2a-816a-e3ca9dfed182",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce899cc-a393-4741-8aed-69c2a53fb5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d35ce3c-2b5d-4815-946b-4d53c860df32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb88dec7-3a3d-48ad-bbca-86501f527f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f6c7983-3787-434a-b54b-6f394eabe0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d817ef-509b-400b-bb61-1cddbfe1d694",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875ac94e-5442-4304-b4b9-4396df98f9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e123f0a-a332-446b-aba2-ec2c78a72a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0947d2-8f6d-42e5-9bae-1f51ed0b3cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ea93ee7-570d-4c8b-ad8d-22e24b285f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351d4efe-af2b-4285-b8de-5c5f150bd2b4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40a1962-0698-4173-912b-7e3fd6c9f2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03fdc1f-6170-4146-b380-0e9d3d7c7289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139da866-8cd6-4290-9d48-433c57e25ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15c2ff43-bd9a-4621-9f8d-f630d217a1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a8ea5b-f737-41ac-8130-aa671fb95972",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71b154c-a43c-4c10-afb3-c53122ed9246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bceded4-00d8-4529-aab7-6c6de83c2c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730fde70-dabc-491c-bb89-16d671eb09fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "074b4785-7e24-4e7a-a4e6-6dc52a5a85eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b74775a-05e7-4c31-9fbc-b69864f59d93",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb6915e-320e-46e9-8501-4bdd87d708ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2558e3bb-7588-447e-9f66-782c2dc0b2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865593ad-da75-4a74-95a6-a71a7038c102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a66dfede-7101-4c1e-80eb-cd47b558a58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd424876-c2b9-441f-8152-9a82690cbd24",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018fbc93-593b-46d4-8c40-7dffb6e85500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99af33e2-fdb3-430b-8a80-6b345aaa070a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5215e040-d2fb-4a93-953b-72b191ecb456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf71efe-5fb3-4700-a5ae-d46fc435c955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7798c12b-5ead-428b-b2aa-5b0d0a5eb0a0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a193517-20c0-4c6f-bc1f-407d82759e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e30e362-48be-4f98-b6c7-7f97f158d483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008ca9a2-8489-4830-a2dd-b3e0de172a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1884a98f-2884-4e11-a4cd-e29204b51a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2293bcf9-dce7-415c-92dd-6ee8f829d1f7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb3443c-37db-446f-8c99-55007e33d060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1940afae-fe75-4e39-8da9-8f8f55605b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cc6e60-1031-4830-bbad-fe77a9083c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "848773b6-2430-4cc1-b515-652272785578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383f04f2-efa8-41c1-8957-5c2d34ae1b2f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f767b813-78cf-45df-be29-90d2312683fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4558411e-9752-47a9-a5b7-1ff81f467cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0146172b-4585-4a73-adc2-c8e66be19130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50caa4e4-a8a9-4064-8ffa-54bbc4d59bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da2722d-17a0-4d0e-a6f8-ab5329dbe155",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaad32d-c5ae-4e92-9ce4-943019aa8784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6407da-1784-4edc-82fe-e3bccaf0c9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255e88bc-5dfe-4ed2-bb01-23e2e57d0514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65cf7c75-072d-4cda-beac-ee28d9a94377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe46990-d874-4b12-8c8a-008928a5ab87",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd85d976-5e2f-428a-a848-6cdf8333cab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715b48ed-61b4-4e25-91de-a7d1a0d37dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f689ef4-4ad7-4677-bec2-fbdbdef2d907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb2f0b1f-162a-49d2-8482-900abadf36f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf15426-7e95-41d4-885b-decbb2687574",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c400228-391a-44e5-ba39-bc64ca8ef532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb532d72-2329-4e3a-ba05-eafac704e63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfbe701-f47b-4ba7-bb26-2567572963cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26d2dcae-1896-4db2-907d-ba81c800564c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e746daf-677e-453e-88d4-e5cac1361d18",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa22d55-b77c-4b1c-a531-940c9628cd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c54a2c-f41d-40fc-864a-cdd16d21fd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a4aa06-196b-4f23-a4ae-54d003fd4c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "129a34ec-a0ec-4923-8557-db5d675c3976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb89a75-79d2-4f2a-aaf8-7794151e52eb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8965e43f-02ed-4e0a-9d34-3afcfc35037c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5072d6b1-5037-423f-ae76-d9afd96d0834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fc4c63-d966-4082-839f-23181e33d02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37d55759-c3e3-463c-8e61-02c5f352c30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d873346a-895d-4d8f-aabb-b1e2958feb90",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb810a5-2ff1-4eca-844f-837bfdee53fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442efb60-3d93-4f75-b41f-cdd1e20b268b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e0100c-ebf8-4dc4-89db-cbd2f5e84cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e210c5f8-f0ba-4cc0-b007-198b2c5d9d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce180e56-1407-4315-a07d-564fc37ec380",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ade2e3-e844-436b-912d-3a8ec2b0bd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d21c2b-622d-4d21-b25a-6b5b798b8395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9493cf72-224e-417d-9e20-6279d8cc0142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e035cb-39b8-4b6c-b6dd-79b987c95658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01b4ca1-e08e-49f1-b84d-80449cc45ff4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cacb56-a679-4d67-adae-3d7e6c1f7fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b6f384-fadb-4dd5-858f-62aac05e6e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0975fb42-f54f-413d-bafb-006db3c78122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee9ef37-7326-4187-9b68-5e84997f83d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15e65b6-32b8-4b11-80d8-9f063764c010",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfd39ee-4f5e-417f-b9fa-d79dc1797452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e625e17e-732a-4cd1-b638-c43c5aafa85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87988dfc-8890-45a1-a8f8-deb2da7a6b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ea89db-905f-4482-a29b-e084c9f6cbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024cfef7-25a4-4b83-84c7-09823d204885",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31a362a-5600-453a-8409-39835a06ad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baae524-ba87-4423-85de-b1001f615f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa9a0ad-02d1-4f40-8e4a-46ff240f6edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8f9647-2d21-4585-9c03-5a617e2312ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a5ac62-2ca1-427e-9a9c-66523baed003",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ef6c41-8dca-4656-b387-35dcb6dfc3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34883d42-ba24-4e99-a56b-b452b3f837da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f951c7-6c1f-4929-8e80-cff9350457c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c20ee4d-2584-45ff-9b7c-39b53f9cf5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82974d3-d240-4881-b0dc-13883ee23fc7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d59157-e11c-41d0-bb3d-1dec40577ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409e3ef8-f8e6-49ca-b59a-900c91234fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9505d8fd-71cf-4470-a881-c6d81815f60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "94be87c2-49f5-42bd-9a37-aa2bcd620b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8fa3ab-ac19-4948-9bc3-465fe0a16dfb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5222c39b-404e-401e-a371-49a9ec947e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0172826-5dd6-4a5b-bdb1-702dd72086e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4b4c52-74f3-489e-9819-16566998f173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d935a2-1729-4edf-9a12-e47355f3d411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e1c8cb-1b06-40bb-ac56-ac936972a8a1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92978b97-30d2-4597-973c-e2a652cf4a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306115d1-3eb9-4c67-bbb4-b1c9b7d9618a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f02872-7d53-4d39-856e-78a17c91e203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "afdc4b1a-1e2e-4692-a90a-e78d030d3e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b4dbbf-e216-4667-8914-17b02b49f408",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79be430-3cbd-4885-9304-676442cf339d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fa0869-8edc-4ac0-ac20-54f513b9a735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7e001e-4afc-4b25-a1bb-b1063ed1e6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db1356ea-d490-470e-adff-e2f88d4b36b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1f8db8-a62b-42df-b70f-cef7f40514e0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09254bdd-5787-46ea-a25b-ccf31492d08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47d0a11-e512-48e2-9c1d-9986b04ed919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9985901-591a-4c9f-a407-ff614899676b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c817f8c-7552-40b3-938f-1d0e1f387704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334eeb8b-49d7-4019-8f30-d7b479c975f9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483ec715-84d6-49ac-acf1-04efa3744a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c34844-e249-4e67-a57f-b3bfd2c46528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e971190c-d67e-4cf8-8530-4090f52470ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6601e94-7d5b-4d12-9d9e-447114c7fe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c151319-04b3-4cda-b475-452fce9a2406",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434c7b5d-b02d-45b8-a9bf-34ffd0e79c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83ccedd-a23d-4db4-8437-b589189920d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3c0cb9-a94c-4a1e-9bd5-73dfffbb8a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "41116eba-69b7-41fe-8aae-773e728a54be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7949daf4-a2f7-4cbe-b47c-85f4734a1e82",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa16e52-dd60-4c38-8d30-3566d3cdf8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5af2e2-a438-4689-9091-911752315da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374fd408-74ec-4f15-9bc8-6bdbb17f46e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed41f7c5-704a-4dd6-8a19-70c67fc1feb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92395795-bfdb-4db6-b245-6b54d3aa887d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbda9ca-4223-4d97-8dc8-f2f996a3e26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9141997a-87f2-4195-b8b2-44098f9c6e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecd93ea-11f8-400c-a2d9-8c322b7b964d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e24e9482-1ac2-441e-ab3f-1f30076bd4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedd69ed-00c6-4e05-9c98-eb5fc2743da3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7f0a7c-55f8-4830-858f-f46d22cff4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7418450c-a1b1-4098-9706-9af7e9196620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5a5982-4dd3-4ae4-84a8-83d340fc2ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1afd41e-0e71-452c-9ba1-132db872531b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba4dc4c-a2da-4609-98e3-9014767a9bda",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440a496c-8341-4a3e-ae9e-37c2004510ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2443183-7ae6-4183-b0cc-074b67497e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d047510-424e-4e87-ad98-14127aa58d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecf3bd4-73a5-4cd5-9392-aaaa5f44696a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80cb5fa-6c0b-4861-9b95-818b7d1e9fbb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93cb212-d02a-4318-b212-d019666f9daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb28eac2-d0a5-4dd6-8202-79dfb5aeb935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75765722-2fe6-4bf2-a370-9310bc326ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "13d5123d-41d5-4067-83be-b658fd505954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615b9445-5f53-45a1-aa2e-6444d20d6b3a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd6b553-6378-42a6-be78-417c939cfa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93c8a795-d700-491c-8999-b68e483f5e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed95551-c698-4643-a25c-8a08a462b283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09744675-b3fc-4fd8-9a02-4899dd1f8d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2354d81a-3426-46fe-8b3f-7c9df5298c7e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cf9b5b-e979-4288-b1fe-8f5e44be16a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22af8197-8e4f-427f-a5e5-9bf354930519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7928c30-cf75-446d-81d6-97b59b865c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba00e411-5d5a-4f3e-9781-392238ad7069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5769dd-ad4e-4248-863e-5eef12e9c237",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7efcc5-69e9-4339-a04c-4bcac580522a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1628654e-e6fd-42b0-a083-7f9e6140bae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc087127-ff7f-4843-a2d9-539069385a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "93bac92f-5193-4ddf-a7d3-8970db652216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7bc07e-5d61-48b9-a46f-665f821a15cc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71659965-55f4-4050-a9c8-9afc1d5f598e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc9b03f-5807-496a-a805-02844c1d5ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43028764-5adc-4dbe-ad9a-347f9c96ed1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c09f443c-dc80-462f-9ec6-c50d6f4475a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac7f6c2-c287-404c-8132-6340aadcfc02",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcf993b-640c-45c1-a732-bb973594e272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14a6cba-09ae-4602-b102-ff21eb62171d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6472062a-b92b-4828-b928-e83355cb8757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d159698-2905-41f6-b9f1-af6032cec7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be83a5e4-7744-4179-ade0-086624575042",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acfdb5a-6715-4792-be65-caeec89a7203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fe4415-e6b5-4043-a007-8ec9a5a63a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7e42ca-06db-48f7-9ac5-e6505820dccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "edf9c591-41a6-430a-a462-7305f62e891f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8300ec7f-1a5f-4fdb-a5d7-e150bb5e2e8a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3b384a-2229-4a5e-89b0-ba349356e633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208140d1-2a84-4e9d-bc5f-6b1f69dc001c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f988d124-fa8e-4a9c-bed9-53f45e2720a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "09ef707e-cdb4-460a-9a7e-517b07e54933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64907cc-1b4a-4102-bde4-2321d62d3901",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7eb7862-71e6-4e9c-85bb-4e316051b1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d66a8c7-20aa-4d64-b21d-8b19f9e5ead8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbc3f05-525e-466f-95d5-7c859a3d4cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "402cef34-8c2f-4fc3-b1e4-db4c856e825d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ac00ca-b510-4767-a39a-70de25e68d85",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abeeb65-9604-43d2-8d6e-ba4270bb96a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec4fc18-98a6-4a45-8acd-73f4e977b0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2735fb6-5e30-4884-b0be-d603764ed10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a40e181-9002-445e-a091-4d58dd2c4f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106ae7bc-129d-4dc2-b448-5562a2047f3a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c20dbc8-e340-447b-bd6e-bf2922064d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd19d2c-10f8-4b1f-b17d-47ded737bacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f1c092-2298-47be-947b-a6d573900e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96089ec3-ef3b-4919-be29-00b4e2e53ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe5ba16-e176-43aa-82c6-5c03c64b473c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f28bad9-c083-4604-a60e-399e7f67a428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c71594f-0c0a-49dd-8bdb-e777a238e17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b797733e-8a63-48ce-bbf3-8f0cd97512f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fccc555-dc44-4f83-a7f8-118cccc213ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d976e8a-055c-42f3-b5da-63c1f440d1e5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb1ef7c-290d-46d1-b9e7-21fba5040ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215697e3-0ace-429c-8235-0ffe0f56a542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1f7782-e4c6-4595-8ff1-9639070ce78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04e2eb02-d1f2-4bab-b073-76014fe8415b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a761fff-298d-45e9-be62-3582eace66ab",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d846c07-475f-470b-8ae5-2f43f93e5c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7875a886-1802-46db-bb63-395bb0421913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f185bc-4b7d-4f8b-9920-0845a701b371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9f413a-71a7-45f5-847a-12fe6b6f271d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ca0964-8856-4be2-a94e-841ab48a38e0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa98e17-2a73-407e-8491-5bd503ddfc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a851f04-c2d3-473f-8fd6-5d40982ce5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92aa3a0-5a5c-4880-aeeb-0cbc7449a6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "160ee5c2-4863-4036-ad97-9d5ac670981f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab328436-955e-477d-a1c8-1164cd8db0a7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b741bca3-b517-4fe0-9878-95390b16ff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a36c7b9-1bd4-4b7c-93b1-985a66d4245f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bdf793-9ae2-4037-9883-29a9eb9b89b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cac9e5d-d348-4174-b606-17ed70b2a75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71cfffa-66af-4d25-8fad-5426dc6b0ce1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40becee7-4a9c-4eba-bf2a-cd76dfe3cfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa01b643-113c-46b8-8ffa-847a27445513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac13dc01-bda9-46ac-a3cd-e839732ba585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "78fe7d74-27cc-4cc3-b64e-c5cb7136e9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c4f6c6-1025-4367-a4d3-657d99ee87f7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afed380a-29fa-4910-baa0-34686cce2090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7739a540-59d0-4437-b62f-d115dd2300e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0874226-a87d-4e85-b207-08835a4da4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f78a228b-a0ff-4c5f-9dd7-974910c73688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659d95e7-1d9b-4e5c-804f-560024f4971e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d3c3e1-323a-488d-a6ea-03ca6f3e1976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a821ca22-3405-4b29-b525-ebd12ebbadab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fba98a-ac6a-41b5-88de-d2b7a09251a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98ed7383-42a5-4525-817d-e9e007c6ae37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744dbb55-205e-4f5c-adbb-97e65e0aa61a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daa70e8-9bc5-4f02-b99c-523d89e4b49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7421df6-bad8-4499-9bb4-6c6469d22c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceae84c-6ffd-4328-96b6-e1b6139cfb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfdcce8-2b2e-49d3-9090-c5637d329b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec791651-6ce8-463e-9707-fb812d2aec0c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa57797-b5ac-489f-b05c-ec2862951e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbfb936-3513-4ddd-8c82-4d312acab30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edce1b88-24fc-400d-89e0-b6604f5c3cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9d866e-6932-4d50-8671-790b44416a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a5a2ce-b536-42b1-be07-0c6ac59b8bf3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e219dfd4-b994-44ce-b562-317eab08674d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f36945-24fd-4cb0-a17f-065763acbccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fcc1f6-507a-4bb9-a872-fae2a2d98fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e18f909d-c537-4bea-a4cd-fb999f70b07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f220f6f-4f5f-4131-b12d-0ec7d413f3d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9ccff4-9a7c-486c-8beb-048b8eb05ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a3e4d3-0129-4f9c-b865-30c42e9bf158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b917b09-92cd-4da9-91a3-395c98e4c5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdf4df7-a660-4c07-8f80-57ae37d0b86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c975077f-0d56-48bc-a142-85e0f60947b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f0fd33-d80e-41ee-99b2-4b152404552c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72906375-b5be-4f7c-ac16-07a1be17ed95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01512ec6-3560-436d-b3e1-82b4bc60655e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39229c64-d766-45da-933b-e1786bd80f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50f2d9d-98c2-4486-92fd-88c1b5a9702f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8b2c84-3340-4493-a21a-02be5707e95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cac4aa7-33ae-4246-b7bd-9dcd0701e7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70d6761-a916-4753-a6a0-2df6efc0ac4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "032d6f6a-51f7-42ae-b720-19879206c07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e80ed07-f3f1-47ce-a59e-be94020bc345",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291d77ac-8319-4310-8e91-97cd9a0e7bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ddfd5a-6f5a-4842-871d-e4185c9fd5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2930db6-ecaa-49d2-a5aa-e6606b888a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01ae8379-c4bd-4b70-b689-eda3fa6df4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9580e0-d527-47f9-b2f2-2eb61fef7b08",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23dfc6d-795a-4319-ae61-22c108ba2e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1e7d25-e26b-43a4-b7f6-1aca9062e0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7087ea05-2e43-4e4e-8127-577a2ccef4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e03d90a8-94e3-4d90-a7fa-07ef545e0eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e36699a-45a8-4725-9b3d-81a2dad272a1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e3b930-a5b8-4100-9755-02af58e7e35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb32d5b4-5185-4d22-b554-f5b05e7c899d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a919885-cabc-4286-b959-f94dfbfb7fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7a9af6-3909-4801-b8a4-2a67834a9e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238fed25-4c5c-474a-8e84-6b4df4161384",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be4300c-a3ab-4deb-8087-95b2cbe40a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d388d15-fe5b-4e0f-bf45-a7c94af58c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2810d34-4576-47df-9c69-f0a4ba2d43d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3dd474-2d55-4a65-aba7-88cbccfe8b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93162d1-425e-436b-b18a-ed8233247785",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03d5cf6-b987-442c-894b-3dccd162af3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1aaeea-f1cf-439c-be24-88b4a9f4bac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7543f1b1-b165-411b-b5a8-ebbe95da6de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a61d007-d9d9-4e30-bf84-e9dab80a8757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98666af-b4b0-42ea-95e2-69776c540f21",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d34cc6-b8d8-4ffc-9979-046d785c1397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb096372-86a9-47d5-b012-c8765c833c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9de4fc-f2d7-46e1-898c-35ae6cb2d359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af2e6a5c-922a-4451-b38e-05b8a0263f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0e5143-75f8-488b-9b29-11035e8afb07",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e77ab6e-0480-49b5-91ef-a843bcf57487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87dcc7f9-4d2d-41a5-91ad-7763e57d6bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace86a17-40c9-4925-b9c0-81b841928785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d462d49-0bec-47dc-84dc-a394b01294c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240df2f6-7bb0-401e-a5d4-e081406d94e3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb51bbae-d5fa-4e32-9842-fe033cea58e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3417450-ab6c-4d3a-8e59-1fcc327f02e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d042a16-2826-4a34-884d-9964223f0df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc5f939-40a2-46b3-8a27-fec2d6a2bdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b94dd23-389a-4332-a4fe-d4d5dd9af718",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5e24d5-4eae-42cf-8611-49a3e184b440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a0d5a7-2478-4714-990f-57b72529e536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29196509-e072-48bf-9129-82673ea9b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "12188016-2e37-4d5c-a18c-0b3f121928be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f62be38-12f1-4eac-a6ff-d6faf8ff6f83",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ca41ad-2011-4639-8f26-fe4c1258b036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c99da57-103d-4110-861f-4f1c2b1c7b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732928f6-7898-4872-a84f-ee97d684a380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b27df5f-cc1f-4189-8f58-db632d2e25fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa2f7d0-d051-4347-a9fa-076511073cfb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d750156-5efe-4ed9-b323-37f430eae91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c40a27-8487-40d0-ba6a-1e674902e728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050c3e0b-2f1e-47c8-9950-301faee057c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe06753-57f4-4d49-81dc-e81d86ef932f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec47a58-5910-4f69-aa07-31cd31f41457",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c20021-b84c-4797-b69a-c26d39ca48b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addae7fe-93cf-40c7-a27b-ea8a66b105ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5bf71c-6aa8-4521-a1e0-0bff94b50c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2e3db7-5227-4d91-84a6-0e6cfd88b26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256f150b-fa11-48ed-a086-7467e406217b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9cd320-139c-4c30-97fd-e35847928137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f423cae0-e8bf-4fb0-96d4-cd29a818391e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca621c9-b454-49fc-bb60-ba76a47bb962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87dc614e-b66f-4d42-bc59-c2b8e4bf6d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81335b8e-ae6c-4c74-9206-6517ccfdae0b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69d92c8-4aa3-4a22-a35d-2c6ebd2a894c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac9c4e9-8259-473e-bf4b-77f4f8a584a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8e5326-98a2-4537-900c-58491b217cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81ae7bfa-eb5b-4905-af02-be13fd4b6cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72190da7-a2eb-424e-8b08-4df7393ec62d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd99e4c5-963a-4e98-b3bd-c6fb7e5e981a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1169fdf-c7c8-4117-9923-77833b31e7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af168064-916c-409b-affa-f934b3d92601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7370ef-1c58-424d-bee3-1133459a71fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67a9c11-2382-4908-9ed0-93717befade0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447f8676-c3e8-47f4-8d56-e3d92ee5c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222539c5-2704-4e11-ab6e-6d5c62a69601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdea9ec-de7a-45fd-abf0-a6a1d6bba39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dd7118-1494-4a8e-bad5-d04a297be329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54a21d5-fb42-499b-9548-5c3a8e40c5dc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9194bcec-0b06-4759-9d33-e3761949e181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89eb7301-85ca-4d44-9475-da5122d1d69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742c8086-b27e-445d-b717-ecb8874042f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6a3910-a501-4715-8729-f6e584e57b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff237bd-c9fe-4e30-8ebf-44a888889992",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c183dfa-fde6-4c1e-a882-3e314924cfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722c8654-479c-4df6-b58b-83b571a8f7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b27908-8cda-455b-a050-20e401abbc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b537714-109c-4646-b8a5-c1d2fc299b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3b8c19-79e4-4f43-a561-e08d2d6a5ea0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d213251-2b94-4dcf-bbae-f4492ab3606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f31c78-67ad-44be-b169-d3a7f32287bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20720310-2a5c-4bdc-ad43-972f41e9d78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "491c8055-4fef-4b0e-999b-5e42f38dd6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41edba04-2075-4588-97e5-d79dfc9a8f23",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051f2761-0b6e-493f-8d75-b85941668d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3288089c-9f8e-41e3-bdc2-adab3c58c6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e643af9-f45d-4a4e-9b02-b29a9b80646c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa13d18a-bb9e-49a4-95bc-842651e8691a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfea7c62-dea0-46f2-a68a-ff47937b73f7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a868e7-6a1b-431b-af12-fa67c50ee168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb36bbe2-0a34-4516-a34d-e00912feaa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85bb732-81ba-4b2f-a0f7-434b84593478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbd05d9-1137-4702-b1e4-c3208f150889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17337791-db1e-4acc-ae36-78cf654b298f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84095275-7420-4cf1-87ad-a4805018d824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41028d97-8f3f-4c18-bd7d-01770587033b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0cd335-0efa-468c-8ed4-ea610966311d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9bf377-e34d-4c18-81ab-0e50e0030859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc222f55-815e-4d92-b588-c884cdc8246a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbc893b-8277-4c60-8707-502f65e8bf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0681dc5-25e9-43d4-8764-471f3e1e7cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43374eb-cd2c-46dd-a5fb-4160b9824cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daa80dfe-0f5c-4c0f-8a8d-dbdeaa35d03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6149a5fe-e025-4461-869e-2ed2beb861b6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3683fb18-4586-424c-a94d-a2dfb7459215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd6f238-d690-4ecb-80ad-8d8b385d2d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c48cf19-8ff4-4b97-bee1-a430ea99b514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cce6c71-3f1b-4011-bf00-9ab8c4afc3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad21abb9-9c14-4f71-b444-d3a105b675da",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e632dd8c-ef16-4119-ae08-5a88e40ec1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c115971-0e80-46b8-aee5-2b865cc668e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f596abd-0153-47cc-9c10-6ec138672831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d77c24-583c-4cc5-887a-57651caf5e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa2b04a-987c-4c9e-998a-8028d9973fd4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5353067-5319-4ece-b4d1-2f9824c7f058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d2d9f1-665b-477e-bf66-c8137f9ffd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0509a7-e5bf-49bb-886e-58a9c61692c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce4498e-8508-49a3-9635-897c1241971b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a483405f-1b61-48ce-ad8f-9c01b5e1dfa3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79ae04b-ed7d-4906-bbe1-2cae4be841cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bae7cb-e2e9-4836-aa13-9c86a7eb49b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb5e14f-8a20-4456-a40a-4bc6ef666e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd16139-4e8c-403a-be88-d0ffd2451611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae03d7a7-565e-4cd4-9529-25f049ad5637",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34f6057-20f7-4e68-9db5-67b7fc5edcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74c5b3b-9d5e-4442-9150-deda873866ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e11198-442a-4658-8619-bf9023a58b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "936ebf7f-370c-4259-b783-76e88edeba76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7d6fbf-07d2-4328-a63c-1eb7479188cc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24ee44d-ad9c-48d6-b47b-b922572af731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594cc613-66d5-4c18-84c2-81ea5d44bc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1401e3-09d4-4496-b6d1-6341f0f00e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "06cc161f-61dd-4cd9-b200-94e704732eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c6555d-1914-4f02-8a28-739528faea0d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411b8299-246f-4763-91ff-f20b6ffa73c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7123232e-2fe6-41df-86de-d9874ce486e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c22440-7d48-480c-9f4d-0b835d6caa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e401ffc-26b7-4d52-8afb-01cc36ca83c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a624439-8f80-42af-aaec-240538496288",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b036cc-5de9-40f7-87a1-dcea7ef89546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bad4cd-4e63-44e1-aadc-ce073938445d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4500ffd8-7038-4982-a28d-f7a6efe847b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d56371ed-2ceb-4c31-809b-136ef6f1f8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc14ae6-5382-4d36-a49f-6d73793e23f4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bacbfb-9ff4-4e88-a0bc-ed71d4da7184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc1886c-5f7d-4a5d-83f3-e198919fb415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37638dc3-ba40-4ae1-8435-10a4474654f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ba4087-8033-4ff1-b278-5cbd99d94980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec436d3-4330-45a9-944c-a37da4ff76b6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f99c7f-6895-4daf-a1f4-5dcf844b99ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a067353-f38a-4162-8160-9dcb7d6a8c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fe2b88-63db-488d-96f5-64e1e874b3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "43d27e60-ea6f-46c7-9482-60ffb683aea9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45363581-f0ea-4d56-8325-2d5c93a5b6c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1a40a26-da77-47d9-adc3-f8df230f4b79",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86058a32-06a7-443f-b70b-00e469af3c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af363697-3a03-47f0-9970-f81ea68b4e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b8dd96-7afe-4ed4-a169-0c8e5c97fa92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f44ca58-f768-4cc5-88dc-77ff6fe5fe68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "546c4faa-a295-4232-9ca4-d707621f6034",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5058eab-6ac8-4e99-9395-4951ebe59876"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc4010a4-220f-4d8a-b894-07677ad45fa7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "890d838e-266f-4f9e-ad84-703b5633d262"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1a23367-a0ff-44e7-8389-5e6bec6e0bfd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89953b69-b704-463f-bf65-d23e4ea179c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef7af099-6406-4ca7-bf99-224dde4e87c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f61c2f8c-edf0-4d12-ade4-f4d37ebb4910"
                }
              }
            ]
          },
          {
            "id": "ac988af1-e5fe-4001-8184-f60c27f5f162",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce8c646d-083e-4ab6-946a-ddaffe9beb9e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e72dd372-1442-4c30-aeb2-ab8a104b4ac5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f031719b-1039-4904-93da-80afe920129f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c1b2a006-4f72-41e5-b70a-c93893214086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee258f3-8d23-4d30-ab8a-d50d5b551536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1e2403-9814-41ab-a42c-3138a219899f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ca60c63-18d5-4cf8-8930-e6e71464f1ed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeaacc06-8b07-4105-844c-38147aebeea8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85644946-1817-476b-8f2b-b1a27f4dc61c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d24c3c4-189b-4725-be82-0d9582ed558c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10db0888-4de3-444e-945c-3b979ee41909"
                    }
                  }
                ]
              },
              {
                "id": "c5407ed7-f212-46e8-9dfe-d544fb563295",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a516f589-5b9b-40a4-941e-ccd6db9f5ab3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "410f2458-a812-4542-89b8-5e20779e4309"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfd26851-c950-4f23-bb6b-8de9bd695e28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fff57131-bd08-4a29-a629-2f360d3ef7e8"
                    }
                  }
                ]
              },
              {
                "id": "e1264d32-795a-4ba0-beb1-9e9d1cc6d284",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdb506b6-246c-4b97-969b-605cd581718f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf7b3786-9818-44e2-851d-4eef2dc51da8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff1f5906-8bf2-4f3a-9d99-e83fbfecef2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e0d4cb0-e23d-42b9-b367-e7e52c01f24b"
                    }
                  }
                ]
              },
              {
                "id": "1a596634-1c00-42a8-944c-e95f72f54b1d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c327aea2-86c3-4973-a301-3e010c07ffba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c192ea5-9860-4799-8327-93b30a8872a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfda3528-0e1a-4636-bbfe-04f717c562e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0215184b-b07a-45c1-b59c-5ce5ec1b76cf"
                    }
                  }
                ]
              },
              {
                "id": "fb36ae8f-bfe2-4042-ae37-389d864af0fc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54fb5b2e-179a-4414-9ab2-c1eb6cc3cffa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd3e3cc0-6d3d-443a-82f5-abd64b4bdbc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88d1cefd-07f7-4edb-81f9-6c8a35aeafdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6ce0d3c7-fd20-4919-983f-07c7d231bd28"
                    }
                  }
                ]
              },
              {
                "id": "3f67043b-69f9-4633-b4ae-e14c693fce80",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcde59d9-6282-487d-ae9e-3dafd9de2f15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c48b99f-68ad-4d07-95c4-cc393485bc1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ccf5ea5-a6bd-41ec-b008-f9612aa84e73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa549510-02a3-4233-baa0-d3d1551cb1fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16e033ed-153b-4902-9976-c647a709470f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4b7bc85-322c-4206-9e8d-6e68b49a5758"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bc77a381-b95c-4d16-a084-fa0446e822bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "043d5cd8-4378-47d6-8e21-5f01f7ed5f6e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fb99b57-1034-485d-96e7-497edd224daf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aed4a1d4-11b7-4831-9550-7368533248af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c51e446-de0a-4621-9e03-8a1ced35d751",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "592dfcdb-5b03-495a-9f7a-7c69965ff286"
            }
          }
        ]
      },
      {
        "id": "245392b2-bf7c-4be8-bc56-daf5c7896841",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6b716eb5-4052-47e9-b21a-770f12f12e8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cbd5c11-41d4-43cd-89bb-d62705333545",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da8e61a0-702d-4348-93ab-0cdbdd9c809a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f592f602-a5d1-4172-886d-8f14ea4ccd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f4524d-6541-4475-acc5-5b3c89be3e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8880ae73-02c7-4e35-bfaf-1a4e939cb8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a64c7a5d-3ce0-4c97-84b3-ec4826ce9ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a3bf0c-a14f-41e5-9ad4-a3e608eb04f2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd253a-4a65-4638-86b1-46a0afb70167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76047109-113d-45a2-b8f9-0c02ef0266d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5632e3a-88c7-42b9-a719-78b606cd68ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e64a179-6b5f-4bf8-a656-7d811349d705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fc9143-11a6-410c-8adb-1a62139d4287",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5576ee39-8a1d-4d08-b77c-945db2367202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee403ab7-21e5-49bf-a5f2-e01f6f67d31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e9361c-b5e2-45a7-9fca-9aff06ac23b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "444176f9-9a1a-45a9-9676-661565f15c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b603350d-17a7-4659-82f7-7f5468dbaced",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2696f46-6d14-4d64-b9d7-56408131ef58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e859375a-113e-4cf2-8fa4-5e13a9d4137b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b64175f-0f8c-45a6-b495-d1ee26725745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd77a8b-b2f5-4d5e-9e5d-7f440747fd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d719a939-5931-4da5-9d65-40a6a9c9680b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf219bb3-5d2a-4858-afd1-78e983e40d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b157e95c-64f6-4499-8c60-036452e6a742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97e71de-26aa-440b-b97a-2af52ea5ca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8040322c-05e3-49a9-b41d-15385340fd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fd36e5-3556-4be6-add8-bbbbccbd80cd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca64518-6551-4fcf-ad9b-fd6ac2a0dd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46e0140-c391-49e2-9d9f-a82c60b4cffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfe7fa4-2ebc-45a2-9178-3612e73348d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f59d7ae6-2787-40af-9523-c7b90c0384bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41e1781-aa80-4abf-9ab0-e0d7d50c3d12",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46d7929-7e64-4bf3-aa09-54d20e61e02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f873a44f-df88-40dc-bfd3-262d870c9feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d3de26-9042-48eb-aafb-f7a20f66aef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0679aa7a-67d1-4ecb-b653-76a0bf1bc8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69566073-7310-4cda-91d2-f1a528bca685",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318a1707-1f88-4102-92ca-f3f226ba74b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c9ab18-cc05-464a-948d-364006d0c22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c4d440-0597-41e1-a609-ce987db4b23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0a8b68-8205-4b16-b204-73fcfe5e9de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fae0cbe-64f4-41fe-a8f6-d6fd77a17943",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3545df5-6b76-4aa0-a3ea-2dcda0659123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432302d5-b731-4c45-88b1-f157b19ff4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec884a6a-566b-4718-b325-f1f30dcc84c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b12bdee-c128-4e7a-ba80-7e527901a8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e631df-c15e-4495-8487-7ad93db18c34",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270bd023-44ca-4177-988a-0755c81fbfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f543f5b5-e0f3-486a-aff3-a1bd13147afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64d4730-1019-4733-accc-fee1a3af7962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e840c029-a58d-4ed6-a45c-22832c7f0bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a52ba5-7a81-43f5-adb9-ade34fc411b8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6193f161-a28f-4617-a727-24a08277c357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8def9043-4a91-423b-ae57-9bf9ff0da2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9126cdac-8128-47c7-82cd-4a8d0f09e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a54169e0-ba41-417e-9fbe-23ed442438c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3491f9b-b6ca-41f4-908a-2357e928d04f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163b0d54-0fe7-4eb6-9b4b-a98374f3180c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d3f4f5-e3fa-4f33-8faf-474513976980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4da1e0-d81a-4435-9b9d-9ab399f2b30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69fa34c8-3b81-432b-b72c-733e2f95efb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b202a6-8fc6-4699-988b-6f0d6748e1cd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96cc3d8-9645-4739-ae09-84c3f50fe486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd7111f-57da-44c0-b3bd-709c8e53ea25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4855a230-ca06-4a50-89a9-ef18fddaf257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3122a7f7-1c4c-4e22-9328-7ee5e0084106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364d6f34-47e4-4a78-8022-04ad5870ec11",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be68ad12-66cf-4e46-9b30-888239408702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79854278-6851-4e03-90e1-332971871a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b9f460-4e95-494a-a0cc-888dc581f4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd79630-8824-4e03-8e00-323a3da7011a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5f6b75-2404-4359-8900-4f458039d22a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1f1d54-6033-4acc-b26a-ef7c3184a41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e6a776-7f74-4086-8ebc-2701ab3a6d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc11b3e1-3bf3-4697-812e-92d9e886b5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0112ad-33a7-4d94-8995-a47d22fcf7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2a2abf-13f8-41b6-970d-fc94842e00c9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bba6088-470c-40f2-a3fd-94118706c9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692962b7-9597-42ad-934c-6d843038b11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a662c61-9f51-452e-aea7-2e428767b834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9296becb-86af-48fc-9d00-3d82c624aeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe683d4-8ce1-4b5e-ba77-ec06395650e1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08c8f30-7a7f-4add-8425-fe3de36703e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d010aa8a-ff2e-460c-9583-ecb31df2c59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76bc4d4-8227-4d28-959e-0bbd4dff3a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a98cd91e-64b8-4e21-bc92-56acb39a66dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3e19c0-0b55-4d64-a59b-f8a980df065d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb53d764-b4ec-436f-9d1b-83f3d50f6d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db411e4-d3b9-4204-a500-c9399e523f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9004b5-3c3c-417e-90e1-a8677f549da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e60b2b10-1fb9-4713-a2e2-71801250c3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fbc5db-e886-4e96-9d56-21bb50615ba5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0fde84-7ad8-4920-92f5-f9f8853a23fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f73f8f-b5ad-4490-8075-14a490575414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3aede2-3787-4202-8af1-6a6e772d95d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b7bd4a-c767-4e1f-b9d2-2463b3c047c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de363900-9c77-4d29-bf4a-c892a4eb989b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864700dd-327a-48e4-9c6e-249664b396ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b32520a-2710-4211-8c73-9b0653a77950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cd36fd-0438-41ea-aacf-7c0ced7036cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c819bb-066b-4a5e-9e0a-8b91e8c7b579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5551ec8d-a382-4383-925a-fc271fb8231a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e87fc5d-a850-4505-882c-6646236a8af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed13dd8b-6d14-4bd8-8d9f-0a589902cfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e197b4f6-5a6d-42af-970a-40ce4aac7fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb753bd9-ec58-4af0-9e8c-32dea681936a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe9c1be-bfe8-4cff-aa19-f92f55cbef95",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4480d645-df9a-4127-a765-7113d5579ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb9eacf-9587-4c5f-9ee2-c46d61356cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a003f7-a1fa-44e1-9ff3-c703a63d8ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e43c03-4197-49dc-876d-af61d9610abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9025bb67-09e2-41a7-ba9f-df3e66e705fc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c2fdef-6a3e-44d1-973d-b999836ded66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6bb36c-c34c-401f-89ed-d6076c260406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e669a5e1-23db-4b27-ba85-9cfb7edcd360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc18c5f1-ee5a-4058-952f-a6890f48d794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab45b4f-489c-42c3-ae98-108fe1a0e6b5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61950e08-6ea4-4f24-8275-af46ece8246b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f1ff01-1eb5-4e74-bf3a-10a4876d5e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc87bef-2d32-4f8c-8f6d-1d6a54327f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1bddef-9f4c-4517-bb1c-c0faf7ae3ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5ec5e7-63db-41c9-8c36-9c59bf453f5d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37442be8-26a0-4ab3-b439-0cf1ececf01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a27bd1-50ce-45ff-b37f-f1b617260470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4baa8f0f-b9d8-4f80-8169-63201f45851a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4ab020-ea81-437b-be94-8966fd80de22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b5ef0b-2330-4542-9cdd-fab5adf6e83d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac36db53-174d-422d-bb85-8df6c32578bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b7ce0f-4cf8-4464-8b17-3a93cece166b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d3c9ef-a5ce-4c64-86ab-2982a3f4a3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7051148-a627-4109-8f6d-415d3bde3e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cb5f52-bee5-43fc-9741-4bedc272cb57",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd8e052-b16e-464d-ab88-1eee2f674410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51406701-918e-4abe-ba0e-3427e088a4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2e4db3-6c4b-4eac-8f00-f2d0389194a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72cb536-fe65-4c0d-abec-27195d9f9a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d363c78-63a0-44ee-ad57-2c7d1c049b2b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0df94e-c809-47ad-a8a0-a7cd9507104e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179df7c2-debf-4b5a-9a2e-20cd21ddfd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c650ff2-38e9-48b8-a5e7-0e5c3cbc87fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b115166-366c-4605-9f01-260a30628b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a6966a-1b53-4262-9f99-c98f7ccab865",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c13553-df92-49b1-9ed6-f9ea52e5d15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c52aac-df29-44d6-8d08-250eab8f18f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69015d21-c150-4c29-8bea-40484b01f42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68bafebf-24f1-461b-9afd-109d1760c91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2cb7e2-44dc-4c61-8547-6c7da3f7fe50",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba0ed14-975b-42a3-9055-a3e58db6af21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885095b5-4ebc-4be4-b780-bb44e0d425b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20f1036-f505-4f71-9bd9-115aa0577b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e44576-217e-4036-b0c0-40bffe8f91c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e875744-f3a6-432c-bb45-23ecad01b688",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06942ca-c5bd-4327-b789-ab2607fa51e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efff4f9-91b1-4b84-8db7-fa8e91a7467d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50d31f3-2552-43e6-ad2d-6e7019753c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b02d66-dd1d-4538-ae38-27d83914d791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f229772b-cf93-4219-bbfc-df1d3bbea2cf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283dba66-9e33-463c-94a3-39c10adaecb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a824d384-4dcd-42e6-a66d-e119769a5406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c56a80-38f9-48e3-aff8-cea817393d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a79dbfc1-51bc-4816-8010-466a6f772918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e741172-2be6-4833-8e87-3118b473bbbe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23634389-2b9a-4550-b9a2-45d20dc047df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fe68df-7e1c-4f26-834a-7e6ab0c7c2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa378a8d-d0b9-43c2-b767-4dc6dd2f5a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48566151-d7b4-4c3c-8a04-0c9ffc0c7fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a7412d-999e-4fc7-8b68-a3fb6fe0fd21",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6151cb64-b8d0-4e81-b414-54f3e40f783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5965b39a-fd8a-4f72-bd70-766337faf4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ad21ea-9368-47eb-8062-a985d601c7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32434df5-40b5-49e2-b58f-38b1beb837b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b2da3f-f756-4231-9302-2cad15a28b2f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69ea8d6-63ad-423a-8a81-f97680bebb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1875a703-9357-4190-8adb-54a2170a63d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720021a7-0d4c-4ca2-a79b-fe55f99abde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad40ff-4842-4d6d-9248-06ea4640ba42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7997819f-bbe5-41bc-8a15-e25c2339de35",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d224a8-36d2-4ec9-93a0-f2f1c51b9013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4049d5a9-973c-40f0-80d0-1d9c3d1b61e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfea539e-f5c0-49a0-aa35-7eabc3a2652e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4a01b9-7a9d-43c2-b90a-ad6574fdf78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68c250a-5e9f-4c4b-936e-f792e2dd3d43",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db70dfc1-46b7-485c-9f96-6088eaa675b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cab6e0-2f8a-4ff2-b7e0-4d4eb1c04b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5f3fac-31bc-442f-98fe-d6eaa951cea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4044e52-3ae5-487c-908b-6c4f85bb54c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00825110-be4f-4277-b00c-cb673d430e60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dd95fcb-94a4-48b2-92c9-c4723a438975",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a4d53c-00f4-4c8b-a9f3-827457db89cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "08165baa-5a2b-44f4-bc2f-26b897eed64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd38dfc2-9d40-4dc4-a855-4722dc2b2939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62be750f-74e9-43a1-8ca4-ea38c36e24aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "521188b1-1ed5-45a2-8a96-1b71de68d13b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "557c72c9-5ebf-411b-b78f-eb7db54667ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b37a9c05-384a-4d55-a047-fe6d42f0d614",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e259ef1f-cb0c-4d64-b259-7a00f640cacf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9b258e6-3d66-4d58-b07e-9a72932fe288",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2442df2-7707-40af-92d7-a4643e83e345"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa19a6e9-b07e-4307-a127-af9c0be74bde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bfb9739-eb28-423e-b3af-95f6e72da3fc"
            }
          }
        ]
      },
      {
        "id": "9ae23487-d28f-4691-8cf8-71ef6d4a87b9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cf060d7f-563b-47cd-affc-26b1d027c9aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72eb2f6f-8026-4835-9b85-83b5085ca534",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd04e9d0-925d-4579-9039-397017266686",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c57b065-a08d-44ce-848e-7ef7f3c50d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9aca9e-2765-4c5e-9038-0c16eabee9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7192b16d-293c-4a42-9671-f618435f0a18",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cf87b0-d6d8-475c-b188-529cf62887d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a12ae3-6357-45a3-8d3b-6fd3a8fb4d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe66a45e-dca5-4f95-8bd7-622cdad7eb26",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60295bb0-6424-499e-bacd-a03884b67c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a3cae3-28a7-4cf2-8bd8-1f4fad4763bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9424c216-4e72-433c-8657-6aefb6b0b29c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d095d2-8ee3-40ca-9c20-f4bf8d2adcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffe707e-87e7-493f-a2d8-64e60ff70be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66ad6ba-1e0c-49c6-82c4-875cd5d15f49",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96debb1-bd22-490b-b72d-56a107acfd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da177010-83d5-40df-ab03-e46c1e9138fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26c62f9-b231-4184-9e75-9d98aa77bdff",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643981aa-ad7e-4aea-b1eb-a51afb9ae246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70350621-754c-4755-992c-dcd42418aa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548c63b9-b24e-463f-99b3-ecf91540b166",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76de5e67-b833-4d33-9476-27a12083c12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2b9787-007c-4c7e-837d-5a0d81f70cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363d561c-caac-40c0-8d9c-5dc88656b5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2d5a91-88c8-42dc-97c0-82ed67b54006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fb3ad5-4c2f-4635-a380-9b2337e6ffa6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fec042e-afe5-43a9-bd5a-52f75629a37b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3dbfae-e3bd-4ef2-8222-7503d3207dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e919d81-2edb-4d3b-9651-dd4d4319029b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e640746-8a08-46ee-a65b-ddd6469b5837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43deacb4-1e8b-48aa-9877-f314ed0a3476",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ad8822-ab40-48eb-9480-13f0faa8ae16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a21eee-21e9-4469-a780-c82458b793da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074d5162-6a7a-4130-bf1b-64b1fd54afd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5d4e8f-05c2-4ba6-a666-25b4a4b79de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a4395f-300f-4d20-89e3-a19e33568b6d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23181960-369a-4bc6-b758-98ad4bf4644c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7097a5bf-9821-4366-89c6-aa81238c4b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67ee2c0-dee2-4217-82b9-0ea50977ec4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7788a2f-d551-45b2-8d10-24b992c23cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bba566-03db-40fb-982f-382c5b9fba9f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1077c3a-82b3-42de-910a-1aab6c042126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fad664-4ce6-41c0-977c-9946e087e5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5692cdeb-67ef-4025-aa67-19a73720c0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdf7f73-a95b-4674-92c0-0754fae44948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987db287-6790-471b-9151-e21ac5ef70bc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6409d21-f710-4862-8e4c-c5e11404e06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7fdcd6-3d88-466b-a40a-b1d038ff240a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a1ac25-18ab-41f2-8ad1-19999a2fe15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a967154-17ba-4142-831f-4c6fd4487b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c38858-5ac4-4b76-9aaf-6e89933aa841",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330d46a0-09b8-4eba-87a9-1243b55f9140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2143913-bb82-465c-97fd-be0e5063daa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fdef1c-67a5-4402-9537-5580b604ba54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db24a09c-9c32-479a-af5b-eaa6d3da5531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaf12d9-e53f-48ff-8920-ea6753cb95a4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dc913e-7985-495d-a265-7a7f0283a799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f290a2e-1a7f-4f21-a376-8f392816fb34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729d1e6e-6ca3-4db6-bb31-c0df536cdb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ffe493-f238-41ff-96f9-fd908a98290b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0ed1ef-40f2-4979-a2ea-34bcada03a8a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23fdc00-88aa-4ef4-a275-44047af249e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4213069-b757-411d-a812-112b815c27f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7673d65-ec1b-42d8-9a00-3cca71e89899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a1c4ef-5b52-447c-b89b-99727d0ed131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306808ec-4262-4f3d-bb80-9fe176364570",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82acd88f-4223-4de8-9653-1ab87fde1902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bf50b18-f424-43ef-85be-db80fd3a5b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aa91c2-5a99-42bf-857c-5c2b71ea72e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b80522-f24d-4a7b-b65d-6d4fb952d502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2228110-c54c-4921-afe6-da00924288a9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c357df64-a01e-434b-958f-cd529d7a8d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1db23d8-22ff-4c42-9f44-de6a5d8d56a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fe4eac-a643-4ca7-b8d2-79d4c3699b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eea807e-9446-4683-8d5d-92ab95ab4af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c09d4d-725b-48b0-8313-969cedb22590",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477f249f-ebc8-4a50-972a-e3bb33bb3e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc131f29-f445-409e-9380-05e88bf9bc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c194a7-940d-437a-a235-706ab70eb85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb8721d-ac50-4335-8324-0c0c7a8c899e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b931e63f-f864-47ce-a996-6dfd519876f5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5083694-f3f6-4758-8011-94425f320d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7b5e6f-ab6a-4296-85a1-ec27962207c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093045ec-ba51-43bf-bdcc-a9cbf83ef541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5da9db7-d5b5-4f46-bbd4-5dc06c0c21c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52288846-68bf-4bb2-8eb0-67358ba577fc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384fbca0-283a-4378-9af4-e62cfeb35a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf8982e-e876-4b68-b909-5488f92f47ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24280202-b1fd-4842-b737-c58d00584be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb94c824-04c0-434d-bfc8-d3fc661e0641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a2ca75-343d-4ba8-830e-a4e5ca7f3d23",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a392064b-1b42-4195-a3b1-e05de340c85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41923605-d712-4e8f-b360-175232126e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7c0312-b738-4b2a-8dfe-6fdbb95c02c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25858277-0178-49f6-bd3f-51fa72d74cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008fa15a-cd87-49a5-b760-4c62a653582d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02500ae-5ded-44f8-90db-0e19e22c6ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f124f10-f1eb-40d4-b534-bdc37c8c765b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faedaf70-bb99-4f56-9509-14b82eaa52b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e745be8-2df1-4646-bd6f-61516ef65632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d885dce2-61fd-4ee0-b75e-e026a05960aa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4386939c-aa31-4e30-b2ae-34163c4d07f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8589ed49-0a82-4f0a-bd2a-859051a0d26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f7cfdc-49e0-44a8-9fa1-d1e03f280e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284e92da-2bb2-4bed-afd2-e5655875026d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7d6fdc-5bd5-483a-bb0c-263215f465b8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e243a1-d980-4faf-8350-9b6a9ee47ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37cd876-8dd0-4992-8ba6-57abb8c28c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e092a584-456f-4ef0-b0f4-de39bb640608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7833a5fb-81db-44a8-b1fc-5ebb48b7fd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec56677b-5b07-464b-8c2d-9b21f47917e7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b3b56d-0c85-48b6-b546-5f4f2692f040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c688b2a-b484-4fad-810e-6bdf811d6c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82783e25-4dbe-42b5-a3b7-5ddb3e88c67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fd53ac-9e22-44ff-8f65-c2e35e2d6099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea07f6f-5c4a-494e-a56b-0239c59dcf8d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5417489-324a-484b-bf96-56a136086236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7e8de4-dc17-457a-b679-2cd3d9520d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11d393c-7de5-410f-a63a-4dad6a4f1d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee6e3eb-63a6-4353-978f-5c86c1cd7fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ad3af9-458f-41d9-b3d7-602af0b8dfeb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d817eb1-918b-4295-8a18-dff4ad756fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cb86e9-2eda-4a95-a0e5-4cc78835e932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d58d3a1-fb0f-4407-ad1d-45099b200110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4ed4f4-0899-4e0b-86fd-0b3b61b2b9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0e4764-5c60-49aa-8f09-b2bd12b69614",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b42664-6488-429b-8e4e-8c669abcdeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e764f588-ff7b-4e40-9d50-0c895f73f766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac7c52c-5a1c-4895-a705-1463206a0ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a565148-7af4-4ad3-be19-c417f42b0a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bca46a5-a0e0-4c88-8357-74cfc6a324f5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc083bd-edf7-4c06-93d4-5e17e206a282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8422633f-2d98-4241-a01b-42487e2800f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728d2a77-c278-4357-99ab-106edc151045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552d6a3c-ba43-4ec6-b3ad-ec9a9107f152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9083723-9df1-46c4-adee-05e144e106bd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91562aa8-a1f1-4277-bddf-08c79a24854a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86427229-205a-472f-85fd-8d04b0a9fec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8d8d24-e3bd-49fc-8387-731e923d8360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c5b2d4-18d9-459f-8255-0b6b0ba6ee85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9104c7-7421-4cd2-b532-9d4aa0cd1e2c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cc51f4-f3be-4877-b0a8-67ac1a3dfdeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b0a72f-e78d-494d-8668-bc91d946c335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fe815b-d21b-4ae3-b2ea-0b62b05bc315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a747187f-a2e8-46fa-abb0-d158e2ffbea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ecc559-2b0c-403b-b2e3-635de52da913",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faa7cdd-0f17-44a1-9fc6-a1f93be19156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0034f7-9607-487d-a0bf-bca541ed1741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4a4836-ec7c-4cda-b07a-ef482729805e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52286f83-d807-4ab7-a5ce-56e43c47b09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3276adf-ef81-4142-a604-e9ad835c5034",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5fb022-6abb-4ea8-a333-b26ccb6065b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba0766b-4c2f-4c13-ad49-cc006c8f2e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109408d4-d7b0-4c15-b271-8589859bc518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09fd10a-e589-460c-89ba-8e288823dad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9fd926-4b2b-4834-8334-91519323691c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a8f5b6-db8c-4a01-8452-285a0f0c6614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd4cddf-f9d7-46ba-8366-3834258f5bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0388076-42ec-4ecf-af3c-16cfdf1b823a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a6a317-91de-4eeb-ab32-95051dc72358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9a1038-cd3e-4a29-b234-74a61ae8129f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f9d583-c4f4-4de8-b329-1a07306a0325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4dc608-5d00-4f80-9587-0ec69644badc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063f9b7e-949b-4f85-a93c-67d43a3404fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a705deeb-a74f-462a-b525-fa31ab2c569a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9191a856-ad92-42e2-b83b-7702ee257dea",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f179ff-dfdc-489c-aa6e-835ebb6ecbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c64056-d1f8-4f22-8312-845792254489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70adffa8-473d-453c-9c50-0132689412b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636a3248-4297-4a89-a9a7-4f5bf2d214ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd28e2eb-b7c6-45ff-958f-c1acb8ab3f51",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a92b44-c783-4f8b-bc7c-ddd21e3dbdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d198c6ff-db2f-46de-8986-7ae5a480b42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c862218c-d5f6-4573-998a-1c70fb867e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77af1faa-8092-4b66-98c9-ebc08b81e9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a57a39-17ca-4162-938c-28582b1006de",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3f0852-cbbb-4143-bedd-56c0b5194860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e310ef-f131-4a03-b42c-f3ec585eb3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088d2552-c07c-476f-a495-b6956e1b1240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee84c74-acd9-447b-a960-8884f652c37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ef3e52-f017-4349-8e23-483d80258bee",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba3c630-a18c-4baf-bbcc-f07ff84e87c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e00c43-2f2e-4ad5-9bb1-5ad5dc8295b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ceb98b-48af-40dd-a1db-6afed990221c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56ac47b-a693-410f-805d-5189c3c82dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6435bb-6cba-41de-b685-b1ff91c40543",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd60c89-f3ee-463f-aba7-12485aa5e6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838c9e46-f7f4-4406-9845-a8493f3a2e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e5ce91-7572-43e2-b9e0-0328ab105708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d72eff-c017-4cca-b8e0-1437422de886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c20adc0-f332-4626-8a68-e5848ecfd0e2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af65b8ef-7b45-4c63-bf9a-2bedbc9ff821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e9acf3-2e1d-4891-82c7-8355bbf72b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f295f6ac-d5cb-420b-9ac6-c20eb9b735c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98dc1e0d-bcce-445b-b471-607d16b4c8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7418dec-2916-44c0-8950-f5df2c56a07f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5111e5-7689-4876-87bd-523978fed368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26426cfb-0b42-4930-a0f1-4a4de51dea7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49504a58-e821-43d3-a3e3-c9665a39a47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816388e0-3e94-4c6f-86b6-da96c62b86ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26b38b0-d181-4dba-a819-dda2c3c16a9d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d548f4c3-d98e-4d3b-a22a-1fec3e09733a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef200ed-be5d-43b7-9c28-1eaaa6bf4602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2710af6c-b700-4e0e-9249-74b533a5dcfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41ed83a-0580-45c1-a765-9a2246ffe882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfd34cf-8cca-4fca-8fef-fb8469417739",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f5b243-e175-41c8-a1e1-2b0e97512a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aeba24e-6926-42ca-8159-ac5d88da4064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae46b7d-abc1-4ff9-ac8b-57c6a8f29383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6f05d8-55a1-4d24-9024-b621e798181e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17958e00-ce9e-42e9-b2ce-bf154581357d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2957678f-df43-4f2c-9415-7b4f09453058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b3a79e-032d-417f-af64-c7f2c4aacd3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae5f2ea-7c0d-4fbf-b5e9-f329515bd825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ee60eb-aeb8-4258-bfc2-6a3fdf19fec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd06ee2a-5f8b-4413-993e-457bb0e7947b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d4ee5d-eaaf-4e6a-a14e-7e20a940e1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ce6a14-d877-403b-bdb5-ba88505f28af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d501b7a-cef0-446b-a8ca-0b33600976e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea0a9fd-d3cb-4746-a522-2c44df7a6a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2abfff8-d48d-4459-b2e0-3ee70aeb290e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6412555-243e-4007-bd18-4beb28ba2251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc53237-83b4-4a7f-bf25-56d5399ce3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba6f2b0-18c7-41d1-81ef-55bfd158aead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45121203-fef8-40d3-a3d6-70a13117f2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0c0484-3115-4374-8e08-4e01490978bb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddce0aa-ee91-498e-926f-8d12f326d24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d166e1-9901-4da4-9fbb-20843268ee97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78879c0-04cf-4b0e-adb7-73a58f93b1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cef536-c7b8-4102-a955-7cb5c274141d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15de7856-4590-492f-85e1-021e5e69c431",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b700a4-7d5e-4129-b96c-7d5a201a3f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac4143a-7def-4d3b-bceb-073a9af19eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926de0b9-7cd3-4bb3-9cf6-28d786b83d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26071fdd-4196-4531-be4b-c0e2e7a5846c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654b3b98-c7ed-4825-b859-dbb19691b978",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81927320-36f5-4fc0-b0ff-33945ed24f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e27cbc-77e8-4c63-9be9-e3df114fc01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a5f741-88ea-4249-b5de-e5cae40db9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9942f0e6-fdce-4153-aba0-25fb4f229bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f7332a-14a3-41b0-8a0c-b1d0fc7d8206",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06432dc-b095-495b-bef2-428f059fdf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff41194-099e-4a75-b8f7-521aefbcfa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa9e2b9-f14f-4a98-875c-a75d6d0538ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92527d2-376e-43a3-9221-f15dd77cc0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9941fe36-4d7d-4f0d-bf80-6c4ee207079b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fac5c0-69b3-406f-90aa-f8df7c5dba70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845d49e9-89ef-408c-9124-4f5eee2dadc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6a72ae-618b-4851-ba66-35ea8918d350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51237d25-13ce-434a-afb7-1f439245ebbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffb40f7-42e3-4588-9e0e-ef0ebbcd8509",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b31f24d-1187-4a46-bec9-4ae26fa019b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787abf17-0487-4a04-8218-c4de801ff5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b52bc84-a15e-499e-b728-452dfd76559f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be97c3da-6a85-4315-9bcd-65c5d937b551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8b836f-ec99-48ba-879c-a94b48d942fb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bf20bd-3bd8-4b38-8c50-5c66b3813653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf0bd17-0643-4f67-92e3-b946db7cb5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce58bdc-865d-487c-a0ee-422e40b49ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73356f23-8e5f-4e30-b7d7-869b28601818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6a35a3-6d4e-4587-aa76-687e5a4e9c85",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1ec992-4f90-4361-9ff9-f4bfee8cd5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023261bd-bd2c-492d-b465-83239b00a2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ca9a47-6e4e-46f4-ae82-bfc0c6a12ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15cd870-4c9c-4dd6-a27f-71e48c59f74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd9b438-37db-44c3-9107-d5f6593bf6e6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2675b15a-d671-4f36-b4fb-a0c3d8282174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a3adf5-199b-4188-9679-52472813b412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca096af5-fd32-42c0-88a6-bcb10adccc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f669978-bea0-4287-a7ef-914f5e81fcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a63f369-ea67-49e6-8ec0-56694d2f8043",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eade8d0-337e-4801-bd60-98657d8e4397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee140402-648f-4975-b141-284de9b1de7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed7c4cc-293f-4dc2-a4b8-1f14c48e487d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008fb891-6701-43b9-bfd3-06ef19dade27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fa1d0d-bac5-43d9-b6d3-ee0aeabe96ac",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22d1344-4dd2-4618-8911-b0bda683fce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51d2b70-ca1a-4674-8bf2-c187f361c230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4a096a-deed-46ee-96b9-faa5e1deeee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa5b5f2-bfeb-468c-9b5d-d8bd0d69bbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5446d9b-05f8-49bd-b620-9001016ff5e2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeabc98-5954-4038-8e83-35dc280f7548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f40ee1b-43e1-48bf-b89c-b12e77046458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dfb68a-39ed-4ea2-bde5-5455978e00cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cad243c-8bc7-4da1-a5db-9b5c8a051a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b626560-a3ae-499d-a6d7-cd88d21083fe",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8195c993-3784-4853-a4e5-80740c71937d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b6934c-2e99-4386-b23d-eb12e30079e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ec0205-3d9e-427a-8ca9-50eadcf97a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37beae5f-0686-4e95-8223-48bbf6273bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b07989f-8080-4d07-83ca-dd3164c1e467",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7824ef9-dfe5-4f2c-8666-76d6f46d90f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a85202e-a5eb-4982-bdd6-2c50d6f50731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d293f36d-6146-4935-b5c1-dd9959947915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0b4dc5-9ed3-4560-9e1c-986e52eb1dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d858af31-65de-419a-914e-14017823465f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc052987-7b13-45f2-8669-7bb7a9d051bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcbdf39-1fd9-424a-a9d1-6fc006bc472a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8c2c9d-3309-45c5-ade2-1def456ed6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd53088-5754-4001-876b-fff8ae220288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22c2140-4de0-4154-b6c2-56f3761ed3eb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0d151b-fe16-4577-a464-d42037f2c618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae282ff1-75ba-4d8f-a71d-b95d8a7d289a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75f407b-5dc7-4444-9160-7b1923597da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad37beaa-9491-4107-84cf-dc4d89eee345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40135aaf-9fa1-4e05-91e9-b353e2e82e62",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4836ec82-1968-4b2c-a362-952e5031576b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ed9141-4ffe-4cff-baf2-d20355752df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0f1884-982d-486c-b633-d252b37dc316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9727bdf3-e549-4dd4-a074-6343094a1796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780357ed-3fce-407f-83d5-89f429dfa00b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20abc8f0-fc40-44b7-9532-c65e9335970b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66032b79-62af-4ebf-8abd-d19bd71b71aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdc0428-df61-42ec-9b4a-55c14030c510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b80fdd1-b68f-4d0f-9963-830e82924284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbef997-2bdb-48b3-b509-3b4b2acce0d9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed3f4db-9027-467f-ae4d-afcde7d7810e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b81da4-2b30-4006-8f97-71339167e2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c81e96-25c6-4053-93dc-8e11293be9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15603e6d-6409-4fed-b20d-3342602857c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba256a2e-bf6b-49c7-913a-0c3acd2fb061",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe0f06e-8ae4-455c-b839-c22d18a0fa56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a643be-c41a-4e80-9f03-d7d98411b329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27c436d-8c4c-4d8e-8e67-e8be20c818f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92553f3-0601-45ef-bfc1-bf017a9252a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5010937-73f4-4209-b7b9-4cef390684d7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b38d7ae-23ea-4ce4-a8b4-90fceb4b1e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7e738f-b40f-47b5-9a99-e471d1f7db71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01481dd8-7cf4-4bc9-8c6c-69dd34c45448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f28931-9b59-47c8-9de7-3cc89fb76104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f947ccdf-0471-46c6-bbd2-6a044019bb50",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada0f8fb-bc68-47ff-ac2d-d18a7b792bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e007f711-de9b-4296-bba7-0cf17ff97793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0fbd4a-aef3-4d39-9f40-f88acbcae159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758542df-2092-4590-9ed4-f26dc75a0d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba01e28d-3392-4858-b7cb-844629dce118",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597e58ff-f1fc-4b0e-8565-36b0d5fa959e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6a822a-ae4f-482e-8a45-79dde1568371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c9c46d-5e77-47b1-a3d1-b0241a62f456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff0c5c8-aa4f-42cf-b469-4b270fb989ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaeb89e-ed62-4d81-b753-ad6eff358e80",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8adb507-344a-4c7f-b30d-e667b54305b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93fbede6-951b-47df-b8cf-69dfe4bb003f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cede206-62ca-4489-8a57-1d904f347879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f02ed76-8645-4f1e-9bb5-205796c142b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6d51d2-a44c-4fd8-a03b-064a766376e8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4ea3d9-6891-403d-ab3e-9720ef237080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e0e20f-1302-44c6-bc0b-04521a1f925a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd3b429-8aef-4514-93a6-0acef6072b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba7b278-675d-4216-b24d-2e966f935459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143027be-6301-44cd-98b8-0c8bda0d536d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe874d24-5921-4854-855c-6b2e2a52a87c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fe076e-7c5c-4ecc-b21a-246ca9d84fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef0eae4-4274-4f20-b4c7-2ce4e7f2a825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fde6956-bf65-4022-844d-c4833c76bc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a01793-2694-425a-8506-f65e50ef202f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b530e2d9-1255-4882-91b5-98c568511ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df50f194-94b4-4fe9-b99d-1d241d23b3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d36819-fb98-4270-945c-7f38e2a5096d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a204d2e0-398d-4e9b-b1c1-519e9fa7dacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9e2c21-5d1f-4658-86f0-f4569532976b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48a8526-a7aa-4a11-a9f3-945fd3ca2698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f6bc73-d969-424b-b8b1-d0137a112459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484e3734-c791-4215-8fb2-2d9b54ce34a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad107d7b-d6a8-4784-a557-1e49e76585a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366d714c-08d8-4140-ab8b-355f40d03771",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a6a1a5-8c0d-442b-80ef-0f4b94e6146c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0faf1a-2f08-40f7-ab8e-e6162781fb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8364040f-4119-4b2d-b1e1-8371e8ec947a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090a11fb-ed4c-4b21-a98d-9cb6de4a218a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9908721f-5375-49ec-9a83-663f7c04ea58",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c48945e-1d4d-4c59-a71e-2ad571704318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a04c2b0d-ebf5-4b68-971d-403b5663ef3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472f335a-39db-41b6-96b6-c2762e7a5ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00227ff7-dafd-4e75-b199-b69efb5eb900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86e40e6-5200-4cbc-a988-cb22147258da",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba58ab0-ff77-47d4-9bc7-8b1cb86910ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150820c0-a18b-4b0a-ae99-28b94009f2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4989ce-23a5-4660-911f-d998687582be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729aa0c2-1f68-419e-82df-a2d4c4ae30f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205b0ba2-2000-42ef-b024-e986879e8a56",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013b1ef8-a0de-47bf-9c95-dc18b8841a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b820b7-8fbc-4585-baa7-105bad285158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6b7da8-edcb-478d-91b3-cb09a2b0ffb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4617006c-3d40-4e5c-888e-071ae1a4c2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91897366-1e4d-40f5-88b3-3ce5469de10f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3571abff-e279-4f85-bdad-4afb168d3450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61910e98-dd6a-46b3-b1b1-5eafe2db1368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c87781a-d4df-447e-90f0-0eb02fdf289e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8388b3c5-71a3-4bab-bca0-d739fe4e04f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d75da86-3cc1-4ab9-8644-3f7e0caf451d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62236a66-eae7-468b-9bf2-86dea73c1b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "775b3318-3b2f-4308-82b7-3d4f50d293bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba27a7a-2745-401f-9511-7f6357385c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe4c1ff-8cb6-40c5-b307-370215dc694d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e997d661-2670-4e18-892e-586e3ce8cdbd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c613cc82-b577-4679-b26d-e273e2c6685c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3651fb1-d213-481e-bce7-a1a7c9dc35a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaca6cfa-54d8-42af-b0b4-399dda9a8810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216455e8-01be-40bf-b095-809d39c1832b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33670aa-271a-42ec-ac59-4f19cb8bd481",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63f9430-a334-4965-a894-306ff19ae5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8d45d8-8562-409e-8356-37840a796895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcab9b8-986e-4562-9bc6-07d1f8a20ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd4e59f-fb4e-4bcc-87ce-30e2aeb3f6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cec29d8-48c2-4704-bf47-ff9be2f73eff",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c578bbc2-f8f9-49d6-ac84-f0527b1f370f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e5ccb5-5c7b-43c3-823a-7a12337328a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2268b9ff-cae5-4693-8c3a-ca92271864c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1844b22d-694f-44e5-8c7a-02fbd7cf2863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbe424d-88cf-4b67-be79-b6e9d3c04251",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2cc0a1-dcc7-4f5a-b922-abf9213890c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17835d4f-eaaf-43c1-a9cf-ac55384dbb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c91266-19b5-4fb5-a116-361689caf5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650652fb-8dec-4a35-aee9-80b4d4bb366b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe226fa7-c06f-434b-a2b4-4b510d79586c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fdbce4-f920-4496-9a71-ba9ba80e5313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7316f50c-ad5c-4fc3-b0fb-1c34394af632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e41a1c6-d8e9-422f-8478-c553de9d2aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fd79d0-3c85-47f8-8bfb-e685329e4ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bac3f9-8897-4c6b-989a-c34d4db848ec",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e81f32c-e189-4b41-8e94-44e04e76723d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4073a2bd-2cf9-4212-87e3-332bd7fc5b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d81861d-a57d-4bcb-bd48-a7b2bf1a0374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d6a638-5883-4bb4-be70-068629d73c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dbabe8-6c1f-442c-8cc5-396433f82cb3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf52029-943a-4630-a71e-c486444e78c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ace60c95-1ab7-4f3a-89d6-8c3522913cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d47f279-413c-433a-a1ae-b16fbf0d1674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630725f9-f50c-436f-9aa1-139381342b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e15a22-8042-438e-a0c4-d2398960966a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88608c2-768c-473f-aa82-dac43d9cb145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464df706-9baa-4753-be0e-8c81d640f52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8412e425-76b0-47ac-b205-aa923a22da53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb24cce1-69e4-49cd-8a0c-320825db5249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fa4a03-593d-4e54-aae0-00715b13bfdc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd0393f-c146-48be-8d65-2577a0ade325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93238b86-e87a-4279-b25f-0849037c892e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c096596-2286-4e7b-b56f-bfaff94954da",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946297de-d0de-45f7-8357-0e4e9d8e45fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8afaa91-4a8c-48c2-a790-ea74343f200a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f434826-ca02-461d-ba8a-114e143a3945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610b74c5-7f83-4e05-8ae8-8a1b79e6c072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ff6bec-d78c-4c98-bec8-4e0833f8efe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d77398a-7443-454f-87f5-58f12d9407cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5d8045-b3ef-44b3-906e-2d12976a24f1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98eac54a-a976-4999-b2a1-f462213f7d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203db79c-c80d-47da-9830-56cf607daab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58696434-acba-4695-b7d7-79d47b587363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751336cf-3207-474e-ae78-354267dc1252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5985d66a-4962-41dc-ad74-52e2e98f5e6d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32315fa-479b-4e18-b443-6aa6213c9b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b345d099-2c27-4ebc-ab95-b94e22e9b5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff27ea3-6f91-4a43-ab04-257d14c48d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f749b6-7901-4027-ba24-640dd748e205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a5a9d4-c33a-4959-be29-69b679b2040c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeb279c-2c60-41c5-901b-68d36dd6ddcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eef7274-65cd-4976-bfa8-604218e2fa63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb3e8f9-4adc-4ce4-839b-58863f18691f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d43d58d-f877-41ab-8824-cb081d0521c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927e2489-30e0-4fda-a4af-c21d525cb399",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4c8652-e95e-4354-a080-e985918fad68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bad5d2e-ae54-4249-b502-76009598ef28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec9f4d1-42f1-4187-888f-94672d203628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b79d31-7ef4-48c3-8bc4-50cf7f586861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8916150-b622-4c91-a436-b39b213c13f5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4235b8c-2bf3-4243-9057-fb6bf2d5d5d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b4d917-3ce4-4a9d-8b64-bbcfffa1f679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a64e31d-efed-415e-b0cd-096175b029b7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2baa7b4-9cf8-47af-ae83-d8564604310c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47f35c4-7b58-4451-bb46-5904cc5cc6a2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb37bf5d-3fc1-45dd-9794-c6c74ccadf0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b0bfb0-1522-4e17-80c6-294693457d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f596be12-2f82-4d40-854d-3cfeedd43725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b6dc5c-7ee0-481b-b125-696ffd3c996f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f77855f-963c-47ba-b4cc-5d70d4db15d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ccc62b0-0f29-4976-bd64-398da05d7dcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcb1f784-f6d0-4154-80a4-c1735baba0ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2206cdc7-1dc8-4020-9cbb-67990ccf5ea0"
                    }
                  }
                ]
              },
              {
                "id": "3866ee01-bfa7-4eae-99a8-2ca443bd132a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13e1b38d-214e-4618-9f82-0aeb19d4bf2c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0424878b-ac4f-4516-bc62-fc20a11c60a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "521adaa4-b7c5-47fc-b998-548dbb7a3223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a4c141-377a-46fd-bc25-719e3814c593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7961f807-614d-4bb4-a33c-9c6f8ab8fb0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1e6000c-0328-4221-ad38-6ad6ddf94974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55817097-e5f7-4a97-bcc1-979e5ce446d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60472be6-2603-402b-95d8-c49ffd645268",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a9afc1b-e694-46e1-8093-71e484a68b14"
                    }
                  }
                ]
              },
              {
                "id": "18dcc16e-cf4e-463b-8e1e-9e02c4ae4a47",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f923757-6e36-48ab-a0d0-bbc68f00da89",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7dcdd3-4970-4cee-91d2-b7e557ad7b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9fd220dc-e0e4-4d41-b2e1-a9584f38d10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af2f0d1-f268-4e39-8567-a7a138e86c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa954a23-3dcb-482a-b16c-d4b6c6b42e1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c5f87a38-7aaa-4b0f-94db-f866b7d7a930",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc7343b9-9f74-4534-a3da-ade47be05825",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef92e03d-c548-47ed-9666-c32fc239819e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "14c5689c-193c-49bc-a228-b6051449b479"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12db9bfe-8e69-4804-94f8-5813aac18209",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3c280a5-3c6f-4e3f-95a4-909e50297fd0"
                    }
                  }
                ]
              },
              {
                "id": "ce0d9932-9f41-4208-90b7-3058a8eb5d32",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c5f666a-bf47-4bbd-a510-058c9483181b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8f40bf98-bf79-4552-a92f-7b465117ce7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d2eb53a-1cbb-4828-8468-ec4d9a0b5793",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8c24b9b-315d-42c4-a386-a2b934fbe75d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "873df6ac-e84a-4b8b-ba17-05a45828e2eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f8a7e1b0-41cc-4304-9fe5-3b667585fa4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d23a71e-1a83-422e-a17c-9ab1c6d2a9b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6921808-76e4-4e80-86ec-e038f5a47d84"
            }
          }
        ]
      },
      {
        "id": "3c6f29cf-6274-4037-a0d7-d94a35d22970",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3409c2ad-1c83-49b1-80f7-e959b0e9cb40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e146b6ab-8315-4b9b-9b3b-992034a1930b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a105dce-b554-4231-9c34-7c9b6d939e73",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23202a3-a217-4748-9ef8-a91f1ce52dba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c8f8e66a-5582-4e17-8b92-4ace70e18fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515cd9e1-d5f7-45f2-912a-a49ffd4acd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9853986d-1854-4932-a049-c66bedd22b9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cb1855d-e74e-488c-bfe4-5caf44e51d6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "965db99d-a6f4-4c19-87f4-abdb96e3ac2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "183d0094-d9ed-4e7b-a358-0a8905051941",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "365bd8c9-748f-4624-bd2f-7bacc71b0980"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31ffd3dc-f578-476e-8b6b-fe2a79befbad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8e82a7d1-aeb3-4624-95f2-777027f59247"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2215500f-5afc-44bb-b743-d8920d488f13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c96ea755-6740-4f51-9483-043a0f473c99"
            }
          }
        ]
      },
      {
        "id": "cc3c81b9-0139-4f9b-abbd-33154fed7165",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fef2d4bb-af77-4077-81a5-9dbd99460ef5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74dbcc97-087f-4a28-b1ed-b8889902f083",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c13f35f8-b92c-4d7e-bf9c-45fef7089dfb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aac5ba-fbe4-44dc-9eb3-5e70b72afdd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0910a071-e437-4325-842b-d46b1acecc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c26bc6d-9e76-46b5-9381-37a4086e4a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bcc80e9-a1ae-4c0c-a7f7-72ce3030edd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "307e4e01-011c-43cf-881a-5320e7bf08c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee0d38da-53f4-4e84-b98e-59bcbcd06f48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca131089-665a-4ab6-bb46-3e9f7fe8a269",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "099879e9-a080-4d15-9cd5-c4748f1393b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82a1aac2-51c2-44d6-9b31-bbdee5087136",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90a9c8ed-5ad6-4d1d-a9c2-0c63e541a09b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6daf02c-d55f-4bfe-96dd-5dfc379535c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "393f4ebe-fe66-4e56-95ee-44302fc1a83d"
            }
          }
        ]
      },
      {
        "id": "dec863e4-521d-4340-9ed2-c48602615b22",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b3f96054-9658-457c-a49c-d9ef5c807661",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1d488ab-e0aa-40fd-b7ef-2df19621c32f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17e75d3c-081d-4f1a-859b-46160c590e07",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455dc558-6258-4533-a1d8-6437b398e501",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2957305-60f0-4545-aa82-0f6db46aa32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051d6eab-4e99-4564-9195-56505467fc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9707cd86-6f25-4793-8124-05d62c1ce644"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7dbdbc2-4067-483e-b3ec-5f3e3245b95a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75106031-778d-4acc-9db6-e98c19d1fcbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9af820f-d1b7-40be-8906-349227b8ff69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3927550a-33d8-4e33-b7a7-a7c1e9d594ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89ca8a0e-f8e8-45b0-a605-b29eb9e2e40b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3607ad82-dba3-414c-b370-dad432351f40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3409f75-39ed-4a77-ab26-3e99e1364682",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9004d296-f0c4-48f8-a724-8875c49157b4"
            }
          }
        ]
      },
      {
        "id": "b805c304-f4bd-4266-a3fb-44a5d397b60e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ec95651-157a-4254-a3a2-1dfd654dcb77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b85de4e-2b95-4b51-9e2f-632357e0b8a5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "44a3a143-6900-4e20-a86a-5fbf85bfde65",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "595de148-c83f-40fc-83f4-9e3f7c62a941",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a331050-670a-4f75-96fb-8955e1045c44",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 114.12698412698413,
      "responseMin": 15,
      "responseMax": 11262,
      "responseSd": 758.5007348891704,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715733392699,
      "completed": 1715733429685
    },
    "executions": [
      {
        "id": "cfa6b87b-fe62-4192-9aae-55033fae2787",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3e552b93-649c-4c8a-bb93-8b446d7e89b7",
          "httpRequestId": "5d86b3ad-4f42-4001-ace5-b478b19cea5c"
        },
        "item": {
          "id": "cfa6b87b-fe62-4192-9aae-55033fae2787",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ea33990e-e8cb-4e7e-96b1-d3a3a2dc93f9",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "51d006ca-26c2-4d66-80cb-50e717ffad6a",
        "cursor": {
          "ref": "776e2964-3641-46bd-aa4b-56aaa7d57fee",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b48e3cf4-5a9f-4d0f-8792-c7150595a07e"
        },
        "item": {
          "id": "51d006ca-26c2-4d66-80cb-50e717ffad6a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7a247b19-820e-40e5-bb6d-443c9b2368fe",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "c588a62a-4196-48ac-a15c-cd3b77a6aaa6",
        "cursor": {
          "ref": "64be1fe3-2172-4fc4-8965-953b0114a424",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "af5606fc-0424-46ff-afcd-82fb8f5bcf50"
        },
        "item": {
          "id": "c588a62a-4196-48ac-a15c-cd3b77a6aaa6",
          "name": "did_json"
        },
        "response": {
          "id": "39fe3c85-1517-418d-9775-fbbee0864a67",
          "status": "OK",
          "code": 200,
          "responseTime": 349,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edc7b31-8fb8-47b7-9db1-8707a82617c1",
        "cursor": {
          "ref": "0977076a-a9f8-4426-9dd4-f0245b134d7c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10bd8624-8584-4a6f-8493-2e75e81fdf5c"
        },
        "item": {
          "id": "2edc7b31-8fb8-47b7-9db1-8707a82617c1",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc0b2cac-2cd0-4e62-b7eb-34634b1ed6b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 392,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edc7b31-8fb8-47b7-9db1-8707a82617c1",
        "cursor": {
          "ref": "0977076a-a9f8-4426-9dd4-f0245b134d7c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10bd8624-8584-4a6f-8493-2e75e81fdf5c"
        },
        "item": {
          "id": "2edc7b31-8fb8-47b7-9db1-8707a82617c1",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc0b2cac-2cd0-4e62-b7eb-34634b1ed6b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 392,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6efa454-ee0b-433e-b3e8-0dbb93ac4e83",
        "cursor": {
          "ref": "66008a9d-05a6-4cfe-a889-56d68a8c5833",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "47ed518a-1707-4819-a15a-a53dc636200f"
        },
        "item": {
          "id": "c6efa454-ee0b-433e-b3e8-0dbb93ac4e83",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e54ada68-4208-46ba-9e8e-329008f58c6d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d86a281-86fc-48a1-a738-d1aeb7ecdf73",
        "cursor": {
          "ref": "9c0baf32-d5b3-46d3-8d6f-036379945e12",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ef449b4d-2ae5-4d39-a9b4-9347452a4a33"
        },
        "item": {
          "id": "4d86a281-86fc-48a1-a738-d1aeb7ecdf73",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6ebfe917-ab20-48c7-8bd6-a81704eb55b0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c7c202-4fa1-499b-8eca-aa8576eb51e0",
        "cursor": {
          "ref": "2a4aea44-fd6b-457b-995f-96860e0a07a4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "27d19477-1596-4df5-846a-7145e99a9993"
        },
        "item": {
          "id": "77c7c202-4fa1-499b-8eca-aa8576eb51e0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ee00f581-9bc1-4bae-98ba-63c12fb8b7b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48084db3-6f1d-49cb-9280-84fefbdf0552",
        "cursor": {
          "ref": "80fcea4c-a3d9-49c0-b9c6-8f3476f76096",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9407e2f6-c2ca-4dae-aea3-91f112895f48"
        },
        "item": {
          "id": "48084db3-6f1d-49cb-9280-84fefbdf0552",
          "name": "identifiers"
        },
        "response": {
          "id": "d24d9c8b-d093-4e8d-bed6-fe1e9766c5a2",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e4ad2-c1a2-4c43-b446-4771e1c2b290",
        "cursor": {
          "ref": "47a5ffed-d3f4-4058-a248-5047118d633b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "81717b05-1703-4984-94d8-4092a8487061"
        },
        "item": {
          "id": "0b6e4ad2-c1a2-4c43-b446-4771e1c2b290",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ca43d29f-93f7-4d7c-956f-faf53fb17635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f25ec6-1e9a-4a47-bd5f-ec5a0703cc1c",
        "cursor": {
          "ref": "e2d84516-4c65-4da6-b74d-5d505888e5b3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c03bf3c1-62d4-4e45-a732-2cfc3acc3d62"
        },
        "item": {
          "id": "95f25ec6-1e9a-4a47-bd5f-ec5a0703cc1c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "433e9fe4-c005-4911-9e34-3c3cd7a803dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0925d6-99ce-486b-ad0e-78894eff503d",
        "cursor": {
          "ref": "a1e09485-a0ce-48fb-82e6-10711c33b67c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "33531b82-93ab-4fa4-87b2-bed8b33f439b"
        },
        "item": {
          "id": "3e0925d6-99ce-486b-ad0e-78894eff503d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b7001a67-b586-4487-9fa0-e4228637f442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db69892e-00e1-4e2a-816a-e3ca9dfed182",
        "cursor": {
          "ref": "5fb0b5bc-29e7-4dea-afe7-b26d39c52d3e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c170a05a-9df8-40e0-9be0-ef4e9e23ddcb"
        },
        "item": {
          "id": "db69892e-00e1-4e2a-816a-e3ca9dfed182",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f2ae80cd-3316-4b97-95f3-31102eee6f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d817ef-509b-400b-bb61-1cddbfe1d694",
        "cursor": {
          "ref": "f53d3640-6ae3-4dd1-baab-3e09a1da2ff2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "06e1b50e-6012-4ce0-8922-b960d56b0e3c"
        },
        "item": {
          "id": "70d817ef-509b-400b-bb61-1cddbfe1d694",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1b33ee7b-113e-4a59-8308-4179764bcf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351d4efe-af2b-4285-b8de-5c5f150bd2b4",
        "cursor": {
          "ref": "c04c2795-1749-413d-93a4-31246596fcee",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d7a5c0da-6678-4b07-89d3-b9eab8989662"
        },
        "item": {
          "id": "351d4efe-af2b-4285-b8de-5c5f150bd2b4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e20ce7fa-f734-4269-bb33-8a98289faee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a8ea5b-f737-41ac-8130-aa671fb95972",
        "cursor": {
          "ref": "271215d6-e32b-4c99-9abb-a49a26e16f5a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7c9bef33-fc6b-45fe-bf50-b5cdf2b12560"
        },
        "item": {
          "id": "38a8ea5b-f737-41ac-8130-aa671fb95972",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2928378e-64c3-499c-85cc-eb6f9332e2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b74775a-05e7-4c31-9fbc-b69864f59d93",
        "cursor": {
          "ref": "639a421e-3631-468f-b6af-c97b1e1c1e28",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d3a74ddf-b687-4d5d-be4f-633d588ea372"
        },
        "item": {
          "id": "4b74775a-05e7-4c31-9fbc-b69864f59d93",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f8f0e64d-6956-4c93-a55c-42301066eaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd424876-c2b9-441f-8152-9a82690cbd24",
        "cursor": {
          "ref": "214ffd6e-406f-4ea5-9766-fbdbb0aa3afb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "aefc11fd-a4fb-44c3-8393-8d28390cd799"
        },
        "item": {
          "id": "dd424876-c2b9-441f-8152-9a82690cbd24",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a2555f34-81cd-40e4-aea1-9b0c1ddd73c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7798c12b-5ead-428b-b2aa-5b0d0a5eb0a0",
        "cursor": {
          "ref": "039079ef-ee88-4abd-8768-d65a980a8ac7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d3d2cb0c-8120-414d-99d9-912b82af9b89"
        },
        "item": {
          "id": "7798c12b-5ead-428b-b2aa-5b0d0a5eb0a0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "308233f1-2797-46dc-ae4c-443a30b6977d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2293bcf9-dce7-415c-92dd-6ee8f829d1f7",
        "cursor": {
          "ref": "600e75e9-2096-41f7-b641-4ae19177a15f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "36abce1e-d28b-4c63-904c-5d41c8c8f3f3"
        },
        "item": {
          "id": "2293bcf9-dce7-415c-92dd-6ee8f829d1f7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "098c98bb-aa6a-481d-9ee2-12d6a901a55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383f04f2-efa8-41c1-8957-5c2d34ae1b2f",
        "cursor": {
          "ref": "97865202-3c50-463a-b3e2-465f52f1d15e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "554af2af-fdbb-438c-bf3b-2e9c7e39fca6"
        },
        "item": {
          "id": "383f04f2-efa8-41c1-8957-5c2d34ae1b2f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d615f325-4c5e-4aff-bada-8d5acc268557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da2722d-17a0-4d0e-a6f8-ab5329dbe155",
        "cursor": {
          "ref": "7e5b7c01-e142-4d41-8589-74b11025ff0a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7e507158-18ea-447e-8faf-a38587a73bf9"
        },
        "item": {
          "id": "4da2722d-17a0-4d0e-a6f8-ab5329dbe155",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8b7d982f-5285-4755-9451-cc375c6d21ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe46990-d874-4b12-8c8a-008928a5ab87",
        "cursor": {
          "ref": "df2ad25a-f816-47f3-bfd4-c18d1a887b72",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e395ee8d-6643-4e56-962b-93673261f437"
        },
        "item": {
          "id": "dbe46990-d874-4b12-8c8a-008928a5ab87",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "36fe2534-ce5b-4fc9-8431-3ff3d14ddfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf15426-7e95-41d4-885b-decbb2687574",
        "cursor": {
          "ref": "1f571ee6-974c-4135-a653-8be65f2917d1",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "167e3f56-1aee-4dcf-b705-7afc4cc176e6"
        },
        "item": {
          "id": "ebf15426-7e95-41d4-885b-decbb2687574",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fad8ab63-625c-49f9-bb4a-dda8618a7f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e746daf-677e-453e-88d4-e5cac1361d18",
        "cursor": {
          "ref": "f961eda1-08d6-45c3-a89e-d1edc9169855",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "25c59f7f-19c9-49a1-b0fe-6ef0f0815c67"
        },
        "item": {
          "id": "5e746daf-677e-453e-88d4-e5cac1361d18",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "54d62cc4-8ecb-40f6-80b8-dd87e2aa11fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb89a75-79d2-4f2a-aaf8-7794151e52eb",
        "cursor": {
          "ref": "95696dd0-5207-4b91-858e-2a23479f69c4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c694a022-9d6e-43ef-a192-9f3ca9cb44f6"
        },
        "item": {
          "id": "9eb89a75-79d2-4f2a-aaf8-7794151e52eb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a39035c3-1aac-4d85-936e-a00e7f72050f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d873346a-895d-4d8f-aabb-b1e2958feb90",
        "cursor": {
          "ref": "e1f7a450-b4fc-45c6-b5a1-294619a52e86",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3e04af52-1945-49a4-9a2d-fb7d1854f7c0"
        },
        "item": {
          "id": "d873346a-895d-4d8f-aabb-b1e2958feb90",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9c7e76e7-2605-428d-ac21-7a110c25f348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce180e56-1407-4315-a07d-564fc37ec380",
        "cursor": {
          "ref": "eb3772eb-9eac-4b94-a139-774960c8ccfe",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "745750c8-c2c7-46a2-89e9-0ec146e4ceed"
        },
        "item": {
          "id": "ce180e56-1407-4315-a07d-564fc37ec380",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "50a9905d-b63e-48e3-a2c1-eae6eebbfc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01b4ca1-e08e-49f1-b84d-80449cc45ff4",
        "cursor": {
          "ref": "9cbaf367-9930-4c9e-834c-82df5bff3511",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c60d461c-fe6c-43c7-aeaf-35c6cca70082"
        },
        "item": {
          "id": "a01b4ca1-e08e-49f1-b84d-80449cc45ff4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "207b19b8-02af-41f2-a8ca-44b6d1424363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15e65b6-32b8-4b11-80d8-9f063764c010",
        "cursor": {
          "ref": "11e1a5f7-058b-4349-b248-faeab8723e76",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "075d5e1a-a4c7-4cdf-9a89-de98ead6bc13"
        },
        "item": {
          "id": "e15e65b6-32b8-4b11-80d8-9f063764c010",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "90dd86b4-667e-40e1-9516-025c59482098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024cfef7-25a4-4b83-84c7-09823d204885",
        "cursor": {
          "ref": "34f1d050-56e2-4046-9896-f8c295bc34ac",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "928c8d96-b531-47f9-a322-cc30514b69a9"
        },
        "item": {
          "id": "024cfef7-25a4-4b83-84c7-09823d204885",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ccae334d-9eaa-4673-aec1-35e76cf572fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a5ac62-2ca1-427e-9a9c-66523baed003",
        "cursor": {
          "ref": "6051b541-76f6-4ba2-ac88-c74d4409db19",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b5d045b1-1ed8-48ea-993b-97ea033c17a7"
        },
        "item": {
          "id": "02a5ac62-2ca1-427e-9a9c-66523baed003",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "637b19b3-7697-470c-a921-3d946f5f041f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82974d3-d240-4881-b0dc-13883ee23fc7",
        "cursor": {
          "ref": "901713ef-1c1c-4792-8120-c35adf94cc46",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7bea6c0d-9179-4b97-a61c-f8ebe76824ae"
        },
        "item": {
          "id": "b82974d3-d240-4881-b0dc-13883ee23fc7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "08746fcc-3ab4-4a61-a58d-e713023b9837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8fa3ab-ac19-4948-9bc3-465fe0a16dfb",
        "cursor": {
          "ref": "5c47107f-9017-4e16-8d87-56761d638a00",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1837b89c-e538-489b-be88-c1009afb4c30"
        },
        "item": {
          "id": "ed8fa3ab-ac19-4948-9bc3-465fe0a16dfb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d081f2c0-1f20-4246-a057-f4bef9f8df35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e1c8cb-1b06-40bb-ac56-ac936972a8a1",
        "cursor": {
          "ref": "83b4beea-01c2-4197-845c-2c1f29de9fa2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "775a982a-6b8a-4b6b-a564-e2153572b869"
        },
        "item": {
          "id": "d1e1c8cb-1b06-40bb-ac56-ac936972a8a1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cf6c6b9d-d69e-4ea1-aac5-0a70047dd53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b4dbbf-e216-4667-8914-17b02b49f408",
        "cursor": {
          "ref": "c9946bff-b258-4f56-98b9-8f9e57ddb122",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2f53ca32-f73d-4c89-9fcf-56c3c07010f7"
        },
        "item": {
          "id": "56b4dbbf-e216-4667-8914-17b02b49f408",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "47997b82-b4de-41f6-b9b4-1431c3b510e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1f8db8-a62b-42df-b70f-cef7f40514e0",
        "cursor": {
          "ref": "ae2e420b-6205-4f8a-a3cd-b6046d7629c0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c97928d2-77b7-47cd-a14f-b02159ecf168"
        },
        "item": {
          "id": "2a1f8db8-a62b-42df-b70f-cef7f40514e0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "233c8a52-73bc-4a28-9cc3-ef895bfd4cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334eeb8b-49d7-4019-8f30-d7b479c975f9",
        "cursor": {
          "ref": "a450cbf9-dc8a-42e0-a3c6-8a229f6dd6ee",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "399743ad-33e1-4dc5-8c80-9ea1b827cea9"
        },
        "item": {
          "id": "334eeb8b-49d7-4019-8f30-d7b479c975f9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7f8bb317-a16c-418b-99f4-044c444c648f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c151319-04b3-4cda-b475-452fce9a2406",
        "cursor": {
          "ref": "596d6533-5766-417f-8516-cf8c3a15dd70",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1090b0ea-f365-4e45-b17c-6bc9847f4e62"
        },
        "item": {
          "id": "6c151319-04b3-4cda-b475-452fce9a2406",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c0dd309f-eb6a-4405-a052-b4d689c55ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7949daf4-a2f7-4cbe-b47c-85f4734a1e82",
        "cursor": {
          "ref": "9c79f572-7035-4c0c-acfd-dc30dfaef8ac",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "360d5bc1-faf0-48de-8447-21b6493dd041"
        },
        "item": {
          "id": "7949daf4-a2f7-4cbe-b47c-85f4734a1e82",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "53655923-9029-4051-a625-ed5a40957765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92395795-bfdb-4db6-b245-6b54d3aa887d",
        "cursor": {
          "ref": "bada6be0-f7b8-4e58-a3c8-b0853d544efd",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ce5c8bb6-e7f9-487a-8533-f428913367a5"
        },
        "item": {
          "id": "92395795-bfdb-4db6-b245-6b54d3aa887d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6a2b8259-a8a0-4509-bdfa-7eb933f6f830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedd69ed-00c6-4e05-9c98-eb5fc2743da3",
        "cursor": {
          "ref": "1ca1c885-b161-4676-9aa9-089862a2841a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7ae0a792-91aa-4f15-a34f-91ddf6bcd863"
        },
        "item": {
          "id": "aedd69ed-00c6-4e05-9c98-eb5fc2743da3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "481d209f-94a7-43ae-b819-f8b4f41feb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba4dc4c-a2da-4609-98e3-9014767a9bda",
        "cursor": {
          "ref": "ca850772-7e43-42cc-8980-187ab0ead13f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fa6a8c8e-7446-443d-a406-5f8c653eb875"
        },
        "item": {
          "id": "7ba4dc4c-a2da-4609-98e3-9014767a9bda",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "33f9cd31-791d-40f5-9134-7d82bebcbc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80cb5fa-6c0b-4861-9b95-818b7d1e9fbb",
        "cursor": {
          "ref": "461b9644-9c1e-4533-8357-ade9b56c19b8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dbd125ab-186c-4b14-b1f0-dfba432ccc93"
        },
        "item": {
          "id": "a80cb5fa-6c0b-4861-9b95-818b7d1e9fbb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9e61913d-3f87-4c87-9ba4-2e177dc653d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615b9445-5f53-45a1-aa2e-6444d20d6b3a",
        "cursor": {
          "ref": "def87175-9f55-46eb-addf-6acc93b2e681",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2854d09c-4f58-4e5e-a7ed-43311f6cf04c"
        },
        "item": {
          "id": "615b9445-5f53-45a1-aa2e-6444d20d6b3a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c53700ba-a006-4761-9494-9fc058bbf516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2354d81a-3426-46fe-8b3f-7c9df5298c7e",
        "cursor": {
          "ref": "ecd9536c-67da-43f6-ac7e-4fafaf53da14",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a9fc29f0-7dc6-4fe9-b33e-6092f05af451"
        },
        "item": {
          "id": "2354d81a-3426-46fe-8b3f-7c9df5298c7e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0f1509ce-8d12-4837-b362-08dd4453a6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5769dd-ad4e-4248-863e-5eef12e9c237",
        "cursor": {
          "ref": "eeb9cb13-3a0e-46a5-9537-cd0faac8ba82",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fccffa31-1340-4095-8f11-d125ce24f4ea"
        },
        "item": {
          "id": "6d5769dd-ad4e-4248-863e-5eef12e9c237",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "df1764a2-00ac-42ea-ad2f-43066ed500a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7bc07e-5d61-48b9-a46f-665f821a15cc",
        "cursor": {
          "ref": "cf6152d8-d118-441c-83fb-316dc04af57e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1462de33-0303-4c47-b32b-e8ea763da1a6"
        },
        "item": {
          "id": "cf7bc07e-5d61-48b9-a46f-665f821a15cc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "17bae540-90ea-4980-ad9f-99d3a864f37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac7f6c2-c287-404c-8132-6340aadcfc02",
        "cursor": {
          "ref": "e25e924e-b200-419f-ae90-9f6916747c6c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f5262f7d-4521-46d6-81f1-e6c5bd911acd"
        },
        "item": {
          "id": "3ac7f6c2-c287-404c-8132-6340aadcfc02",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ac746695-bccc-46d1-ab7c-db228db4ba43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be83a5e4-7744-4179-ade0-086624575042",
        "cursor": {
          "ref": "e61abd21-3684-41ca-81fd-707fceb10910",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "305f1906-8057-4784-ae51-b55aed464b28"
        },
        "item": {
          "id": "be83a5e4-7744-4179-ade0-086624575042",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e54489e0-1c1d-4720-a91d-0dca9719c67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8300ec7f-1a5f-4fdb-a5d7-e150bb5e2e8a",
        "cursor": {
          "ref": "9a9823fa-65fb-4af1-b4fc-2218a83c7fcb",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4d6da46f-1cf0-418f-be33-338e92ae522b"
        },
        "item": {
          "id": "8300ec7f-1a5f-4fdb-a5d7-e150bb5e2e8a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d172c7b6-0f4c-4a03-a3e4-1547570cc93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64907cc-1b4a-4102-bde4-2321d62d3901",
        "cursor": {
          "ref": "410dcee5-84e0-4af8-be0d-d939e524abe3",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fad8d748-54a7-4bf0-9d3f-2ab2c7d0979d"
        },
        "item": {
          "id": "d64907cc-1b4a-4102-bde4-2321d62d3901",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9804b025-b123-4a2b-bda6-d123739f32a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ac00ca-b510-4767-a39a-70de25e68d85",
        "cursor": {
          "ref": "26ee43ed-cd42-4718-a9ed-19dc6cd12a1c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fd97b0da-3697-4322-9d59-3052e5725bfd"
        },
        "item": {
          "id": "f4ac00ca-b510-4767-a39a-70de25e68d85",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b0fec099-d978-4041-8ab7-81874beb2a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106ae7bc-129d-4dc2-b448-5562a2047f3a",
        "cursor": {
          "ref": "787fd5f8-fc5b-4173-a44f-e76da6d7c3dd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2c695ebe-845a-4860-9a1f-51aaf2e338c6"
        },
        "item": {
          "id": "106ae7bc-129d-4dc2-b448-5562a2047f3a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "72598363-5b82-4768-a7b0-b97ad02deb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe5ba16-e176-43aa-82c6-5c03c64b473c",
        "cursor": {
          "ref": "2ce8c893-28c4-4b3b-a44e-04a7ceeb820e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "49db58c3-f24d-47d8-8dad-7aa1d82947e8"
        },
        "item": {
          "id": "cbe5ba16-e176-43aa-82c6-5c03c64b473c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "52b918c0-6a1a-4f94-ae58-8d49364b7d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d976e8a-055c-42f3-b5da-63c1f440d1e5",
        "cursor": {
          "ref": "efbc83fb-a32c-4edf-b833-7c920b6d3e94",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7fbc63e5-5a9b-449a-8076-81d34d39f758"
        },
        "item": {
          "id": "7d976e8a-055c-42f3-b5da-63c1f440d1e5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "05b016c9-5500-4f31-9b98-bfc9f5d9a419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a761fff-298d-45e9-be62-3582eace66ab",
        "cursor": {
          "ref": "61f3ca4b-f18e-4f4f-b3bc-f4847bde65db",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9acdd0a9-ced0-4dd6-95c2-a93a8d23955c"
        },
        "item": {
          "id": "1a761fff-298d-45e9-be62-3582eace66ab",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "66eb4efb-31d2-4cf4-9148-df601f73cdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ca0964-8856-4be2-a94e-841ab48a38e0",
        "cursor": {
          "ref": "f86e6906-754d-43ab-9313-c728eb2e9887",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d0816192-dae0-4018-b363-6d5e914eddee"
        },
        "item": {
          "id": "76ca0964-8856-4be2-a94e-841ab48a38e0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "531b94ee-a124-4b47-a2c3-5a8f61d4a402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab328436-955e-477d-a1c8-1164cd8db0a7",
        "cursor": {
          "ref": "dd8221a2-741e-42cb-8444-fae11b261a5b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "947bd4a4-919f-4ea7-ada7-396cbbbcdc10"
        },
        "item": {
          "id": "ab328436-955e-477d-a1c8-1164cd8db0a7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7b09f65e-33c6-41c0-abdb-11437d4ca167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71cfffa-66af-4d25-8fad-5426dc6b0ce1",
        "cursor": {
          "ref": "7740465f-629c-4286-b872-b0163d918b3f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4a8ac068-2b14-4614-b06c-349a0392ccc1"
        },
        "item": {
          "id": "a71cfffa-66af-4d25-8fad-5426dc6b0ce1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "12a7615a-b2d3-43b5-bf2c-be38f6168955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c4f6c6-1025-4367-a4d3-657d99ee87f7",
        "cursor": {
          "ref": "c65c319e-2116-4871-9a41-5f63851a0541",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b0c2611b-eca4-4ee8-b54b-b29c141ce875"
        },
        "item": {
          "id": "50c4f6c6-1025-4367-a4d3-657d99ee87f7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fbeb76dd-9281-4780-a7b0-24fe2d2e71ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659d95e7-1d9b-4e5c-804f-560024f4971e",
        "cursor": {
          "ref": "e4317422-000d-4174-aa60-63f0ed272446",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c24f0357-80cb-4326-bb07-99515848ff96"
        },
        "item": {
          "id": "659d95e7-1d9b-4e5c-804f-560024f4971e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "74c5dd9b-3a6f-4a94-bbc5-c3a34517c0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744dbb55-205e-4f5c-adbb-97e65e0aa61a",
        "cursor": {
          "ref": "68a28fb7-a5aa-4242-8ce2-c0f42679a580",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "64b513b5-345d-42e8-91f5-e385c14813a4"
        },
        "item": {
          "id": "744dbb55-205e-4f5c-adbb-97e65e0aa61a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "85f02ad3-3312-4905-b0e2-a8040fd8f7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec791651-6ce8-463e-9707-fb812d2aec0c",
        "cursor": {
          "ref": "5419ee88-b5f6-469d-a1ea-03e28b96c1c5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a25ba677-7437-4010-8785-93ee0ae9face"
        },
        "item": {
          "id": "ec791651-6ce8-463e-9707-fb812d2aec0c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "55a4767d-2e4c-4fd3-a540-277a9555ef29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a5a2ce-b536-42b1-be07-0c6ac59b8bf3",
        "cursor": {
          "ref": "eff10c6e-568f-416b-9ed6-a206b0597c9f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce6e59d0-828d-469c-89d0-588852a355b8"
        },
        "item": {
          "id": "69a5a2ce-b536-42b1-be07-0c6ac59b8bf3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "870429b5-7ce9-40d0-a702-20f341aae88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f220f6f-4f5f-4131-b12d-0ec7d413f3d6",
        "cursor": {
          "ref": "ad06ff28-65ea-4155-b67d-843eb9d01c67",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "14aa431b-068d-42c9-9f72-82b4ca1f04b2"
        },
        "item": {
          "id": "0f220f6f-4f5f-4131-b12d-0ec7d413f3d6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c1b2d3c8-588d-4c3a-9037-ab47e2b1c399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c975077f-0d56-48bc-a142-85e0f60947b9",
        "cursor": {
          "ref": "8424aa83-249d-4ad4-bf97-536382fed6ab",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "25c912d2-df6d-4751-a71a-d52c76a7e6d3"
        },
        "item": {
          "id": "c975077f-0d56-48bc-a142-85e0f60947b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c28abca0-c74e-4317-b979-77416403aade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50f2d9d-98c2-4486-92fd-88c1b5a9702f",
        "cursor": {
          "ref": "4a3d26e2-fbab-4a63-a681-7831f8ac3292",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "067bc1b5-4b4b-40ef-8402-d9b0d9b976e4"
        },
        "item": {
          "id": "f50f2d9d-98c2-4486-92fd-88c1b5a9702f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "80db258b-a851-4d29-a1a4-a75494cdef6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e80ed07-f3f1-47ce-a59e-be94020bc345",
        "cursor": {
          "ref": "cfe16a06-44e0-4419-af30-40e94846fcb9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a1029f1d-dfc1-49b3-b4ce-576278a63e1a"
        },
        "item": {
          "id": "8e80ed07-f3f1-47ce-a59e-be94020bc345",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "edc4aae0-e077-4207-9a71-39d3bf5cca9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9580e0-d527-47f9-b2f2-2eb61fef7b08",
        "cursor": {
          "ref": "3a4d5380-0ebe-4fe9-b892-0e6aed5aa69b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dfb1d662-2a5a-4907-b89a-2f05a21aa1a5"
        },
        "item": {
          "id": "ae9580e0-d527-47f9-b2f2-2eb61fef7b08",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7ba0cf7b-68a7-4c95-b4b1-188235ec7de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e36699a-45a8-4725-9b3d-81a2dad272a1",
        "cursor": {
          "ref": "774cf2ec-6a9d-4f31-85d6-1bcf01ae0bae",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "74ebc22e-a227-4a4b-8ab0-859ed0e51fa9"
        },
        "item": {
          "id": "4e36699a-45a8-4725-9b3d-81a2dad272a1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "705b822e-5005-4639-bb69-167b1d02a412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238fed25-4c5c-474a-8e84-6b4df4161384",
        "cursor": {
          "ref": "8e0defda-c451-4600-b227-cce30e7ea93c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bac38901-bbbe-4258-a375-302e0613d2a2"
        },
        "item": {
          "id": "238fed25-4c5c-474a-8e84-6b4df4161384",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7fac035b-c4bf-4a04-9f3f-0ecb3e820bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93162d1-425e-436b-b18a-ed8233247785",
        "cursor": {
          "ref": "0e503be4-5533-4ad8-a95e-ed91b96aabb3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b107fbca-dfbc-44af-ae6c-562c4a7e757e"
        },
        "item": {
          "id": "e93162d1-425e-436b-b18a-ed8233247785",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0279899e-d19d-416e-87ec-75cd9584372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98666af-b4b0-42ea-95e2-69776c540f21",
        "cursor": {
          "ref": "18ae412e-b8ee-4568-941c-5e5d107cca5d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "aa364a30-5c05-4866-96d5-d12a537e2d6c"
        },
        "item": {
          "id": "d98666af-b4b0-42ea-95e2-69776c540f21",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "656cbfe0-511f-4c0d-b251-f8be11241790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0e5143-75f8-488b-9b29-11035e8afb07",
        "cursor": {
          "ref": "147fe466-e57a-4fbe-ba53-cf5a0a18d4e3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eadb63db-897f-4db0-b12c-b4ac56af7f24"
        },
        "item": {
          "id": "8b0e5143-75f8-488b-9b29-11035e8afb07",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "509d4983-5894-4902-8b67-e392365241f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240df2f6-7bb0-401e-a5d4-e081406d94e3",
        "cursor": {
          "ref": "5bfb30af-a6af-45fc-a243-73457d14bf80",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e6ea3deb-c6fb-4a33-949f-bb2cc7e3b30e"
        },
        "item": {
          "id": "240df2f6-7bb0-401e-a5d4-e081406d94e3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7cfb8088-873a-4ded-88c5-833bf5ed02bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b94dd23-389a-4332-a4fe-d4d5dd9af718",
        "cursor": {
          "ref": "68a6cfd2-241e-4475-a347-ed8cc50167a5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5f80fb59-eb2f-4e58-9c43-455f858d72cf"
        },
        "item": {
          "id": "9b94dd23-389a-4332-a4fe-d4d5dd9af718",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2c520fda-8e85-40b1-a247-6cb62d891679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f62be38-12f1-4eac-a6ff-d6faf8ff6f83",
        "cursor": {
          "ref": "eb20020e-034e-4abd-82ff-9210109a06b9",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3d784f4d-e68b-4a2c-a95b-94bb2d29f697"
        },
        "item": {
          "id": "9f62be38-12f1-4eac-a6ff-d6faf8ff6f83",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3c78d1f2-737f-4378-b562-bba50c661cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa2f7d0-d051-4347-a9fa-076511073cfb",
        "cursor": {
          "ref": "fefe7613-03be-415d-9d19-7e60bbe69c28",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4f818328-4890-473b-93d1-611d10286ca5"
        },
        "item": {
          "id": "0aa2f7d0-d051-4347-a9fa-076511073cfb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "aaaa91dc-c9a9-48e6-ac97-d5a2368b76de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec47a58-5910-4f69-aa07-31cd31f41457",
        "cursor": {
          "ref": "b22d8e6f-f6c4-4802-8b32-0ed74bac3c92",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "660a06b7-ec8d-4096-814c-76d369d09419"
        },
        "item": {
          "id": "dec47a58-5910-4f69-aa07-31cd31f41457",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b7f93819-f8b3-4472-9dca-6626699d1b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256f150b-fa11-48ed-a086-7467e406217b",
        "cursor": {
          "ref": "945c1a5b-fae1-42ea-96b8-75f3147c4449",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "12ecd632-5d36-48d5-b252-3d362eeb433d"
        },
        "item": {
          "id": "256f150b-fa11-48ed-a086-7467e406217b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "822f8f77-8539-4980-ba86-183339950f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81335b8e-ae6c-4c74-9206-6517ccfdae0b",
        "cursor": {
          "ref": "50e1b7fd-b518-4ac5-ba3a-7c0a529b775c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "df381759-94b2-49bd-ad36-cf1f1580dcbf"
        },
        "item": {
          "id": "81335b8e-ae6c-4c74-9206-6517ccfdae0b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "44292f6f-ac76-434d-995d-f3b404cc3b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72190da7-a2eb-424e-8b08-4df7393ec62d",
        "cursor": {
          "ref": "08686d20-8ce3-4a32-bc25-b0daf559eef3",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "557c4a53-7deb-44d4-b72d-d56ee2dfb4af"
        },
        "item": {
          "id": "72190da7-a2eb-424e-8b08-4df7393ec62d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "94b8bf30-6a51-4fce-8a7c-205c652106f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67a9c11-2382-4908-9ed0-93717befade0",
        "cursor": {
          "ref": "5973d95f-7d3d-4428-bafe-96081936822e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9df29a57-e047-4127-afe5-1b8c1af6b698"
        },
        "item": {
          "id": "b67a9c11-2382-4908-9ed0-93717befade0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3d8e34b4-adff-4515-ae6f-fa4906869c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54a21d5-fb42-499b-9548-5c3a8e40c5dc",
        "cursor": {
          "ref": "320b5003-4cd7-47eb-8fff-0215e483a607",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5d3f240a-8487-448f-96d6-811630833dab"
        },
        "item": {
          "id": "f54a21d5-fb42-499b-9548-5c3a8e40c5dc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "01f420f7-c83a-4f49-8fcf-8dd6bd8529ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff237bd-c9fe-4e30-8ebf-44a888889992",
        "cursor": {
          "ref": "30056a8a-b392-4df0-b7a0-d84d20902f93",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "90fe1709-5248-469c-8989-0f882730def2"
        },
        "item": {
          "id": "1ff237bd-c9fe-4e30-8ebf-44a888889992",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4d79069b-7b6b-40a8-ad4e-17dac794dd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3b8c19-79e4-4f43-a561-e08d2d6a5ea0",
        "cursor": {
          "ref": "41808451-67da-431d-8ea0-fa468ca5290b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f9276afa-29f0-4c4a-95bc-9eb94ac77320"
        },
        "item": {
          "id": "df3b8c19-79e4-4f43-a561-e08d2d6a5ea0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "657ce20f-8b43-4609-978c-3e285253269e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41edba04-2075-4588-97e5-d79dfc9a8f23",
        "cursor": {
          "ref": "ac9d0de0-685b-40f8-a364-f3ea072d7401",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "486afd51-0f7d-4e6c-9bff-c25f9252494e"
        },
        "item": {
          "id": "41edba04-2075-4588-97e5-d79dfc9a8f23",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "49d9c4a1-db9e-4bd1-ac40-e00020ce4041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfea7c62-dea0-46f2-a68a-ff47937b73f7",
        "cursor": {
          "ref": "b278326a-d71e-4032-924c-7d40693137d6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "016132bb-2ba5-48af-bca0-53a947634786"
        },
        "item": {
          "id": "dfea7c62-dea0-46f2-a68a-ff47937b73f7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e4967654-bc35-4b44-926b-3ed4ed84a2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17337791-db1e-4acc-ae36-78cf654b298f",
        "cursor": {
          "ref": "c5c068ad-d6ea-4d63-9326-e98011af8fc3",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ad070ee4-1704-4f67-9f05-75f3267b2ae3"
        },
        "item": {
          "id": "17337791-db1e-4acc-ae36-78cf654b298f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "45c29ab9-7e4c-4673-8932-5272ab8059f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc222f55-815e-4d92-b588-c884cdc8246a",
        "cursor": {
          "ref": "d5b48bd6-bcf0-40f4-b689-98aaf1a0c121",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d57fdd89-2852-47fc-b716-57d2147bb36b"
        },
        "item": {
          "id": "dc222f55-815e-4d92-b588-c884cdc8246a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "863bb183-b344-49c3-9c46-2ed58a1ade6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6149a5fe-e025-4461-869e-2ed2beb861b6",
        "cursor": {
          "ref": "048c84b6-1f11-4c13-a97f-988cb53bdb52",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1c78d376-f63d-453f-962b-fd83782302c0"
        },
        "item": {
          "id": "6149a5fe-e025-4461-869e-2ed2beb861b6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "502e39bc-92b6-41a9-b5d6-33ea9b9319a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad21abb9-9c14-4f71-b444-d3a105b675da",
        "cursor": {
          "ref": "32a74e89-cee2-42f0-a68f-e5a3bac0bae8",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "668951a8-1153-42f3-a9e8-567736b66f0f"
        },
        "item": {
          "id": "ad21abb9-9c14-4f71-b444-d3a105b675da",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8bf58327-0a39-463c-9b52-683a61d75708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa2b04a-987c-4c9e-998a-8028d9973fd4",
        "cursor": {
          "ref": "864f5601-0ece-42de-afed-15697ff3aace",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "52b63534-031a-4612-a584-165ee6df3dae"
        },
        "item": {
          "id": "5fa2b04a-987c-4c9e-998a-8028d9973fd4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7a218b4d-4862-4aa0-a5d2-604e2e2f590c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a483405f-1b61-48ce-ad8f-9c01b5e1dfa3",
        "cursor": {
          "ref": "7193bc69-755f-4a22-9b80-39a40c28b332",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1452aebd-1c8f-46bd-8414-21c3fe4d984e"
        },
        "item": {
          "id": "a483405f-1b61-48ce-ad8f-9c01b5e1dfa3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ba7e69e6-21a0-4fd7-b38c-f99ded20667c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae03d7a7-565e-4cd4-9529-25f049ad5637",
        "cursor": {
          "ref": "b8978585-e7dc-48b0-88c8-176903051645",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "68df058e-9b0d-4a75-b370-cd47d42638e3"
        },
        "item": {
          "id": "ae03d7a7-565e-4cd4-9529-25f049ad5637",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "39aab7b0-2551-408c-ac36-45264d61ee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7d6fbf-07d2-4328-a63c-1eb7479188cc",
        "cursor": {
          "ref": "14bbf873-e626-4d45-8ccc-8753eb7003d8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5e8fdacf-d8b6-4375-a59e-964a0764116d"
        },
        "item": {
          "id": "ec7d6fbf-07d2-4328-a63c-1eb7479188cc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5faa8832-41d1-4e81-a1b4-eff1cd082da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c6555d-1914-4f02-8a28-739528faea0d",
        "cursor": {
          "ref": "5c0d53b2-ac0d-45ee-939c-4d0f454c5347",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ec9827e6-0956-4294-8acd-ca6168d56368"
        },
        "item": {
          "id": "f1c6555d-1914-4f02-8a28-739528faea0d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "598a6ede-9cff-4c85-ac1a-e4f0a5f2dfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a624439-8f80-42af-aaec-240538496288",
        "cursor": {
          "ref": "e7d44eef-3871-4773-900d-07e8f9515b9a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "95e287be-f9e5-4608-bdf7-7337afce2e45"
        },
        "item": {
          "id": "7a624439-8f80-42af-aaec-240538496288",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "61331f89-6aa2-45d2-9201-f079b25bbccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc14ae6-5382-4d36-a49f-6d73793e23f4",
        "cursor": {
          "ref": "d024cac4-f6ff-4c38-a936-960885b1f404",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "544845cc-e834-46e3-b8df-56e1af6715e8"
        },
        "item": {
          "id": "fdc14ae6-5382-4d36-a49f-6d73793e23f4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "04a5cd98-c802-4000-9213-e8a53e254de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec436d3-4330-45a9-944c-a37da4ff76b6",
        "cursor": {
          "ref": "1092ac78-9adc-450b-af12-890d3407dad1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3dbc5886-18e0-481d-bbd9-10ba5d290434"
        },
        "item": {
          "id": "8ec436d3-4330-45a9-944c-a37da4ff76b6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "90e344e6-b5cb-4bef-9967-65c752f526c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a40a26-da77-47d9-adc3-f8df230f4b79",
        "cursor": {
          "ref": "8236d2fb-184b-43e1-b49d-b97387163f3a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c005f9ae-8e41-44b4-8de1-8de956156fbb"
        },
        "item": {
          "id": "a1a40a26-da77-47d9-adc3-f8df230f4b79",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5e759ceb-0e21-41b9-b05d-81caa29b80e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72dd372-1442-4c30-aeb2-ab8a104b4ac5",
        "cursor": {
          "ref": "96d336ee-2e59-465f-a798-d7a92ed33f4b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e97e9bb5-32d9-4e2f-88eb-3e7abf2d94dc"
        },
        "item": {
          "id": "e72dd372-1442-4c30-aeb2-ab8a104b4ac5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1a907c97-b0f6-40c0-9bfc-eac81e1cbc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5ca60c63-18d5-4cf8-8930-e6e71464f1ed",
        "cursor": {
          "ref": "5179ae34-f538-4b58-bfcf-0ab1bd157fd3",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cc36ec22-babb-4f1f-92ff-7ea1af71f794"
        },
        "item": {
          "id": "5ca60c63-18d5-4cf8-8930-e6e71464f1ed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "56cc16f3-ccd1-4e2b-8f56-a8794ba1841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c5407ed7-f212-46e8-9dfe-d544fb563295",
        "cursor": {
          "ref": "452c4e7b-faf6-49ad-a54c-bf636ad2c56c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "afaa0c20-f30d-48b6-a481-10d29eab4d07"
        },
        "item": {
          "id": "c5407ed7-f212-46e8-9dfe-d544fb563295",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "01693546-1db3-45e4-b3d9-260741af3701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e1264d32-795a-4ba0-beb1-9e9d1cc6d284",
        "cursor": {
          "ref": "1097a9b3-ca59-4f82-b2ae-94fbe43b1a11",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6684ca5e-320d-4b7a-b1a5-1ac2150d3f7b"
        },
        "item": {
          "id": "e1264d32-795a-4ba0-beb1-9e9d1cc6d284",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5f65222f-f1cf-4b0f-8837-6140d22e4d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1a596634-1c00-42a8-944c-e95f72f54b1d",
        "cursor": {
          "ref": "0acf8380-cc56-4ede-b187-690a3bedc558",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "44b4d8f5-2a67-4dbe-884a-6db962069d75"
        },
        "item": {
          "id": "1a596634-1c00-42a8-944c-e95f72f54b1d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "42d7f5dd-bf5c-495c-a71e-358ff74448f6",
          "status": "Created",
          "code": 201,
          "responseTime": 11262,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb36ae8f-bfe2-4042-ae37-389d864af0fc",
        "cursor": {
          "ref": "e9fa7e3a-0917-467b-8ca7-d655a6ae4745",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e2175232-58f6-4de2-86b8-56a6b1b74f69"
        },
        "item": {
          "id": "fb36ae8f-bfe2-4042-ae37-389d864af0fc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "02edb86c-3850-44b3-bf31-b0952f14adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3f67043b-69f9-4633-b4ae-e14c693fce80",
        "cursor": {
          "ref": "6aeac42d-f372-4bc1-8760-37ce63d073a2",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "90d9aa76-3bfe-488b-b099-9238b9d2c55a"
        },
        "item": {
          "id": "3f67043b-69f9-4633-b4ae-e14c693fce80",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0895542b-d4f2-4c39-94f9-7c3aa9395cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "da8e61a0-702d-4348-93ab-0cdbdd9c809a",
        "cursor": {
          "ref": "a7c3945b-72ee-4a82-9122-b9af79e50501",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ed5f6cf-d053-40f3-8f22-aded3687de54"
        },
        "item": {
          "id": "da8e61a0-702d-4348-93ab-0cdbdd9c809a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c967f4b9-ab93-40ec-b2af-bb2c57a0db3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a3bf0c-a14f-41e5-9ad4-a3e608eb04f2",
        "cursor": {
          "ref": "b728b2b3-cd6d-456a-91a4-94e85104dba7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "273cb2b6-e291-44bb-8a41-f08c00b10057"
        },
        "item": {
          "id": "08a3bf0c-a14f-41e5-9ad4-a3e608eb04f2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "57f8ae65-23e7-4bdd-b5e9-9c50aadc555d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fc9143-11a6-410c-8adb-1a62139d4287",
        "cursor": {
          "ref": "ca7ddf50-348d-4166-bc39-b0c194013d91",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f634af6f-23d1-4cfe-8a3b-bd80a26c51f1"
        },
        "item": {
          "id": "81fc9143-11a6-410c-8adb-1a62139d4287",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6db9703e-a969-4674-a326-73fd97420498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b603350d-17a7-4659-82f7-7f5468dbaced",
        "cursor": {
          "ref": "7ac3d94a-e9aa-4377-9796-db3ba95feaf6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "963b9942-df77-46d5-9740-d67ca2f9c2e5"
        },
        "item": {
          "id": "b603350d-17a7-4659-82f7-7f5468dbaced",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1ee40d4b-7153-44a4-9fbf-d184e6f00dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d719a939-5931-4da5-9d65-40a6a9c9680b",
        "cursor": {
          "ref": "d350de2a-a16e-4178-bcb3-c2ab7cf6af8a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e58b6dc4-d416-40a3-a75f-f55467989ee4"
        },
        "item": {
          "id": "d719a939-5931-4da5-9d65-40a6a9c9680b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1dd2850d-5b66-43e2-9a44-5f3bd25ff7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fd36e5-3556-4be6-add8-bbbbccbd80cd",
        "cursor": {
          "ref": "fb7940d9-187c-47b7-90e7-d56632ccc7a0",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "35f3dedd-766f-4ba9-a10f-785a9fbf5076"
        },
        "item": {
          "id": "c0fd36e5-3556-4be6-add8-bbbbccbd80cd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6f9f31d8-023c-48fd-b0ef-13cf4faa4e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41e1781-aa80-4abf-9ab0-e0d7d50c3d12",
        "cursor": {
          "ref": "62c15b6e-8a13-4755-a1b9-ddc8635b1113",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ed05b7ce-ea5a-4164-907e-8ee0dcceca7e"
        },
        "item": {
          "id": "b41e1781-aa80-4abf-9ab0-e0d7d50c3d12",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8857ee2b-92b6-40d5-a5a4-86bcbbf6b150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69566073-7310-4cda-91d2-f1a528bca685",
        "cursor": {
          "ref": "7bb31a4d-8df6-481d-b3cd-227bc1b3084d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8714781b-aa4e-43f2-856f-b8b0a03bb12f"
        },
        "item": {
          "id": "69566073-7310-4cda-91d2-f1a528bca685",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b70f03dd-6ddb-49f8-83b0-6cb5270b8dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fae0cbe-64f4-41fe-a8f6-d6fd77a17943",
        "cursor": {
          "ref": "b06ad129-7f13-4e4f-8417-c8197e98a4ef",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9b3a612e-7030-43fc-be52-62fc29777aae"
        },
        "item": {
          "id": "0fae0cbe-64f4-41fe-a8f6-d6fd77a17943",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "149d757f-5e5d-4bb0-a39e-751dc9f83978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e631df-c15e-4495-8487-7ad93db18c34",
        "cursor": {
          "ref": "3e4466ec-3843-4944-bf84-832fdd74e867",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "67a7cd75-ac17-4167-bb8f-72b4500e6dfa"
        },
        "item": {
          "id": "30e631df-c15e-4495-8487-7ad93db18c34",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69fad630-af22-41a0-95dc-493045dfa9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a52ba5-7a81-43f5-adb9-ade34fc411b8",
        "cursor": {
          "ref": "4065bed1-cd59-48d7-bf20-60194a4978cc",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b6ae9f54-36d6-46b1-a53e-44b1204973c7"
        },
        "item": {
          "id": "72a52ba5-7a81-43f5-adb9-ade34fc411b8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ff061aa6-d6b2-4fbb-9448-ee2bd41d3a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3491f9b-b6ca-41f4-908a-2357e928d04f",
        "cursor": {
          "ref": "af17a48c-ca66-4df8-9ea8-35db0912ebab",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "09db09ee-fc56-44f0-bd04-c40fb0781311"
        },
        "item": {
          "id": "f3491f9b-b6ca-41f4-908a-2357e928d04f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "22e9e97f-cf8e-4edf-93ff-bb1ee9823f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b202a6-8fc6-4699-988b-6f0d6748e1cd",
        "cursor": {
          "ref": "39ecd235-6058-4c7a-8ebd-7f418bdb5991",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "72b2efa0-4728-481b-822f-cf8101cc3e14"
        },
        "item": {
          "id": "68b202a6-8fc6-4699-988b-6f0d6748e1cd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ca76f229-1f02-4761-b858-27027b76cc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364d6f34-47e4-4a78-8022-04ad5870ec11",
        "cursor": {
          "ref": "abf559ad-ca5c-461d-be34-ca93aba77765",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "09c379ec-9237-421c-918a-ea2e8e990348"
        },
        "item": {
          "id": "364d6f34-47e4-4a78-8022-04ad5870ec11",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9faf71e9-603a-4b27-8610-f573601a10f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5f6b75-2404-4359-8900-4f458039d22a",
        "cursor": {
          "ref": "83cd8dd7-5115-45a3-9262-1c11134431ae",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "567f28ab-dc8e-4cf7-a986-b839a40de946"
        },
        "item": {
          "id": "6c5f6b75-2404-4359-8900-4f458039d22a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "73d9100f-ba20-4387-bad4-48e43e412f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2a2abf-13f8-41b6-970d-fc94842e00c9",
        "cursor": {
          "ref": "f888e333-9951-4d93-8487-ac025cad4a30",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dd628944-bae8-4504-92ef-bcb555fc990c"
        },
        "item": {
          "id": "8d2a2abf-13f8-41b6-970d-fc94842e00c9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c224956e-5390-425d-8bc6-e999a02da612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe683d4-8ce1-4b5e-ba77-ec06395650e1",
        "cursor": {
          "ref": "56f410db-67f8-4309-92a9-96009370684e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6f5c1004-0233-43bb-9c49-5664972980cf"
        },
        "item": {
          "id": "2fe683d4-8ce1-4b5e-ba77-ec06395650e1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e4cd058c-f6f0-4ebf-8c8d-914f81175c51",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "3e3e19c0-0b55-4d64-a59b-f8a980df065d",
        "cursor": {
          "ref": "0ef511c5-434d-4019-95f5-491bfb3f6e9b",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3333c221-f2e2-4347-b1b2-a9dc132ab6ed"
        },
        "item": {
          "id": "3e3e19c0-0b55-4d64-a59b-f8a980df065d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6df6d323-d001-46bc-9e8d-7dea6a4a7ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fbc5db-e886-4e96-9d56-21bb50615ba5",
        "cursor": {
          "ref": "e1e3dbd1-d11d-4925-9c1d-0e15ffea4d33",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0343b172-27f9-4348-b9fa-6ae060d5ce4b"
        },
        "item": {
          "id": "87fbc5db-e886-4e96-9d56-21bb50615ba5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "241ace33-c03b-4a3f-8367-f458e0e09cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de363900-9c77-4d29-bf4a-c892a4eb989b",
        "cursor": {
          "ref": "ca7f08e0-ed90-46b9-b2a8-38335bfdb1b9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "63a6dd5b-c921-420f-bc59-85fbad4cf140"
        },
        "item": {
          "id": "de363900-9c77-4d29-bf4a-c892a4eb989b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "daf5d0e3-d2bf-4aff-9650-c597b2513cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5551ec8d-a382-4383-925a-fc271fb8231a",
        "cursor": {
          "ref": "d6dfcafa-23b7-4141-a1ff-8271756f5ffe",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2a0eb43c-5c31-4c19-90d9-95ec94f44351"
        },
        "item": {
          "id": "5551ec8d-a382-4383-925a-fc271fb8231a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a13fb0cc-3730-4459-9876-3c14ad502527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe9c1be-bfe8-4cff-aa19-f92f55cbef95",
        "cursor": {
          "ref": "4d6700c7-ec7e-40e4-b26c-e1779f76f2f4",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d615400c-2ba1-4e98-848b-4c314a2d23ce"
        },
        "item": {
          "id": "cbe9c1be-bfe8-4cff-aa19-f92f55cbef95",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fff50a62-2d0a-44ef-a000-497e5ddf6ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9025bb67-09e2-41a7-ba9f-df3e66e705fc",
        "cursor": {
          "ref": "d8d64829-c80f-4284-aef9-bbd649eac9d2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "15630849-13ae-4c26-8106-39950d1744ed"
        },
        "item": {
          "id": "9025bb67-09e2-41a7-ba9f-df3e66e705fc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4c0dcaa9-8258-481b-b6c9-edac4ef2f2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab45b4f-489c-42c3-ae98-108fe1a0e6b5",
        "cursor": {
          "ref": "6f792374-727c-4a4c-9b50-f42ecb4ee6d3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3157d5c0-16b6-4b1f-8adc-0102aa193c12"
        },
        "item": {
          "id": "5ab45b4f-489c-42c3-ae98-108fe1a0e6b5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f02d3fd-4424-4f7f-9a1f-be7f124edcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5ec5e7-63db-41c9-8c36-9c59bf453f5d",
        "cursor": {
          "ref": "913a7ca8-ce30-4e9c-8274-011faba96ec0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "61a3b795-7c10-4ae5-98a7-c8c46384ec51"
        },
        "item": {
          "id": "bd5ec5e7-63db-41c9-8c36-9c59bf453f5d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3393ba69-ab06-411a-b011-cb26fc6b1a04",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "10b5ef0b-2330-4542-9cdd-fab5adf6e83d",
        "cursor": {
          "ref": "629259bc-29e6-4b29-909f-9853783177e4",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aae2f785-85ce-42be-9aff-8c8286fe968e"
        },
        "item": {
          "id": "10b5ef0b-2330-4542-9cdd-fab5adf6e83d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dc7e11a9-88dd-4b73-a386-eba9f71504a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cb5f52-bee5-43fc-9741-4bedc272cb57",
        "cursor": {
          "ref": "9ff9410b-3c69-45a0-b4c0-e53de69362e3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8b20f672-8ea6-4f62-98ef-5d4a6ee4086f"
        },
        "item": {
          "id": "23cb5f52-bee5-43fc-9741-4bedc272cb57",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aab7d065-8891-4f19-b9a1-cc85d75791be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d363c78-63a0-44ee-ad57-2c7d1c049b2b",
        "cursor": {
          "ref": "eb6e04bf-e002-48f2-bfd9-17994497d934",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d7aa0906-37d1-41c4-84f9-0250ca94abb6"
        },
        "item": {
          "id": "9d363c78-63a0-44ee-ad57-2c7d1c049b2b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1ec6f0c0-bab6-4767-ba5d-360ac9dac114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a6966a-1b53-4262-9f99-c98f7ccab865",
        "cursor": {
          "ref": "504aa48a-5100-47d8-bb93-8cbac37aa7b7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "588cfbc5-55c2-4467-8c67-16aff45b2029"
        },
        "item": {
          "id": "75a6966a-1b53-4262-9f99-c98f7ccab865",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "493b3346-a008-439f-a7cc-2c25236aaeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2cb7e2-44dc-4c61-8547-6c7da3f7fe50",
        "cursor": {
          "ref": "0df5966c-29d6-4238-81f3-c4727cdb69ca",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9a997bfd-ae1a-44af-9f57-f69a8ad6339c"
        },
        "item": {
          "id": "ea2cb7e2-44dc-4c61-8547-6c7da3f7fe50",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "18759f5e-7251-46a1-9cd0-2cecae241305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e875744-f3a6-432c-bb45-23ecad01b688",
        "cursor": {
          "ref": "51fbb078-dddc-4eb1-a5be-215e3455cf45",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3242ffc1-2067-4802-a41e-9b29983c31b6"
        },
        "item": {
          "id": "6e875744-f3a6-432c-bb45-23ecad01b688",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5fb47bdd-160e-46de-9f4b-605d8edbfb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f229772b-cf93-4219-bbfc-df1d3bbea2cf",
        "cursor": {
          "ref": "6e392021-48eb-4689-b9e8-9f203972397f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ae75cc57-a8ee-4cbc-a5ee-ec004450f1a6"
        },
        "item": {
          "id": "f229772b-cf93-4219-bbfc-df1d3bbea2cf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7f861d55-1343-45ca-9e47-0f732644a68b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2e741172-2be6-4833-8e87-3118b473bbbe",
        "cursor": {
          "ref": "181d43fb-7814-4022-a45d-66252ac4a4e3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cefdcaff-01c6-4346-887b-22b6f6cfb9e6"
        },
        "item": {
          "id": "2e741172-2be6-4833-8e87-3118b473bbbe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "663e6737-1c6f-4097-8415-e58666649c1d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f1a7412d-999e-4fc7-8b68-a3fb6fe0fd21",
        "cursor": {
          "ref": "53e72c5c-9f40-4b21-9797-de19fadbf376",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9e3a6aef-2b3f-45c8-9ff0-bc0b986490e3"
        },
        "item": {
          "id": "f1a7412d-999e-4fc7-8b68-a3fb6fe0fd21",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "05a49b28-7153-4090-a43f-f2b1de68725c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "49b2da3f-f756-4231-9302-2cad15a28b2f",
        "cursor": {
          "ref": "7fa5d9a3-7b96-4ebb-8033-3a56af5d11da",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "040cfb2c-b490-4420-96b6-8d088f1cdd1f"
        },
        "item": {
          "id": "49b2da3f-f756-4231-9302-2cad15a28b2f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "03e2e436-22fc-47b5-aee7-dfbf4d117c13",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "7997819f-bbe5-41bc-8a15-e25c2339de35",
        "cursor": {
          "ref": "1f0644d5-9b49-4702-a196-f511164ee8d7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cc6f9430-202e-4444-a1c1-b7f6903b9e6b"
        },
        "item": {
          "id": "7997819f-bbe5-41bc-8a15-e25c2339de35",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dc553777-6852-43dc-abfc-42e080d9dfa0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d68c250a-5e9f-4c4b-936e-f792e2dd3d43",
        "cursor": {
          "ref": "f7dc076a-4158-4c31-8af1-b9f28e5332d8",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ce3c10c4-015d-424b-b60e-6c0f8606e832"
        },
        "item": {
          "id": "d68c250a-5e9f-4c4b-936e-f792e2dd3d43",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "986023f2-b298-45ec-a678-352a1a6eef0b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6dd95fcb-94a4-48b2-92c9-c4723a438975",
        "cursor": {
          "ref": "e4661b97-53c6-420d-ae12-24adee05473a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "757376c1-9bc0-4dc4-9d9d-dc30fb138c76"
        },
        "item": {
          "id": "6dd95fcb-94a4-48b2-92c9-c4723a438975",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b8a7857-535d-4430-b111-dd49829de5dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd04e9d0-925d-4579-9039-397017266686",
        "cursor": {
          "ref": "1624a6aa-c754-4a67-bc73-0dca237e5e65",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c1ede1c3-fb1c-4eab-b4c8-2bfe6c9876ec"
        },
        "item": {
          "id": "cd04e9d0-925d-4579-9039-397017266686",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "43f7f6fa-3205-4ed9-b931-eb18dfdb7162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7192b16d-293c-4a42-9671-f618435f0a18",
        "cursor": {
          "ref": "6794b289-5119-45a4-8714-22a35d727977",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "00ac93bd-8f02-4e53-858f-713a83a4f779"
        },
        "item": {
          "id": "7192b16d-293c-4a42-9671-f618435f0a18",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "118f615c-34f4-4334-8413-2451f6000748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe66a45e-dca5-4f95-8bd7-622cdad7eb26",
        "cursor": {
          "ref": "e34c630e-9921-4ea5-b327-717ded774226",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4fedbc8b-8a4c-4ba2-bd06-38b292d9f234"
        },
        "item": {
          "id": "fe66a45e-dca5-4f95-8bd7-622cdad7eb26",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8be6966a-092c-4767-8fff-1bfc1ed269f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9424c216-4e72-433c-8657-6aefb6b0b29c",
        "cursor": {
          "ref": "b73bee2a-3808-43ec-a6d2-63b8a85d0b80",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f1fb84ca-58fd-4a0c-a445-2d1425d1afb5"
        },
        "item": {
          "id": "9424c216-4e72-433c-8657-6aefb6b0b29c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "194808a6-47e4-4f42-a156-6affc293889b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66ad6ba-1e0c-49c6-82c4-875cd5d15f49",
        "cursor": {
          "ref": "523d76d5-4b45-4048-9413-bf26e76c606d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7cdebfd3-3d89-4ccb-bd7e-5210f4fb8662"
        },
        "item": {
          "id": "e66ad6ba-1e0c-49c6-82c4-875cd5d15f49",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ed48de31-9603-486b-8d4a-35a871ddb678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26c62f9-b231-4184-9e75-9d98aa77bdff",
        "cursor": {
          "ref": "149394a2-0d58-4100-bf0a-f874baf969e3",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "15466de9-c9b0-407d-9a3b-96cbd289d85f"
        },
        "item": {
          "id": "d26c62f9-b231-4184-9e75-9d98aa77bdff",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "da7d60ab-75a2-45dd-9107-2c12463167b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548c63b9-b24e-463f-99b3-ecf91540b166",
        "cursor": {
          "ref": "a08483c8-237a-4fe9-885b-632f14c87907",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e3c7be3e-60c0-4170-8d2d-0305978177d6"
        },
        "item": {
          "id": "548c63b9-b24e-463f-99b3-ecf91540b166",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "449629cd-f567-4ecd-bda1-db9621e3b261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fb3ad5-4c2f-4635-a380-9b2337e6ffa6",
        "cursor": {
          "ref": "10a8abd3-007b-428e-88bf-862094b069c3",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "90a1cad7-03d8-4285-80ea-0a87211fd1d1"
        },
        "item": {
          "id": "c8fb3ad5-4c2f-4635-a380-9b2337e6ffa6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f14c3861-a892-4ed7-9ac4-aba7b7b12ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43deacb4-1e8b-48aa-9877-f314ed0a3476",
        "cursor": {
          "ref": "dbed7b4c-6d60-43aa-a438-adbd0421d202",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e721196e-12d4-4008-ab3e-2aa57d7e9a21"
        },
        "item": {
          "id": "43deacb4-1e8b-48aa-9877-f314ed0a3476",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fae6e4ca-9f83-43fd-843b-40aa46ad6124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a4395f-300f-4d20-89e3-a19e33568b6d",
        "cursor": {
          "ref": "495f99a1-0f5a-4c8c-83f6-ec0e49e5e636",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "09435974-d055-404b-bf64-4a8f1dc6796b"
        },
        "item": {
          "id": "64a4395f-300f-4d20-89e3-a19e33568b6d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "11a99257-984b-46e8-b5b6-34f549720e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bba566-03db-40fb-982f-382c5b9fba9f",
        "cursor": {
          "ref": "c2f86ee5-1ece-4d87-8040-bf8f5e14a9bc",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a36a48b9-145a-4758-a8fb-d457a096bd97"
        },
        "item": {
          "id": "f0bba566-03db-40fb-982f-382c5b9fba9f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1061dafb-c2a4-403f-972f-6e83dbf545ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987db287-6790-471b-9151-e21ac5ef70bc",
        "cursor": {
          "ref": "fcffe321-f4e7-47b1-bfb2-73c8324f4339",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ae6e3dd0-fc8c-4b77-a7b9-ee84960c3dea"
        },
        "item": {
          "id": "987db287-6790-471b-9151-e21ac5ef70bc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "099048a0-a699-4eda-8138-b128c273ba59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c38858-5ac4-4b76-9aaf-6e89933aa841",
        "cursor": {
          "ref": "ad0487dd-2e8b-4d98-87b1-2a515513cb0c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b38d677e-1cf1-4d0a-8611-aa99b2e52955"
        },
        "item": {
          "id": "d4c38858-5ac4-4b76-9aaf-6e89933aa841",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2f7e8aea-d57d-4f49-81ff-5f57da9a4b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaf12d9-e53f-48ff-8920-ea6753cb95a4",
        "cursor": {
          "ref": "ed04d233-1690-4b21-b451-cd0159473d88",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5e69475d-a9f3-4b88-8877-23e0d3822902"
        },
        "item": {
          "id": "afaf12d9-e53f-48ff-8920-ea6753cb95a4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "258f9e3f-fc20-476c-829e-7da9932584c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0ed1ef-40f2-4979-a2ea-34bcada03a8a",
        "cursor": {
          "ref": "183091c9-1b6f-4be1-8c96-6a31f76228ae",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0fe98278-65b8-493c-9542-265e78a6361c"
        },
        "item": {
          "id": "4c0ed1ef-40f2-4979-a2ea-34bcada03a8a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2cceb60c-ba25-4f03-add0-e240aac52bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306808ec-4262-4f3d-bb80-9fe176364570",
        "cursor": {
          "ref": "ccc14665-a1a5-4175-b7c1-3619e2a4cb2e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2b9010b7-44c8-452e-b691-4a04953aa269"
        },
        "item": {
          "id": "306808ec-4262-4f3d-bb80-9fe176364570",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cdc3f9a2-3c37-4281-876c-19242630fe17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2228110-c54c-4921-afe6-da00924288a9",
        "cursor": {
          "ref": "df77d791-4ea7-4694-a6c1-9e2cd464344a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e004d6c2-78a1-43b0-b990-7d23797b08b1"
        },
        "item": {
          "id": "b2228110-c54c-4921-afe6-da00924288a9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c650b293-c86a-4d0a-8bda-ed40717ac7d3",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "b3c09d4d-725b-48b0-8313-969cedb22590",
        "cursor": {
          "ref": "8ffe6a96-34f4-451e-850b-ea2c0cd4185f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "47bafd15-1b00-45a7-9b9c-338e63fc1da1"
        },
        "item": {
          "id": "b3c09d4d-725b-48b0-8313-969cedb22590",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "992c29a6-feb5-437d-a5d6-4045559afede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b931e63f-f864-47ce-a996-6dfd519876f5",
        "cursor": {
          "ref": "b9eb1be2-6f64-46bb-b6c5-0534f820fc09",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5a00b05e-70fc-481a-8101-1db79a074c15"
        },
        "item": {
          "id": "b931e63f-f864-47ce-a996-6dfd519876f5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f4040b4d-2987-4558-acd5-de93f72ec93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52288846-68bf-4bb2-8eb0-67358ba577fc",
        "cursor": {
          "ref": "6b2c1996-4dcb-4af3-8c0c-b7b1c4c87c7a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4dc54a71-14b7-45aa-beea-2579458e25ff"
        },
        "item": {
          "id": "52288846-68bf-4bb2-8eb0-67358ba577fc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b57dc93b-c6ae-4c62-8c8a-2a206bf9b437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a2ca75-343d-4ba8-830e-a4e5ca7f3d23",
        "cursor": {
          "ref": "b26d2ac0-b831-4b3d-b00d-a4561a2e7191",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "05e50a5d-054a-4601-94d2-3c07def45ddb"
        },
        "item": {
          "id": "b4a2ca75-343d-4ba8-830e-a4e5ca7f3d23",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a479fc39-f9e4-425a-9f3e-b3cb52bb9584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008fa15a-cd87-49a5-b760-4c62a653582d",
        "cursor": {
          "ref": "04bd14d6-02ea-4ffc-b079-a3453af4245a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3de5e512-c5e6-4e2d-9f87-ce96d8894d4b"
        },
        "item": {
          "id": "008fa15a-cd87-49a5-b760-4c62a653582d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d39e9976-bd14-46cf-87f5-da1fc1cd26a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d885dce2-61fd-4ee0-b75e-e026a05960aa",
        "cursor": {
          "ref": "7a60423b-afb7-45ed-9ed5-287084bcda0c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "072caf0f-bdda-4280-82ed-feae27408b04"
        },
        "item": {
          "id": "d885dce2-61fd-4ee0-b75e-e026a05960aa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f4c7c40f-65e9-4ae6-ad65-137139557928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7d6fdc-5bd5-483a-bb0c-263215f465b8",
        "cursor": {
          "ref": "f173c787-5aed-4229-aaaf-ae3c5d5859dc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f5fcede1-28e6-42fd-8a12-097cfd98b806"
        },
        "item": {
          "id": "6d7d6fdc-5bd5-483a-bb0c-263215f465b8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6476ad33-ed19-495d-8bea-9ffee75147b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec56677b-5b07-464b-8c2d-9b21f47917e7",
        "cursor": {
          "ref": "eb59918a-7623-4ef5-bb84-52390ab2bf2d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8fd2cb47-fac0-4718-96ea-0e89f332ffe5"
        },
        "item": {
          "id": "ec56677b-5b07-464b-8c2d-9b21f47917e7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4f434cd9-25d2-43ba-a2df-4bf323f16ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea07f6f-5c4a-494e-a56b-0239c59dcf8d",
        "cursor": {
          "ref": "20abcac1-e7e7-415c-b401-51e73b712192",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "48e94d56-5399-402e-bac7-fd0e83149052"
        },
        "item": {
          "id": "bea07f6f-5c4a-494e-a56b-0239c59dcf8d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "486e0911-a59e-4a67-b2b5-0939cac2919d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ad3af9-458f-41d9-b3d7-602af0b8dfeb",
        "cursor": {
          "ref": "972acb63-2406-4d41-890f-87df49345e58",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "11250f91-4f46-47b9-b0c1-4b7d317363a7"
        },
        "item": {
          "id": "71ad3af9-458f-41d9-b3d7-602af0b8dfeb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ddb36ae2-46b9-4d95-a010-e1ab1ee3b4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0e4764-5c60-49aa-8f09-b2bd12b69614",
        "cursor": {
          "ref": "307fb9cd-e273-43f3-8d7d-b756861050f7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a7088a15-196a-46e9-a0f5-1db9bb679a32"
        },
        "item": {
          "id": "bc0e4764-5c60-49aa-8f09-b2bd12b69614",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "71890aca-9488-4489-aa5b-fb27bb0ae14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bca46a5-a0e0-4c88-8357-74cfc6a324f5",
        "cursor": {
          "ref": "73096ad7-c46f-449f-99f6-bcd980e26e7e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fddd21df-9102-4c5b-ae92-7fa3f81ce6b4"
        },
        "item": {
          "id": "3bca46a5-a0e0-4c88-8357-74cfc6a324f5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "71229bba-01cd-47ef-945f-44afceec1be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9083723-9df1-46c4-adee-05e144e106bd",
        "cursor": {
          "ref": "bfc431b0-6835-4c37-a7c9-00dced859922",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "84fa6e88-2d2e-4f6a-8250-75308d2eb4fc"
        },
        "item": {
          "id": "b9083723-9df1-46c4-adee-05e144e106bd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e9d2683f-1182-4a7e-950f-762aa24e7e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9104c7-7421-4cd2-b532-9d4aa0cd1e2c",
        "cursor": {
          "ref": "f466c954-05a3-4d04-a473-36ee564e50c2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9c97edaa-54bc-4caa-b260-d97748588ec4"
        },
        "item": {
          "id": "7a9104c7-7421-4cd2-b532-9d4aa0cd1e2c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "14d8033f-341f-4495-bf22-830ea572c7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ecc559-2b0c-403b-b2e3-635de52da913",
        "cursor": {
          "ref": "20a502a7-5021-458a-a268-7d6ed4f9877c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "82a9c938-9b26-4131-a63f-02b8fdb95abd"
        },
        "item": {
          "id": "b0ecc559-2b0c-403b-b2e3-635de52da913",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c0ace9d1-0db9-4656-83e8-3207d17b11c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3276adf-ef81-4142-a604-e9ad835c5034",
        "cursor": {
          "ref": "e3b746ff-22ac-43b5-b01a-939e8cb0dc4a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d12bc252-ca94-417a-b6d8-be0d5f8ef95e"
        },
        "item": {
          "id": "c3276adf-ef81-4142-a604-e9ad835c5034",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "596d6df4-c1b6-4f0c-9d7e-91282e845403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9fd926-4b2b-4834-8334-91519323691c",
        "cursor": {
          "ref": "ed1710d0-8857-4837-a252-9a532a64fbb1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "44790f38-03cc-429c-8ec9-457c9ec898e9"
        },
        "item": {
          "id": "8e9fd926-4b2b-4834-8334-91519323691c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8ca77039-1611-414e-abdc-e493e78398cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9a1038-cd3e-4a29-b234-74a61ae8129f",
        "cursor": {
          "ref": "caab24b4-f280-4466-810c-ce74a85757b4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e84a0712-4eab-40cd-878c-a6dfb3bdc6e9"
        },
        "item": {
          "id": "4a9a1038-cd3e-4a29-b234-74a61ae8129f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fe7a25ff-6820-4995-8939-b8c862abb5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9191a856-ad92-42e2-b83b-7702ee257dea",
        "cursor": {
          "ref": "52ce7338-9441-4bb7-9772-cb95a99092a9",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e3b0d34f-623e-4e60-a895-69e7dbf90b38"
        },
        "item": {
          "id": "9191a856-ad92-42e2-b83b-7702ee257dea",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cb487cd9-f8bd-4b2c-9147-e46b74bb5f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd28e2eb-b7c6-45ff-958f-c1acb8ab3f51",
        "cursor": {
          "ref": "08af838f-d1d5-4293-bff2-109ab6ca38f4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4792c0e0-a693-4a89-9644-afbea5787579"
        },
        "item": {
          "id": "cd28e2eb-b7c6-45ff-958f-c1acb8ab3f51",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c08c8763-6042-4ec4-b849-383eff6cbcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a57a39-17ca-4162-938c-28582b1006de",
        "cursor": {
          "ref": "3be4f245-fe72-469a-a5af-c2010bcfd61a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e87c08f8-5a1a-4081-9ffd-97c18f31103f"
        },
        "item": {
          "id": "92a57a39-17ca-4162-938c-28582b1006de",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b0655dac-5878-4358-a942-2868209af59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ef3e52-f017-4349-8e23-483d80258bee",
        "cursor": {
          "ref": "8f2a4f42-7e88-41f9-837b-a8557e184693",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "873d73f2-b591-4330-953b-71a7b6f94565"
        },
        "item": {
          "id": "45ef3e52-f017-4349-8e23-483d80258bee",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "afa1452e-c412-4e9e-b281-ebd13cc443c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6435bb-6cba-41de-b685-b1ff91c40543",
        "cursor": {
          "ref": "66dc23f1-a98f-4272-a105-e131ddecec24",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7c1eb4e9-c145-4ede-b579-5fd7fe7031d8"
        },
        "item": {
          "id": "0a6435bb-6cba-41de-b685-b1ff91c40543",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6ac9a25f-dcb5-4cb8-8071-bdb95a809f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c20adc0-f332-4626-8a68-e5848ecfd0e2",
        "cursor": {
          "ref": "85fcce07-fb0d-4faf-8d79-d7c3f09ef66f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "93bda86d-6ecf-497a-8ec4-9048c7975939"
        },
        "item": {
          "id": "5c20adc0-f332-4626-8a68-e5848ecfd0e2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6a59a946-7c6d-4012-ac5d-9bf99cb94662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7418dec-2916-44c0-8950-f5df2c56a07f",
        "cursor": {
          "ref": "e5a876f8-972e-4cc7-8396-53b7abf8a4e7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8326ed92-65b6-44ef-8679-d65733af95a7"
        },
        "item": {
          "id": "c7418dec-2916-44c0-8950-f5df2c56a07f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "931a1960-5162-41c0-a829-42c5970c6113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26b38b0-d181-4dba-a819-dda2c3c16a9d",
        "cursor": {
          "ref": "796013a1-fed7-48a2-81e5-b3c60ed902ce",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0c0bae43-39d9-4977-b099-6b0371c0e4fb"
        },
        "item": {
          "id": "d26b38b0-d181-4dba-a819-dda2c3c16a9d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "33f488b8-37c3-46cd-b519-a4c95f3131c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfd34cf-8cca-4fca-8fef-fb8469417739",
        "cursor": {
          "ref": "6d00b71d-5c5e-42d1-a03b-d18406238bc0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "497b9f91-a8c9-4d8f-bdd6-97e95d7f6f95"
        },
        "item": {
          "id": "1dfd34cf-8cca-4fca-8fef-fb8469417739",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a779c7d1-fcf5-4c2f-ba5a-3c5a2cc3de7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17958e00-ce9e-42e9-b2ce-bf154581357d",
        "cursor": {
          "ref": "b4b6ada4-1c74-4f80-970e-266ff463e21d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "55e3c623-0dae-431d-83f8-f9fc0e388651"
        },
        "item": {
          "id": "17958e00-ce9e-42e9-b2ce-bf154581357d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "03300c15-885a-42b7-9f78-8366069ca8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd06ee2a-5f8b-4413-993e-457bb0e7947b",
        "cursor": {
          "ref": "38b3c39a-0158-45d7-aa62-5069738b378a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f4c9dc74-2e32-414a-938b-e257541e76dc"
        },
        "item": {
          "id": "cd06ee2a-5f8b-4413-993e-457bb0e7947b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "86326661-8f1d-4bfb-8d68-cca3a63c9b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2abfff8-d48d-4459-b2e0-3ee70aeb290e",
        "cursor": {
          "ref": "2651cc39-0a15-4bf6-86b7-d6bcd93696dc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f3bb0d7f-34ff-47e2-9b39-d971ae404c09"
        },
        "item": {
          "id": "f2abfff8-d48d-4459-b2e0-3ee70aeb290e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "73346223-6da5-49e8-a59e-5c68d9fb17f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0c0484-3115-4374-8e08-4e01490978bb",
        "cursor": {
          "ref": "e380b5bd-51f5-4e1e-b02f-0284702f7f97",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ed8012f8-31ca-40d4-8dd6-8d543be03e2b"
        },
        "item": {
          "id": "9c0c0484-3115-4374-8e08-4e01490978bb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "02dc2afb-85a1-4199-b0cb-832d8bf5f506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15de7856-4590-492f-85e1-021e5e69c431",
        "cursor": {
          "ref": "a453b4ea-57ff-4b80-8a50-31e8286b1f8b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e6b9cd9c-e4fd-432a-b700-89f16eeb77ff"
        },
        "item": {
          "id": "15de7856-4590-492f-85e1-021e5e69c431",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "184017df-2482-4fce-824c-20a3c936707d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654b3b98-c7ed-4825-b859-dbb19691b978",
        "cursor": {
          "ref": "eb98eae4-24cb-428a-bc7f-1d41966498a6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "008a9d30-e31d-44df-8aa5-a4bace04cdba"
        },
        "item": {
          "id": "654b3b98-c7ed-4825-b859-dbb19691b978",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ebd8f8b4-6377-4f1d-97c7-1b09528b115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f7332a-14a3-41b0-8a0c-b1d0fc7d8206",
        "cursor": {
          "ref": "5603960f-db14-4199-a3f5-7fa332308b97",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "80124dee-cc08-4df8-88e8-dc90f39c242c"
        },
        "item": {
          "id": "33f7332a-14a3-41b0-8a0c-b1d0fc7d8206",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d7976e56-23f1-4241-b40f-1291783bef6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9941fe36-4d7d-4f0d-bf80-6c4ee207079b",
        "cursor": {
          "ref": "25e0066a-ba85-491f-aac8-953a45e20b2a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5d8e536f-cc47-456b-8b21-993bc949ce9c"
        },
        "item": {
          "id": "9941fe36-4d7d-4f0d-bf80-6c4ee207079b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2139a847-6a7a-4cd0-b3a7-c9ba5434b81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffb40f7-42e3-4588-9e0e-ef0ebbcd8509",
        "cursor": {
          "ref": "bc939291-5a28-4a68-9c9d-cdca52d59913",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2be55519-4145-449c-9de8-d35588df6bf3"
        },
        "item": {
          "id": "3ffb40f7-42e3-4588-9e0e-ef0ebbcd8509",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8aff392e-ca43-4de6-86e5-7f9d9b8ba651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8b836f-ec99-48ba-879c-a94b48d942fb",
        "cursor": {
          "ref": "adcd94dc-67f7-4c65-92b3-55f4729e6b04",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "493d96b8-5321-40c1-88c2-49103fa330a8"
        },
        "item": {
          "id": "6b8b836f-ec99-48ba-879c-a94b48d942fb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "392a6e8b-1212-42b6-b6f7-49d0ed06f937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6a35a3-6d4e-4587-aa76-687e5a4e9c85",
        "cursor": {
          "ref": "95999943-4e5a-4bea-9156-93d7f408d16d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7be0f543-6aa7-4f2b-b792-af69c04ad343"
        },
        "item": {
          "id": "ac6a35a3-6d4e-4587-aa76-687e5a4e9c85",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a56699ca-ce3d-4013-a99f-a6dada41eee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd9b438-37db-44c3-9107-d5f6593bf6e6",
        "cursor": {
          "ref": "86a0b586-754e-4395-817b-6654a550dcdf",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e95dafc-e9c3-4870-8648-38102e2f2ec3"
        },
        "item": {
          "id": "8dd9b438-37db-44c3-9107-d5f6593bf6e6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2e74460a-c41f-4f34-877b-2c57063098f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a63f369-ea67-49e6-8ec0-56694d2f8043",
        "cursor": {
          "ref": "347e1563-43ba-4f6d-8796-339bcd111d63",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0dbaa740-2247-438f-bdaf-8aec044cfc1a"
        },
        "item": {
          "id": "4a63f369-ea67-49e6-8ec0-56694d2f8043",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "42371b91-447b-4eed-a3f1-99097891a218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fa1d0d-bac5-43d9-b6d3-ee0aeabe96ac",
        "cursor": {
          "ref": "2806497a-c70a-4406-aa3b-69c5f07e9fba",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1a7e5a1b-d3a4-41a8-902e-1b9a73b0d24b"
        },
        "item": {
          "id": "07fa1d0d-bac5-43d9-b6d3-ee0aeabe96ac",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d5cfbd16-e54c-4d00-b5a9-c1d31c7f17af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5446d9b-05f8-49bd-b620-9001016ff5e2",
        "cursor": {
          "ref": "1fda56d7-c362-485d-acc4-85c189b04293",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bc6be89a-0b00-49f0-bd86-decb8f5de802"
        },
        "item": {
          "id": "c5446d9b-05f8-49bd-b620-9001016ff5e2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1ac10ecc-72f1-4c00-8ce6-ea538bbe1f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b626560-a3ae-499d-a6d7-cd88d21083fe",
        "cursor": {
          "ref": "da539564-3c27-47d9-a08f-d8b6f4e98e13",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4c3155f6-12d4-4811-82e7-1d82dc0efff7"
        },
        "item": {
          "id": "0b626560-a3ae-499d-a6d7-cd88d21083fe",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "73045fbc-798d-4c25-894e-7a708bd7e14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b07989f-8080-4d07-83ca-dd3164c1e467",
        "cursor": {
          "ref": "580beb12-1440-4da3-a5d9-b1847be3a414",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1953512b-a97b-4ae4-8bc9-a6054f9e97ab"
        },
        "item": {
          "id": "7b07989f-8080-4d07-83ca-dd3164c1e467",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b6bb3afa-6b1e-44ab-9ebf-e0a11f2df547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d858af31-65de-419a-914e-14017823465f",
        "cursor": {
          "ref": "9b836542-9d1d-4f66-a21e-4634911180d5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "752b66f7-ecd3-4c69-a36b-777cbb998932"
        },
        "item": {
          "id": "d858af31-65de-419a-914e-14017823465f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3d08883b-9a22-4121-a410-9a455eefe689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22c2140-4de0-4154-b6c2-56f3761ed3eb",
        "cursor": {
          "ref": "da321ac4-33c6-4e6e-bbf7-40e1cc9e2dea",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "26265162-d4dd-43fe-bae9-7dfe9de95aa9"
        },
        "item": {
          "id": "b22c2140-4de0-4154-b6c2-56f3761ed3eb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0acd1166-17ad-4289-9fe1-989be5c7b780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40135aaf-9fa1-4e05-91e9-b353e2e82e62",
        "cursor": {
          "ref": "fd51f3ba-b06d-4c55-aa6c-91fa6a71bac7",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7420f8e8-b6a9-4e9d-a6a6-e44ed27232da"
        },
        "item": {
          "id": "40135aaf-9fa1-4e05-91e9-b353e2e82e62",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "74e2d297-f9a8-4f58-9789-204bef4b4c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780357ed-3fce-407f-83d5-89f429dfa00b",
        "cursor": {
          "ref": "781ee7b4-1b7a-442a-8afa-1d481d5040f4",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b003567a-76dd-4616-a446-259afe740d07"
        },
        "item": {
          "id": "780357ed-3fce-407f-83d5-89f429dfa00b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1cd9452f-e1c2-4d25-bf46-6dbd713f2049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbef997-2bdb-48b3-b509-3b4b2acce0d9",
        "cursor": {
          "ref": "1f71984b-fecd-420a-a5e5-7f5e28be2417",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d4222ef4-640d-42ab-b569-24aada1f3dd9"
        },
        "item": {
          "id": "ccbef997-2bdb-48b3-b509-3b4b2acce0d9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2120b29d-f84d-4dca-a906-948d00b70ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba256a2e-bf6b-49c7-913a-0c3acd2fb061",
        "cursor": {
          "ref": "1a958cb6-554d-4406-a4dc-259aafd1deb7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a3cda9d3-067d-4a5d-b0d2-2c54becb17db"
        },
        "item": {
          "id": "ba256a2e-bf6b-49c7-913a-0c3acd2fb061",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c5980419-b5e1-43fa-abaf-cf42cc3a1a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5010937-73f4-4209-b7b9-4cef390684d7",
        "cursor": {
          "ref": "f1ab23b2-cb01-43d5-b2f7-4c4e5b461fb4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2b0f9991-9b21-48bc-a407-0156bfc8c792"
        },
        "item": {
          "id": "f5010937-73f4-4209-b7b9-4cef390684d7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "15e1b5fb-8e1f-48dd-be79-8ef365e79a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f947ccdf-0471-46c6-bbd2-6a044019bb50",
        "cursor": {
          "ref": "23824384-6b3d-4641-bd46-c3bdbbe6b483",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a4557ee9-c099-4ce2-800e-e731ac853028"
        },
        "item": {
          "id": "f947ccdf-0471-46c6-bbd2-6a044019bb50",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "161ae87a-3181-47af-9c30-229934b5f00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba01e28d-3392-4858-b7cb-844629dce118",
        "cursor": {
          "ref": "9fcca9b9-a6e7-4e79-9ff9-a522892d494d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0ea598a5-6cf6-4615-880c-a7243751f3ca"
        },
        "item": {
          "id": "ba01e28d-3392-4858-b7cb-844629dce118",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fd326062-3924-47c4-9af7-df6854578b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaeb89e-ed62-4d81-b753-ad6eff358e80",
        "cursor": {
          "ref": "16200546-2e78-4e66-ba85-ba27290514d9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "57a94b89-2a2b-432f-b2e7-5084ed11a38b"
        },
        "item": {
          "id": "acaeb89e-ed62-4d81-b753-ad6eff358e80",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cd7881aa-0919-4605-984b-418e59c05bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6d51d2-a44c-4fd8-a03b-064a766376e8",
        "cursor": {
          "ref": "5346641e-0da9-43b5-96fc-7b895f727ffc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "826d5d03-4f49-426c-982b-fab8791da509"
        },
        "item": {
          "id": "ab6d51d2-a44c-4fd8-a03b-064a766376e8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b1d4ae14-400c-4933-ab82-7af1a4e4689f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143027be-6301-44cd-98b8-0c8bda0d536d",
        "cursor": {
          "ref": "0682d835-bf6b-49bd-9b0a-b301d9c10a17",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d082ae63-257a-4b11-8ca3-11b4a2283ee9"
        },
        "item": {
          "id": "143027be-6301-44cd-98b8-0c8bda0d536d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "273827e2-2e18-4599-95dc-4a52e7bcfaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a01793-2694-425a-8506-f65e50ef202f",
        "cursor": {
          "ref": "fbd6e672-5eb3-451c-9619-9e9078fdab5c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dc653be1-d6f9-42c3-be27-ad49315fdd44"
        },
        "item": {
          "id": "d7a01793-2694-425a-8506-f65e50ef202f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "69630c39-9f9a-4862-b381-aed1755d55c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9e2c21-5d1f-4658-86f0-f4569532976b",
        "cursor": {
          "ref": "23d7bc48-371f-43b6-9089-86c22a486f86",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "674bc4d3-e45c-4213-a7c6-d0aa887da05f"
        },
        "item": {
          "id": "de9e2c21-5d1f-4658-86f0-f4569532976b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d6f3950f-66f9-43e4-9bdc-9300d4db3feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366d714c-08d8-4140-ab8b-355f40d03771",
        "cursor": {
          "ref": "e5463485-b382-43ed-a1e9-c042991c8d53",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6748a2a1-4c5a-4590-a0d9-e4a29512f7c1"
        },
        "item": {
          "id": "366d714c-08d8-4140-ab8b-355f40d03771",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ea0aa1f2-23c8-41e6-b347-754c1e432cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9908721f-5375-49ec-9a83-663f7c04ea58",
        "cursor": {
          "ref": "0e90460f-075d-4190-ab8f-0cbec516f527",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "817c7ed0-00ec-42b0-bbea-3bf5ecf320bf"
        },
        "item": {
          "id": "9908721f-5375-49ec-9a83-663f7c04ea58",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "140ced31-0611-4f63-a677-723856de8aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86e40e6-5200-4cbc-a988-cb22147258da",
        "cursor": {
          "ref": "74ee1c0a-9554-4712-ba97-205dd3ea487c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b96002c4-3ee8-4ee7-9504-99148a1d0c54"
        },
        "item": {
          "id": "a86e40e6-5200-4cbc-a988-cb22147258da",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d134a32a-c23c-4fcb-b395-b5aa3b1d9475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205b0ba2-2000-42ef-b024-e986879e8a56",
        "cursor": {
          "ref": "cc591df1-57e3-44e3-897a-4d941da78d17",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2e352dc5-877a-4df0-8d05-7719da0e3f53"
        },
        "item": {
          "id": "205b0ba2-2000-42ef-b024-e986879e8a56",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7e65afd0-9539-4ff2-9161-02b288c852b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91897366-1e4d-40f5-88b3-3ce5469de10f",
        "cursor": {
          "ref": "858ceb72-4b0e-424d-8c1e-78c8f0344d64",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e4cae183-1d9a-46f3-9600-f4e5760f554d"
        },
        "item": {
          "id": "91897366-1e4d-40f5-88b3-3ce5469de10f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ed3866f8-6281-4613-9cb2-66e68aebdc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d75da86-3cc1-4ab9-8644-3f7e0caf451d",
        "cursor": {
          "ref": "346c0b8b-764e-4d48-9dcd-5cf4a1953199",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "261c7922-7bb3-4201-9f95-bd9090fde2b7"
        },
        "item": {
          "id": "2d75da86-3cc1-4ab9-8644-3f7e0caf451d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "72f1afa1-80df-4dff-b0be-f3cb01f21b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e997d661-2670-4e18-892e-586e3ce8cdbd",
        "cursor": {
          "ref": "de6bfb2f-f77a-4467-b753-4104c3f66044",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a8d8e193-da46-4da1-8b22-9425ea667fa1"
        },
        "item": {
          "id": "e997d661-2670-4e18-892e-586e3ce8cdbd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bc6ca180-7108-4da8-9c0f-787568ff334c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33670aa-271a-42ec-ac59-4f19cb8bd481",
        "cursor": {
          "ref": "1b3060e5-f8e8-42a5-8888-218eb230c014",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a3d900bb-458a-4f42-936a-37bcccf7f389"
        },
        "item": {
          "id": "f33670aa-271a-42ec-ac59-4f19cb8bd481",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ee4dbb43-09c0-47a6-b37b-f71631577374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cec29d8-48c2-4704-bf47-ff9be2f73eff",
        "cursor": {
          "ref": "fc95d5c2-eee1-4617-b552-b2c4deffe4cb",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c85ffb8f-d89d-4eaa-a7cb-19c968dae90d"
        },
        "item": {
          "id": "0cec29d8-48c2-4704-bf47-ff9be2f73eff",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "69af95e5-c6a3-44a5-a7da-4cad876d9e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbe424d-88cf-4b67-be79-b6e9d3c04251",
        "cursor": {
          "ref": "0f79bb87-fbec-4be8-9db2-6de167c15fa3",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3cf0c1dd-951b-48e6-b780-8b86e95cf109"
        },
        "item": {
          "id": "8bbe424d-88cf-4b67-be79-b6e9d3c04251",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "32301d69-9107-486e-beea-27a5837bd947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe226fa7-c06f-434b-a2b4-4b510d79586c",
        "cursor": {
          "ref": "5ae4353b-be82-4f72-8388-d5eee71876ed",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aeef1974-b821-4a7e-a9b7-ef43b37c17cc"
        },
        "item": {
          "id": "fe226fa7-c06f-434b-a2b4-4b510d79586c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7f4a8531-f35b-43b2-9250-b0eeb7418f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bac3f9-8897-4c6b-989a-c34d4db848ec",
        "cursor": {
          "ref": "6df8d96b-a445-4fd6-a62b-e911bebc8842",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "340ca9e1-df5c-4481-a241-d2a3d49730d3"
        },
        "item": {
          "id": "56bac3f9-8897-4c6b-989a-c34d4db848ec",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9f70df36-e916-43d2-89a8-5dda37b29167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dbabe8-6c1f-442c-8cc5-396433f82cb3",
        "cursor": {
          "ref": "8476a22f-f222-490c-a301-5d6fad37c5b2",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "38ce6c6f-6808-4bdf-8938-857ce8820713"
        },
        "item": {
          "id": "75dbabe8-6c1f-442c-8cc5-396433f82cb3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8bf10a3a-73f3-4cd0-8771-b94701682f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e15a22-8042-438e-a0c4-d2398960966a",
        "cursor": {
          "ref": "860c2604-25a4-4349-b2b0-98d9d5deea81",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7359f4b7-3028-48ea-b354-e3caae8fe1b4"
        },
        "item": {
          "id": "31e15a22-8042-438e-a0c4-d2398960966a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7a4365d5-fdf1-455d-8c8b-c3a6dabe261e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fa4a03-593d-4e54-aae0-00715b13bfdc",
        "cursor": {
          "ref": "bc185fb7-5872-4b48-9b9d-0663bbb2f302",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8c90de7-8a43-4560-adb3-7516c99dab7f"
        },
        "item": {
          "id": "17fa4a03-593d-4e54-aae0-00715b13bfdc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "79e0c918-6237-4840-9314-cc5dd240be56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8afaa91-4a8c-48c2-a790-ea74343f200a",
        "cursor": {
          "ref": "8dcc99e2-5c9a-47e4-a5fe-b9ff6aafbcaf",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7ead1801-05a3-4a2b-bc01-a5866fdc69c1"
        },
        "item": {
          "id": "a8afaa91-4a8c-48c2-a790-ea74343f200a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "08dd3fe5-4f44-4485-8737-65862eb5a1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5d8045-b3ef-44b3-906e-2d12976a24f1",
        "cursor": {
          "ref": "16e09234-b00f-46a8-9746-f08ee0441794",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f64bdcdc-ad3a-480b-87a6-1830ad453913"
        },
        "item": {
          "id": "2a5d8045-b3ef-44b3-906e-2d12976a24f1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "997062e5-ba83-4607-93ed-0ea3e7a0b842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5985d66a-4962-41dc-ad74-52e2e98f5e6d",
        "cursor": {
          "ref": "93f6a3e6-0a1c-4090-b49d-1e063e38b11d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4cb8c61c-0a09-4593-bba9-b5d5cf36ce25"
        },
        "item": {
          "id": "5985d66a-4962-41dc-ad74-52e2e98f5e6d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a7aa0c0d-5a27-4636-9df8-d6f8188dcee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a5a9d4-c33a-4959-be29-69b679b2040c",
        "cursor": {
          "ref": "6114ec00-3c82-4323-803d-68b1e24aee48",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "88148850-cdd4-4869-9fb8-5f305645a80d"
        },
        "item": {
          "id": "00a5a9d4-c33a-4959-be29-69b679b2040c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1168b3df-de29-432e-b7f8-975558c271f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927e2489-30e0-4fda-a4af-c21d525cb399",
        "cursor": {
          "ref": "ded6ea76-1c27-4f74-af95-ae031aaaef99",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "79b840f4-f233-4639-bf1a-a58011f92c14"
        },
        "item": {
          "id": "927e2489-30e0-4fda-a4af-c21d525cb399",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "597853bf-2a34-4e9f-aa2f-4a075348c2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8916150-b622-4c91-a436-b39b213c13f5",
        "cursor": {
          "ref": "569c24bd-b9ca-419d-9742-8ba5083e860a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4b8118b9-c1d1-4a66-978e-9f2a791f4720"
        },
        "item": {
          "id": "d8916150-b622-4c91-a436-b39b213c13f5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "83c40a3f-cbbf-40df-adcc-99ad442cbe2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47f35c4-7b58-4451-bb46-5904cc5cc6a2",
        "cursor": {
          "ref": "060f7037-d3db-4459-b355-e456561b71b3",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cc619751-3c84-4e96-b8a1-1c7ce27503fd"
        },
        "item": {
          "id": "b47f35c4-7b58-4451-bb46-5904cc5cc6a2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e667c101-689a-409a-84bc-40147d98ef14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e1b38d-214e-4618-9f82-0aeb19d4bf2c",
        "cursor": {
          "ref": "7b392b9f-b086-4e8f-9bcf-ded068118cef",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1f95d52b-51f0-4a1e-8271-9bd500309604"
        },
        "item": {
          "id": "13e1b38d-214e-4618-9f82-0aeb19d4bf2c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "425e373c-2a8b-4565-a586-31c7d83bca8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f923757-6e36-48ab-a0d0-bbc68f00da89",
        "cursor": {
          "ref": "138936ce-3366-48c0-8d71-c34fadaabab0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d27f9487-f712-474c-8e6b-89ddeb106ff7"
        },
        "item": {
          "id": "4f923757-6e36-48ab-a0d0-bbc68f00da89",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "24cec261-5037-4ae5-9c6e-54b31e5041b2",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7343b9-9f74-4534-a3da-ade47be05825",
        "cursor": {
          "ref": "c2fcd40d-e866-44bd-af04-20d2797661b4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9340d6c5-1256-4fe9-a33e-6189084cd814"
        },
        "item": {
          "id": "cc7343b9-9f74-4534-a3da-ade47be05825",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3bb2b2fc-2ad1-414c-80f7-27d51e559134",
          "status": "OK",
          "code": 200,
          "responseTime": 2156,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0d9932-9f41-4208-90b7-3058a8eb5d32",
        "cursor": {
          "ref": "21218500-881b-48e4-b0ef-e20823613785",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c804bc09-85bd-469e-9b80-51c446b3dcf0"
        },
        "item": {
          "id": "ce0d9932-9f41-4208-90b7-3058a8eb5d32",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4c21b4b6-2a77-4596-a755-26f9354eb6ab",
          "status": "OK",
          "code": 200,
          "responseTime": 3777,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a105dce-b554-4231-9c34-7c9b6d939e73",
        "cursor": {
          "ref": "dadac9f6-2cc5-4ee1-8efa-8adb6322a244",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7770a8e-1042-4451-a623-9e0043c790d1"
        },
        "item": {
          "id": "8a105dce-b554-4231-9c34-7c9b6d939e73",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "33a55707-98be-4da3-a0b9-57a0555a4e7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a105dce-b554-4231-9c34-7c9b6d939e73",
        "cursor": {
          "ref": "dadac9f6-2cc5-4ee1-8efa-8adb6322a244",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7770a8e-1042-4451-a623-9e0043c790d1"
        },
        "item": {
          "id": "8a105dce-b554-4231-9c34-7c9b6d939e73",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "33a55707-98be-4da3-a0b9-57a0555a4e7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13f35f8-b92c-4d7e-bf9c-45fef7089dfb",
        "cursor": {
          "ref": "7dc9e295-c07e-4729-8176-9fa347ac6296",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e12de5a7-59df-4343-b7b7-913dc53ee67e"
        },
        "item": {
          "id": "c13f35f8-b92c-4d7e-bf9c-45fef7089dfb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f54c9197-9420-41e0-b7ea-9f8153e0827c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e75d3c-081d-4f1a-859b-46160c590e07",
        "cursor": {
          "ref": "63bc5faf-2b86-4ade-8f41-2e326a595dd5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "46077977-32db-492d-a8b7-367efaa2a0d2"
        },
        "item": {
          "id": "17e75d3c-081d-4f1a-859b-46160c590e07",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0703f497-0f5d-4f44-b5aa-f2069642b27a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}