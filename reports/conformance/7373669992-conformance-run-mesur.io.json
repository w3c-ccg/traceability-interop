{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ce44fdc5-3083-4bac-9d2b-9a8d6546c871",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d82d1936-ffbc-4c6c-9064-264b24ecd2d9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ec5d953-2989-4be5-979e-23c9173cbd4b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "064842fe-0962-42bb-96ae-f083badeb14e"
                }
              }
            ]
          },
          {
            "id": "f33c2c01-8c4e-4fbb-9f2a-036add898cb1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef889fed-d707-4184-b2de-59dc7073098b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4d79b2a2-ef1f-468b-ab08-2f1ac9377234"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6ba71efd-0a2c-4698-aec9-bd84b65b3ce2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2ae0c8f8-5987-4bd5-8309-6ea76845c084",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed06bc15-b94b-4438-8ba6-d0f81a09569c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b1fb4c7-f719-4e34-b283-972e82bae50d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2883aca-2fef-46b9-b288-bbe7bfa32a14"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0828b32-f184-4e26-97d1-d987cc992cfc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6532182b-52eb-4f0f-a72d-c6a9116787bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c395d9e-1e9a-4472-8656-af9bf22e3f02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14eeb8df-1015-4896-8554-e8052fe06c69"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57ff2510-900c-4593-94f0-8b890a272cdb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "faf85ce7-afd0-4974-b78a-6bd5255c4f56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca801db7-442b-45a9-af08-5784e013912e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2624665e-ceb7-4b98-9b98-b13f978bff4a"
            }
          }
        ]
      },
      {
        "id": "2a69993d-7774-4b71-a191-1d34604e1172",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4f615597-6b82-4858-9b44-257508ca537e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "078ed44c-bd53-4b1d-95a7-2a062c1396f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "45af38a5-6c21-407d-a4be-1d4d6e4e9861",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d69b570-f2e1-4523-be85-89f12a12b755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d541331e-b654-4b55-9630-e575c87dd5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846d0d6b-9bf5-4eca-a8a4-3c75711752ac",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c18066-c7d5-4542-80ce-db394c8dcfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cf6025e-9c79-424e-9fd5-2fd9289c8cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7415d069-af3f-46ee-abee-5480476140f0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec197a69-9554-4ddd-84a0-faab72cff843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11d33a0b-2c61-41ad-b4b8-b50ebafee436"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc1d7bfa-97c0-4f19-82cf-5a6a6abd75d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1507f16b-c969-4fae-a68a-d5b51f7b13cd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a893c8-dbd6-4072-aae8-0e57a2a19fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7be70c18-1584-46b4-9e56-bd2b41c37896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e93e025-8fe4-4cb3-9672-3dd02a628bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84eb6f6-089d-4267-a605-c5ff0a588cc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4d876040-0a15-4fd5-b993-ce4d4f3c1e5c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64ec6edb-a508-4d1c-9049-c2b9b0d4b35c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfb58d95-b992-431d-8c3c-f788d73f0365",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "06bcc9c3-9117-4170-bc73-e6e84935a352"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0c84e9b-dba1-4fd6-b566-c2c4c50e3050",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "60f1b4ab-66b5-4b9c-9dbc-355c7b5cb67d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d35fc78-392b-458b-9998-d066f2bc8cc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ab22e73-c31b-41c9-825a-5a199ef573b5"
            }
          }
        ]
      },
      {
        "id": "0639116b-f853-400e-b048-71a639fb5873",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3e8b3289-3bf2-42d5-98c7-1977b5659eac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85cc5588-a8bf-4adc-be79-65ddb94bfa9e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f1c5b69f-05b7-4b91-ae54-9f73dccabbd1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd75aacc-ca11-48d0-bdbf-18885f085fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7471d6-bde6-4d6d-90f5-9e97be512bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c41244-270e-4181-a9a5-50533b0646d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b3407f6-8ce4-4aef-9819-198a38efa24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dda309f-f442-42d6-b5ae-efbd7cdda517",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c02db6-d9eb-4881-86ee-4f4b84308100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66c9cd1-e2dc-48a4-8f83-e259e85014e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa927067-3ecc-41b9-8b8a-c650bb23e6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f36ab9e4-e273-4928-95c4-7acdc684891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4395fdbb-a7bb-4c23-9013-85ee64f28d1e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef11553-7557-475e-a3ae-ad12e87eee0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f2bd7e-568e-4bb0-bd57-7863ea5d9db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0063719-1a19-439a-a240-78b66c783762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34b93e9f-3c4c-45e3-9549-f3da5bb91d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bec3873-1e86-48b7-bf8c-e99ad8de4bf2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a3f8eb-00e3-40c4-a855-950258df5d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3994d8-dc85-4195-b4b5-91d98069c009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f2f174-888d-4adb-8526-80ce613f669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d3346d3-f2f7-49d0-895f-e4b21b65317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02802dcf-3747-42b1-946a-90c0b9cc9496",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb16a8b-769e-47db-bdb1-7bc0f0b59c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4451190-4a68-48c8-b72f-c5e9b1f1dcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df1c926-4e99-47b7-92d2-999def62d87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8227fc7f-2f17-48bc-9fad-8bcc46590a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12d417e-d432-43ef-84bd-3060985b47c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ce7a18-714e-46cf-a98a-911c8bb48ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bc4a1e-7400-40af-9db3-993c428380b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30980cbd-5dd2-499e-8d2f-9660d07dc606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7245f2b9-5524-430c-8122-1c8da5f79b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418ddeb0-04e4-4fae-a541-4369a6210693",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f34c991-4ffd-40a9-9265-2230b920a784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4748ddb6-b2fa-479c-855f-3fee0f6d427c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa2613e-e18d-4b81-9379-c2728829c18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59cd59b6-65d8-4e26-a8b4-5112304ce7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defb0f91-b786-4e3f-971a-148c1aa19137",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e60cf30-96ca-4e34-b862-6334bdba38c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e39d69-40a5-4bfb-a225-f744bc57d164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0af3169-4b98-4821-9799-fc422e127af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3646806e-a0cb-4304-8fc2-d0de42c5e999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8200a86-2ca5-420d-964a-d521ce896dfa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad68cfdf-5ab6-48a9-b0d5-04e647db489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a36cfa9-05f3-435c-be8b-f03b3ae95572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5747dee3-6b40-4d5a-94de-4df86cdf5188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71038dd4-1420-46d7-96ac-1507f3bba9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957f4575-97e0-4391-9daa-d3a7905e5dcc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddce6ea-4440-4dec-aefb-3ef8406cc33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3612f3-8c0c-4265-aa47-506e483b3080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e31bfdc-812c-473c-a788-cd4d977123f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00e3f4b1-13c5-48c4-aa0a-fc815bf13a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b278b9-e309-46a2-b5be-2f8a7cee7946",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814844da-490a-4383-b716-5f9c9a238a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dadbe67-f05e-41f9-a1c8-9d86f1e1de5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62ca58f-019d-42c3-a5eb-6c7d60bc753f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e574e405-0eb6-450e-a2f4-76417f108352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfbe403-5ad5-4b4b-8480-5e42fcc7cfce",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d995fec-e543-4d8d-8ca2-224e13894001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f4a6b6-e49d-404d-b851-784134cfb17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa36c161-6620-4476-9f03-e8ae3d34b88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a59c322-41c1-4bf9-8b60-cf2b5b0112e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b69b5a-9e26-42ee-8f0b-f804069f96a1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499cee53-6a04-4a06-b82a-81f448509d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31b309e-625d-4acf-b655-4b47c3df2ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c9b844-f9e0-4158-b955-04e24425ba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ed8fa87-3212-484e-ac59-0f200fadb8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7e6177-88cd-4aa3-bd3a-8e9c21a9cf5a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262e4af3-7a1b-4e68-8a89-5293a9028632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919a74e7-32c8-41e5-9f41-3e1db1ea7535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110af13a-ec1e-43c8-a20c-723d974046ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47f4729a-563b-4111-b0df-380b10baf77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681e5724-98dc-47e4-a79c-ba500eca0901",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1502fc-bd01-4ae6-99fa-62f5487653a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc58b514-c0a5-439f-8de4-855c000d5943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae99fe8-87ba-47d2-9f68-da4fc42571a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edeb9b0a-e0a2-4634-8b4a-2c4f5883669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ede0ec-510f-40b0-aec4-54abd8bc0d6b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5a88ca-2925-423a-85f4-57061becc5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acb2f07-7176-485e-9f47-63414d9dee25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8d9faa-7836-4106-8f59-3524cf2ab444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b7b297d-1729-44f0-a969-b1d7017e4ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561edb17-2508-4859-9e5c-7eb6059c002e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d0cbc-ec17-49f5-b63e-d0f07536decc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d81e11-ab40-4964-bf09-6b36a141047c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7607ade-797f-435b-a337-4f3cf32ff225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6965d362-df15-4b58-be6d-4aaac4516fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91c29e9-ecaa-4d58-a2b8-27cd9bdf1de3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1259f6f5-5e10-4f29-9752-0d8adb446ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2f1490-c659-4db1-9b76-8d802926815b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57ebac0-0d06-4b94-9ba7-123f70874b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a37b097f-df9d-46e3-8904-3cc9fe7194e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5acf78e-0211-400e-8ac0-69ce89a28f85",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3660f73a-a8f4-4cc7-adab-c1224d831e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e987d5f-b6c0-4494-87d2-933fa1fec448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2aca4c-ca72-4251-8c52-11c56eaf5fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5284171d-3bd6-4c24-833b-ea7e07227a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a094e95-e603-4049-911c-95288aac5f0c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e90eb91-2119-412f-8442-0f7299d24978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4870cf0b-2962-4bbc-adfd-73889572cdb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e936d78-61f7-4eb4-b9a5-55b6b0632cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "698a82f1-e5ef-4606-a354-a89604a02e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c703827-f4e4-447d-ab6e-9fa2ffc17381",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65859c6-ecae-4c6f-b6cc-3543b38f578a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d46e09-34e6-4667-8446-f14f08faba62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1ec0f3-e477-49fa-a53f-e8fad2154c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da64a5c-c3ba-445d-9acc-75eca9ba361e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9861702c-d273-43f2-bfde-4de9eeeeaf1e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d2a77b-cc7c-4276-82c5-0de40a6da1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11505589-58e8-40c6-abd4-ec130e1de2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fdc022-18f5-43ae-8927-0052dac947a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d4e371-a75c-492c-9b0b-e86ae39de1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7080a90-8fde-45aa-b3c4-377a78e45a73",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2d7a4e-a625-4d33-8356-c16c3968149b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d7ce7c-eb72-4502-9b77-56ed35f47197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2564990e-eb9c-4f08-947f-ad95bb26e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65b8f601-a499-4c8a-bab4-8a2a7a529ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcc8ee8-e7c8-4569-ac20-5d2c3ba88c57",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cd5b46-9b5b-488d-9a40-99bc915ae1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c1dbc8-e0c4-4d0d-896a-1ab89108d309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0a9db0-95c7-4702-af43-a2ec5e8fcbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "638d28a9-999e-430d-8af2-bd2be016a45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92928697-dcf6-4337-97ed-e00ce692915b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c4dbb1-a235-4cf4-a869-df2f309ec0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02610e5-07f4-4ffd-a039-012f1974be9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2f0ef4-ff6e-49ca-8f9d-84c40cf45d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2eeb0b9-9c38-4c0b-8773-7539fb45adc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2d1e33-ecd1-4840-ae8b-51608fba5433",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9efa1a-75b8-43a8-966b-1b4810efd25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add44975-6d3b-479e-985f-a0c86752166a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beec5de5-f8aa-4dc1-b7f9-d438549d4ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4345de03-d8ba-4f69-a9cc-ea6445aeef38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d50315f-643e-40ef-b62e-052bcb6dcc5e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e570f33-7bec-416e-841b-af4998bd5a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c31fbef-7833-46fa-b9b3-f74266fb004c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68996ae0-e026-4736-9cb5-e361112c3280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaa12fe-a66c-46e6-8329-dd8aa783108d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bc040b-59cc-4f0a-ac1a-6e74b5998a7e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47be305e-c60c-4d02-b670-2d1b0829172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198299b3-9819-4457-93a8-952f55a37a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90a9ed2-580e-4846-9eac-b3ada8fca4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "255c5752-9ee6-4447-ad9d-6a66670cccc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4e5f99-17a2-4545-8916-186a601aa961",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e641168-14d1-4be1-ae04-34a514544bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c54514-72a3-4eb1-b0f7-124207d0a1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439b0191-0107-4ed9-b244-50ff0c088eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "991a714f-32cd-4af2-a259-ba1a1f1c5e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5f1d3d-e226-4fc4-8163-7549c6789e75",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9cd69c-1a96-4b9e-a314-915d62517e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dda16f7-a78d-4799-8fbc-b2f85d5b8716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e157ef-2a2d-4e1d-ab87-401184517c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5064f3d-9f44-4e24-ad8c-c655353e4380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be761f50-e2fb-4ff9-9919-62400f8b7890",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285dfc8c-849f-4f44-a8e7-2312a9fdb8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c181f444-0195-4f02-8fce-df667b60fbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f82596-0552-40b9-b183-dddfb33294a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d47d55-9bae-47d6-ad65-e6719deaba78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a18d52-7bfd-4ea0-9b9d-01b6929ae3fc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f93545-99f2-4930-91ee-23be9d482759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36f7db3-42b7-4d91-8393-21c0ba37c0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a27d53-28cc-4012-80f7-db94dab96fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2df2460c-d1ce-4e46-8b5c-9106e67a8b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7ed3a8-21dd-4cc1-9dff-5f27f99b6eab",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0128e6f7-1785-47d8-bb0c-56bc016aa953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa04f85f-28a7-4951-ad42-aa84c5981846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068d7ca7-8294-46a3-a0ed-60f0c5786adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a791614a-6cfc-4c87-af59-ed9c051d9f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beade186-d163-4f52-833b-af3b20f25de7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b624eff3-03c9-415d-98e4-80af80ee76ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a8dbb8-b500-4000-b0d0-d661d4567ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1b4a34-7340-4dec-99ca-1db093616bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a53d82b-0e48-4b51-9f3b-0688c2a9c310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62a8a98-e2a4-4a8b-8a0b-750926c6a40c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396743ec-03e7-4a4f-89d4-cde5b9d4167b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec578710-e126-4fd3-84a4-9cb6e8f73758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fc90e3-5f7d-42db-a6c4-98bf56927350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "47f887c2-fe8d-48d2-b4ba-cb31b3d28d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c1b061-cc60-487e-8b7e-ad1b7890eded",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0082da27-e746-4080-b245-f2947f9a5972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1acd47e-3548-4e57-a6ac-2a1e4375a807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f42a18d-c7b8-47dd-ab46-764595dfca49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc0fedb-2085-4622-9dff-7f8b2625b043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f66b9c-768e-4639-a0c5-7522003a4b58",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47b9e63-4fa4-480f-a82f-5f51d40094d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80691e5-4add-420f-836a-5722879f7a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992c2896-39d2-4780-ba6f-6cb9f46fddc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "baa55d84-47f7-4af1-92d4-207ae17a4be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121f41f7-23cf-4777-80a0-2edc7d7b4128",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eac1310-d5f0-42e0-85dd-c6cfe4cdd9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbc9c85-2330-497e-9e2e-12198c17bb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8311e37-1456-4816-8f92-306a293d955f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5f2569-4fd6-4324-b3ff-8e13130ea646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c457f48-5190-420a-8847-f444738c1621",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4e3332-ee11-4812-a2e6-399dd4059322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05494f8-a07e-4e68-887d-94a213bedf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51317a2a-93a5-4275-a641-c5b8e031513b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7316b36-d06d-4da3-a010-5d66a6b3eb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614cf9c0-f631-4638-acd3-6f8c8170ddc9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a0a28a-ca8d-4e28-bf15-b1cd7b0d5cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5826673c-c00b-4934-bdd2-70f261a6e210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d90a31-51f0-4607-ac38-e00c60f2a67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e857847-91d9-43c7-8659-78112f02eb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b028a3-82b2-437f-9700-97367b756749",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deec93ae-3377-4670-a724-905c187c7517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65b86c4-ca5c-4429-89cd-518a9fbb3c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e8b902-6d78-46a8-aefd-80ee333eaa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51c43ab8-40fb-4e61-bc42-8632ad0d1874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c635851-e6a4-4c0c-b869-dbcc0b02792a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e1e690-9b46-4efe-bd4b-b5d99770dcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc6e5dd-c9f2-4d2b-a817-e4f8457149ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0783adf2-86a7-4e11-af64-2f19fd5ee01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "666eb446-5c6b-439f-a53e-08ba388b01f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e462b1c4-616e-4975-b3b0-bb09217018e8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866e5226-3931-403d-8b45-78e0d35ee97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda3e3b5-56e7-424c-9c5e-6dbf26123041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf636de-bd77-4905-9f8d-f5672f9bbdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "72684d61-7135-4380-88af-be5aa380decf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb7fc03-efb2-46b3-85c5-8396a844ad8f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ec8ef6-06f9-4b31-bbce-d94a1d2264c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e6f979-56d5-4e29-b2e5-e54933d9fba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5c6df2-b362-40a1-a8b6-ffe827db737e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c730c947-8fe2-4764-8559-a499c03b6e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e994be2d-c4b0-4431-8f47-30375ee9a64c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb0f4c1-1770-48ad-a00d-afbe6977bd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f5473e-39b3-4d84-83e4-556127b2c94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298aba10-1015-49a2-808e-e98cd1c9a6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "665dc27b-9b7e-4c1c-abe6-037715b9de55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bfbdd6-f938-48d5-8a84-9e42be99f1bf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4716a7c3-24d9-4e45-8fba-f7b2d5e52be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c30f35-0b26-4e7c-b53c-c8c2cf5123df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3337934-f2dc-421b-8aee-87e9149435a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3127aae4-0a6e-4827-bfad-f072faa8ff78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54fce06-e955-4397-80db-bd24b64646d9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9d66d5-6a4f-42bd-bb2a-12ce30fa91ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ada000-c9d8-4779-a392-4734d38417c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eacce5-ea4f-4504-987c-1537215a840a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4521c137-ce34-43d7-8848-8b188cffc02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d31052-0e07-4fb1-935c-c6e7b9f455ae",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084a4ff9-f354-47bf-bedd-bc74ecc09a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffbe78c-8752-4637-8900-fa837e51498f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36eb7e3-0821-4f20-bc3a-a63144da24c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "605aad6f-9832-4b47-9858-e33bd4be34f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fc0f45-8aef-4dc1-99be-5d35c8811d38",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46819187-0214-4cc2-8d55-bd8abafeda55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3b0687-19a7-47c1-954d-69d3de5fe5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04224cdb-ecbd-403e-92ce-45ff91e71cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d13ab2-b0fa-46f8-9f23-fa311f235861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af296eb-7a6a-4acb-aeb1-c2fcf01f654e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecf6e12-ab66-44eb-a9e6-9e6477797eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b053bf3-2ac0-4147-af6c-40f553604f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b9b324-a53a-4e0f-b1cb-b4954fc2bff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf62747-9ab6-4924-a901-1f16ee4c7377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc915aa4-a655-42c7-9d51-74f87d0b73fd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22eefe5-26e1-45bd-b3a5-e9751312ce46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f602f9a1-1577-41fe-bbec-31f89e864008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb98587-a358-455b-9c4d-3950ea7298bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "daee6dcf-adee-41b1-b42d-50aeeb2fdc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dda7a27-f43c-44d5-9154-c6e51285fb59",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5198956-f9e3-40d7-98b1-d1e7ad4884fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb75c33e-e35e-471b-9b07-daba59037be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b4ca21-a308-43ed-bd5f-f2861bec4380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ec52dc-e5e6-4495-8235-62fd497405f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e562a8e2-68f3-436c-a869-5c3c763bac04",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930b7591-c6f3-4041-9702-10bb8f762b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1cb483-b900-4693-9137-07c45946f4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ee0672-c138-4212-b8cb-7e002dc4af41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62aa01c9-5987-4779-84a4-afcc9a98feb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69267f2b-bc85-439c-b819-8f0690022e03",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f21c101-17b2-400d-937d-35a569f404aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f14b24-49ae-4d8f-a83c-71da16e3f8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c89926f-5873-4af0-93e2-402963eb14d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36b2cc3a-6145-47f0-bd8b-d5178e6adc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba89b4d0-cdf7-49f6-b701-081c3799fa79",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd8cc3-c5c1-4309-a8d2-c4cef3abc696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc909cd2-588d-42e5-845e-b1a91c12dd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc67571-42c4-4d5a-9a6d-04d04d440d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12326c4a-4b0d-4ab6-855a-636c2e734cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a251d793-9da7-4edf-b34b-6f4e6e162ba2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cbd0b2-bf43-4cc9-bb28-f9fd9eada077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9feee1cf-bb73-4a88-b5ea-ca7ba94f363c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976567f9-13e3-49ba-a0d9-3e8628454b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1603f378-3a10-4f91-9bb5-04dd0a6587bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4cf8d2-a124-4455-b3f7-6b6768da3685",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058d2dce-da82-44f0-82c9-4be2acb139ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d95b81-5cce-4e80-aa9a-21a1ae539cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0d5e4f-3e02-4f2e-b416-ac706e34124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0466658-9a8a-461e-8ba8-21a4401f02b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dd224e-0cc4-4767-afee-325599aff2b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b392a139-801d-453f-b4d5-f86350fc2687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71eef80-072a-4caf-8c20-3649f369980b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f2177d-dfc2-4b06-ba65-448842fae1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7526c9f-24b1-4e1c-acc9-132062bcc3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dc7f7b-f11b-410a-8b39-988824b53200",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4362f4b7-7852-4542-acee-2dfe6a09e1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7ec65d-40e9-43f7-a503-c4d26e5f348a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d79e95b-de07-4a39-a7dd-9935ebf256ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "554d7baa-f31a-4f4e-8ee0-aca1ab2efcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25745c3-4a64-462c-8c8e-d7ab4229a5a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8aaa4a-e5b4-4063-b2e3-cf99c6160ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19060ee-319b-4f49-8dae-7e06d78b0876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff6074a-f78a-4c3e-a87a-82ad4e67fc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0db0c5-971e-4d70-83ea-855d8dd2c045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2472a5ab-a19b-4713-a860-4fceade63d8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b93f5c-2526-4073-b660-672934d4e79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9c73cd-4644-4772-97af-2db449c17340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf99430-5c43-405c-90ad-6f4130baa43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2088791-7dac-4042-8da8-76b4a90ba96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce9348b-0515-4f87-921c-39d71c39dcdb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869721b0-05ac-499c-b808-13a3e0db7102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb02bc9d-47bb-4609-8ff7-5dfba3b5e2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14545b77-a587-41a0-b97f-eab290a2db80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "958c9987-a8e7-4f68-98da-5a416942f74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933c7822-b6ed-4412-a640-a9384af5ed11",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ea1db0-70c3-408e-9bf0-5fb9f288f517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e42f8fd-6439-4d7b-8767-19c484496ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84394e8b-f510-4395-87e0-e907d685c631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9522c2b-8d02-4fd6-b3b6-6d1e7da3b5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca4d07a-a986-4ed3-b6f5-027b417068f9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da9e38b-a162-4c46-a2f5-621907966fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6a0ab5-b437-45ab-b14a-05ceb9d232ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fb7485-0492-4109-88f6-ac634e80dbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75dbdddb-e5e4-48fd-b8c5-2b770358048a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b52245c-be8e-487b-82f4-f8ba1847ed21",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207d15ef-a2ed-4a33-b9cf-075dfc998729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f848b95-71a6-4132-a867-3988d41b5fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2525f7-91b5-4b5f-bcf6-7a92065d6c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68345f15-8bf6-4b83-8600-b059b6e298f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa7485f-1666-4cd2-a099-b1eb24dbef04",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b72bddd-8b17-415d-bef0-2bbe2fa4a036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31d3bc4-d064-467a-abc4-7099f7ace800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63cd0f8-cef1-4ebd-8aec-b32acb4ce642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "655aceb6-5bd3-4ae7-b679-52fffd54c2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f858e3-e172-4179-a6db-16fcd3ed2848",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4afea4-4e10-4b37-87c2-9b6b6974a009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9585fad0-b702-4935-94f6-5bc0b30870a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75802ea6-5db6-49d5-bdaa-6531a79cb092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5996bb-8c01-4355-bc29-ca7564c02f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95df3485-d03a-45a2-9864-fb12a84d8627",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b1d755-8467-4e64-8f03-af06236df31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c80d4a-4d06-4f53-8856-d7aa4020fd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c786d37f-0e07-497b-8aec-ece358e0d467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "026d6b47-4f23-4dd9-b09d-3400f1a00fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32bf7cf-6b16-42a1-be64-f30901b5d41d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b2a4ec-bacb-4ec0-add4-fbfae23fb67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2ea21d-b34e-4f79-9fb0-0474986e3b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5a85da-8858-4c0d-b43b-2c6323bf28c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c95673-ebcd-4fe5-9fb2-b181cb5d5a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2172567-d4de-4086-8418-4cd3678bcda5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e2a591-f8d6-4e12-a4d4-59f5fc5de466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2737deef-858c-45c1-9b1e-c611b00fb5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efae8d1c-5d38-472e-b32c-5028e7ec658b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05361b4d-aabd-4d13-956f-969f3d3248c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4d322e-0808-4d2b-832e-ca746bb20b25",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875dd74d-fb43-49e2-8d10-b53f6829b887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cafc76ef-98d7-49a5-9f27-9c8f3179bca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecc73dd-cde9-4960-8017-acde4de43954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "315e7388-9fc6-43f8-be64-8ade38f07740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a3f991-08e5-43dc-916e-e94bad3dbcf0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb5d004-2684-4ba9-ac2e-4278ac3e30d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4301b15-1472-4ef5-bcc3-f747ccdd72fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed9671e-1a4c-490d-99bd-b687128af96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cafe879-80bc-43e9-897d-c828f59d05ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c445db-b8af-40ba-8caa-fe70632007e4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1bba51-e3be-43ef-a8a1-5313ffcc7de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759be40e-d190-4d16-b782-a033a53b8661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28f9f88-b3c1-49c5-8802-ed05c20c9cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c45b8af-487e-408e-8fd7-76354fa5e9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffeafe3-0f4e-4ae3-a31d-ae7fc9cc0e1f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4232b793-fbd3-4e56-9336-29d55f6e4023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133888c4-322a-467a-9c26-a6d36ae04af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f23c5d-a3e8-4b28-a3be-4ad369145bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9418c3f9-cefa-4d7a-a9fb-d2090b94d1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753d9bad-4f13-4801-8c64-6e2ae7f3f0e8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0acfa4d-5039-4c9e-bda7-20aef58208da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7ce189-84ee-40b5-8844-0d2b3ce69fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2fa162-a4ac-49bb-b744-d48f21221d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f59d136-2313-494d-8d07-5c45fb008ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3168a63-df6f-4ff2-be48-fd8b725c7378",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f2b92f-7ce0-4dd9-af90-e29b98a03cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c53241e-3493-4714-aa74-87f5031b880c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14595e48-29eb-4eb7-8c22-9129823261ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a71fd74-759c-4bf2-9d64-5cc7ac7fc40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a88f8b-be92-4411-9ff3-ed92fd78345a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2994406e-a684-4745-a457-b3224adcf4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f575adcd-f6af-4f53-a9e9-0ec3c7e63966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d643728-a089-44fb-a636-3e01f26e804d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8969a4-fcd6-428b-9b53-44f4bfb634c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8976940f-6a8f-4763-a4d0-8249102f98a2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130478ce-a426-469d-8b02-432e67cdee69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536ffad0-16d1-4738-96cb-eeb23a6a33d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b80d09-6aaa-4a77-b473-7990908df1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1efadb6a-6231-4a46-ab4b-94944b9a4c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168eea24-b748-4455-8d34-434465071ce4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f8fe76-debd-42bd-9775-aff1adbb8366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87dc2ad-8901-4693-bb86-ccd235c3dc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71e21a0-e8ca-44de-8e83-630ee2b182e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5faafa85-c359-4c72-9f1f-1b9cd4d18439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8e5b31-dc8a-4d4b-87d3-4c288a678ed5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ad7afe-6780-4e77-85e2-3fa1dfeb1b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a989c1-8c14-44df-ba59-d900a36924ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3722d5-b03b-46ec-82ba-d58cf787968e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42aa8b75-1db3-469e-80a0-384fe538bf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0ed71d-7b7c-4bb9-8061-022ce433b34b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924882cd-a964-42c2-b03f-de1f07c5ee98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be438e80-537b-443f-b0fa-4f833a27fc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcf2218-4bd0-454e-a664-90e3f37db93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c408c961-8ceb-4697-b620-149452cd099f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3683d7c7-ca22-4a59-89b5-2d9d4d3f6214",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5d6fe9-50e4-4511-bce1-e752267bedea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3d659c-275f-4aca-bd4d-4d82d9340a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67263115-df14-4f97-a6cd-42e4c7b53e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "424f03ee-6fd5-47fe-87f4-7f1fbadfa9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05693ef3-bcca-4708-b5b8-ce144ca5b7cc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0f213f-fb54-4c09-a219-b0dd0e7159ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6266880-cf18-441a-b1de-1beb8255efed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03a4139-60cf-4c0e-acad-c9de420e3fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32db7946-c773-46cc-b951-a8c4d36cf514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68088530-2285-4c13-b723-c635ed0a2935",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e107c3-177f-461b-a52a-09f94872a312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1282c8bc-2e60-4d3f-923c-380b2ea18cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72813b0c-fce7-4844-85ca-0855710a03e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2720db03-9cfb-4806-8430-f986a0d98a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cffa1c-0c1b-4f3e-a096-e00903b53f38",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15c7196-5328-4841-a492-212adb2edd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ca0593-5547-4e8b-b868-ac68cd6261b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbc03dc-9f0b-492a-b6c2-b162e553c667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "827ca5bf-96cd-4466-83e2-f12594f04d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e18435-2b4c-4805-8d72-3e86f9551826",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63997235-f908-4f8f-9f3e-88d472c75a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b734d7a8-f41d-4faf-b6b4-1aa271e20b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3aee95d-db8d-4256-85bb-49fb248d6690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "423b1345-fd96-4ce9-80f4-db43e53606f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0bf718-845a-4b77-80ac-400b0cb0b48e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974735ee-685a-4cf8-8986-2e906c9b18b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2192356a-5fce-4304-990b-f721bebc1a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1574da0a-f456-4cc2-be43-678264670b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a886404-4af0-4556-b578-5a5d65188866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5222ecc-9514-4d36-88ea-a6be8e7d5cea",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20490682-65ff-4643-a4f8-0e789061a52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841ea6fe-de4f-46cc-8ae7-d99f87760953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8df2ae-8ced-49c8-b6c9-d05a1b1550a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d8d899-34e2-4496-a4db-00863862d6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fb5afc-4a09-4ca3-a073-a6beefeee0d3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a471075-494c-4bb3-b04e-e2d86f699721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62c9c8a-dcbc-43b2-a1ef-82f43ecfa018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dab67c6-689e-4556-aacb-e0a28d4da291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "60c6d1c2-07b4-41de-a3e3-300891d34ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b7fec6-8725-4a2a-9ccf-31763abd7424",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18838d3-e872-4a7a-8394-5a23349a2d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69262391-b374-4071-a27c-d2c4084119a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2ba7e5-a423-41d7-a13b-c8de69ff1f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8eefbf6f-80bd-4ad0-ae1c-f0e575a1754a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d6f882-1a3d-45cc-94a8-54b137be242e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d192e266-0aee-415c-8785-dc4af36c428b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3ac82e-b343-4845-8c2a-34baada1028a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf04e1f-d0be-47be-8bc3-2e99c8937bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8544d9-efde-453c-8985-24657c89727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d75ea0-a2a5-44e8-89c2-e7a6bce48c8e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e197c71c-a87f-4091-9a4e-c0b17ee15249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5c18e4d8-a54e-4eeb-aa9a-67f16d55691f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be484cb-35cb-4f9f-9fff-b5cf318c1c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a07a1934-5c49-4d88-9aae-09ca65302199"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54c3bac0-866d-4c46-b2b0-4ebb71f5c114",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebaf2cbe-9491-46e9-8d4e-f9427bd68e23",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fc6136-fc79-42f6-b1c5-cbb4afb23b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26eb5358-c83c-4a41-acb8-043496f6fb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d250c296-3976-443c-a0bb-badea15ce24e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90000518-e302-42ff-83f5-6a6f255022b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e228cb3a-581e-48ad-a5c5-a15d415a8492",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b048b64-0f6d-47e2-8926-9067049f09e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "211d2858-e073-4bfb-80eb-0e7c470e3b6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32f22c3c-e37f-48c3-99cb-f934750c52ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "339104d2-39eb-482e-bafc-9606cea535f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d8ae84c-346b-453a-bb76-c3a38e942693"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d12bdd57-1622-42af-878b-b46a7e8b9303",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c119bcb2-228c-4dde-a132-8f57a3a51dc1"
                }
              }
            ]
          },
          {
            "id": "ef279eed-b64b-414f-9685-7e6ddf6b5e07",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7796968-9a90-43ae-afab-8a50e66c69c1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "90c18fd3-e002-4d4f-9c67-d8433cee5e2f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d79e849-2fcd-4248-b896-3c0a94dc897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "71f7687c-4114-4cae-8954-c341e19a9ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d29449-2f2a-4c57-b4cf-d4bb68da2644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad343b2-0548-4144-ab7c-49caa6c10161"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bed3dc5-04e0-4ade-b5b4-9f4740f294ca",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e773b10f-fe4b-4265-9f7c-ec679e81ba11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68fa0f32-f478-401d-8956-2e7809a4058a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "194560b9-3798-4f49-a941-ad5f8df16005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "78bd86b7-8796-41bf-af3c-8dfca3816b82"
                    }
                  }
                ]
              },
              {
                "id": "e8e837fc-32bb-48d7-bd32-fdedc547f652",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1446e26-b891-4b50-b5aa-255305015b7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6228e994-87fb-4beb-bb4e-19c88aac3016"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdb20500-c6e1-4167-9657-77da5cdf0a26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43762c3b-08b9-434f-b0c4-c8e0d450ee24"
                    }
                  }
                ]
              },
              {
                "id": "bcd4626a-8da3-4381-a587-f70e7d7b986d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44f6943d-0c38-4d22-bec5-52d3d2e5ce60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "817fddf7-458a-447e-87cd-795907ef4017"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a263ef0-3417-4983-ae5c-f965a87b6e67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0bb6791b-a953-4c7b-92e0-0f09189d3d23"
                    }
                  }
                ]
              },
              {
                "id": "99440dd7-370f-45c9-b484-2390abcf4947",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84df4468-48cd-4dc7-934f-182e741a2c6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "667196c2-ead4-405b-99d6-8b44a187c8df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0a4bdb2-11fc-49a2-82d3-c9ae2d493196",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "671da8d5-6bbb-41f3-9457-8ba0056be685"
                    }
                  }
                ]
              },
              {
                "id": "a8b62de1-0bcf-4cd1-ae25-504c42740c2d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "613dbc1a-5c55-4f8f-99d6-f0d15291bde5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5c3c794-66ff-4fe4-ad3b-872dc2b340aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17f26556-1309-431b-98f1-b15cd3edca00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "df4aea24-c299-45b8-90fa-c83aa50c03d3"
                    }
                  }
                ]
              },
              {
                "id": "e89b18ca-b78e-485d-a4a3-ece3c0091f6f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e891b657-5460-48c8-8b59-b3541af70dc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82ccd7a7-9c97-4ea0-be2f-2107217a29f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "989dc9b8-9d17-4699-83ce-cd91a8600d53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74890174-ff92-4b38-a770-027aacc6f106"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed7b07ef-e055-4007-8b1d-88e659d5e548",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91bb6dca-275f-4fc9-a54f-de7a3358d249"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c6c08ee8-e819-4d36-81e2-b962caf2535d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af138fc1-cff8-4e3d-abdc-f84c3b496fff"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1148a90b-1047-48aa-8425-67d030fc1379",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9296430e-9c27-4180-93a8-7c3bf7cdacdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "600f0744-b90f-451b-b48d-56d9f835fe57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5505e64a-da0b-4680-9229-e82e709e01d1"
            }
          }
        ]
      },
      {
        "id": "cd7aac96-86fa-44d2-95a7-788d6ce6c21d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cac896a7-642c-4a24-b034-56038d5dd0da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1c980e0-65bb-4486-ae3e-ffdd7183e814",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc89ee50-79e9-47b4-8f68-aa5c70c76791",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23510464-fe30-49f8-8457-34e2c2cee8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defbc95a-6c21-427e-aff7-8f218f051c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106f23ca-24ba-4abb-9d8a-f6f8fcbf8889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd263c1d-1963-4c02-9bec-b43fe1fe9b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014f2443-4e45-487f-b8c9-28d5bf2463a7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd4def2-4a70-4c57-aae9-3b73649bc587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c5d3c1-1bb4-45af-a668-1ddb206b802c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de81db53-2732-4f09-97e4-371a6f4fc813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "987d438e-27f4-4e5c-8bc8-a751bd59f83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fc5ef3-1e9e-40eb-a570-aa3eeeb0e8d2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82b6a28-edf3-4a60-8a74-482402077324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687832f9-f358-47e4-b515-71bb064aa6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2156f4ef-49f8-4608-bbfb-cf832c0bffa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "293a3bd0-0af7-4502-bdb8-39cac8428e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d60c2c-e7ad-413d-8dc0-7617b4ed4b99",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a244d46a-5996-41ed-8cb5-2f33780863ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3155397e-66ea-4d67-8888-c56e635e1a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7b7ae3-7f3c-40fb-bebf-536d76e59277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea36c27-2292-4ac6-86e3-919a00340073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54e83c1-8a70-495f-b328-86c84d9ba0fe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7b5bd2-037d-40c0-842e-cdf0d1f07025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef63ca9-c1b4-47dd-86e0-d10c500477ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7ab60d-2a08-4fbd-b766-ebfa33741e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eeb18c5-1bf7-4c9f-a67b-255d9e0bde42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f85752-d679-4ab8-855f-311b486f83b7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9b90df-8b91-4cd0-90a6-1e2f2a1635cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c70314-9f54-4094-82f6-3861c9bf6c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab03e85-f0a0-4ebe-9e93-be0462b51637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d88afa-1c44-47e6-ba69-2a10dd6e1249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229e25b5-17b0-40f5-9ae6-846e8c9422bc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80575bac-5240-4b93-b11e-d0236486a543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760c24d8-2064-4e38-967c-a130ba102024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44b0aa6-5405-41ea-a7fa-f6cb232db418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3ce8ed-5acc-4403-8c89-0aa30cd1f116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dac18e-371a-4be7-bb6e-89fae20c12a7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959e48f4-aa9d-4659-8073-f71e65aa2503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5071631-ad48-4894-8108-86d3dbc33cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1d4bd3-74b2-4396-8bff-20c2fe7dce8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a939628-a2cb-4f61-aacc-aff90b2fc415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf304f50-35c0-40b5-9907-1c7e1e26e7a6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240f982f-0d9d-44f3-bd4e-a60e28648567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c2b2e7-6d43-4a4e-ba85-d61c701121a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f11f39-d52b-40cb-a50c-ef1fcfb558cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "888ab879-a846-4bd8-bda8-7198193dc357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961b0de3-8fb6-4599-ba73-48c72c487f3c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74984cf-f615-4b31-9024-eb8818873a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079e4a06-4fe2-40e9-b17c-cf7498bab057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff991f4-bf26-49eb-8bea-a0898a9a9761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d75563-46e5-477f-8a27-bcaaf14c8ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dadb65-5add-4cd3-9b49-519b6ff03bdf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526dd023-93c9-480a-bfd6-7a27b5c0aa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d2ff6c-9528-48de-8ce4-0bb2a14f3f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b8de58-2000-44fb-b935-d71dd7cc3269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "61f96f0c-335a-436c-85d0-8bd3010aa457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a266e950-1d29-4928-bc0d-b572c0895c7c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296974be-0d79-4723-84e5-b0bc6ad9b233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878c7574-e34a-420e-9244-c17b48b83f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf9fdc9-04d3-4302-a8c2-fdcfaf91c2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fba2e3ae-b57a-4168-9311-0158ad0e7b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e0c3cf-442d-4626-b397-295080d7668c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf73086-7117-4711-8dc2-1f8af374256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b59b36-f4cc-4c24-9378-db51f2e633e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee017ac-e2e6-4215-b389-df3d7f294d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ea9a2a-a3a1-48c1-aad7-b4f45f948569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7172c069-86c6-48a9-8e8f-dce7e4bb795d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827641e3-6949-4e57-aad3-a83f16c135bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf98516-670a-4f16-950a-cfc00ba9de41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3602e5-9d1f-4e3c-a6e4-db57760d5166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bffccb6-977c-45ab-80bb-9623038049b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fbadbb-0862-4efb-9579-62dfe0476384",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bb3f44-d2f8-4e50-ab0e-d5f4b120739c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b45cf40-789e-452a-88f2-24371d2660f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436e64a6-f9b2-4ff4-94ae-e62c6de76868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3b94a5-4948-4ce7-bc43-22917666d6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44b0f10-1b4b-4b9b-906d-90505f0b8536",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78202cf0-2725-4c36-a6da-2c32e0f21af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66809c9c-1faa-4996-93ac-8d965f6acd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5f740e-a652-4c5c-a597-eda852cb2331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9234a1cc-2baf-438a-9709-03855444a74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d485133-63ed-4fd9-a602-c94512f7a43f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed5653b-0737-470d-a236-40c3f98b6a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02809e5-a784-4d99-b7f2-ad35d69bfe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a4502a-f442-4a07-9fe6-573529eaccc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd9cfd7-59be-464c-9740-cdc9487cb5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c7bdc6-7fd5-43ca-82c2-8ca6c9db27bb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c742914e-926c-49d7-9fc0-05df50117312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5d948c-580f-4ea1-b696-680a12f5473b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89188d8-ff86-4898-8e9f-40fb9a098398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7900579-bf43-4815-9cde-9201f46c31bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195b0a09-6186-47c1-ab3c-1ca94eb8a567",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0a2c52-750a-443d-803c-f501f5ae6f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e06c11-d2fe-4efd-96fe-bb5d240b3766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf700b3-2b4f-42b1-a72d-26ccf9cd0843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "102cc8bd-519e-4b21-bfd3-19b91710f3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c459494f-73cb-4b90-befa-6b7d970502ad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85cf3a9-18db-439b-b3ed-55e21f968979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99335101-d2bf-4e18-bb7c-4fd79872b0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96517a04-3abf-4158-bfe6-fbce06375955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "063d4340-c8d7-41f0-bd08-27e822007e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d64632-62e6-4e39-b534-4c708b473d48",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76c1dbc-b59c-4f3f-9287-5a5527ebf1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9846b71a-8443-4dd9-ae3c-2af3cd1769fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd43032-4637-4484-a474-4af234c1f255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "884d05cb-bd30-4797-81a7-fd48fb976db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bf2ac3-9785-413d-996d-5f6a74f93211",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae048002-87a9-4313-abd5-0726e364d516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4e6e03-b0bd-45a2-a7a6-231fa7e7943b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605ec16c-c8b2-42cb-aeb2-4377444151cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee58d5a4-82b0-4739-9400-08aa8ba6b64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aeacc1c-cfa5-4e1b-9fb2-06984d0b712b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b0fe25-cd96-441e-a66a-c69354689fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34dd14f-68e7-4132-9614-1f98c8017af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0d7bad-4f27-4092-b1ea-5ce48679c530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b540e9-66f6-43bb-bc15-8d0a7666f0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fa1bc7-0438-435d-83dd-50d7f88ad9af",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946ab245-baad-4899-a20a-9db37218413e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9555f1e8-c6bf-4b58-a64c-a5d4a42b0ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cd6bde-4404-4908-ad0b-87ea904a4ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9aeb644-8464-4c06-9343-b983388493d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdc8dd7-aec5-4814-8a2b-211622039b80",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47798605-c245-45a5-932d-27955492e114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2ecc08-83a5-4deb-ae7d-1764b279fd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c55997-7dbf-4e73-8545-444b71827be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e358429a-c96d-4ad3-a873-0eec7879825b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5236e7c1-4657-4386-8269-d55004ea3e24",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ac566f-a961-48a3-a0c1-24dd3c112fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51445f69-b619-4158-be05-8af7ff39e96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ca9adf-a83a-4596-83c4-b9a3cb68fb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46894f0a-f6ce-48a1-b87f-5b6f6c4c08cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ba0818-b285-4612-b17a-6ca160623077",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ece433-da49-4a62-a8ad-65873d25a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e770f8b2-088b-4e29-a8bf-e4bc15ef10e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc1ca85-a83f-4d7b-9ef8-f278c49321e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3578ce-ba32-4688-8e7b-32414de76005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53be73d-ebb1-4474-bc3b-e845a4b34d63",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c4f371-af4a-4c82-a4b6-b27c535b7437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e4982e-92cd-49b2-a1fb-1c4c37f794fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcab9bc0-2551-4cdf-8f72-8269c27a35c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f530400b-5ec5-45ea-998f-72a6f325aa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1076e26-9f54-4e69-bc40-8dda3defd689",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1aa2b85-f83d-4d3d-8b4a-c82aca9243ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b804dac-1121-4eff-9e2f-23c395765cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db6e4ba-4e9a-4e5a-a735-c756bcc59b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c9e66a-6ab4-45fa-adba-0b6f0fa8f58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ff8765-72c8-4335-a706-c6786902cba6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba8feb6-94ab-46f1-8eb1-33c51e4ebfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bdb2f2-8b5b-4e2d-ba75-d41d2f8c2d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb508ad7-2640-47dd-99e7-1b17786e5fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1c7a6a-f716-4504-bca9-1eb76f0a37fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a85df3-4576-4550-96fb-4ff663b77492",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2507a8a-a438-4465-aab9-f623077cd699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1bb59c-57e7-4da8-9529-2e14016e89aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081a8f0e-0098-407a-aa07-b800cc5aabb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30497cb0-f387-4e87-baf2-ef1bcc0b415d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e1c60c-2043-4a68-9013-6acb988fff65",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801442bf-35c4-46af-b2a8-7b7a58fbcc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b14ebc-57e0-4809-8ced-ebe0f988e69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36053725-e716-4758-95ff-429985dc4b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74bc0fe6-09fb-40c7-93b8-7db17b1eeb58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9a1c288-4693-4ea5-8dd6-da7118e97dd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8a91cd2-f860-4f35-91cd-5fc0acffe8cd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088d7da0-3c5a-4b28-915b-a25c60cbb92a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d937cef4-f06b-4035-a4c2-1b13ee1285bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa76dc95-e53d-45b8-86df-663c6ff1ce5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd738a8b-5ccc-4bb9-a813-ab54b88d1005"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97c17d6b-bbd9-431a-a50a-f987ae99b44a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dce31cd1-02de-42be-a33b-71c143ee89a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "531b65dd-3ebf-431b-9485-9da45e08ae06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2d7cc32-6080-4055-83d9-f876e5e503b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e41bb89-1912-497d-95f7-3c18d03ddc40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "113240a3-a3dc-4332-bea9-805c06ef2a77"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfeb4a12-3793-43b2-b9bd-1572d2ac661c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5985da2-0271-43ed-a37a-e9dc87a6e390"
            }
          }
        ]
      },
      {
        "id": "27bbb7bb-b1f2-42dd-b82b-7c068d9097ee",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "79b48a0e-1d84-4343-8d5b-06a8d2d076b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f31ecd69-e7ef-4d68-b44a-cd33c9aecb07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0cc9f149-f2a4-42c4-9527-30b31488cf3d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cff7b2-9aa2-47b9-a4c6-cdb8235b20aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa6de09-9470-4854-991a-0a3d6e7d9e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460a0e90-776c-4fd2-ab04-89851b0979c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4490bd-5913-4212-9b4d-2de209e9c207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbd87bc-77b1-4a35-bb49-bac152860872",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b442df08-4202-445c-a63d-0062ec283cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf6df04-d9bf-41da-a15c-f7e8a05e2287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926df105-a6c3-424d-8f5c-189ec4b87009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4161cc3e-beb7-4a56-9f9f-ea2498e16883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9920acaa-9bf0-42eb-a25a-cad4f58f7d40",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c96393-82a9-4335-8658-5ca9e6dd6c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01895d5-2540-4ca2-a8c7-77b6ce0352f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d72745-48fb-4f92-9de1-5f03f0d4d47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b377f1-a5cb-4ad3-b4e3-b7db6db51d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c175a7d2-abcc-4c71-9c44-5c84b2011f8f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056046db-c0c3-4011-915e-1f958786cc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33071b99-ebff-4f26-a8e2-4df9adf930e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a5be8f-341f-401c-a672-f2fd121c3f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "024e8d2e-f012-412c-9554-2170e27ffb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1f367c-1fa9-4347-b0c4-d37d4765956f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ef82f5-f237-4857-b35e-9772752cf694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c6d027-af45-400f-9a2c-472ab2194116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a670c3b-e441-4a52-9b5d-aea99fcf448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef16a42-4e97-48d8-b97c-4d8ceac74e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b111fe-fbf1-45bd-9332-5038ac5b2700",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c16be4-ecea-45bc-ba99-ef6c3b31204f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ada50c-2abe-453d-a129-fb9f2ce9b484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b10774-0c61-4d15-8064-8badd6ce3c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a74990a1-9a98-4f54-95a4-b4bfb1c17ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d293cd-6b4a-4865-a0b3-5f10878cd62b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6dc65d-f25c-4b96-a23d-9f175ef1ca23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0d3a0c-1f53-420a-8cf9-09c2d92df80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c455737e-8216-4bd1-ac6d-bb810a5771d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2117cb96-b48b-4410-8a56-41003167dd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7f004a-3ea6-40ec-8ff7-3fdef6b8d222",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62329a27-bafd-41c9-8199-762060e35bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f049a9a0-000c-4e3e-b8cf-cf527b142efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1596c405-8ee1-4348-be5a-6cde9553bf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d016f227-9d98-4b33-bb0a-93fc2cacae0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624f9f3f-ff0f-4c84-be4f-13e77e1185f8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b77b78-4a6b-4adb-afee-cf7ea9408d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b629ab-3373-4407-b86c-0229cd6de133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba566617-7b39-4721-901d-d4468340a3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58b1229e-eb63-4081-9743-4916031b81bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed89112-85ab-43ca-af54-a63ae34c6506",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0368d57-7051-4918-a91a-4796fedde5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214b91d0-9b56-490e-8d85-e167d77f293a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaa182d-5ebb-4767-833f-641e7336cbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5866e012-a627-43c5-aabb-46f056b80f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4140bb02-440b-45f9-afdb-9bc1ddf1d33f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d6b486-a6be-45d3-98b0-9c6ed87b760c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04349326-f0e3-429c-9d45-d833923f8a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697edc51-3107-4907-ab26-7e16dea46528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "247fc505-82c5-4d6a-9375-5658c5bae50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a3a232-8b77-47d6-8286-893801508031",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b18934-bcfd-4263-8897-9b1e0a6e2bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de34dba-0292-4c0c-9858-8fc750836ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1babd2b-c71e-457e-962d-e5d51f1371df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c03e3f-6952-481f-b595-0ed308ab93e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1651c240-cebd-4864-8ee3-bbdef466d532",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1884d6fe-dfee-493c-b04c-1d7a83038f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c63409-e101-4c84-86e4-d8509e5274c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e389883-45e4-4769-b38f-9f99b2624f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c85a205-7bb1-4691-aa10-52bdffb0aefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a72f3a-51e1-4180-9bb2-2a1aa211f440",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c07ff7-c7f5-4fce-8b4a-3a32b61569d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5525843c-e47b-4b7a-b85c-0e3615da4b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e0ee47-6f5b-46b7-b895-65bbad9ecaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "81cdc39e-0219-4157-abcc-c9776bc0db98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efae4e68-65c1-4262-9fc8-00b36ee9553d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a8c7a0-01fb-47f2-9f51-e72e925b6d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e7375d-70df-4956-a5f5-91dd366bc284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35906573-2045-4361-ae58-d5fe7afc3003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ca4952-b0f1-464a-80b1-53bb25af63e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5d9236-e6d2-4a27-a893-a4c4cca733f2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263e5c47-66b6-46aa-bbbe-445fd0e1e026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bc517b-5eba-4159-9272-1f5b430ce74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339920ae-7fc7-474d-9a92-2b63ddfb1b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff159009-f86d-4048-bc4d-1213c8354fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f553d3-2342-4ed9-9823-71068abf9073",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bf8bf2-aea7-4820-93ef-9edabcaa94ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59834ee-1c3c-42ea-9ce7-1b97e24bf9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc876ca6-1599-49b6-b902-a3e04a0721c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "84abd61a-9132-49ea-b0f4-40757470f176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92964dd-a418-4947-b083-b7be5e985b62",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f550386-fe0f-43d0-9a07-697dabf8a256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93166487-f50a-4c31-a893-3ccac2322e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4dc49e-a5bf-4439-9907-d77ce47c4926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f414da-af04-48a2-8388-5659af5aae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58a71c4-0832-4aea-8ba5-8cbd3dea6117",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818e7b24-1cb6-48cd-9fa2-74424744b91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4756f9ef-941f-4f20-b4b3-86ee5fcdab88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7322f8c1-882a-480f-9d3b-ece4c307c9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f74b24-800f-447f-95f2-92a499572a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a135e0-fc18-45a2-b545-b4e8aa1bf3ec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45977732-cc47-49bb-b9e0-0baa18e24a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0eb6854-392a-4d1a-8f1f-43c765dd171e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2793347-bc19-41fc-a46e-30cd9afd4ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d48fd89-d4f1-4df7-a07f-fd2a63773077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a257a838-1a0e-4550-a920-ecad5a77727b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d55283b-2ed4-45bb-9992-9fe91cacb05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4895609b-c661-4be1-b2db-94d52bfd0340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be88de79-5da4-4bd9-8f9c-91583f0fe3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c676d2e-30c7-4fce-96b7-7badbc499210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1017c9f2-2259-4720-96f3-2c11e49cb19e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1883bdad-74b8-4570-922f-f1b4db949cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bce2a4a-dbd7-40bb-b6c3-e49c44d3be39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1f5d6f-ade7-4e3b-97e7-942bee01bf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60967cce-8550-4aaf-ab26-1bb9d70a9587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a940c3d-8442-43ad-83ef-2f40273a4dfb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63834e99-9c27-4829-8cee-1e41468dcc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110e1907-19af-4fd2-a04d-5e2ac8a7e09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff6f385-3834-44e5-9614-38326a42b018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8de516-d500-4bde-a867-7cdee1c4bc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089beffc-4742-4c91-8c77-729dd12832be",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a96d1e-9d60-4162-83c5-797db40c2e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676bc74e-6462-4592-a327-fe6af416bb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c824d6e-c27a-42b5-bf21-1b8778976bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8bea19-e0ec-4ce8-b296-51a314e99051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a1bd8e-bb3f-4ebd-b72a-9ff1e1d0107a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc03770-8314-4638-9d6d-54c68a99a870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00007439-6da6-4778-a1b0-d1c20c22c99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeee16da-2e3b-4395-a73f-132e375196e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85137bb0-2436-40f8-b1fb-d9f427860966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b5bf40-00b3-44db-95dd-36663dc696f9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a474e31-5077-4362-a810-d1ec4ed778ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab884c4-0942-4510-a159-1565442e22d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a78b16-20ca-439d-a53f-5cbfefff905d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22543378-9ead-46de-9a49-8150c13254f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6564455-4c07-41d4-bc59-f8cfc13b3523",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542e10e9-3fed-4983-bf46-307f20c4ad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b40f40-67e9-4ed0-b6bd-da825416f5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef266998-e1ab-43b4-a3a4-688bfe136418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa87c438-df40-4061-8c0b-9c9e9314187e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5209848a-9ec4-491e-a513-3804db3c691e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e2c2f9-b7ef-4282-a28f-720b8a6c743d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff51a6fb-ffec-44db-adab-f2e721abafd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12714d62-7e94-423a-b671-c9cbe385ff97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0b2395-cea1-40da-8eeb-58c4fb62386e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603c30b5-6bb4-4897-9c40-e2b32c466ffd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41851bc3-5b05-4e91-81c2-eb09b4429d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ca6db3-fc86-46fa-a120-eeb02e26c20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c46b45e-9ec6-4ab2-be8e-e620240f29b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1690983-85ae-443d-a435-4f6adc067133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd16beb-0c20-4b2a-b0ac-9dfd2996bb75",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9afe3aa-72e1-4e4d-8b51-9b5f1c271a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d68ee00-3bf1-4a41-915a-b13a32356288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa93af3-6664-4277-bf8c-6ab28cb99efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7e92f0-1f61-4c8f-8037-21292e6caf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c00d1f-8353-46ba-abb3-97afee414f29",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d453c2b-5bc1-4ee6-be59-9a0c563475bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514b31eb-de16-4e11-beda-536f93455853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8489f6a5-b72b-418e-9db5-20f3061aeea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fde4466-694b-4321-870e-3810c03d2002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f346741-dc71-4cdc-a622-72419f0ae9c6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d011b7e3-1909-466c-8ce6-2f6d809efbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3933e7-55db-4b83-a14b-c2382d66e91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e353c7c-566b-4adc-951b-388e590f46fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f36bfc-bc97-4f08-bb12-afe93e9277b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85333ca1-626c-4f55-bf32-3697166768a9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852b175f-d57f-43fb-826b-ba11ff7771dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642859b5-6f01-4838-b8fa-20f621611728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b15775c-c084-4562-abb3-9dcd779a79f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4edb37-0691-4d7c-9ec2-99ea47808e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cb00b7-764d-4b1d-8b72-a7c799897891",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7d5960-8269-42c6-9d8d-77c3e9e7c390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c239bcc8-889c-4af6-8e99-57f0e33a4f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80309b9-8a4c-4574-b336-0618e241abf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2118a4d9-7f9d-45ce-be0d-9280727c4805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41692f10-11f9-47f2-b0fe-f56a8b03e474",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0312e7-f8cf-4083-b850-39a6a848fe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f303e62-4120-4e95-993f-6febe7ebdd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77c5287-8669-4e35-9ba4-46ccb755071b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebef179e-685b-4241-8873-ccbefdf40d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4137c7d2-cc30-4b62-840e-f906d58ccefd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad67c13-a07f-475f-a4ae-8c165aae9953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e92526-694c-4e78-90d8-fc9a871c6d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af3d4de-b825-49cf-b5a5-8cfd535a5012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "877758f9-5fb9-4dec-a7c3-4177a4106704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929c5057-09cd-44af-aeeb-5bb645b2af05",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b95767-1865-4f5c-9bf6-ff6752922a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b88d226-9d60-4627-8bc7-89fa7015d1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496e3d2b-8a07-40d7-a88c-fa1167f5a16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e9a912-1b04-4d47-af11-61a15d64a1e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7976cb98-8cc0-49bb-b5b4-30823972c496",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dad7e30a-b357-4a39-9227-64443c5bdea4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d49d992-941c-4246-b1d8-8fcccb899e01",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56fd9e5a-26f7-48b1-92c2-86eb5df72c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d890e22-6599-433f-83e3-8bceaf485ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ef3f45b-cb4a-4482-92fc-d8943cf0d2a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a77896b2-11a7-46cd-8859-992e46d763a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49fc5d23-0eb7-4685-ae9a-e946bc29522b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00be2b47-140f-4260-8778-d27410f9ec1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90cdc88a-3870-45ca-b105-cc00f2614261"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7398af8-26fb-4a8d-b76b-25857bb05cb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "191700db-dc21-4f52-950e-eabf77ef674c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d209d3e-dc45-4a56-8712-150ccbd690d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71e9ec08-3e6d-4e0e-9593-b842fe52f86b"
            }
          }
        ]
      },
      {
        "id": "fc7a0bab-634b-4fa8-a097-5995555766e4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2a7a69ea-b289-460f-af58-518636b41676",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81cca947-fbfe-44eb-a015-4d74cf93681a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc8d30ad-84d9-4e2a-b19b-7292ce12626b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd67755-fb1d-4f82-9b1f-a25aeff4d9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2f9e00-145c-40a0-9672-a02d44cd01c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c65a39-849e-492b-b4a6-85fc065d9029",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a940b397-2d88-436f-86ed-161d51a49e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a65fe6a-b500-4c6c-969d-baffdb82bd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b39cdf1-3bb2-48e9-b5dd-5b5e7e980fe7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114ef7b6-616b-4e9a-b3f6-cb18fdbabd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53d4b00-495b-4692-83d9-8b469e790feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd44d589-a31d-4c4e-a6c4-1f581e7c0a23",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb004654-1e03-4784-866d-0d630c776d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de70d7d-9c76-4a87-a286-7f1b224cc203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c4915c-af0d-48f9-a7a3-ae91a625a7c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff6458f-85e1-44a0-94e1-50c27f938c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e74314-9337-4e82-976f-4c80ee6daf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b0f6de-e717-41bd-9f2e-daaa7c303d47",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f39838-5cd1-4e8f-899b-db053d8726f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bd68a8-5122-4a2f-8e9c-c60ab5ad91ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f743dd10-fa4b-402d-94fe-a2fbb8ef4034",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a8e6e8-be4d-406b-a2e3-04e3b43bae98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8752cef9-9456-4d0d-afd3-38d41ed1753b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7d08f5-507c-4467-a778-6edeaea3b90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f749af1f-8752-46fc-9954-195120aae823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42ba3eb-03a2-45d3-9d57-c3c0f28574e6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7216a4ce-a95e-4462-9954-b6b3ca3cc7ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd4e398-af0d-47fc-9cca-831fae30a60c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11e6a85-a724-41c1-b0d8-dc52d7f72201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599c75b4-7ae7-489a-bc43-28946703830e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdc43a4-8af9-45b3-ad4c-5d571ac0b54e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b8b377-1b9f-444a-a9c2-78e9684c4cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06171ac3-809c-44cc-800e-130e46ac3d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c305bc9f-8caa-41a5-9537-20f8936c187b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bc7138-002c-4f62-b8d9-8bc248b112ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2234c649-23a4-4920-bef9-1f2a5e4814c3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4138d6e8-d780-4285-bd53-e29903e7903a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02059fd5-027a-4fd6-ab85-2b7f5edd91a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e8d2b4-c4e9-4aee-be05-39729ab90961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93bab7d-379c-4cb9-b6fb-5690094c1695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92ca5a5-8360-44f2-97b6-e7fbd761c06b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c05c21-fa35-4f2b-9f84-17d4bf8cd929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfe4df6-f089-4fb4-adac-e2165df4c1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4f08b3-1716-43e7-9f83-7d14ab04c1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2709da-e18f-4468-877a-d77f5957949d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558751d9-f10a-4a00-ae01-5c8f61dbaa97",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0374fa9-7907-4831-99dc-6c2c2385decf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de74549f-ddda-4364-bf04-99f696ea0f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f05ac-cef2-4d02-8fed-41c2eedfc5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c976cc-0b8f-46be-a97d-b18755c25a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035042ed-b713-4d6b-8d2c-c230f5fee60a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f6d7d-2f58-41b3-8149-274cbb09c1f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1966b22-e9fd-498f-a85f-7e896ad73319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786586d1-5ad8-4fa7-b10d-e0f6fc04f8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e27d67d-bdc4-4fbb-9f96-150868cfe332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a0cea7-13d7-41a7-8c29-9ffeb73d7e98",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e18cab-ce17-4b28-b667-0caad59708f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4f5c49-83c6-4488-a2c3-170e4f043a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae53dbe-7b21-4bed-be35-b0011427dd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197e8da7-f9fc-4b8c-83fe-76fe324a8b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa98953-71f5-4a84-8cfc-27d97df16a99",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca36428-ce60-4d87-a30e-50aa75108c09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a85f64-c54d-419c-8994-42bb3152acd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dc6540-c4ee-4772-822d-ca9ff36275d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c198fc7f-5c29-46b0-be95-92447c8013fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfacee2-1c07-49f3-8729-368bf1a761a0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0b695f-35c5-4f09-8c5a-cc9b6cb1406b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931ff3c8-a460-4c7d-bb99-023cd1b3219c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22303c06-9e25-4a96-b19c-119e45c69e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080d303e-bbf9-407a-a2db-f4624213a456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edb950f-8abf-4d63-9960-2b9fdd0759ab",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1eb774-bde8-4a1a-b896-12b422c8b141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033faf17-af2a-426a-9b7b-cfaab773d711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fb7d30-b02e-4c35-9514-be9c1924f5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736fc765-6167-4e00-89b6-f451e041c4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27094575-6545-4482-ba7e-0b64282bfb21",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832a32ec-ef42-42c9-a2d0-b7b6d79c78c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5661b581-9d96-40c2-9630-de8a16985e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bfa05c-fff4-4ddf-b24f-67de3d42dc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e66ce36-3492-4851-a69c-54fb5625d7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c3eb8b-22cf-4087-bfdf-479d9ce8af54",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14980a2a-15c7-4c63-84d2-b4f619f92e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dcc5562-9f7e-4589-a4eb-8f630d4c0531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787d017e-4636-4485-adc0-c6dfa01ef65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca83ec20-c0c7-4a1f-8159-1ef91552746c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92f3c5d-3683-4b9c-a75f-989c911b2ee5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6771cc3c-eabb-4e58-bdd2-cad5ac9b1ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd11031-44c4-45c2-bdb9-584830df71a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9ae929-6e7c-444e-a6cc-3eb8441592d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0031e4ee-8545-48e5-baec-0695f1e9bd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bbfc58-31ec-4b75-b71e-ed6c43007995",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6c443f-52bf-4d4f-ade1-9b36bddf8e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b920e0-dca0-40a4-af10-8a5e58c277c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333e1ec7-ac70-4898-9925-7886fe38b74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c1f59a-65d4-4f68-a8e7-22785c15d713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9e4d40-06e9-4082-9cf1-8ada8ec89046",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b692bf-69a9-40c5-849a-4dee2ced6c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9c2c00-a374-4ab5-a581-0b6e9c017828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ac9e68-d6b4-499e-b2e1-d91cc699e977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b72bcd-58a2-4830-b445-61a07a386fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d04bb1-0f95-46cd-9bd4-56ca8baaba49",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1f8bb0-e551-4d99-8c74-d2cde632cac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d247c01-3dc4-4215-9080-60469e69bb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e81125-a801-4919-a4b1-a5f9e051c785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c37dba1-e1a1-4eb7-8b31-cb32e15ec324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e840ec-d76c-49ef-9752-b74446663eab",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63989e98-ec8c-4a6c-828d-c244ebb0b3bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92c41e1d-3796-4882-8719-0ad6c944aa92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf77546-5f98-4fd1-898e-421a521efb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f7985b-befe-4fa2-aef6-9735efeade84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf41e47-5297-4203-8352-4ac63ac9aeaa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d6aa78-6ad1-43dc-885d-d7b0e46446ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b27ec7b9-ee37-475b-991b-25ce49d45d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce0ad86-4178-43e3-b675-fe1a364d8607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385f6afa-a110-49ed-a106-044126c3c083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c769f6a-c7c3-4b06-bdca-e07f3d1b2177",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b547e2c8-b153-4895-bdf1-9c3f30ec2627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "586c706e-06e1-4727-8b08-98a86ce7f1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c1536f-4f00-40bb-a498-efa04b5fe26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433fdbda-da6f-4122-8275-ec4abc17842d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3fd940-8e53-432f-99e8-985cb4681840",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7a618f-663e-4f2f-abe9-744ff72cf77c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cfc7758-f33a-4d8d-9ae2-f9cd7449675d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78298f6-16ec-4915-82bd-7cebbb03b4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d39c76a-caf1-4213-aadc-9043c466b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d2db86-2b39-46af-8031-459b09fab154",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e57420-5ef9-48bb-b2e9-647fea869e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6467c20e-d31e-4653-b14b-ffc57bcc4c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb3772f-4b99-4992-a23c-b2728302e231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2f796c-feda-43a7-a2ba-d379d0314952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0d83ce-c68c-42a6-81c4-cd0d70c506ab",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ac89d9-3fda-45a5-ac5c-5ff67ce0ea0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c859a71-54bf-468a-9bb4-fd5b6f73ef39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124a5773-b778-4cea-ba2c-48242ec6bbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e26884f-ab1f-4f8e-b2b2-121eb4f290d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874b306e-1bd1-4148-8f84-a875a39ae329",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27ec78b-acee-41ba-b903-f475039811f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c921b8-e32a-403d-b907-ad40b877fd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f1f73c-f8b5-4f5c-8c62-8247e4195a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4da1b02-475d-43d8-bbce-409f01f96584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159267d3-57c8-4bc3-907f-595a3a0828d4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3526c1-3d78-4252-ba81-1da420f566dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f2062b-29da-41b2-b32c-88713dcf2566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06232273-caa4-4ac1-a996-560f0154fb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb08ba64-e826-4b67-9f2c-1064799d84e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffd5706-bfac-48c9-b353-381b3281ede6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc95963-b671-4d06-9574-b514db30a6dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55cad28e-aaf5-459c-b133-7ae57efcde06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a9c592-54b0-4655-8a43-019ed8a4ea85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0b6565-da9e-46cc-a8c8-8faf77721064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c42da30-3fca-46ed-8d6e-54522a43d828",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8ca67c-ee5d-4e6d-ae0c-df2283103225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97446de2-e1ef-4c6a-bb7d-b1288733d5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b997d945-07cb-4a7c-9978-577621054ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419f9562-af99-48d3-924c-4b3a4a04b15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953ebb63-6a0f-4600-92aa-c107b35e582b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16fe326-e384-4759-8750-6a024523b0fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e85b9a5-22df-4ecf-989c-72e6f12204bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e76cd34-6217-4155-bada-242c01c64e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753c6afe-0d4b-486d-9d0b-73c94b4133d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf69da96-0282-4344-a2cd-d0334d24bba2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa91735d-ce0a-433e-8357-09860e6f4540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcdf03d-d158-4f83-adc7-a4169eb3b693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64beb65-056a-4575-b1f6-1036fbf2d9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba30311-8f99-4a17-91e5-b4f256977ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44381e0-bb9c-49f1-a524-3c53db45e2bb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07db47a9-f920-4eb4-9300-deb904b0b1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44e835e-6701-4392-82c6-f66b8ad27d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4253a2-3eb7-443a-a897-4c76171ef7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf06770-2ba4-40e2-ba1e-14400ac62815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fe88d2-5af7-457a-b1df-3e8649a68ad3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fff9de-6992-4ea4-b168-c62ec85075fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47f0a4a-2a13-4424-9c3d-690f92366879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974ba0f4-fbc6-4e14-831a-49edb5572cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bff7d38-cde6-48e5-be07-a6df8d12d465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9821803-d50a-4b18-9d48-56bdc8a56559",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57504d45-4b70-4ff0-a5cf-3edcba97f13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44e6ab4-893e-4716-b4c0-734617b6b97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d687fa59-750f-4e3f-aa67-d6f929fbdb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5093b698-71ba-43e3-804a-e2bb6e4c5f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac37337-f886-4962-b50d-1650ec498dbc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53784996-f8a7-4043-a869-4c029dacd6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ddd16a-f670-4572-a864-850400266c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d94a246-2510-4ad2-8bc3-f5b28b221afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71da8041-ee0f-461e-b2ee-df375e6b6173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d701115f-4411-4a8d-a5e1-4e2470039d15",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b366a65-4310-4703-8732-b7be9c71bddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6825e429-6b1d-4288-b12a-7689975bb199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dab491-c291-4aff-aa70-e638f9c25a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e98441-92fe-4e35-9ab6-99f0debbafdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0347b2ba-65c1-4fc0-917d-85bf0d6176f9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4988227-1b30-4ef3-81a8-998b58bec078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936079ff-ccb3-4124-bbc0-79112011b88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320e1981-9cdf-4be2-b41b-4ae3c18edee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4ac24f-4c0d-4bef-9b3f-5c8304380553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09966af5-8e41-4713-a7c8-208842c377f1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92c65e1-8249-4b6b-9ab5-59a11df77853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9b1f55-9413-4760-b871-4a58077c23ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc0399f-e9f0-4053-936a-bcdd62266c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fe79f3-1a6d-4dfc-a9fc-69f95931aaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc2ffdb-0f0e-4d12-84b2-a3aa46f12a35",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1082a2-cd88-480a-8fe1-166d543ac1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff165ea-40dd-4c03-83a2-610b20aa2124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8060762f-af61-4db6-9ed8-df4b91a04cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64416b41-0a90-4856-b385-e80092a69bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea026761-4c53-4639-a7d1-7ba61961e662",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bddd9fd-a22e-49bf-bdba-8dac1bb56ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4c6cb1-2f9f-4206-9ff3-bcc97d320f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c97fea4-bc42-4c8b-905c-5fa2d3e68310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43a2e33-8cb9-42e2-86ed-fbb628c7e869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8f151c-3114-4e3a-95f6-ec2f86e08e12",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7baf2fb-017a-40b0-9e6c-38fecb320c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae269366-d70e-4037-8909-42fad1da79e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265a15d4-c650-4801-b0b4-e9f9b813e251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2192e479-51e7-41e5-833e-51d6eeff479f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496f4eb9-1481-468b-aaf7-f727bab0d337",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9789adad-a8e8-438f-8db8-51f2a585b51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d9a7cc-6cae-4afa-bc09-f4157b855c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645cffbe-dc0f-4811-b7d4-022947a2adf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68747867-e1ef-49d6-8f51-76f8f1112860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bbc7f0-7b1f-4ce8-81b7-6c507b721625",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0e4b1f-8b64-4692-a59a-28529bd9040d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de9b4cb-dfb6-415e-960c-953485b9b9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f221ee-5381-4076-af11-e5ff41fa0278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f58db2c-6dd4-4f00-ab07-ee1c2c2b2b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dd0fa7-d30b-49bb-b486-1f5cc1133fec",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811e5def-bb5a-4198-81e7-3e987bfca600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50883f30-5e63-40d7-b436-ecb619e8fd68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62243a24-5458-45b9-850a-832ab985bf15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa695e40-bafa-430a-92b3-8f517a0a0f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67c322b-5e23-4d6d-a58c-18f2dcc2e4c7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab42b22-6770-4130-abac-c3da5cd04aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeccb7d-4897-494d-b1cb-ddd84ab03e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149d4d0d-a945-4662-8bc7-4a3395b6f14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cf86b2-6ba9-4c98-a46d-ac1a42d1de5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ab6e70-36ec-4b86-b522-b1c80fcf0f77",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7e61a3-9028-4efc-a054-bb811736815a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb2495f-21ba-4927-afcb-e92283dacacb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49807d83-7cd7-4c76-81b3-6ea3b8a87c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3ec5fe-d252-4fbb-aa9e-24605e2941ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df404d1-c4ce-48ac-b6ad-58dff752aa15",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d9cf3e-2095-4205-9373-8937c33f3ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1aed60-dece-4ae4-bf44-bc4c5b82efca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1a60b5-07a9-4475-9399-b4e71a30c3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e58bf3d-47bf-4e63-86e2-303f62649cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d2152c-963b-46e7-ad68-fba77494351c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5220ff4b-0f44-4af5-be99-d6606346b976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67dfbe54-0300-4523-85ea-61ee446e14ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7016e96-9ae7-4abc-be41-e75f57dc4c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025963bc-3b64-46a0-b328-5b80088af347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaedd8ae-53a8-46b4-969e-85581e736b15",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc137185-b84a-443e-a0c5-c7fede659529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfe0392-2ca4-4216-98f4-c1075bf7ba56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b97cd6-c6ca-4ffa-a807-d4f397cf02e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ed9791-69fd-41a3-8b91-0706d4e49aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadcc4e4-7aa3-4373-b7d8-65682968a5f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb80cf5-c832-4de0-87dc-025f4176f817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b106b695-20fc-4236-8a58-da64db9e04ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7de570-a8ab-4b76-b8dc-f9b5c3910e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9568fc66-9f67-493c-986b-c9017d4730c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77ec6c6-4b5d-4434-b589-1670603e68e0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418db5b5-10f4-45b7-9f8f-ebebef0d1fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50923ef-ccbc-4a3f-bbbb-e3c8f06e18f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9261fe12-678f-42dd-aa7a-1cd0bb0473db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614a5d0f-5182-4649-b2d3-5ff3ab1a65cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cddd485-2f49-47b2-b3ad-7d7c94944a5e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a38fd8-827e-45fb-bc07-aefbcdfb5588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188dd56e-ca4f-499c-b3a2-5a12abf393ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f14c42-2736-4c95-8ce1-be5fdabe107f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6165e1-dd53-436e-8ab5-ef19bdba2e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c320350-c96d-4941-a2e7-dad9fbb1b263",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133ffd61-ef4f-41dc-8c4f-3c41f49ccb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d140f418-1bd6-415b-89cf-0097628f5162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da16054-5701-4eac-9035-195b1635026c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426fbd36-3a79-4f22-b9ef-fe13e81d364b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffa878d-b90a-490e-b776-9e975e51496d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051636f6-1b50-413a-a972-180edad71758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe698d73-a59a-4577-bcb0-be348b3edd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d14a9cf-0147-42b0-8ee9-89ee0f6c5e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f6237a-001b-4c25-8cd5-9beb8c1ea72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bffc30-6d68-4097-885b-e6c0e233613e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06e8419-d622-49f3-a856-11511544d8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02e1436-757e-4e57-853d-6517fc203d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad94c4f-3006-4bd7-a352-3764a4ca3ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79debfd-8f8f-4645-a629-07fb0e381d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10b0cf2-c703-45c7-bcf8-3cb9a21963d8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3ff663-f441-4903-9c71-f54ceba2bb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d83d133-c219-42b7-b8ee-abd82dbe37bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc0a722-cf84-4461-a2ea-4d1d96282e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f9743b-b25c-4958-9ef5-88fa21ce0ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7d12b8-3572-4048-b618-c89118fcb15b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48877fa1-399a-4ed7-acfa-eb3dad8340df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7f50ae-7d89-4e74-8116-33c0e77923bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b77c8ff-4137-4e3d-8076-bcfbfb3e900b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6fa817-c218-41a2-a3fd-256da7fa5d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05024d95-26e5-4209-b2bd-78a434ba909e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15719a1-af9a-47d9-b577-9cfb976640cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9713faa7-b8f9-4255-9640-1d15c4eff80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80cad4f-fda0-4e9f-ac5d-286e1da76343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd02530-62eb-4181-aaf2-9f38af8adf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1adc2d-330d-4d9b-83bb-ee027d7ba742",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b99c5dc-47f8-47d9-9954-f598626af55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79027c10-608c-434f-baab-db9d705f62ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627a584e-01cc-4e24-9866-0c28408206e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c49f7d-0d30-4b5e-965b-34c68eceff07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0a343e-6059-412b-b606-2b2a11f960ad",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b654cc-69e0-4c38-9819-60eca4661173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f0da1e-0e16-4967-a0dd-db23ea5b59a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf01524d-03b3-4819-8454-878a73aba905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d169377d-8636-48b8-a943-ff6a4328f57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838da292-5c89-41fa-87eb-5562b6c37e20",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1630181-fd83-4760-89d1-9fd6b0b95516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac067d0-55b0-4040-990a-5e77619add26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98019046-b298-4ae0-af0b-42c23f10e766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe3f0f8-e0bb-426a-9da6-afc358aeed28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6f9d27-8e95-4e0a-8c5f-2ae729ee9138",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49aa1c63-6a6d-4cbb-bb7d-70ca35c243f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c75436-6930-4b1b-ba74-04428ada9063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e6407b-275a-4d96-bea2-ba015e969e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a63fdb-35a7-47de-9028-9695b3f34efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7fac8b-5bbf-4eb5-a7d6-faa9170a9814",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59bdfaa-87a1-462f-bf2d-58058bf5ee76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90797fda-780b-4311-971c-a7d354963a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d490788f-3492-4d1e-bf28-eaf5dd9e29c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2739bac-a622-483f-ac0b-af43351fcf9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a025dc13-3eb8-4d53-b137-de5282aa5f51",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b481e8a-53ca-4078-8853-7dc2d29bf207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa7ac8f-80b6-451d-8d15-dab7aecff5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37ae368-23e1-41b9-a5db-6ff94578cf05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd90ede-869a-45aa-8f5a-11a81a568dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d81156-97af-4019-bece-5788df5cdd29",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308f0340-1af3-449c-9a04-df449c852836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ab9a3d-4a35-495a-9e32-ade8ed1f83fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756dbe18-d2d8-4ed7-8167-e567e6d27156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074a6438-847e-4cd4-ba7d-79103fde8546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ebf724-d153-44d4-87d8-0c294a21d2bd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aa4be8-f048-4f39-9ef7-27117697ed95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d875e1c-15a4-452a-a767-981763aa7ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a14b9e9-a9da-4dec-a53e-1c717598a672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d55cb9-f09c-455c-839c-996643eb1a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5aa487-2abd-48db-97e1-a7db3d40161a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ee132e-7743-43f9-901a-d3940c545bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa003c0-9c55-4047-8d69-d5abda76ac54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02099fae-3259-49e5-b033-be1ece47130f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c63bc76-0985-4767-a7ee-14ffc4306bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2606671d-46a7-4d56-baa8-d6461e24059e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ee9b2c-1ef4-44e2-bfc0-9f3b35d5ff79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecf7b9e-368f-4828-b292-d8399d326187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d5b413-6fce-44dd-ac38-d295e2e34e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d2a1e4-3233-4ed9-8241-5876a5f71064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ea3c16-d1ea-4f92-b2e0-bbb9763e79e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ed3882-eb11-4dd5-a4b1-42209f119528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "869648b1-4060-4f85-9ccf-eec17b73c9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae6d262-d09a-470d-a567-5b0c541568ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4021f6d8-b0f2-4917-93f9-a1c08556fa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5834393-f387-4a31-9bf5-649d88af8219",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf71766-55c7-4997-af46-9a8ca4d9959f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3b62cc-3eac-417e-b757-e7a190787efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37821423-e177-441d-9476-66dbd64468ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8fa275-5ab0-48a0-94c4-ffe6e95145a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583d97dc-6c66-4d1f-9ff6-854a14e0a06c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b439fc9-3421-4069-9e5b-d1dc1dbf5629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25524e50-8084-4591-b789-cf1402b33233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24f73fa-a0c9-4915-ad9d-f7b2b461a51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e77d834-eebf-4f8c-bf36-441bd29ac813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfd1cb0-ed80-4a78-83b9-1d129e8c88cd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daefc485-92ac-4dca-bb7a-bc966d746c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9724bf9d-9c4c-4591-8831-2fe0b99693ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d4e46a-6031-4ddc-8e9e-00e449358b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034528ce-47e9-4b94-8f9b-3c5614509d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03042185-91d6-4268-b615-2e33d32f556e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb45be3-9ce5-4099-8b98-bac6824020fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0890dd04-a52d-4848-9150-8a8c775189f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf5fcd6-298e-458b-8d05-512c12adebe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d339df0-9115-42fb-ab9c-13ff80ed677c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcad3f9-750e-4e18-817a-1d812c523634",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3950358-94fc-49ce-965d-1b1984c6122a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dae4593-6e0a-4a77-9ece-b9109e4c5687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ea72e9-f8c6-4081-bc12-395146db1f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855adbba-d577-41bb-92dd-fd8bb2d260c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf5d7aa-0cd4-4dfb-8cd2-9b1e6b646011",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f7ac1d-1efe-454a-97b6-666fff7ad373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe71e11-cdb4-4cbb-b547-4a615b9d49ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80caa7be-f4fc-4797-953b-e070cb06efeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ced0c6b-544f-4da4-ab01-b72817d97e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7651c025-4d55-4ffb-b210-360832ce6db0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc089b6-de11-41c8-afab-e59dca9afaad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d16af3c-101b-40ff-8464-7d84eecf6aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20431082-9ef7-4b10-afc9-63896bfa6efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02d4ef0-eeca-4873-a302-ee0d36cd7769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8b96d7-e68c-44ce-adbb-38c58d5fdad1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a668d0-6540-484b-be83-92282e98ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0fe26de-44d1-4c31-a284-ac20a2d51c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3789c394-5e0c-4d98-8222-c5ccb9c4c558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea4b0be-5e88-4c36-8356-ed2e52824512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0f6b3e-319f-4f5e-9e88-200b3dbb6e1a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907ff111-7ee3-4c44-979c-91244f9509e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28e1e157-3996-4651-a29e-9a7401b958e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b219442-6e66-4537-a8f0-f4ea41c6884f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f12403-33ef-4eca-b236-8276be5663f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e73728-5639-4f22-ae28-731a1cbd4d05",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b5f587-a471-4b17-b3c2-8b15032a0d05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c939cb-3c64-4c5c-b77b-6869024f4819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b0184c-d0cb-4b04-8c3e-c9158deec631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446dfc61-53d5-4552-a6d1-2e78832fe8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ff070f-0083-46d5-b40b-52ea8818820f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f8465e-b4f8-47be-ad23-914727fdad20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b09ee42-1ca8-4a5d-838e-3ef369aa6925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1f868e-faac-4b91-bf82-eb8accb4fbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c8d9f2-a2c5-41c2-b99f-e9d6cb97e5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134a1be1-270e-4a58-b78b-00a564a0408f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea3a90f-d145-4de1-b8f0-448043c743fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf3728eb-aec3-4de8-8759-5a3687c32b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4970a7f-7c78-4ebc-9674-b7fcdecd1835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3525f82-0d41-4d5a-8255-2e84fdeaee18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f26071-cf6a-4bd5-b642-d6649179ff81",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f05b180-f781-45df-b289-445c9d04f446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca61b39-6e5b-4ecf-9d01-fb8b186e7510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189e3806-9611-4b61-a2e4-543d64d3dc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8a0ce2-6dd4-400e-9fb4-192ef554d8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33816d43-0327-4f1f-b83c-5784ce218312",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb44823a-55e3-4d2f-9d53-a6642fb198c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496dfa4a-fbab-4703-8294-1046049c1ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e582bd-a709-4900-ac15-b45781c7eec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc252c5-8d9c-4f7e-87f8-cb3814c4d68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f843e30-7974-4dc8-ae86-07107f76f983",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a502f2a8-09e8-4f27-aec2-63d861d44317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83a33075-b885-4450-85f7-19e8b3e0c53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cfaade-110e-47c3-a114-b403482cb1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d6cc9d-de8a-4b93-afff-01e0fdca2c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8183fb-18ae-4cef-ba67-edc78a50626d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b10838-17ba-4f08-87e9-d27f870f2ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cae8a456-f10c-4c80-8f9e-dcb259c9633f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190c5b58-0fb4-485e-bd0c-6b419ee10b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239fcf41-2f18-4634-9fbd-ec5cc05667cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985ceec4-8f8b-47be-83ed-4adde40aa2de",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93af5262-c310-4e41-a8f8-3a8c1b9348e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836563e1-84a9-4170-8b8c-615b2936563b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b444a64-1ec3-4f65-b882-854751fabb13",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b7847a-26ed-40af-a7e5-36ace2aacc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ef1b2e-c6f3-4746-b3f4-aa4ed14de7a3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfbbf4e-23f4-4862-958f-00fe9be7a9a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a72c0344-a905-48c9-bda1-0bae688cbcf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4892ed4d-028d-4e56-ac59-07bdb9b0d548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606cd259-dc17-40ea-af8b-4796cd96f53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb91b823-a84c-41b4-99b1-082e9320cbe3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fda4e2-0e70-4670-9859-11accfffe619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35069069-b162-443b-8a55-c8d8766f527f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f666954a-6a8d-4451-9ca9-69d3fc1a37ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9fce72-d1d6-477a-ab92-daa3c16ab844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd55ba4-fa48-4f37-a424-79efeed1c752",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b1a5d0-d13f-4685-946e-12070c2ec1b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4363774d-a687-43fb-96aa-c28af447a7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18735e9a-7991-45ff-a9ca-7f47c5df63bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54853b71-e70a-46ce-afce-6846a65b87cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f12509-54d8-4385-a869-ef4cbc5b4007",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e504b42-5147-4e59-abad-49b60742ae10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d5cd6cd-6a59-4c4f-87fc-d31436539f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56dd5d6-e8fb-4c0c-8055-0ab244d383d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd83d2bb-45e2-47a5-bdd6-8851ec1330f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13efcf82-b091-4ff1-a030-0a10119b9c3e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4eeb9b-2d8e-491c-8804-d30437a768dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1936e69f-dd12-4ff4-b6a2-26133b00c10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4137cc0d-861d-4ac3-948e-2813ca0642e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3089d222-eedc-4921-81a7-3d0d7e56b5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719fe0f4-495d-46b2-a940-41ff2fdeeb55",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c854e368-a173-487c-b5f0-023a0072d000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc97d97-8ca5-494f-9efa-b8a22de86600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0ddf00-76fe-40a6-9ccb-2ab1d0beeaf5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c544dc3-8223-4629-bbde-1f7774a7398c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a789e9a-e766-4b06-9b26-6820c481befb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2bbcd4-7cfb-46e7-b602-7c2ab812962c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e30302-53c4-4df7-8c25-4c21e15c56a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f837aa-8442-498c-87af-cd81bfa5779c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7acffe-3785-4296-aad8-f3334128fd88"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53d376b7-7198-4c80-bd05-f175550c88f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1e883a4-3073-4f25-9ccb-2a157224b846"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d3923ac-ddde-4bc8-b759-f58dfd3d05da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "727aa874-d480-42a5-872d-1d10fee92fd5"
                    }
                  }
                ]
              },
              {
                "id": "3b12bc9f-54ba-46c1-bf04-501f97094da4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae501803-c5f5-4627-86be-6010e23ba98e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6de9ef-7dc6-4d21-b802-82b4c3989455",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "08682447-1097-4dd1-80ac-fce9e8b5894a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b5c090-50cd-4d98-9fa5-356e85441c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5060ad3-3b37-4c97-b45c-d28071822a32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "420d7076-de55-4aa9-a7e2-06c63c2a4ce9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d5f83af-8231-4878-ad82-e307784c607a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "578058d3-bd35-4c7a-a63d-89344f903a6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c28775b6-1332-4d87-b593-88a4ca80ab64"
                    }
                  }
                ]
              },
              {
                "id": "84922ddb-f226-4ecf-9ea8-051ec0dbd18d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "716e5153-c8f4-4885-a120-dc5fbb006081",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa21e43-5f71-4f50-9aa4-1a0b5f4e935a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "23f30413-210f-4cfb-945e-8c03f778bfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd12f387-1c54-4c24-91fa-a64704abe82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a06fed-ef4c-4986-ba8e-fc5372ad0436"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "49a20802-0add-49b6-aa2b-2f881e5e83ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad9ea815-b61b-48d1-9517-cc85c00fcec4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10dd2fc7-e077-45fe-8a9c-64ccc34bda23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d1e0a5a6-04bc-4429-bd18-a603932ff1b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "277f9245-fda1-45cc-bc7c-4a8c01542587",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78864ea2-b718-44dc-a778-58f39a322df1"
                    }
                  }
                ]
              },
              {
                "id": "a0621857-7135-4647-b8bc-9a88499ff7b3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bcd28ee-1d64-4833-a825-d8b4ebaffb56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6216c57-8c3a-44da-8903-dd382555bcee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8042b98c-0c6c-4072-bb39-22fd600081e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a526dad-a543-4730-ba8a-8db7f4db7116"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed8eacc2-18b9-4c58-9b90-7f4d312b2d1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "80ee1854-0df0-46f4-a842-062459da6534"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6aeb0ec-defe-4dc6-b048-91683976e7ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "621ee3a6-5ed6-41a1-a2e1-1d559e3870cb"
            }
          }
        ]
      },
      {
        "id": "8260950c-46a0-4499-9ce9-da5c42cf633d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "983cac84-2f97-42d6-938c-34bb9b85bd6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86330cf9-214e-4475-9a49-693831289ed9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5299121-f6b3-4be5-b1e0-d736171a2934",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def82800-c081-4801-83f2-b7582551dfbb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eed44244-4d1e-44ff-b563-ae39375e9062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175d0a23-4514-4667-8ec4-aa78033db430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4d46078-c3fb-4cfe-8498-dcaa0dc895c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6fe076e-45e4-4094-aeb4-8f70cd521e25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03d11c88-ad9a-4e75-a1af-e4cd37a63624"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd17b626-1812-4470-adaa-9cc3e4ce7a1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2987030-f1c3-4151-ba9d-6920cbc068d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee2263ee-4da0-4f28-a8b5-240414aaf1f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "683b7c82-c51b-40ef-8af0-88c0116dede5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f84c503-b36c-4e00-9e0f-ee5f03e2545f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "504259fc-7bb5-4d67-8a1e-b545caa0539b"
            }
          }
        ]
      },
      {
        "id": "63c0252f-1779-4541-bb53-9f3b7262625a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "074181c0-8066-405b-98ff-b7a7de232283",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d9588e6-e102-462c-bd07-5776c065c61e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36bae693-4cd6-4c10-a093-87245fb857fe",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcbdce4-a5ef-4e3b-83d1-a586aec5099b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51cee7b5-540f-4bcd-a168-b617da6fb7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8e1cc4-c27e-444d-ac0f-e6a0697e7ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "465ad00f-771b-4ab0-a322-b4fbb1851dae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6589fed5-ba2b-4dc1-850a-a00241813401",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e1cc6c1-cb07-487e-8b09-ce4f48065f08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a09848c-1145-41d5-9f15-ba0f8ebdf168",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4d6be6e-98e6-4d3b-ad0f-0ec2b7281f0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc7e9573-c973-41c2-9912-613a2a3bf675",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ed6a9f1-9dbb-43fd-8b2f-687e8d2baf0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc042648-b69e-49fa-bc71-a13c1240d797",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "430f1432-f121-437c-9126-55de5a9d1deb"
            }
          }
        ]
      },
      {
        "id": "56e07c30-93e0-4e05-bb3f-c9eb79c7916d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3dd56126-23c9-41f6-b628-47a9cd841122",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50bd663a-5cf2-4ce0-9834-93cee3075ae1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b57a9be2-280a-4a2e-8b30-bcd3f2cf8e3a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce762c87-5081-4ca1-a70e-a705a4435fbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd05c002-d1d3-4045-a904-79cc3d0064c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d82718-5b34-4ebe-9f2e-bf4037c769d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d072dabf-0d04-45cf-88ab-cdd8e91fe9a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e763fb0f-76d7-432a-90a3-d258def6fc30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "925b394e-a311-401b-8d02-caced8eb0608"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39072b38-12a6-4b16-b50e-d834d65b24a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dde8f83c-9e63-4eb4-8174-91cdd0821407"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a44acf9-b302-4aa1-9f4d-8d9845058037",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5f94f93-9816-4b52-ae34-9fee925e1030"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "540f46ad-3bc3-4ebb-8d6b-d738f93cff8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dde84d32-142e-4d6c-bab5-cc64204ede23"
            }
          }
        ]
      },
      {
        "id": "7298a4f0-150f-46d8-a046-e2f9a8998569",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e227f295-1aa9-45cd-9feb-18b7aa3171b7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cb0fb12-9763-4904-ace3-abc2fa718244",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1d660ec4-f7b4-48a0-a64b-9d79f4033dc9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff912056-ef92-4a5a-9057-e0749b11809d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5be54ed-6433-4137-ab10-7b2b60d51ec8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 26.90877192982456,
      "responseMin": 6,
      "responseMax": 242,
      "responseSd": 19.39864600720618,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704069577353,
      "completed": 1704069593873
    },
    "executions": [
      {
        "id": "d82d1936-ffbc-4c6c-9064-264b24ecd2d9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3151894d-dfd5-4d24-b563-52c7e76c7c7f",
          "httpRequestId": "896ee27e-1506-4336-a332-98441540a7e6"
        },
        "item": {
          "id": "d82d1936-ffbc-4c6c-9064-264b24ecd2d9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c9202334-e3f5-4b7e-9ef8-4b3191ac5aa2",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "f33c2c01-8c4e-4fbb-9f2a-036add898cb1",
        "cursor": {
          "ref": "1f11dab1-bab8-4f30-82e3-1f79b447be3a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2a7940f0-0b92-44f2-a9f2-f6407c0e9db4"
        },
        "item": {
          "id": "f33c2c01-8c4e-4fbb-9f2a-036add898cb1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "98686aa8-c1eb-408d-9ee9-e5b4aaa19904",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ed06bc15-b94b-4438-8ba6-d0f81a09569c",
        "cursor": {
          "ref": "4ff4c35c-5849-4f5b-ad95-9368ad82531c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6a5a91bc-dd7a-4093-b5d1-3a3f832f6536"
        },
        "item": {
          "id": "ed06bc15-b94b-4438-8ba6-d0f81a09569c",
          "name": "did_json"
        },
        "response": {
          "id": "858a272a-b227-4a65-99c3-ae3caed3b0db",
          "status": "OK",
          "code": 200,
          "responseTime": 242,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45af38a5-6c21-407d-a4be-1d4d6e4e9861",
        "cursor": {
          "ref": "30fc8be1-9207-462c-b5b1-0bee27ee5c07",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3935d1c-173a-4cde-bda2-f7583a064616"
        },
        "item": {
          "id": "45af38a5-6c21-407d-a4be-1d4d6e4e9861",
          "name": "did:invalid"
        },
        "response": {
          "id": "090d9696-3a27-4c9b-bec7-91d51a08dd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45af38a5-6c21-407d-a4be-1d4d6e4e9861",
        "cursor": {
          "ref": "30fc8be1-9207-462c-b5b1-0bee27ee5c07",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3935d1c-173a-4cde-bda2-f7583a064616"
        },
        "item": {
          "id": "45af38a5-6c21-407d-a4be-1d4d6e4e9861",
          "name": "did:invalid"
        },
        "response": {
          "id": "090d9696-3a27-4c9b-bec7-91d51a08dd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846d0d6b-9bf5-4eca-a8a4-3c75711752ac",
        "cursor": {
          "ref": "ff75562c-fb57-4614-99fa-2afa4beb97ac",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "396543c1-83e2-4b56-af7a-fbe80e923864"
        },
        "item": {
          "id": "846d0d6b-9bf5-4eca-a8a4-3c75711752ac",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "478a9761-9bef-46e9-b0e2-0a84cde4b004",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7415d069-af3f-46ee-abee-5480476140f0",
        "cursor": {
          "ref": "c39ea759-f292-4c83-960e-638c14118a44",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "82aa54e1-ffd3-4a87-88d2-27d5830118d9"
        },
        "item": {
          "id": "7415d069-af3f-46ee-abee-5480476140f0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7667dc3e-a1bc-4a17-8cb0-9e107e15b091",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1507f16b-c969-4fae-a68a-d5b51f7b13cd",
        "cursor": {
          "ref": "24ca128b-cd6d-44fc-a3f3-36b7e8faa445",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f7204b44-c062-4139-a672-1fe3e1e9bcdc"
        },
        "item": {
          "id": "1507f16b-c969-4fae-a68a-d5b51f7b13cd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "668a2c6a-b68e-4f01-8bbd-3b51333bacb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ec6edb-a508-4d1c-9049-c2b9b0d4b35c",
        "cursor": {
          "ref": "3132da12-a8c3-4473-9ef0-936ed4da7fd5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1adeb314-e428-4a0a-8e81-99baab8158bd"
        },
        "item": {
          "id": "64ec6edb-a508-4d1c-9049-c2b9b0d4b35c",
          "name": "identifiers"
        },
        "response": {
          "id": "3ae42e4b-61b3-4179-8cef-f37aef6bace2",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c5b69f-05b7-4b91-ae54-9f73dccabbd1",
        "cursor": {
          "ref": "f9e3e57b-435c-413a-bda8-20d5c75d3e17",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "82e00bdf-58e4-40d4-ab80-e78467f04ca7"
        },
        "item": {
          "id": "f1c5b69f-05b7-4b91-ae54-9f73dccabbd1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0805868d-56a6-46ae-a289-d1534735267a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dda309f-f442-42d6-b5ae-efbd7cdda517",
        "cursor": {
          "ref": "a6a62576-cc26-40bf-9f79-64cc8a9acd31",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bc5106e8-35c5-41ca-9304-8d731a86c027"
        },
        "item": {
          "id": "5dda309f-f442-42d6-b5ae-efbd7cdda517",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4f445884-0f98-427a-ae9f-2cf907d3eda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4395fdbb-a7bb-4c23-9013-85ee64f28d1e",
        "cursor": {
          "ref": "12d4a422-719a-4de9-8e85-8891b66b4fda",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "62bb16f6-a496-44d4-8d3b-c0ae5fb25902"
        },
        "item": {
          "id": "4395fdbb-a7bb-4c23-9013-85ee64f28d1e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1ddcbeb1-36de-4c12-8cd7-176d4ee71781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bec3873-1e86-48b7-bf8c-e99ad8de4bf2",
        "cursor": {
          "ref": "76c83572-0473-43bd-929d-d589011aab46",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d6bcb927-b3f1-4389-9b17-0deffee2731d"
        },
        "item": {
          "id": "3bec3873-1e86-48b7-bf8c-e99ad8de4bf2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ba087fa2-d3e6-4878-95f4-d1845b6e303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02802dcf-3747-42b1-946a-90c0b9cc9496",
        "cursor": {
          "ref": "2c954876-ff04-4f71-b6bb-9683850e5143",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0997adbf-353f-4896-85ff-7f5c66364ef7"
        },
        "item": {
          "id": "02802dcf-3747-42b1-946a-90c0b9cc9496",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dc05123a-deab-4e12-b522-847ac2e9f1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12d417e-d432-43ef-84bd-3060985b47c5",
        "cursor": {
          "ref": "dacb695b-941a-4973-892a-d60df97a764a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8674f42b-a059-42de-b324-47a1bd8f8f47"
        },
        "item": {
          "id": "b12d417e-d432-43ef-84bd-3060985b47c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "625c8041-21ed-4385-a2fa-6bbbdf8638f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418ddeb0-04e4-4fae-a541-4369a6210693",
        "cursor": {
          "ref": "5fc0d8a8-8b74-44de-94fb-af80c3cfad3e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "38e0bfa8-90da-46d6-b762-d29dac9a0804"
        },
        "item": {
          "id": "418ddeb0-04e4-4fae-a541-4369a6210693",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "15abae98-42a3-4077-b743-ef3ffdd4fd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defb0f91-b786-4e3f-971a-148c1aa19137",
        "cursor": {
          "ref": "9c2f41e1-0a88-4640-9261-711ffcdfdb85",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5df826d7-09f8-45a2-bc42-4a0141327039"
        },
        "item": {
          "id": "defb0f91-b786-4e3f-971a-148c1aa19137",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ed4f7a9d-4187-4fff-8c71-610f7c403152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8200a86-2ca5-420d-964a-d521ce896dfa",
        "cursor": {
          "ref": "615d0874-085e-41b5-b954-06ac407f4cf9",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "634824e6-3010-4f8e-95b8-77b941b158df"
        },
        "item": {
          "id": "b8200a86-2ca5-420d-964a-d521ce896dfa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d4ffced4-e4f2-4190-97fb-685bdaac0576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957f4575-97e0-4391-9daa-d3a7905e5dcc",
        "cursor": {
          "ref": "4b436dd4-3b44-431b-825b-2c639c8f8e07",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dd91f98f-e412-4819-a45d-6ccd06c1fc59"
        },
        "item": {
          "id": "957f4575-97e0-4391-9daa-d3a7905e5dcc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "35ffc68d-179b-4ca3-9ceb-89285f167032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b278b9-e309-46a2-b5be-2f8a7cee7946",
        "cursor": {
          "ref": "665d79bd-7963-4cc5-8b17-85ff90973baa",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "99d9d048-b08c-437e-82c1-058fe86b9980"
        },
        "item": {
          "id": "83b278b9-e309-46a2-b5be-2f8a7cee7946",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c9bc00a0-f0fa-4b08-acb8-06236fa40f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfbe403-5ad5-4b4b-8480-5e42fcc7cfce",
        "cursor": {
          "ref": "d90cb019-b4fb-488e-8362-95fec4bc7b38",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6ed3a2b6-a74a-459a-a0ac-d6b183a24413"
        },
        "item": {
          "id": "7dfbe403-5ad5-4b4b-8480-5e42fcc7cfce",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f257604d-3546-4684-99eb-1304e838a532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b69b5a-9e26-42ee-8f0b-f804069f96a1",
        "cursor": {
          "ref": "207f5172-03ba-49f8-adc1-d7860c6f4661",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "03fc653f-c7e6-4697-9f25-91a5a33f8729"
        },
        "item": {
          "id": "30b69b5a-9e26-42ee-8f0b-f804069f96a1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "da25854f-d760-4ff3-88ee-0524a755d50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7e6177-88cd-4aa3-bd3a-8e9c21a9cf5a",
        "cursor": {
          "ref": "32abd8ac-e1aa-447b-b1ec-b4a2d68a9dcf",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b613db7f-3c0e-47f0-a7e5-3ee91ae37881"
        },
        "item": {
          "id": "ab7e6177-88cd-4aa3-bd3a-8e9c21a9cf5a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f09971b0-af52-4be4-b13b-97cc18f34a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681e5724-98dc-47e4-a79c-ba500eca0901",
        "cursor": {
          "ref": "ed79ff54-1ea2-49ed-8dc5-ed910b06438c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d3ce7f79-09ae-4016-a4b2-2fc2836a1e80"
        },
        "item": {
          "id": "681e5724-98dc-47e4-a79c-ba500eca0901",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "023b388e-8812-4aff-b209-b60b1fc63023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ede0ec-510f-40b0-aec4-54abd8bc0d6b",
        "cursor": {
          "ref": "2fdb242c-458d-47e6-954b-c786bdc5c2e3",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9f82ab27-c1f3-4148-96b4-4839dec993e6"
        },
        "item": {
          "id": "e5ede0ec-510f-40b0-aec4-54abd8bc0d6b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6b91a1b6-ed23-4698-9611-80cd76f3890b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561edb17-2508-4859-9e5c-7eb6059c002e",
        "cursor": {
          "ref": "651c1ad1-4d6e-41d1-864c-1000ae1b76e4",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "690c7f86-93a3-42cf-aa0d-6ca733946dd1"
        },
        "item": {
          "id": "561edb17-2508-4859-9e5c-7eb6059c002e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3216da06-34c5-4e52-b43d-c9c0b5dbee6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91c29e9-ecaa-4d58-a2b8-27cd9bdf1de3",
        "cursor": {
          "ref": "2dd1f7f9-c876-49db-aa49-b9ad3e21b9d1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0e4919ad-57d0-4889-bdc4-d4de05c2fca9"
        },
        "item": {
          "id": "a91c29e9-ecaa-4d58-a2b8-27cd9bdf1de3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f69c710f-d14b-4fab-b627-3da3f9469b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5acf78e-0211-400e-8ac0-69ce89a28f85",
        "cursor": {
          "ref": "d06b93d2-d363-49d9-aee0-03378f857924",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b4dc1bb9-f9dd-4441-985e-6564b5e51e36"
        },
        "item": {
          "id": "b5acf78e-0211-400e-8ac0-69ce89a28f85",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "36795cc9-f3cd-4d14-b30d-d8b1a6274b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a094e95-e603-4049-911c-95288aac5f0c",
        "cursor": {
          "ref": "601142cb-8003-428c-a609-38b38324f256",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0247bdba-ced0-4418-ab97-21118ba265c5"
        },
        "item": {
          "id": "9a094e95-e603-4049-911c-95288aac5f0c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ba266b10-cb3b-4ee8-afef-73a4a2e1deef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c703827-f4e4-447d-ab6e-9fa2ffc17381",
        "cursor": {
          "ref": "a48ba9e4-b219-49fc-b459-dce38cc2522e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0527337d-d56c-4668-9e99-807bf4a6ccf2"
        },
        "item": {
          "id": "5c703827-f4e4-447d-ab6e-9fa2ffc17381",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "24418807-5f71-40d1-97f0-83577c5c2111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9861702c-d273-43f2-bfde-4de9eeeeaf1e",
        "cursor": {
          "ref": "845c6a68-0a3e-4db9-bcac-aea86c4a070d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "931e17b5-84b1-4f5c-80b0-38c24737314e"
        },
        "item": {
          "id": "9861702c-d273-43f2-bfde-4de9eeeeaf1e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ec7cbfa3-2eb9-446e-94bd-70f8939f5974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7080a90-8fde-45aa-b3c4-377a78e45a73",
        "cursor": {
          "ref": "d8c24c47-80b7-4272-a524-9636b7f2f432",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6c5b00c2-bc76-46a2-a6da-84e24c991d38"
        },
        "item": {
          "id": "f7080a90-8fde-45aa-b3c4-377a78e45a73",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a60de108-a3c8-493f-8e7c-d07ca1d7f449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcc8ee8-e7c8-4569-ac20-5d2c3ba88c57",
        "cursor": {
          "ref": "818285b2-e02a-4dc9-96e9-d7fc01f977e5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d65262af-882a-40a8-9364-66ac05f87167"
        },
        "item": {
          "id": "edcc8ee8-e7c8-4569-ac20-5d2c3ba88c57",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "77e59d72-f8a2-4373-9fe1-3dbc9437fa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92928697-dcf6-4337-97ed-e00ce692915b",
        "cursor": {
          "ref": "98c14ecb-abd9-4f6c-949b-9fc9655ffed3",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ca335386-a5b4-4887-b38b-7d701ff849ae"
        },
        "item": {
          "id": "92928697-dcf6-4337-97ed-e00ce692915b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4ee7370b-adcc-4ba7-bfa6-d278aaabbb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2d1e33-ecd1-4840-ae8b-51608fba5433",
        "cursor": {
          "ref": "f5390f1e-086e-49ba-a3c7-2c940e08c9a3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2cd927e1-12d9-404f-a0d3-d90350a534ae"
        },
        "item": {
          "id": "ba2d1e33-ecd1-4840-ae8b-51608fba5433",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4823d0d5-4619-400a-8d97-77ca8e1ff1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d50315f-643e-40ef-b62e-052bcb6dcc5e",
        "cursor": {
          "ref": "38531cac-2ffd-4f7a-8ca9-d0feb1809ec8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f9d3a006-0051-491c-8837-73d145fe7489"
        },
        "item": {
          "id": "9d50315f-643e-40ef-b62e-052bcb6dcc5e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "704a8a71-d6b6-4a13-8d49-a74016f1f033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bc040b-59cc-4f0a-ac1a-6e74b5998a7e",
        "cursor": {
          "ref": "e87143a7-729c-42a8-a1af-bc5f08b1a331",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1c6d85ed-66f7-46f3-ae11-369a6267edc6"
        },
        "item": {
          "id": "a4bc040b-59cc-4f0a-ac1a-6e74b5998a7e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5844d29c-5164-420d-8573-6367000768ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4e5f99-17a2-4545-8916-186a601aa961",
        "cursor": {
          "ref": "1400aee8-21cf-4702-99e4-4126e914934a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cd0fa406-74c6-42c4-ad37-b8555a25c1bf"
        },
        "item": {
          "id": "ac4e5f99-17a2-4545-8916-186a601aa961",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "65c9498d-af00-4cbd-8160-607c4d04b4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5f1d3d-e226-4fc4-8163-7549c6789e75",
        "cursor": {
          "ref": "7542e4db-2ad0-438a-8c52-c788e20a7ddd",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1eff7aa4-3b90-47d9-b335-8effc99c0c6c"
        },
        "item": {
          "id": "9b5f1d3d-e226-4fc4-8163-7549c6789e75",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "90332fec-979c-4ab9-9520-1613fbd02790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be761f50-e2fb-4ff9-9919-62400f8b7890",
        "cursor": {
          "ref": "f6df437c-010f-4fa7-87a9-0d5596fb0f42",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d7c4f147-3417-4974-a2ea-58c532fa77eb"
        },
        "item": {
          "id": "be761f50-e2fb-4ff9-9919-62400f8b7890",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "07b7f728-d93d-40c8-b3e3-5620b1e575f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a18d52-7bfd-4ea0-9b9d-01b6929ae3fc",
        "cursor": {
          "ref": "6d84ec62-394b-4f20-bee5-245e64586f4b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b9608cf1-3f28-4ab8-9c3a-99ced9eafeb7"
        },
        "item": {
          "id": "32a18d52-7bfd-4ea0-9b9d-01b6929ae3fc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7c090645-be7f-469f-bc1f-5d6246b8b198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7ed3a8-21dd-4cc1-9dff-5f27f99b6eab",
        "cursor": {
          "ref": "8b84b824-f079-4d99-965b-51e783fc4529",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7c7af7e4-0fd7-49a8-89bc-1c33bc0b0032"
        },
        "item": {
          "id": "2c7ed3a8-21dd-4cc1-9dff-5f27f99b6eab",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "77ca3105-52a5-4c4f-a62c-518879210fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beade186-d163-4f52-833b-af3b20f25de7",
        "cursor": {
          "ref": "6ce7d234-a378-48cc-a17b-0ddf7f930903",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "128f5a3f-0019-4761-8561-ae1fccf409c3"
        },
        "item": {
          "id": "beade186-d163-4f52-833b-af3b20f25de7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6f7118fc-af41-4408-b100-52638befea36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62a8a98-e2a4-4a8b-8a0b-750926c6a40c",
        "cursor": {
          "ref": "5c8ff40b-ab34-4544-a607-d11e6f4a14d0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "17752189-d276-4289-9338-983b3ffd162f"
        },
        "item": {
          "id": "b62a8a98-e2a4-4a8b-8a0b-750926c6a40c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7e04f457-a533-4c7a-8646-8164b5d8d23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c1b061-cc60-487e-8b7e-ad1b7890eded",
        "cursor": {
          "ref": "790c2ff5-4030-42eb-a464-a80111e94a10",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f23b14b8-4439-4e57-8082-eed9375834cf"
        },
        "item": {
          "id": "33c1b061-cc60-487e-8b7e-ad1b7890eded",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "32df8fd7-ab9c-486f-848e-614c1de049d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f66b9c-768e-4639-a0c5-7522003a4b58",
        "cursor": {
          "ref": "668ab674-9ace-48c5-8a42-96c66cf64973",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eab7eb94-65ef-464e-bbd2-cd6b6ffc86d2"
        },
        "item": {
          "id": "99f66b9c-768e-4639-a0c5-7522003a4b58",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "891493af-d625-43b6-97ac-25f900e1e556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121f41f7-23cf-4777-80a0-2edc7d7b4128",
        "cursor": {
          "ref": "9c1f59fc-e853-43c9-b33c-a5e284c104f8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5d9346eb-3eca-4626-8735-dbb1d4c1ff9c"
        },
        "item": {
          "id": "121f41f7-23cf-4777-80a0-2edc7d7b4128",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "38192640-dfc3-4f17-9b33-762896c48cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c457f48-5190-420a-8847-f444738c1621",
        "cursor": {
          "ref": "77efca03-7bf5-41bd-b464-6be3a8dc0e27",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5891954c-3949-48f0-b817-2ca9e8ca884d"
        },
        "item": {
          "id": "0c457f48-5190-420a-8847-f444738c1621",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f396d7b0-8101-44a1-9810-ccb122fd25b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614cf9c0-f631-4638-acd3-6f8c8170ddc9",
        "cursor": {
          "ref": "39e89d64-f55f-4e1e-a196-4a7306719818",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4813ca0c-b828-43aa-a870-f26cde0dad21"
        },
        "item": {
          "id": "614cf9c0-f631-4638-acd3-6f8c8170ddc9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e6103ee2-8036-43f1-8fc2-3e2d49178411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b028a3-82b2-437f-9700-97367b756749",
        "cursor": {
          "ref": "b07c9b32-793c-46ee-8ba9-1be7a0052175",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0307a919-5435-4df5-9a14-fc4ee5500d9d"
        },
        "item": {
          "id": "89b028a3-82b2-437f-9700-97367b756749",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1cf9bc15-7f4e-4da6-b80b-1d293c0a209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c635851-e6a4-4c0c-b869-dbcc0b02792a",
        "cursor": {
          "ref": "8efab6be-db90-4555-98ef-f4ba6193fbfe",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dd2705a2-12ea-4093-bb82-0cbd71dce4c2"
        },
        "item": {
          "id": "5c635851-e6a4-4c0c-b869-dbcc0b02792a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0dbe7fc0-5852-4221-bf7d-ed1e27b4f9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e462b1c4-616e-4975-b3b0-bb09217018e8",
        "cursor": {
          "ref": "8c7453ea-a449-4c32-af8b-dbb93ed9063f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6b7f8f45-ebcf-4a3e-ac2b-9887d68de945"
        },
        "item": {
          "id": "e462b1c4-616e-4975-b3b0-bb09217018e8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2c2c0bec-1c01-4adc-a8ce-e540a252deb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb7fc03-efb2-46b3-85c5-8396a844ad8f",
        "cursor": {
          "ref": "f90c913b-b833-45bd-b42d-1cd379e7c85c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3218d95d-8d81-4d85-9fd5-99a4deb4508c"
        },
        "item": {
          "id": "ceb7fc03-efb2-46b3-85c5-8396a844ad8f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "21acf557-7903-4690-ab61-df09cb5322da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e994be2d-c4b0-4431-8f47-30375ee9a64c",
        "cursor": {
          "ref": "9345ca45-71a9-4743-a439-16ddd19b4f35",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "adc2cace-02ba-4e2d-95a8-dc4491c244ec"
        },
        "item": {
          "id": "e994be2d-c4b0-4431-8f47-30375ee9a64c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "efd905a0-c178-4a71-bcc1-a5b88e2fc85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bfbdd6-f938-48d5-8a84-9e42be99f1bf",
        "cursor": {
          "ref": "2f5a59dc-5fcf-4334-b911-f08dd47369c4",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b9466511-ab36-4220-9dad-61643362d0af"
        },
        "item": {
          "id": "97bfbdd6-f938-48d5-8a84-9e42be99f1bf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c09d4516-f642-43f3-b070-ea375c4e8f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54fce06-e955-4397-80db-bd24b64646d9",
        "cursor": {
          "ref": "860f2e86-64aa-41f8-86a5-89c4b6bc8327",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e7cde692-cb9f-42a7-82ea-8500089b56e3"
        },
        "item": {
          "id": "f54fce06-e955-4397-80db-bd24b64646d9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1117c3ac-6e84-4f5d-b0c0-339393cfa97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d31052-0e07-4fb1-935c-c6e7b9f455ae",
        "cursor": {
          "ref": "edca48c9-88d6-4721-b4f6-229afc9b49df",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7aca2362-eec3-4b91-83dd-b49490377691"
        },
        "item": {
          "id": "f7d31052-0e07-4fb1-935c-c6e7b9f455ae",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ffec4f04-0dfa-48a3-b3bd-93ea540c7c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fc0f45-8aef-4dc1-99be-5d35c8811d38",
        "cursor": {
          "ref": "82430480-5c24-402f-9c6a-89a748dd78b7",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eff67f3c-bcae-4ed5-ac5d-75b53fea3011"
        },
        "item": {
          "id": "47fc0f45-8aef-4dc1-99be-5d35c8811d38",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b24c96bb-a752-409d-8730-d4a070c608c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af296eb-7a6a-4acb-aeb1-c2fcf01f654e",
        "cursor": {
          "ref": "10558003-28df-4d18-82e7-2081335dbe45",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "48b752cd-3161-42fc-937e-841e82a4cdc2"
        },
        "item": {
          "id": "4af296eb-7a6a-4acb-aeb1-c2fcf01f654e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3bf5f3e0-a458-459d-95a5-37200cec9335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc915aa4-a655-42c7-9d51-74f87d0b73fd",
        "cursor": {
          "ref": "4f2e65ff-5a4c-4811-baf3-5c45ddaf7e0a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d0cf5b20-eed3-4d5a-b9c4-1ebc61605eea"
        },
        "item": {
          "id": "dc915aa4-a655-42c7-9d51-74f87d0b73fd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1a915238-0822-4655-9373-e7e8fe24e552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dda7a27-f43c-44d5-9154-c6e51285fb59",
        "cursor": {
          "ref": "8fc3d9bc-b701-42c0-af92-184bf43cc51d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9fbe96a7-3c0d-4187-b8e0-d1533e6c9702"
        },
        "item": {
          "id": "7dda7a27-f43c-44d5-9154-c6e51285fb59",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ce20120c-2601-4d62-9b49-e39009592993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e562a8e2-68f3-436c-a869-5c3c763bac04",
        "cursor": {
          "ref": "2a29bd70-c881-4336-99df-c93dda6bb960",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9d3f7f71-7e5e-485c-b0e0-fd63fb428699"
        },
        "item": {
          "id": "e562a8e2-68f3-436c-a869-5c3c763bac04",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "baecbfe0-f260-457f-883a-83469f011856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69267f2b-bc85-439c-b819-8f0690022e03",
        "cursor": {
          "ref": "395b0371-2b04-4e06-aac0-c1ea5688b1b3",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9cd74cb6-99b6-4417-9cf5-2bf40148389e"
        },
        "item": {
          "id": "69267f2b-bc85-439c-b819-8f0690022e03",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e5f8336e-824a-4071-9c62-d6a08b0029bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba89b4d0-cdf7-49f6-b701-081c3799fa79",
        "cursor": {
          "ref": "e626ccfa-7ac1-404a-9ee0-a4de32986b74",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1847b90b-b2ea-4e17-b82d-741d9c99330a"
        },
        "item": {
          "id": "ba89b4d0-cdf7-49f6-b701-081c3799fa79",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "82c4a661-e9d0-4bd2-982f-71b8f364005d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a251d793-9da7-4edf-b34b-6f4e6e162ba2",
        "cursor": {
          "ref": "d9a2ef28-0d77-48a5-9e2d-e7abeec62f76",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1a4e06d3-ea49-4daa-800f-b255cd9b489a"
        },
        "item": {
          "id": "a251d793-9da7-4edf-b34b-6f4e6e162ba2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0399fe9b-c0d3-477e-bbf0-431c86325ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4cf8d2-a124-4455-b3f7-6b6768da3685",
        "cursor": {
          "ref": "700aaaf6-6e76-49ee-b039-9fc39a36224a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b68e03ae-6a28-47a0-aaaa-8e064fa64c96"
        },
        "item": {
          "id": "ef4cf8d2-a124-4455-b3f7-6b6768da3685",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "54d59d25-c1e4-42cb-a1a1-e8ea09fe9e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dd224e-0cc4-4767-afee-325599aff2b5",
        "cursor": {
          "ref": "eb31440f-340b-4e50-9281-fd766e376db0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "417dedc7-07f5-431e-910e-9383b460692c"
        },
        "item": {
          "id": "c7dd224e-0cc4-4767-afee-325599aff2b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "220997e8-7e7b-4546-8d5a-4b88cd49ce1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dc7f7b-f11b-410a-8b39-988824b53200",
        "cursor": {
          "ref": "bade4b82-eb20-446e-87e8-a9b9e28f116c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d8c31328-9ef7-4c1e-859d-774acfd7db32"
        },
        "item": {
          "id": "88dc7f7b-f11b-410a-8b39-988824b53200",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "21cb9e80-6e9f-48b2-8a78-17f9aab3faff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25745c3-4a64-462c-8c8e-d7ab4229a5a6",
        "cursor": {
          "ref": "e2370eac-80ad-4d81-8b86-6c8da73e1f69",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cc7690e8-a4c9-455a-8608-987139a8be8e"
        },
        "item": {
          "id": "c25745c3-4a64-462c-8c8e-d7ab4229a5a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "04cf2c62-61af-4bfb-9dad-a8d4a72d6d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2472a5ab-a19b-4713-a860-4fceade63d8d",
        "cursor": {
          "ref": "e681ea20-61e6-48ca-aa94-797964eb5d7f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1c9a6f5f-354b-465c-878e-57cdacbe90e6"
        },
        "item": {
          "id": "2472a5ab-a19b-4713-a860-4fceade63d8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9eaa1648-2a9f-45e8-8755-7bd3e7c96fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce9348b-0515-4f87-921c-39d71c39dcdb",
        "cursor": {
          "ref": "62c47a85-28ca-44bb-a139-893d1c69d2a3",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1678af55-d1d4-4ad2-94cb-b4472f37a2b4"
        },
        "item": {
          "id": "dce9348b-0515-4f87-921c-39d71c39dcdb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e883be40-5985-4800-81d1-d2cdf6238ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933c7822-b6ed-4412-a640-a9384af5ed11",
        "cursor": {
          "ref": "b4886a60-a188-4041-83a1-28eb0104a089",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f32c05d8-6a15-42c4-823c-709ceb4040b8"
        },
        "item": {
          "id": "933c7822-b6ed-4412-a640-a9384af5ed11",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d09a7fcf-6d1a-445d-bc26-b720efebfae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca4d07a-a986-4ed3-b6f5-027b417068f9",
        "cursor": {
          "ref": "e9243245-a102-4313-8eeb-401bd7ca8f12",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6805f9ac-ae0e-49d1-ab65-4fe1a2bcddc4"
        },
        "item": {
          "id": "cca4d07a-a986-4ed3-b6f5-027b417068f9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2eecba44-a87d-4704-9151-809bb773ecae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b52245c-be8e-487b-82f4-f8ba1847ed21",
        "cursor": {
          "ref": "8d8e502f-98cd-43c8-8355-f4f829b66b0c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "786b0ccd-0a6b-49cc-96eb-67e0831044ca"
        },
        "item": {
          "id": "6b52245c-be8e-487b-82f4-f8ba1847ed21",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e1a509bc-04e1-4f8e-8f5a-cc1c2975e398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa7485f-1666-4cd2-a099-b1eb24dbef04",
        "cursor": {
          "ref": "fa94facb-32f1-434d-af54-b31be94501bc",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d1b90543-3766-470c-b1a2-2de8da573356"
        },
        "item": {
          "id": "8fa7485f-1666-4cd2-a099-b1eb24dbef04",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8f6d5434-ceab-473d-b4f4-b4fbacb87455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f858e3-e172-4179-a6db-16fcd3ed2848",
        "cursor": {
          "ref": "cec7ef07-2364-4844-87d9-0736fecd6a3f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2e83ef83-a8d3-408c-b9ab-80f1145b8557"
        },
        "item": {
          "id": "63f858e3-e172-4179-a6db-16fcd3ed2848",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4fa5a7fd-f045-420d-973c-128c2ffe7552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95df3485-d03a-45a2-9864-fb12a84d8627",
        "cursor": {
          "ref": "24f8027f-1aa1-4660-a25a-73a1da4e97af",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c0f864c0-27df-4a34-ac9d-6f9c71682e1b"
        },
        "item": {
          "id": "95df3485-d03a-45a2-9864-fb12a84d8627",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "22fc3ab8-2bb9-4fd7-9c60-12a393e0c4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32bf7cf-6b16-42a1-be64-f30901b5d41d",
        "cursor": {
          "ref": "75b8b4b2-b5ab-4394-abb0-75c05f66bc7b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "271d9455-b7f3-456e-bdf3-115d2e3b709f"
        },
        "item": {
          "id": "f32bf7cf-6b16-42a1-be64-f30901b5d41d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e7e59f23-53f3-4cbe-93b5-6dd168a4f2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2172567-d4de-4086-8418-4cd3678bcda5",
        "cursor": {
          "ref": "14b30ee6-8dd6-46e9-afb2-e8d235636ca6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "81058e16-2af3-4f7e-8a7d-1eabe340ed5f"
        },
        "item": {
          "id": "b2172567-d4de-4086-8418-4cd3678bcda5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fd23c605-18d7-4dba-9255-189a79ccb910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4d322e-0808-4d2b-832e-ca746bb20b25",
        "cursor": {
          "ref": "9e5a51b2-64db-4253-a9e2-b1d1a5a938d6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "da6e3d51-9f0e-41f6-8701-d583900035b2"
        },
        "item": {
          "id": "bf4d322e-0808-4d2b-832e-ca746bb20b25",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a58497d1-99ab-4017-8ec8-5a015e344f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a3f991-08e5-43dc-916e-e94bad3dbcf0",
        "cursor": {
          "ref": "d1c5c42c-d7f7-4049-b020-6526441f4fc5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b8b71a12-bfa2-4be7-9c96-4d70a0bcb3ec"
        },
        "item": {
          "id": "50a3f991-08e5-43dc-916e-e94bad3dbcf0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a178f201-26af-44b5-9a83-19164d4b42ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c445db-b8af-40ba-8caa-fe70632007e4",
        "cursor": {
          "ref": "65e2b2ec-0519-467a-9569-f24e3c1e867b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c2cef932-9a3f-4ffe-85d9-9bf39c379690"
        },
        "item": {
          "id": "00c445db-b8af-40ba-8caa-fe70632007e4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "be323c79-898e-479e-b691-0f5bfd993642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffeafe3-0f4e-4ae3-a31d-ae7fc9cc0e1f",
        "cursor": {
          "ref": "2fd1d944-c37a-4782-ac30-cce5aca66bd3",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3e68f70b-c3d1-44fb-b20e-3c07a06eb08c"
        },
        "item": {
          "id": "bffeafe3-0f4e-4ae3-a31d-ae7fc9cc0e1f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3a97a604-52bd-4eec-9b1f-a3e6c7e39c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753d9bad-4f13-4801-8c64-6e2ae7f3f0e8",
        "cursor": {
          "ref": "ed054cb7-66ff-4444-b96e-b419dbed33fc",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dabebb19-8d36-41cc-9afe-1d12702065e7"
        },
        "item": {
          "id": "753d9bad-4f13-4801-8c64-6e2ae7f3f0e8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b911c3a7-305e-465f-a738-4d93211f95f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3168a63-df6f-4ff2-be48-fd8b725c7378",
        "cursor": {
          "ref": "a88ebff1-5420-4d3e-b132-fc0a6d055aff",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bba25105-4870-43fd-bdd6-9679b794cd68"
        },
        "item": {
          "id": "f3168a63-df6f-4ff2-be48-fd8b725c7378",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e3fef240-e9cc-41de-98d1-2da529d54295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a88f8b-be92-4411-9ff3-ed92fd78345a",
        "cursor": {
          "ref": "ff4a89ec-9e7b-4b99-8851-3e97c054452b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4ec90b18-2266-468e-b908-be4f5e467963"
        },
        "item": {
          "id": "88a88f8b-be92-4411-9ff3-ed92fd78345a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2d934187-b9e2-408c-9d96-7014731a7285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8976940f-6a8f-4763-a4d0-8249102f98a2",
        "cursor": {
          "ref": "7835911b-7a8e-4443-8dd4-dffdd17c4df0",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5fc7626d-d8f7-4880-a649-06e0685e92d0"
        },
        "item": {
          "id": "8976940f-6a8f-4763-a4d0-8249102f98a2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "33a6fabf-569e-4c0e-b96b-94d75e854f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168eea24-b748-4455-8d34-434465071ce4",
        "cursor": {
          "ref": "17997ac5-d6d5-4f8e-939c-e95bca8dc583",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "adeac890-9885-4d6e-8e4c-8504d39fe613"
        },
        "item": {
          "id": "168eea24-b748-4455-8d34-434465071ce4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c0dd0038-efd3-494f-8cc6-b65ae287a1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8e5b31-dc8a-4d4b-87d3-4c288a678ed5",
        "cursor": {
          "ref": "90bf154f-196f-4b4d-85e7-b1e0f04703be",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0836450e-8145-43e1-a536-cdba94cb2c5b"
        },
        "item": {
          "id": "1c8e5b31-dc8a-4d4b-87d3-4c288a678ed5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6a7c8ee4-96e8-4c92-be77-ca947b06f649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0ed71d-7b7c-4bb9-8061-022ce433b34b",
        "cursor": {
          "ref": "9a6d0408-b9fa-4ca2-b6e4-0a9c8f6da28f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "82b61f37-0d8d-4584-9ca6-424e07a8f7a2"
        },
        "item": {
          "id": "3a0ed71d-7b7c-4bb9-8061-022ce433b34b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c974f7cb-277a-4a5d-ac14-c11af00f29e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3683d7c7-ca22-4a59-89b5-2d9d4d3f6214",
        "cursor": {
          "ref": "fb813391-f24e-48af-aa6e-65bceec2b6c2",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f9f2e7ac-6686-4575-8569-94e4a6ee8075"
        },
        "item": {
          "id": "3683d7c7-ca22-4a59-89b5-2d9d4d3f6214",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1a17b7b2-288a-41bd-8e8d-2ee8ba244598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05693ef3-bcca-4708-b5b8-ce144ca5b7cc",
        "cursor": {
          "ref": "0a3c4226-8433-442b-aad2-4b778c18b40c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7c17aa49-d419-465e-9677-87dec4adc3bb"
        },
        "item": {
          "id": "05693ef3-bcca-4708-b5b8-ce144ca5b7cc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ee08c083-e8f0-4f21-b178-4fd5d274b8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68088530-2285-4c13-b723-c635ed0a2935",
        "cursor": {
          "ref": "7d297ddd-d468-49a3-9a8a-36aa4cec837b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1db23803-7417-4163-9052-d5b2b4eb0be2"
        },
        "item": {
          "id": "68088530-2285-4c13-b723-c635ed0a2935",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cfe0898b-6197-4b41-bb20-a1c3f864e092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cffa1c-0c1b-4f3e-a096-e00903b53f38",
        "cursor": {
          "ref": "795ce54e-0f61-4044-a17e-c5315a29e4f9",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fc6e3384-710d-4027-a18e-99e227e751dc"
        },
        "item": {
          "id": "d0cffa1c-0c1b-4f3e-a096-e00903b53f38",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "22a3bd07-0741-4c2f-ab36-5e866a5fde0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e18435-2b4c-4805-8d72-3e86f9551826",
        "cursor": {
          "ref": "d64e85cb-2dff-4e0d-9bf6-e1a28b58f808",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f141a8c7-a207-40c2-80ae-184db771a9d3"
        },
        "item": {
          "id": "a6e18435-2b4c-4805-8d72-3e86f9551826",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "63672cb7-dbc1-4c5e-8b0a-d07c23b48268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0bf718-845a-4b77-80ac-400b0cb0b48e",
        "cursor": {
          "ref": "a981523e-6c03-48e4-91cc-413267faf276",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9dc3ca02-7f00-48fc-b341-d1c4d2f5b97d"
        },
        "item": {
          "id": "3d0bf718-845a-4b77-80ac-400b0cb0b48e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1c380c8c-27da-4468-8c4d-c50df2a25154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5222ecc-9514-4d36-88ea-a6be8e7d5cea",
        "cursor": {
          "ref": "43be1f25-fb58-4be4-ba1f-80ecf64f9807",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "88b35f12-e687-440c-aeaf-326617f1431d"
        },
        "item": {
          "id": "b5222ecc-9514-4d36-88ea-a6be8e7d5cea",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6fbb150c-dcda-4c09-84fc-b10319af859b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fb5afc-4a09-4ca3-a073-a6beefeee0d3",
        "cursor": {
          "ref": "b113ab5e-8ffc-43a2-894d-d77a32926554",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e6122216-bb49-44f2-9ae1-6601ad3eb5f7"
        },
        "item": {
          "id": "12fb5afc-4a09-4ca3-a073-a6beefeee0d3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "80254b2e-8688-4142-80a7-c7b59b3d7451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b7fec6-8725-4a2a-9ccf-31763abd7424",
        "cursor": {
          "ref": "d9981578-2156-42ed-9126-e1f432b1f3d6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5c450314-4ef4-4fee-9e65-7dc7328fd70e"
        },
        "item": {
          "id": "e2b7fec6-8725-4a2a-9ccf-31763abd7424",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a349083a-7d57-4fcb-a81e-e6e59b5eccd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d6f882-1a3d-45cc-94a8-54b137be242e",
        "cursor": {
          "ref": "4717412e-2c26-4200-aff1-dc50e3f83888",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "11446ae9-9020-4bf7-b3c0-3f039c104d31"
        },
        "item": {
          "id": "32d6f882-1a3d-45cc-94a8-54b137be242e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "babf790b-e479-4abd-86f8-a0900fc8a4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d75ea0-a2a5-44e8-89c2-e7a6bce48c8e",
        "cursor": {
          "ref": "081d339a-4e29-4c48-98a6-8e0bad7d9c29",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c5cfab3a-074e-4795-a133-50dfb80a0ba0"
        },
        "item": {
          "id": "c8d75ea0-a2a5-44e8-89c2-e7a6bce48c8e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fd7b50e1-f9c3-4ea2-9751-75553a2c05e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaf2cbe-9491-46e9-8d4e-f9427bd68e23",
        "cursor": {
          "ref": "03b28151-c273-4e23-8fdb-23cc8ae9c654",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3f9774f6-9375-4b1e-a85f-973aa8f1532c"
        },
        "item": {
          "id": "ebaf2cbe-9491-46e9-8d4e-f9427bd68e23",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "438fb127-09e9-4f63-9f8c-7016b5f19f4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c18fd3-e002-4d4f-9c67-d8433cee5e2f",
        "cursor": {
          "ref": "943075c6-e514-4caa-b2e2-548af447921c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "33305070-4a06-4b4e-a50b-fb91446f4af1"
        },
        "item": {
          "id": "90c18fd3-e002-4d4f-9c67-d8433cee5e2f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "94c21f8c-0d32-4d1b-9c9a-38e85341a6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2bed3dc5-04e0-4ade-b5b4-9f4740f294ca",
        "cursor": {
          "ref": "b7b39099-8277-4ca2-8016-6a421a2c4ad2",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0be8eebb-e108-4853-94f9-b799312ae351"
        },
        "item": {
          "id": "2bed3dc5-04e0-4ade-b5b4-9f4740f294ca",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d2cdef10-6e79-43d2-b490-d6a9842be5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e8e837fc-32bb-48d7-bd32-fdedc547f652",
        "cursor": {
          "ref": "d6ce1fd4-eeaa-44ea-9c0a-742924a95c2c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "282da591-c0e2-42fa-9ba4-097e2d2b9f15"
        },
        "item": {
          "id": "e8e837fc-32bb-48d7-bd32-fdedc547f652",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ff2a9a9a-f75e-4424-a4b4-48fa7785f507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bcd4626a-8da3-4381-a587-f70e7d7b986d",
        "cursor": {
          "ref": "01a79414-1c8a-4542-8f6f-edf3ecaae87f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1e5db969-4d84-4933-91da-6132651f4bc0"
        },
        "item": {
          "id": "bcd4626a-8da3-4381-a587-f70e7d7b986d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b1cc4420-e725-4393-b46b-761ca00f58ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "99440dd7-370f-45c9-b484-2390abcf4947",
        "cursor": {
          "ref": "9b845591-63dd-4995-93ab-cddab7f75959",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e35e318a-cd01-4434-b75b-53bfb0252dac"
        },
        "item": {
          "id": "99440dd7-370f-45c9-b484-2390abcf4947",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "43f318b7-5417-4a2f-a5b5-83b0304efdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a8b62de1-0bcf-4cd1-ae25-504c42740c2d",
        "cursor": {
          "ref": "4b321b8a-49e1-4218-9932-7bf58f48f865",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a2b0068e-9ac5-4db0-94b5-7c6243ef73be"
        },
        "item": {
          "id": "a8b62de1-0bcf-4cd1-ae25-504c42740c2d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9573f623-02ae-4861-9cbb-0802954a0f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e89b18ca-b78e-485d-a4a3-ece3c0091f6f",
        "cursor": {
          "ref": "421aebc7-281a-4408-bbc5-f0da8f7068c4",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d03f6b7e-190c-4d4b-be56-3c9b67e4963d"
        },
        "item": {
          "id": "e89b18ca-b78e-485d-a4a3-ece3c0091f6f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0670153a-e58a-438c-8cab-cd1d55e7c0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "cc89ee50-79e9-47b4-8f68-aa5c70c76791",
        "cursor": {
          "ref": "15c08312-7bec-4b23-93ec-59b01558050b",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "66e78872-70b8-45ba-91f6-6f3c9571cf51"
        },
        "item": {
          "id": "cc89ee50-79e9-47b4-8f68-aa5c70c76791",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "85ba2dfb-ddd9-4da8-98e2-b58e9731e659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014f2443-4e45-487f-b8c9-28d5bf2463a7",
        "cursor": {
          "ref": "34b8be12-b9eb-4343-b163-6245765f939d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5f9aacb0-cf5f-49fa-b396-6fbda34dfdc8"
        },
        "item": {
          "id": "014f2443-4e45-487f-b8c9-28d5bf2463a7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "08ba5bd0-3d3f-4c24-9272-e22b9ee4bdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fc5ef3-1e9e-40eb-a570-aa3eeeb0e8d2",
        "cursor": {
          "ref": "48b0359d-2b51-4290-9b11-0a1adb74cee6",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bfd8d10a-89b4-443d-917d-77c8abd330e9"
        },
        "item": {
          "id": "c7fc5ef3-1e9e-40eb-a570-aa3eeeb0e8d2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6546a602-30f7-4f96-a0da-23037a8ee936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d60c2c-e7ad-413d-8dc0-7617b4ed4b99",
        "cursor": {
          "ref": "098a276c-849a-478d-9fb9-fbe621105b61",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3f365f3e-0855-4e2b-b982-94fd5976ad7c"
        },
        "item": {
          "id": "49d60c2c-e7ad-413d-8dc0-7617b4ed4b99",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c9bdca40-581c-4de0-b5cf-a93d76131292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54e83c1-8a70-495f-b328-86c84d9ba0fe",
        "cursor": {
          "ref": "f31338e2-057e-4bd9-887f-c68bfd234711",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fead38c1-23ba-4b36-8761-846970a667d3"
        },
        "item": {
          "id": "c54e83c1-8a70-495f-b328-86c84d9ba0fe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9a580d06-70ab-4375-b768-92b60e62c3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f85752-d679-4ab8-855f-311b486f83b7",
        "cursor": {
          "ref": "4fc43c35-cc06-4c1b-8617-dc1f99a7b18c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5c6e3fbc-8f86-4929-a4e8-a18c6a02a1ec"
        },
        "item": {
          "id": "e1f85752-d679-4ab8-855f-311b486f83b7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "88bbb867-52fb-483d-a336-3639f711fadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229e25b5-17b0-40f5-9ae6-846e8c9422bc",
        "cursor": {
          "ref": "4bb9819f-5e2d-4750-8af9-011018d4e1b5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2877690b-b5e6-4727-b434-cdd0c612c259"
        },
        "item": {
          "id": "229e25b5-17b0-40f5-9ae6-846e8c9422bc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "92303568-9e59-451c-a6f0-d8d684897106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dac18e-371a-4be7-bb6e-89fae20c12a7",
        "cursor": {
          "ref": "9d99517e-96d2-412e-9bb8-3ef73bdeb01d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f2bca758-2c9b-4168-a88d-94ad2f1e969b"
        },
        "item": {
          "id": "76dac18e-371a-4be7-bb6e-89fae20c12a7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1d4da83a-0d7c-40c7-afd4-a7e237620a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf304f50-35c0-40b5-9907-1c7e1e26e7a6",
        "cursor": {
          "ref": "e2577d61-fe8d-421c-afbe-06581b22f9d3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5232cd6d-5f4a-4d70-9c9e-addc35ef1a2d"
        },
        "item": {
          "id": "bf304f50-35c0-40b5-9907-1c7e1e26e7a6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0999aa09-6f6b-4877-9110-e354c28e52f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961b0de3-8fb6-4599-ba73-48c72c487f3c",
        "cursor": {
          "ref": "1ff0ea8d-2dbe-4a72-8fd8-7a26aece4b92",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cf3efaff-5af0-41c0-a3d7-cb46485e7e96"
        },
        "item": {
          "id": "961b0de3-8fb6-4599-ba73-48c72c487f3c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4cab6a02-f509-47d9-b07a-967a03d446ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dadb65-5add-4cd3-9b49-519b6ff03bdf",
        "cursor": {
          "ref": "e0de7336-6312-40af-b0c1-ca2a2ce90b46",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cbbfb8f3-7138-4907-9c00-164f3559d5a9"
        },
        "item": {
          "id": "38dadb65-5add-4cd3-9b49-519b6ff03bdf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f40464c7-925d-4372-ae03-6ee07a281bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a266e950-1d29-4928-bc0d-b572c0895c7c",
        "cursor": {
          "ref": "0d23ab3e-b8ec-4913-89d9-0af540536c46",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e0a4950c-1ddd-4cb5-9c56-77fc20f330f6"
        },
        "item": {
          "id": "a266e950-1d29-4928-bc0d-b572c0895c7c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd0455c8-a2d7-4626-8ff5-353998538588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e0c3cf-442d-4626-b397-295080d7668c",
        "cursor": {
          "ref": "216aca7d-0e59-494b-80c9-3678c5a909e0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bb67b01d-4c7c-4851-8c5b-58356c0154df"
        },
        "item": {
          "id": "99e0c3cf-442d-4626-b397-295080d7668c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a05645b1-25c1-43fd-b329-940bfb3a9648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7172c069-86c6-48a9-8e8f-dce7e4bb795d",
        "cursor": {
          "ref": "2f19924a-6e47-47d0-a758-db7f1c5f10e2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "403a97ac-59bf-46cb-b4e4-a90fc7685445"
        },
        "item": {
          "id": "7172c069-86c6-48a9-8e8f-dce7e4bb795d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d6ec8cfe-81a8-42b4-9fe1-1ba796e3213a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fbadbb-0862-4efb-9579-62dfe0476384",
        "cursor": {
          "ref": "28bc3159-4482-419a-935d-27b386a933da",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "41ee7c83-5ea4-48bf-bf4e-230a0d9d6588"
        },
        "item": {
          "id": "e7fbadbb-0862-4efb-9579-62dfe0476384",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b8d06451-63fb-48a2-ab1a-be2750ebde9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44b0f10-1b4b-4b9b-906d-90505f0b8536",
        "cursor": {
          "ref": "b117ade3-d49c-44b7-9f26-0d62834eab1c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "61b1b9b7-c304-49c7-a14d-8df677345d6c"
        },
        "item": {
          "id": "e44b0f10-1b4b-4b9b-906d-90505f0b8536",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f5a01d8c-4ecc-4847-bf58-27dc32544dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d485133-63ed-4fd9-a602-c94512f7a43f",
        "cursor": {
          "ref": "767043a4-3998-45ef-9ed3-d9cd980e04af",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "69bee221-746c-42a9-a89a-cc8b17892de1"
        },
        "item": {
          "id": "4d485133-63ed-4fd9-a602-c94512f7a43f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "23fff581-bbea-4146-8fd4-80084fc86c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c7bdc6-7fd5-43ca-82c2-8ca6c9db27bb",
        "cursor": {
          "ref": "c9411f9e-147b-4bad-8e06-bd895246410e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c02c9176-7649-48ca-96e3-01eabb04fdbc"
        },
        "item": {
          "id": "96c7bdc6-7fd5-43ca-82c2-8ca6c9db27bb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "98ea0d1f-5d68-479f-a69e-1f30403e5dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195b0a09-6186-47c1-ab3c-1ca94eb8a567",
        "cursor": {
          "ref": "b747ef04-9fd0-4f7d-83a2-27d854af6db3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "06fb112c-efc1-4118-8167-4474f8125525"
        },
        "item": {
          "id": "195b0a09-6186-47c1-ab3c-1ca94eb8a567",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a40e737d-16cf-49f7-a7e6-1931614a23f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c459494f-73cb-4b90-befa-6b7d970502ad",
        "cursor": {
          "ref": "a5e84144-900e-4ca4-a7c8-a4847ea3b449",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "86748beb-9923-49e6-aab8-e745f2efbc5d"
        },
        "item": {
          "id": "c459494f-73cb-4b90-befa-6b7d970502ad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "87902850-f501-4d59-be76-8d3469922b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d64632-62e6-4e39-b534-4c708b473d48",
        "cursor": {
          "ref": "8e26ee89-9be2-4ddd-b29f-3bdac53a38bf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "baf1a613-e72c-4e4e-bdff-6c859c5b5b8f"
        },
        "item": {
          "id": "89d64632-62e6-4e39-b534-4c708b473d48",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e5c244f0-70d0-4aa1-926d-b14aaf6be459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bf2ac3-9785-413d-996d-5f6a74f93211",
        "cursor": {
          "ref": "cddec156-33eb-4dec-a67a-a11b2d36c8a7",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f5f7611f-ffe6-45e3-a3fe-83f7b7d53415"
        },
        "item": {
          "id": "63bf2ac3-9785-413d-996d-5f6a74f93211",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4c095c7e-3dd8-4d3b-b433-1c899af10e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeacc1c-cfa5-4e1b-9fb2-06984d0b712b",
        "cursor": {
          "ref": "8a4f178f-c627-4816-9108-9684a78d2ee5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0ad7437f-4e83-47a2-b596-6ffb2b93c696"
        },
        "item": {
          "id": "9aeacc1c-cfa5-4e1b-9fb2-06984d0b712b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "35051308-e265-4039-8bbe-5153ea26d497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fa1bc7-0438-435d-83dd-50d7f88ad9af",
        "cursor": {
          "ref": "113bb8ff-d4ca-4575-b6e4-d0bb4ee2f423",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "70a99c02-0a25-4ed2-a888-7235181938ff"
        },
        "item": {
          "id": "98fa1bc7-0438-435d-83dd-50d7f88ad9af",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "28daf7e6-3e33-40f5-a56f-0215c8ec8d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdc8dd7-aec5-4814-8a2b-211622039b80",
        "cursor": {
          "ref": "73c701ec-11d8-42f9-86ca-2fa7091d5e7c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e370e5b8-158c-460b-b760-469a41424852"
        },
        "item": {
          "id": "1cdc8dd7-aec5-4814-8a2b-211622039b80",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dacc633e-e704-408b-8615-2410f7f833b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5236e7c1-4657-4386-8269-d55004ea3e24",
        "cursor": {
          "ref": "c4e1bf28-b8e2-4d59-9678-59beaee6eabc",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8db29ad5-10f0-4800-bc6f-fe48e6c0fe39"
        },
        "item": {
          "id": "5236e7c1-4657-4386-8269-d55004ea3e24",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7d436e3f-6fd7-4832-aeb5-ce25cab210bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ba0818-b285-4612-b17a-6ca160623077",
        "cursor": {
          "ref": "2299886d-e5bb-4aef-9289-8217fcd6e102",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4bf23480-7503-416d-8f14-74a9a56d5964"
        },
        "item": {
          "id": "92ba0818-b285-4612-b17a-6ca160623077",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "70cba53e-c97d-48b5-a379-42041b44cc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53be73d-ebb1-4474-bc3b-e845a4b34d63",
        "cursor": {
          "ref": "1f8d37a0-92d3-43e6-b4d4-56044b14e4e6",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a0f3365e-1a47-4ca1-bbaf-9da26ddab9c0"
        },
        "item": {
          "id": "a53be73d-ebb1-4474-bc3b-e845a4b34d63",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b88cac97-48b5-4e9a-8dc6-ae44b852ac63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1076e26-9f54-4e69-bc40-8dda3defd689",
        "cursor": {
          "ref": "4b90e0ee-9ddd-4e32-b67e-d9fee9b311f0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "296f7fb1-d053-4a69-8a7e-31e32ecfd268"
        },
        "item": {
          "id": "c1076e26-9f54-4e69-bc40-8dda3defd689",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a6f15691-0358-4149-9d85-a8da8bfd74fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ff8765-72c8-4335-a706-c6786902cba6",
        "cursor": {
          "ref": "20c2465b-1a4c-4d0a-ad60-1a48451a4585",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "34a44337-b1c4-4655-91ad-7abdf12b97d6"
        },
        "item": {
          "id": "00ff8765-72c8-4335-a706-c6786902cba6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0310afd7-cdeb-4efd-a198-7f903ef1f268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a85df3-4576-4550-96fb-4ff663b77492",
        "cursor": {
          "ref": "99dac5a1-4898-4b44-8e89-8bfe3f82e654",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e8decbcf-cca8-4ee6-b8b2-4b9516ebb3e4"
        },
        "item": {
          "id": "50a85df3-4576-4550-96fb-4ff663b77492",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "305b0abd-cc4c-4a47-8712-d7c4291837a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e1c60c-2043-4a68-9013-6acb988fff65",
        "cursor": {
          "ref": "6b20fe34-cd84-49fe-b327-43c3a8e03487",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c932e8de-1480-40cf-88cb-17b11f79b8b2"
        },
        "item": {
          "id": "76e1c60c-2043-4a68-9013-6acb988fff65",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b06269bb-a0c7-4bde-b322-15b04628f884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a91cd2-f860-4f35-91cd-5fc0acffe8cd",
        "cursor": {
          "ref": "2bd7309c-7635-468a-82d5-c5c3a56cf696",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2c9c6ff1-93fd-42f4-9253-eadf4b2c9e34"
        },
        "item": {
          "id": "d8a91cd2-f860-4f35-91cd-5fc0acffe8cd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bb4013f2-74f2-409f-abab-2450ab7fc513",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc9f149-f2a4-42c4-9527-30b31488cf3d",
        "cursor": {
          "ref": "14551476-3a83-4158-8419-279bb41cbc63",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dd2cf950-e2ec-4b8e-9b67-cd49e123ad25"
        },
        "item": {
          "id": "0cc9f149-f2a4-42c4-9527-30b31488cf3d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0eece3eb-bef3-4f4a-9845-c8990c84b711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbd87bc-77b1-4a35-bb49-bac152860872",
        "cursor": {
          "ref": "dfe376f8-a03d-42ef-85ea-38a6bb902579",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c3effe3b-e061-4d4e-a96e-e7c49fdf6cca"
        },
        "item": {
          "id": "ddbd87bc-77b1-4a35-bb49-bac152860872",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cc240705-2611-47ae-8c0a-661fd0166355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9920acaa-9bf0-42eb-a25a-cad4f58f7d40",
        "cursor": {
          "ref": "060cb6bb-a427-4bb3-881c-966d05a61d15",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8130abc7-fdc8-47ca-b5ae-364397c50a17"
        },
        "item": {
          "id": "9920acaa-9bf0-42eb-a25a-cad4f58f7d40",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6b240b12-cc93-4dc3-91a5-93cd793fdde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c175a7d2-abcc-4c71-9c44-5c84b2011f8f",
        "cursor": {
          "ref": "3b4b13d1-cf46-4ec7-8f42-5da4dd5be9bf",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8e1c3895-82fb-4017-b2e9-8b9ec42e5c24"
        },
        "item": {
          "id": "c175a7d2-abcc-4c71-9c44-5c84b2011f8f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e2496be7-5768-428b-afcb-f1af53732adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1f367c-1fa9-4347-b0c4-d37d4765956f",
        "cursor": {
          "ref": "1e451e82-4012-4775-b910-dab413e77824",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b0ecfb89-b358-4d8f-820e-c16afeb882e4"
        },
        "item": {
          "id": "ee1f367c-1fa9-4347-b0c4-d37d4765956f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b68c555c-9a96-411e-87b0-464e1bc93ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b111fe-fbf1-45bd-9332-5038ac5b2700",
        "cursor": {
          "ref": "c6bc91e3-d7da-4228-b454-1652ed72f214",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a5b8d636-0497-4434-bbdb-9e00434606f8"
        },
        "item": {
          "id": "e4b111fe-fbf1-45bd-9332-5038ac5b2700",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "94031be4-9ada-4597-9e72-344025351bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d293cd-6b4a-4865-a0b3-5f10878cd62b",
        "cursor": {
          "ref": "6270736a-b99f-4332-9707-e8fc1e0d812e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c54cbcca-e51f-42bf-9f28-6aa92aa5e213"
        },
        "item": {
          "id": "e6d293cd-6b4a-4865-a0b3-5f10878cd62b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "487135ae-f08d-4fea-ad85-722d65867e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7f004a-3ea6-40ec-8ff7-3fdef6b8d222",
        "cursor": {
          "ref": "a0fd0c8d-1508-4d46-a4cc-4a768c94e520",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b46f8fc2-4b0c-4477-a6d9-da4ccf6e73c3"
        },
        "item": {
          "id": "1a7f004a-3ea6-40ec-8ff7-3fdef6b8d222",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "00ff3cb8-285e-44ef-bfba-aefb20e08d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624f9f3f-ff0f-4c84-be4f-13e77e1185f8",
        "cursor": {
          "ref": "ce5c3a94-822e-44d1-95b3-ed657cfb27b1",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b515e58e-b32d-4e14-aa9e-4dd91c049b5b"
        },
        "item": {
          "id": "624f9f3f-ff0f-4c84-be4f-13e77e1185f8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8c549190-f7c0-43c9-a9a9-776f66f76145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed89112-85ab-43ca-af54-a63ae34c6506",
        "cursor": {
          "ref": "61dba982-6f35-4353-ba93-bda92fc80b9c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4f609881-a057-4194-876e-9ef063159193"
        },
        "item": {
          "id": "9ed89112-85ab-43ca-af54-a63ae34c6506",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "df3e54c8-84cb-4c9f-b8c8-84a108b1e957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4140bb02-440b-45f9-afdb-9bc1ddf1d33f",
        "cursor": {
          "ref": "d3163841-d6ab-4cd9-af95-b0868be61af1",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e3866647-532f-4538-86f1-cc5196d326f7"
        },
        "item": {
          "id": "4140bb02-440b-45f9-afdb-9bc1ddf1d33f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "060f26a5-e826-497d-871a-9199157ba342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a3a232-8b77-47d6-8286-893801508031",
        "cursor": {
          "ref": "69c0a8ca-c1d8-4559-82e2-6b8bb44bc3ce",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4d16a4d7-b940-4998-b7e8-d75363bf5b6c"
        },
        "item": {
          "id": "82a3a232-8b77-47d6-8286-893801508031",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9a23c3f6-d287-47d1-a7df-277bb35f4300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1651c240-cebd-4864-8ee3-bbdef466d532",
        "cursor": {
          "ref": "79143dd8-3cf3-4c70-8b11-688f690e81bd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2a8ac938-9f6c-48a8-a2f6-71e74e69ab62"
        },
        "item": {
          "id": "1651c240-cebd-4864-8ee3-bbdef466d532",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "45844781-f443-4ad7-8887-fccfd6c331a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a72f3a-51e1-4180-9bb2-2a1aa211f440",
        "cursor": {
          "ref": "66ba8e29-9a92-4c6f-8c3d-e08ec80601e5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1c2dbc83-8d99-409f-8458-6311e880e626"
        },
        "item": {
          "id": "38a72f3a-51e1-4180-9bb2-2a1aa211f440",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c009a709-f504-454a-ad58-edcce1985e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efae4e68-65c1-4262-9fc8-00b36ee9553d",
        "cursor": {
          "ref": "4f27ed82-2692-4ddd-b21c-428cb0daba28",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b0cafa41-07fe-4a9a-9984-41f282ac4721"
        },
        "item": {
          "id": "efae4e68-65c1-4262-9fc8-00b36ee9553d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "067ee96c-0d9b-41ea-b81b-60c144b84fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5d9236-e6d2-4a27-a893-a4c4cca733f2",
        "cursor": {
          "ref": "01529a96-303f-4253-858b-b65e1783314c",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9156d8de-de80-4627-9578-3f8308dcb04a"
        },
        "item": {
          "id": "2a5d9236-e6d2-4a27-a893-a4c4cca733f2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "968f4d3f-9dd1-43e1-9387-6ee215014d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f553d3-2342-4ed9-9823-71068abf9073",
        "cursor": {
          "ref": "d15afb42-f2fa-44e6-91af-f0e94bf6a00b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1c951fb4-4122-4ba5-a885-3ff7c2877b6e"
        },
        "item": {
          "id": "e0f553d3-2342-4ed9-9823-71068abf9073",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "08e7d65c-2196-4fc1-8afe-a43fa919120b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92964dd-a418-4947-b083-b7be5e985b62",
        "cursor": {
          "ref": "b6d4bc93-5edb-410a-b3a4-91ea9da3ef22",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d021ec6d-d855-443e-925c-7d2598ef24af"
        },
        "item": {
          "id": "d92964dd-a418-4947-b083-b7be5e985b62",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "749f938c-4e36-4051-89d8-0f6b77d47131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58a71c4-0832-4aea-8ba5-8cbd3dea6117",
        "cursor": {
          "ref": "8793a4ff-cff2-4715-9c81-62f4cd52e211",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d6135c55-cc13-48eb-930b-aa4f0ba6b664"
        },
        "item": {
          "id": "a58a71c4-0832-4aea-8ba5-8cbd3dea6117",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b35f76f2-c8e2-456e-82c0-dd10d463c09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a135e0-fc18-45a2-b545-b4e8aa1bf3ec",
        "cursor": {
          "ref": "033a1633-0bef-4e1c-8b2e-c54d0be3cf89",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2b205125-b8c8-4f44-99a3-62ccee1c144a"
        },
        "item": {
          "id": "06a135e0-fc18-45a2-b545-b4e8aa1bf3ec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "557edfeb-d326-42e5-896c-90eeac115839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a257a838-1a0e-4550-a920-ecad5a77727b",
        "cursor": {
          "ref": "45ea59a9-aa79-4c7b-9876-91f761c9d84c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "71e2b3ea-eb3d-41e3-b612-5edf77db782b"
        },
        "item": {
          "id": "a257a838-1a0e-4550-a920-ecad5a77727b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "44fcc9e3-928f-4d8e-8419-1dc7388c82bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1017c9f2-2259-4720-96f3-2c11e49cb19e",
        "cursor": {
          "ref": "95161aa2-a9bf-4f60-b902-b83b3f46c9d8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7559990f-c060-45ed-89d8-c9fc2b4c253a"
        },
        "item": {
          "id": "1017c9f2-2259-4720-96f3-2c11e49cb19e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "af4686a0-7bdb-4952-9fea-de16551270d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a940c3d-8442-43ad-83ef-2f40273a4dfb",
        "cursor": {
          "ref": "e1594128-5786-4a81-b8c7-c5d5fb9aa34e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f3cb3328-c580-44c8-9592-f0f78ddb3ed7"
        },
        "item": {
          "id": "8a940c3d-8442-43ad-83ef-2f40273a4dfb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "04d70bdc-89a8-4d4f-b604-57e3fe65240f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089beffc-4742-4c91-8c77-729dd12832be",
        "cursor": {
          "ref": "dcb6f6a7-5610-4151-a7cb-10fee8226972",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0d15da3c-2551-4b87-affb-083c5fd35aa6"
        },
        "item": {
          "id": "089beffc-4742-4c91-8c77-729dd12832be",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d27b62e3-abb8-4fcb-8ffd-7574dbacb207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a1bd8e-bb3f-4ebd-b72a-9ff1e1d0107a",
        "cursor": {
          "ref": "86530074-1ff8-4b58-9137-5c86384437af",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d2c26929-6e4c-409d-abdb-6456f7e01609"
        },
        "item": {
          "id": "47a1bd8e-bb3f-4ebd-b72a-9ff1e1d0107a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e76ece62-743f-4892-954f-f373342d3c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b5bf40-00b3-44db-95dd-36663dc696f9",
        "cursor": {
          "ref": "ac725b8c-af80-4425-bf52-4241f895a457",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2525f06b-53b5-4070-a865-ca78dbb5a4cf"
        },
        "item": {
          "id": "a3b5bf40-00b3-44db-95dd-36663dc696f9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e2186fe8-96b2-4d7e-aeb9-56f2542a5b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6564455-4c07-41d4-bc59-f8cfc13b3523",
        "cursor": {
          "ref": "e2b20059-827b-4fef-a643-eabc0b4398ec",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "31fec17e-eb31-4907-9333-a084fdd2b813"
        },
        "item": {
          "id": "f6564455-4c07-41d4-bc59-f8cfc13b3523",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "99acc955-91e1-45eb-9128-437bd2eb1c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5209848a-9ec4-491e-a513-3804db3c691e",
        "cursor": {
          "ref": "a93c9d09-523a-4f75-808e-44d3a5e801ae",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bdf3f263-1de6-4b93-ab47-73d2dbe3c4d9"
        },
        "item": {
          "id": "5209848a-9ec4-491e-a513-3804db3c691e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e4279dfd-02f6-4c42-b5a7-dee200747f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603c30b5-6bb4-4897-9c40-e2b32c466ffd",
        "cursor": {
          "ref": "3db22c4b-b4ee-46c6-a97e-c90f27a56d4d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "38f9b38f-15e6-444c-83ea-a5533827af4f"
        },
        "item": {
          "id": "603c30b5-6bb4-4897-9c40-e2b32c466ffd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a9cb84d9-9aaa-4d20-9387-4fa3c785d1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd16beb-0c20-4b2a-b0ac-9dfd2996bb75",
        "cursor": {
          "ref": "41bec330-3309-4d6e-b661-8e97f6c2036d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ac4052c7-0cba-4e35-9800-a3e7bb030315"
        },
        "item": {
          "id": "dcd16beb-0c20-4b2a-b0ac-9dfd2996bb75",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba485e3b-dd12-47ca-842b-5c9b4b9978bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c00d1f-8353-46ba-abb3-97afee414f29",
        "cursor": {
          "ref": "6300d1a4-a820-419c-aedf-cfa7d9a7e573",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "213042e7-3d78-447b-bf7f-85345e895782"
        },
        "item": {
          "id": "d0c00d1f-8353-46ba-abb3-97afee414f29",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f5c13070-c832-4b6b-b18b-292862e79ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f346741-dc71-4cdc-a622-72419f0ae9c6",
        "cursor": {
          "ref": "45fc1fbe-8277-4a05-9d7a-bb5083c24ebe",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "14029100-d731-45fa-ba3a-82f859bf2bb6"
        },
        "item": {
          "id": "1f346741-dc71-4cdc-a622-72419f0ae9c6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "70572587-2be5-43a0-a370-0886cd75f666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85333ca1-626c-4f55-bf32-3697166768a9",
        "cursor": {
          "ref": "045ed519-71a8-45a9-9908-a925c6c02952",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8ce07845-649b-4569-85d9-c149f658c811"
        },
        "item": {
          "id": "85333ca1-626c-4f55-bf32-3697166768a9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a2398186-f370-4140-ac09-a39cf10a3afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cb00b7-764d-4b1d-8b72-a7c799897891",
        "cursor": {
          "ref": "49725fdd-4644-4cda-b19f-5f741d9fb7ce",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "92cce877-79f3-491e-a16e-6747cd500704"
        },
        "item": {
          "id": "91cb00b7-764d-4b1d-8b72-a7c799897891",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cbccbb1b-b9fd-4224-a004-1e3d20fe2d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41692f10-11f9-47f2-b0fe-f56a8b03e474",
        "cursor": {
          "ref": "39b325ce-8979-4b96-bebd-0c3f951dbe9b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "db2ce549-bdd1-42b4-b43e-432ec85618fb"
        },
        "item": {
          "id": "41692f10-11f9-47f2-b0fe-f56a8b03e474",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d5e09af7-ddc4-45d9-b5ad-c7e294181a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4137c7d2-cc30-4b62-840e-f906d58ccefd",
        "cursor": {
          "ref": "674ea288-efca-4a06-b268-fbff6f674f1e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "856f7eeb-b9e9-4fa2-ba38-5c0ecc0e22f2"
        },
        "item": {
          "id": "4137c7d2-cc30-4b62-840e-f906d58ccefd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a7c4b240-0687-4701-9899-fc9dca766cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929c5057-09cd-44af-aeeb-5bb645b2af05",
        "cursor": {
          "ref": "ff16f25f-70ee-4399-a139-da19208990a1",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9bdb1a37-bc64-4512-9994-7e6674a34ee6"
        },
        "item": {
          "id": "929c5057-09cd-44af-aeeb-5bb645b2af05",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2ed6ade6-5799-4857-b0a7-ecef770af798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad7e30a-b357-4a39-9227-64443c5bdea4",
        "cursor": {
          "ref": "f7003c65-b8d3-49fb-a86f-a828cd349147",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6b94f762-322b-4ab3-8d82-dfd149c7f25b"
        },
        "item": {
          "id": "dad7e30a-b357-4a39-9227-64443c5bdea4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0eafb917-f779-4df7-84aa-1b28abfd3382",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8d30ad-84d9-4e2a-b19b-7292ce12626b",
        "cursor": {
          "ref": "81eb98b1-6895-43dc-955b-5b50ec0fabd7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0d23f995-ec6f-43da-b8c9-6b5db411b429"
        },
        "item": {
          "id": "dc8d30ad-84d9-4e2a-b19b-7292ce12626b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7a806a35-fa44-40e2-92e1-14da64dc629b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c65a39-849e-492b-b4a6-85fc065d9029",
        "cursor": {
          "ref": "059955d0-528b-42b0-b0dc-3b3dbfc594cf",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9bae8fec-0c76-4029-94fd-8d5df8dcbaf3"
        },
        "item": {
          "id": "b4c65a39-849e-492b-b4a6-85fc065d9029",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7b577c96-b10c-49d6-bf7e-6537e3609e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b39cdf1-3bb2-48e9-b5dd-5b5e7e980fe7",
        "cursor": {
          "ref": "f26aa6f2-6312-4427-a5a5-a5c4c27ae574",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4c3ab6c6-2494-470f-9b4f-bf899b8654bd"
        },
        "item": {
          "id": "1b39cdf1-3bb2-48e9-b5dd-5b5e7e980fe7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c80337ce-b705-4f38-ac99-8ba3821e063f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd44d589-a31d-4c4e-a6c4-1f581e7c0a23",
        "cursor": {
          "ref": "6a2b7da1-5da6-4d02-807b-de011c1cdaf4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6e5e9957-6b45-404b-aed6-66f74727e901"
        },
        "item": {
          "id": "bd44d589-a31d-4c4e-a6c4-1f581e7c0a23",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "73d9734b-0faa-4883-b38c-15c511a965b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c4915c-af0d-48f9-a7a3-ae91a625a7c3",
        "cursor": {
          "ref": "7afdff85-9142-4a42-98f8-661346121d39",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9b6a8b4c-ebe0-4743-a7be-60ecd866c1e5"
        },
        "item": {
          "id": "25c4915c-af0d-48f9-a7a3-ae91a625a7c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "16f39ab3-44a5-46d3-8094-337d8da3f55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b0f6de-e717-41bd-9f2e-daaa7c303d47",
        "cursor": {
          "ref": "9a994cce-547f-496c-9db9-e207b6d35202",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "74d847e8-1234-4a3a-8d99-5cb658350ee9"
        },
        "item": {
          "id": "36b0f6de-e717-41bd-9f2e-daaa7c303d47",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e9e95dd9-5bd8-4738-8904-a6f8968c94b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f743dd10-fa4b-402d-94fe-a2fbb8ef4034",
        "cursor": {
          "ref": "06c67890-8c04-4913-b113-bf0747375b31",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0e7c128b-06fe-4d31-8093-2ddfcf6d0493"
        },
        "item": {
          "id": "f743dd10-fa4b-402d-94fe-a2fbb8ef4034",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "71636071-ce03-4d70-a08b-a94cca751855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42ba3eb-03a2-45d3-9d57-c3c0f28574e6",
        "cursor": {
          "ref": "603c860b-79b0-4056-b333-11453057e8fe",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "07eca5c3-3d24-46a3-b107-52d2860374f1"
        },
        "item": {
          "id": "c42ba3eb-03a2-45d3-9d57-c3c0f28574e6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "70c386df-24fe-4064-ab8f-31a03b84b66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdc43a4-8af9-45b3-ad4c-5d571ac0b54e",
        "cursor": {
          "ref": "e5ae098e-1c29-450c-b3b4-72b2c841f8c5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e5cbd0ac-2293-4a24-8ca3-afc1e4b468c7"
        },
        "item": {
          "id": "ebdc43a4-8af9-45b3-ad4c-5d571ac0b54e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "124071b7-aea2-4fe5-8a63-62574715aca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2234c649-23a4-4920-bef9-1f2a5e4814c3",
        "cursor": {
          "ref": "1f623c2c-cfda-40be-9cd9-0be3e2d7b0b5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e879c164-0c1f-4527-a856-0c885ab691d1"
        },
        "item": {
          "id": "2234c649-23a4-4920-bef9-1f2a5e4814c3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "64d3deeb-1b2a-438d-9d0f-5588ebdc1898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92ca5a5-8360-44f2-97b6-e7fbd761c06b",
        "cursor": {
          "ref": "55c20c4f-b19a-4a75-b8da-0bb277747e43",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "134dbce5-50db-4798-a256-c72297377693"
        },
        "item": {
          "id": "c92ca5a5-8360-44f2-97b6-e7fbd761c06b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f32e6f7f-6a6e-4909-b9c9-b478fafc8574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558751d9-f10a-4a00-ae01-5c8f61dbaa97",
        "cursor": {
          "ref": "954df217-b8f2-4483-801c-de25e926d6ee",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "65673b32-e4e1-4956-9de6-f0b5fa057c63"
        },
        "item": {
          "id": "558751d9-f10a-4a00-ae01-5c8f61dbaa97",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b8e2622d-ff1e-42e8-9fcf-ecbdcfdd32ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035042ed-b713-4d6b-8d2c-c230f5fee60a",
        "cursor": {
          "ref": "d0ce41a8-fd88-44b0-9315-0f445148b6a3",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4d30532b-7885-4cfd-b4d8-307811c3f02c"
        },
        "item": {
          "id": "035042ed-b713-4d6b-8d2c-c230f5fee60a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "19711ba7-aaad-451d-9766-7410c7f35261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a0cea7-13d7-41a7-8c29-9ffeb73d7e98",
        "cursor": {
          "ref": "b6547120-210d-4f29-8492-aaea388994d6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fb9ad8d9-5c9e-4426-8b9b-93e0149e0bd9"
        },
        "item": {
          "id": "18a0cea7-13d7-41a7-8c29-9ffeb73d7e98",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5852b9d9-9b8e-485b-9ae7-4e35da7e0432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa98953-71f5-4a84-8cfc-27d97df16a99",
        "cursor": {
          "ref": "550cca87-745a-4982-948c-8ea2e8ea9856",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ad9eeff2-b2c7-4d8a-9144-5cefb18f7a10"
        },
        "item": {
          "id": "7aa98953-71f5-4a84-8cfc-27d97df16a99",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fd7f29ea-6c82-4041-aef7-bf237964c54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfacee2-1c07-49f3-8729-368bf1a761a0",
        "cursor": {
          "ref": "2f6a4f90-006a-402d-9557-de6681c6c65d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4666d9d9-dc97-456d-8798-83a09ead6122"
        },
        "item": {
          "id": "fdfacee2-1c07-49f3-8729-368bf1a761a0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ef77859-9e59-47a9-92c3-4cb02dbaf59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edb950f-8abf-4d63-9960-2b9fdd0759ab",
        "cursor": {
          "ref": "87e1fead-7d5d-4a75-b92f-f152000c87bc",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "886ec02d-deb9-4a3e-acf6-3fafdafae519"
        },
        "item": {
          "id": "4edb950f-8abf-4d63-9960-2b9fdd0759ab",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b535eb56-603d-4848-8af3-7d734bc1a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27094575-6545-4482-ba7e-0b64282bfb21",
        "cursor": {
          "ref": "951127ba-6803-43d3-b48a-4782786d842d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1e670dae-2bdf-4985-9ad9-035f498c2c69"
        },
        "item": {
          "id": "27094575-6545-4482-ba7e-0b64282bfb21",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "37dd580e-8b57-4f99-9d9c-54dd9fbc3141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c3eb8b-22cf-4087-bfdf-479d9ce8af54",
        "cursor": {
          "ref": "2f7027b8-cf84-4df7-83ad-9a1effeca5af",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "92677d59-df24-4b87-8b55-4250f20981e7"
        },
        "item": {
          "id": "59c3eb8b-22cf-4087-bfdf-479d9ce8af54",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5fd7e1c5-854b-40de-bac6-9f2407cb711a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92f3c5d-3683-4b9c-a75f-989c911b2ee5",
        "cursor": {
          "ref": "b3a95f9b-07f4-477d-b546-6372ecc38197",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e92d3fd9-c88c-45a0-870e-0cecd38dafc2"
        },
        "item": {
          "id": "c92f3c5d-3683-4b9c-a75f-989c911b2ee5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fdd9c53d-5210-4ccf-bb66-31afa022d2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bbfc58-31ec-4b75-b71e-ed6c43007995",
        "cursor": {
          "ref": "ea426fd3-ecea-482a-a2ec-2aef0bbf0d11",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "58322a8a-b176-4743-8617-1419efd91777"
        },
        "item": {
          "id": "b7bbfc58-31ec-4b75-b71e-ed6c43007995",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1cb5d356-1b65-43be-8c8a-aa5b1e63f923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9e4d40-06e9-4082-9cf1-8ada8ec89046",
        "cursor": {
          "ref": "33348807-17d6-4def-a629-f57ab09a72c1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "745f5de7-62c4-40fc-8a16-82d094258cfb"
        },
        "item": {
          "id": "2e9e4d40-06e9-4082-9cf1-8ada8ec89046",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e08af40c-fe71-47a7-873b-6d3f5fd58eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d04bb1-0f95-46cd-9bd4-56ca8baaba49",
        "cursor": {
          "ref": "41daed9d-c103-42a4-af20-d5c763e66bd5",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1c262357-c454-4152-bd62-10cfbeb53eb6"
        },
        "item": {
          "id": "b6d04bb1-0f95-46cd-9bd4-56ca8baaba49",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "474f1b89-658c-4bf2-9357-6340fe2c1735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e840ec-d76c-49ef-9752-b74446663eab",
        "cursor": {
          "ref": "036f96af-f5d6-462a-b998-6f35ad0d8874",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b9a685a0-422d-4dd2-843e-a7f5165e1635"
        },
        "item": {
          "id": "33e840ec-d76c-49ef-9752-b74446663eab",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c91cd30a-203b-4e1b-ac48-82820adc0d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf41e47-5297-4203-8352-4ac63ac9aeaa",
        "cursor": {
          "ref": "c0c5ef71-b77e-4b54-a3d4-ce6e3d6e29fd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "72b2d32f-545e-456c-8a4c-d30cbe75c986"
        },
        "item": {
          "id": "3bf41e47-5297-4203-8352-4ac63ac9aeaa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a9654938-73b8-4bc6-9853-adfa9ec1e746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c769f6a-c7c3-4b06-bdca-e07f3d1b2177",
        "cursor": {
          "ref": "a3df505d-6dd4-40c0-82e0-ab678ccc98bc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0a6be118-6968-4bda-985a-764412c84661"
        },
        "item": {
          "id": "6c769f6a-c7c3-4b06-bdca-e07f3d1b2177",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "15424c85-533e-42c0-98cb-78c2fe2f037c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3fd940-8e53-432f-99e8-985cb4681840",
        "cursor": {
          "ref": "d97a15f2-e95c-428b-8f47-ecedff397c97",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "983bebb4-8642-46df-9b45-3b42ecdd99b5"
        },
        "item": {
          "id": "3c3fd940-8e53-432f-99e8-985cb4681840",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d56f896c-1fa4-4917-846e-9163d74a337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d2db86-2b39-46af-8031-459b09fab154",
        "cursor": {
          "ref": "ec305d9f-2afa-4bae-802b-f8d1773c03cb",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d480fb92-3500-47fc-8e62-8a1c24d97584"
        },
        "item": {
          "id": "48d2db86-2b39-46af-8031-459b09fab154",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d05aca3d-49fb-4f76-a65c-e571dd5331b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0d83ce-c68c-42a6-81c4-cd0d70c506ab",
        "cursor": {
          "ref": "d4346170-8521-4c49-bd6a-1a4c35a910e1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "efc51a16-a124-46c5-a00f-46ea80e1a433"
        },
        "item": {
          "id": "db0d83ce-c68c-42a6-81c4-cd0d70c506ab",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "683eea3a-55fb-4252-aef8-7301ba38a94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874b306e-1bd1-4148-8f84-a875a39ae329",
        "cursor": {
          "ref": "f70aaa3a-5299-46d6-9ce2-eb9575572825",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "687ae803-9eb4-43de-bfcc-3521f66f400d"
        },
        "item": {
          "id": "874b306e-1bd1-4148-8f84-a875a39ae329",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "507fb203-02f3-48c5-8c7d-23b9df5b0c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159267d3-57c8-4bc3-907f-595a3a0828d4",
        "cursor": {
          "ref": "2152844c-8be2-45b0-9eb0-a88373360437",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "632224a7-b29b-433e-9984-7d50ac297c96"
        },
        "item": {
          "id": "159267d3-57c8-4bc3-907f-595a3a0828d4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "293d783b-0766-456f-8caa-c29493080c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffd5706-bfac-48c9-b353-381b3281ede6",
        "cursor": {
          "ref": "c5ab246c-b190-4b57-a935-cac5988532d6",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1315df07-533a-4db9-8dd0-22332a604b87"
        },
        "item": {
          "id": "6ffd5706-bfac-48c9-b353-381b3281ede6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c2bf9b89-e18d-4b45-96b7-682a65664d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c42da30-3fca-46ed-8d6e-54522a43d828",
        "cursor": {
          "ref": "d3aac0ea-7f3a-4e04-aae0-4a4a18c6c4bd",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c7a640f8-0329-4e04-963e-c5623ccf84df"
        },
        "item": {
          "id": "9c42da30-3fca-46ed-8d6e-54522a43d828",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ea0128ad-38db-44d7-a75c-b8eee89d7737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953ebb63-6a0f-4600-92aa-c107b35e582b",
        "cursor": {
          "ref": "3d70283f-fef8-41e3-b7c3-d546b6e62edc",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f12de560-d09c-4d55-ac6d-328d200f30ce"
        },
        "item": {
          "id": "953ebb63-6a0f-4600-92aa-c107b35e582b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "431895eb-3dcd-40bd-a10b-dd90cc77e843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf69da96-0282-4344-a2cd-d0334d24bba2",
        "cursor": {
          "ref": "3f115c54-dbf1-4154-b6b2-afae156c50ab",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "efcdb7ea-bcd4-4862-87b9-034e865e05bc"
        },
        "item": {
          "id": "cf69da96-0282-4344-a2cd-d0334d24bba2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9ff3b124-d954-4981-9058-fe383e5c0b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44381e0-bb9c-49f1-a524-3c53db45e2bb",
        "cursor": {
          "ref": "661bd4d7-9997-4bbf-b61b-4e640fa6adfc",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "52640648-0baf-4a72-b4e1-aea090b279a1"
        },
        "item": {
          "id": "f44381e0-bb9c-49f1-a524-3c53db45e2bb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1396e62d-e17d-4e37-927b-281b44c1e37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fe88d2-5af7-457a-b1df-3e8649a68ad3",
        "cursor": {
          "ref": "fce6f621-d176-4440-b912-fcf0fbaf3c11",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2576ef88-76f8-478c-aa55-e698b1f48056"
        },
        "item": {
          "id": "f2fe88d2-5af7-457a-b1df-3e8649a68ad3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eeec495c-aef4-4b30-b8a4-adf4ec4863b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9821803-d50a-4b18-9d48-56bdc8a56559",
        "cursor": {
          "ref": "4f6d9537-f755-4719-b7a7-573204edbc44",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c8cdd481-a968-4831-9ebf-f0082042e249"
        },
        "item": {
          "id": "c9821803-d50a-4b18-9d48-56bdc8a56559",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "565068c3-d6ce-4da3-a5f9-bfb311214723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac37337-f886-4962-b50d-1650ec498dbc",
        "cursor": {
          "ref": "e635869a-64a0-4116-a59e-1d8c5d334aa5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "55b06a53-a398-44fb-b76d-20cf8fdb653d"
        },
        "item": {
          "id": "fac37337-f886-4962-b50d-1650ec498dbc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f5e741d6-bd2a-4c3a-9c1f-60032c72c7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d701115f-4411-4a8d-a5e1-4e2470039d15",
        "cursor": {
          "ref": "88168299-2f1e-47c5-98ef-a999c3fc4dd1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "591db5d3-96bd-4ab1-ab7f-6eb933373e51"
        },
        "item": {
          "id": "d701115f-4411-4a8d-a5e1-4e2470039d15",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "be7723a1-5c0f-4a94-81ba-2c39de1ab9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0347b2ba-65c1-4fc0-917d-85bf0d6176f9",
        "cursor": {
          "ref": "4c6fb0ca-aa11-4020-a432-55b35ecc9fad",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "63d4d49d-3ff4-4785-aff4-837ad1d834a5"
        },
        "item": {
          "id": "0347b2ba-65c1-4fc0-917d-85bf0d6176f9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3f483079-6f53-4f20-96a0-2843734b4727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09966af5-8e41-4713-a7c8-208842c377f1",
        "cursor": {
          "ref": "be4290b3-8cfd-4b99-b52b-71b0bf669469",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ee725275-10dd-4b71-b9fb-a28ad2f558b3"
        },
        "item": {
          "id": "09966af5-8e41-4713-a7c8-208842c377f1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0a1b1dd2-0e60-493e-bb7d-ab208d7bacc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc2ffdb-0f0e-4d12-84b2-a3aa46f12a35",
        "cursor": {
          "ref": "44854629-62af-4964-8f48-64344b061c66",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3871169c-6fc2-4526-818e-8875fa92c4db"
        },
        "item": {
          "id": "6cc2ffdb-0f0e-4d12-84b2-a3aa46f12a35",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eba06ce5-7cbc-4dd6-b05c-3d3efcbdd198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea026761-4c53-4639-a7d1-7ba61961e662",
        "cursor": {
          "ref": "d3b355d0-597c-4840-9ae8-af44d27a77e5",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cdf4437c-7354-470c-aa07-36632f114e40"
        },
        "item": {
          "id": "ea026761-4c53-4639-a7d1-7ba61961e662",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f52e103f-881a-455f-9934-c85cae1c2655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8f151c-3114-4e3a-95f6-ec2f86e08e12",
        "cursor": {
          "ref": "567054c3-eae8-4f48-8217-84550f8fb144",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "74e7bb06-657a-4108-b75a-e4f026b1d06e"
        },
        "item": {
          "id": "3f8f151c-3114-4e3a-95f6-ec2f86e08e12",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f91e802a-64b2-42ed-a286-91fff1456e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496f4eb9-1481-468b-aaf7-f727bab0d337",
        "cursor": {
          "ref": "fd483e6c-e30b-43d4-a3a7-96f392104a3f",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "50f1c331-5e20-4f50-bf34-6ad8f9417419"
        },
        "item": {
          "id": "496f4eb9-1481-468b-aaf7-f727bab0d337",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8bb760ed-ed99-4064-9ad1-e4b3f4dced57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bbc7f0-7b1f-4ce8-81b7-6c507b721625",
        "cursor": {
          "ref": "bef522fd-8a47-4554-b765-8fad7cf09214",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "90d0fc3a-f357-46dc-8d6b-671c5362aec7"
        },
        "item": {
          "id": "97bbc7f0-7b1f-4ce8-81b7-6c507b721625",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8c7be076-d5c3-4946-911b-7345ce830780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dd0fa7-d30b-49bb-b486-1f5cc1133fec",
        "cursor": {
          "ref": "437a9faf-da95-4bd6-a1c0-5789abcc0a76",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "beaae295-3fa5-4923-8e56-877a59e81fd0"
        },
        "item": {
          "id": "d0dd0fa7-d30b-49bb-b486-1f5cc1133fec",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "84c7b88b-e1e4-47c1-af32-beb234048c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67c322b-5e23-4d6d-a58c-18f2dcc2e4c7",
        "cursor": {
          "ref": "00713f1b-ad3f-49fd-a474-5aaf102eb1d6",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "91a9d12e-7232-4807-8a64-0d64717fccdc"
        },
        "item": {
          "id": "d67c322b-5e23-4d6d-a58c-18f2dcc2e4c7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4d44d428-3d9a-4012-bf5d-f47ed6bcc19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ab6e70-36ec-4b86-b522-b1c80fcf0f77",
        "cursor": {
          "ref": "179acf5d-5766-4f93-bdec-f8716076ef80",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "02fb250a-541c-46a8-b235-809763f23bb6"
        },
        "item": {
          "id": "c2ab6e70-36ec-4b86-b522-b1c80fcf0f77",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2e57dff3-7dd5-41b4-97c0-b1909480c749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df404d1-c4ce-48ac-b6ad-58dff752aa15",
        "cursor": {
          "ref": "322b66c3-7053-46a4-b6e0-d6307e13ec78",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "22d0aa4b-6a20-4c75-a950-fb5b0eb297a6"
        },
        "item": {
          "id": "3df404d1-c4ce-48ac-b6ad-58dff752aa15",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f7d6744b-6a4e-4ab1-823b-5c00195d2336",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "b3d2152c-963b-46e7-ad68-fba77494351c",
        "cursor": {
          "ref": "e793f7ad-5814-4b36-8bd6-c1732fb27a9c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e23b65d9-c05c-420e-9908-662a6b1dcd73"
        },
        "item": {
          "id": "b3d2152c-963b-46e7-ad68-fba77494351c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5e07c1b6-4da4-4fb9-84c4-195df04e32b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaedd8ae-53a8-46b4-969e-85581e736b15",
        "cursor": {
          "ref": "dfe6255d-d6fd-46bc-bd9b-527a06e5c3ea",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "03b51edd-25f8-47db-8e64-464ca79cc162"
        },
        "item": {
          "id": "eaedd8ae-53a8-46b4-969e-85581e736b15",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "03bce5f3-9c80-497e-ab1c-58f3574558e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadcc4e4-7aa3-4373-b7d8-65682968a5f9",
        "cursor": {
          "ref": "11346547-1223-4245-8aa3-4b5862d07a88",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8a24851a-e880-4464-9495-24b558dbdfb1"
        },
        "item": {
          "id": "cadcc4e4-7aa3-4373-b7d8-65682968a5f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ae55c0ab-ce91-4c24-8403-d8e403752f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77ec6c6-4b5d-4434-b589-1670603e68e0",
        "cursor": {
          "ref": "707db5ef-b925-4bea-92b1-cffe4a6e7cf2",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "94bef292-0390-4420-9c6f-85c3737f4c5d"
        },
        "item": {
          "id": "c77ec6c6-4b5d-4434-b589-1670603e68e0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4ca84cf0-a2a9-460e-af27-ab24a0b2099c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cddd485-2f49-47b2-b3ad-7d7c94944a5e",
        "cursor": {
          "ref": "54aad47b-9233-4b66-832a-36a907466e52",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "de5beb28-77ec-4fc5-ae36-9e4b32c64cc8"
        },
        "item": {
          "id": "7cddd485-2f49-47b2-b3ad-7d7c94944a5e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fad5d9fa-29de-482e-bdaf-eddf20e3e140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c320350-c96d-4941-a2e7-dad9fbb1b263",
        "cursor": {
          "ref": "b3babf8f-1a65-487c-87d3-6c8cc857ee08",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9ab174cb-ad94-4d04-a73b-95b3d26ed3e6"
        },
        "item": {
          "id": "2c320350-c96d-4941-a2e7-dad9fbb1b263",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "efc7fd30-a58e-43ba-a725-24be442ad1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffa878d-b90a-490e-b776-9e975e51496d",
        "cursor": {
          "ref": "7e9fe535-51ce-4bd9-863b-c0344f699028",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4b432bfd-0f5e-405f-93f5-84f2edd21801"
        },
        "item": {
          "id": "8ffa878d-b90a-490e-b776-9e975e51496d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "563917f1-bf0b-4a73-86f9-19dfb3e6b7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bffc30-6d68-4097-885b-e6c0e233613e",
        "cursor": {
          "ref": "1fe7d16d-e343-4920-b056-0d1a627e8ea8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "305c9d50-18a4-4dfc-8258-cb7127af8993"
        },
        "item": {
          "id": "d3bffc30-6d68-4097-885b-e6c0e233613e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "933dfca0-be3c-40a6-a7d0-46cedbceb859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10b0cf2-c703-45c7-bcf8-3cb9a21963d8",
        "cursor": {
          "ref": "fb066242-178b-4769-8751-05f169d27607",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0869a1be-6f1d-4774-9f44-841872baea20"
        },
        "item": {
          "id": "f10b0cf2-c703-45c7-bcf8-3cb9a21963d8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b612948c-4ca1-4795-9967-9ee2514f1179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7d12b8-3572-4048-b618-c89118fcb15b",
        "cursor": {
          "ref": "1eb3d22a-a86b-4ece-8998-008f394f5728",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a16a5b55-c602-4a11-924f-a70dfc4c9382"
        },
        "item": {
          "id": "9f7d12b8-3572-4048-b618-c89118fcb15b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2867e479-26ac-4dc5-9d26-d9a5dc6b531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05024d95-26e5-4209-b2bd-78a434ba909e",
        "cursor": {
          "ref": "744df470-3557-44cb-9618-35ab88eb9964",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5af3d2f2-b77f-421e-a2e7-8b9b2ec0b0f5"
        },
        "item": {
          "id": "05024d95-26e5-4209-b2bd-78a434ba909e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5192150a-3867-4eca-a98f-b19c6e356db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1adc2d-330d-4d9b-83bb-ee027d7ba742",
        "cursor": {
          "ref": "2f30c6a2-b463-4387-87eb-0cea123d3ac3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0ac60bdf-0eb9-420e-becd-2019cbc4ff23"
        },
        "item": {
          "id": "2d1adc2d-330d-4d9b-83bb-ee027d7ba742",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cec38664-fd8f-4266-9398-a5a865b70020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0a343e-6059-412b-b606-2b2a11f960ad",
        "cursor": {
          "ref": "03529a33-7562-4418-8a2d-76b0e65a362f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6afb65cd-eac6-4610-9f08-2e489c5a0ea8"
        },
        "item": {
          "id": "1c0a343e-6059-412b-b606-2b2a11f960ad",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c0060b5e-1a52-4d03-a3a2-dca4d5c3f55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838da292-5c89-41fa-87eb-5562b6c37e20",
        "cursor": {
          "ref": "399d9670-6a26-49cc-a4e9-6d9aff994217",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cbf7652d-3650-4b18-baa6-bf6608a5cc4a"
        },
        "item": {
          "id": "838da292-5c89-41fa-87eb-5562b6c37e20",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "614feb9b-6b09-48bf-abba-c093c70e8aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6f9d27-8e95-4e0a-8c5f-2ae729ee9138",
        "cursor": {
          "ref": "ade5e6bc-92f3-4f36-977c-2c49584628ac",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a68b4f42-6aab-452d-87c4-8f4536708f1a"
        },
        "item": {
          "id": "5f6f9d27-8e95-4e0a-8c5f-2ae729ee9138",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e4399bdf-76be-4988-abd7-a65c88f420fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7fac8b-5bbf-4eb5-a7d6-faa9170a9814",
        "cursor": {
          "ref": "7a52ade6-9140-470b-acbc-dc8791be9089",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "df0de9d0-741b-4d0c-b508-e5e4c84e6a2a"
        },
        "item": {
          "id": "6d7fac8b-5bbf-4eb5-a7d6-faa9170a9814",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "989baa7c-50ec-46b0-b91e-84b60a861776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a025dc13-3eb8-4d53-b137-de5282aa5f51",
        "cursor": {
          "ref": "cf01b999-26c0-472a-8640-b83ae58c127d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ef6e83f9-0b07-410e-9bfd-a6f85b2b7d38"
        },
        "item": {
          "id": "a025dc13-3eb8-4d53-b137-de5282aa5f51",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e87ce468-77f9-4a04-8477-a5f3690f9df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d81156-97af-4019-bece-5788df5cdd29",
        "cursor": {
          "ref": "d6f6997d-7df6-4cb7-b490-cfc88eaf805c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2c06903f-3987-491d-af58-10518a9d9051"
        },
        "item": {
          "id": "91d81156-97af-4019-bece-5788df5cdd29",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3b55ae5e-b3a1-4be3-a7e5-6c8fb4084744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ebf724-d153-44d4-87d8-0c294a21d2bd",
        "cursor": {
          "ref": "d9ebd92b-b2a0-4cce-adcf-d9745840d118",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "00c9e66a-4baa-4d17-a96f-07197f06ff08"
        },
        "item": {
          "id": "d8ebf724-d153-44d4-87d8-0c294a21d2bd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "edf55d28-2c8e-4f43-8c0f-f97773111f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5aa487-2abd-48db-97e1-a7db3d40161a",
        "cursor": {
          "ref": "2841af09-3803-49e0-b779-1dc4486921e1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c3d79d8f-77b0-4e17-94fa-a28eb251d2c1"
        },
        "item": {
          "id": "9c5aa487-2abd-48db-97e1-a7db3d40161a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "51e502ba-7e53-4106-a36d-357f0fe37aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2606671d-46a7-4d56-baa8-d6461e24059e",
        "cursor": {
          "ref": "2a2fefc3-5eda-45e6-b9cb-0c17ea8b148a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "08afaa7b-7ce7-4c3f-842c-e55d21c4e26e"
        },
        "item": {
          "id": "2606671d-46a7-4d56-baa8-d6461e24059e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ac69cf43-12da-42ee-b558-1392d5915531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ea3c16-d1ea-4f92-b2e0-bbb9763e79e9",
        "cursor": {
          "ref": "9e6edd3b-7ead-410a-98b1-c03263e31c63",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "33e09777-f3b4-4c8b-8b4d-463cb38ad6c4"
        },
        "item": {
          "id": "14ea3c16-d1ea-4f92-b2e0-bbb9763e79e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "77b949ef-f972-490c-b16c-7eacf26da697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5834393-f387-4a31-9bf5-649d88af8219",
        "cursor": {
          "ref": "1bed7d1a-3dce-4a8b-8eea-1a815d2c39ea",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0a56877f-54a6-4b50-8fcc-19b133327813"
        },
        "item": {
          "id": "e5834393-f387-4a31-9bf5-649d88af8219",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8957ceb1-ca86-4844-9bdc-da761688d057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583d97dc-6c66-4d1f-9ff6-854a14e0a06c",
        "cursor": {
          "ref": "c66ac9fc-08ae-4c7a-b4af-a214a190bffd",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a456673f-5567-4835-9e97-ad91ab44cc34"
        },
        "item": {
          "id": "583d97dc-6c66-4d1f-9ff6-854a14e0a06c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1278fcd6-cb7c-4981-b05d-091702071985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfd1cb0-ed80-4a78-83b9-1d129e8c88cd",
        "cursor": {
          "ref": "5af33dda-1d25-47d9-9283-17f8068c4225",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "95c4f512-ca20-4f37-bf8c-2e3fe81a39bf"
        },
        "item": {
          "id": "fdfd1cb0-ed80-4a78-83b9-1d129e8c88cd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d6faf41f-3538-43b1-86e9-fadd9deabc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03042185-91d6-4268-b615-2e33d32f556e",
        "cursor": {
          "ref": "14997727-b587-4c4d-abdc-3fb947544a9b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f8b07be1-3742-4dde-a0fd-4150fb24d0ef"
        },
        "item": {
          "id": "03042185-91d6-4268-b615-2e33d32f556e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "15466cfc-1008-4c4a-a6c0-81b75e6f10a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcad3f9-750e-4e18-817a-1d812c523634",
        "cursor": {
          "ref": "931da9f6-c2bc-44dc-b1e3-506d90648e30",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ad215326-d6a6-449b-bed1-e6e4f7392f17"
        },
        "item": {
          "id": "9bcad3f9-750e-4e18-817a-1d812c523634",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a3521b1b-8d23-42b0-89b2-608afdb8cffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf5d7aa-0cd4-4dfb-8cd2-9b1e6b646011",
        "cursor": {
          "ref": "82ad520b-ac7f-4b68-a231-631b3b9521a0",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7fb20ab1-ca12-4b82-bf5d-6bbb1c70065a"
        },
        "item": {
          "id": "fcf5d7aa-0cd4-4dfb-8cd2-9b1e6b646011",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "84f8bc96-f52f-4de1-96f4-f6022139bc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7651c025-4d55-4ffb-b210-360832ce6db0",
        "cursor": {
          "ref": "06b8a569-07e5-4a4c-95a9-d12a464607f5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "aea9a2fd-e5c5-4b93-8dd2-b960bbba4987"
        },
        "item": {
          "id": "7651c025-4d55-4ffb-b210-360832ce6db0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "066b660d-b204-4836-aff8-13c888974b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8b96d7-e68c-44ce-adbb-38c58d5fdad1",
        "cursor": {
          "ref": "1a1ccd37-338e-454e-8af4-c28185ab3dd4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a94e9e71-a72f-4db1-b611-6f77313d0d91"
        },
        "item": {
          "id": "bb8b96d7-e68c-44ce-adbb-38c58d5fdad1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8ac62e71-f061-4e36-8462-35528a703026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f6b3e-319f-4f5e-9e88-200b3dbb6e1a",
        "cursor": {
          "ref": "0f864368-e91d-4d84-9033-9cae2fa5edb1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "70972d48-b813-46a4-90fd-59cf1b691e18"
        },
        "item": {
          "id": "5f0f6b3e-319f-4f5e-9e88-200b3dbb6e1a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1aec0cda-88c2-4f16-9301-7b893918c045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e73728-5639-4f22-ae28-731a1cbd4d05",
        "cursor": {
          "ref": "da409675-c7cc-46a9-885c-147445cbb8dc",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "678392a7-8079-4d16-aee5-689386074fc3"
        },
        "item": {
          "id": "10e73728-5639-4f22-ae28-731a1cbd4d05",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "71efcc7e-39ba-4d85-b968-dec5e50fdcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ff070f-0083-46d5-b40b-52ea8818820f",
        "cursor": {
          "ref": "84632725-970a-4b59-9ef9-3d1a7bd657a1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ba9f1617-189e-4abe-9bfc-e7b60c4490bf"
        },
        "item": {
          "id": "53ff070f-0083-46d5-b40b-52ea8818820f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f6c377e7-32ed-4115-b0ab-575f367a8b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134a1be1-270e-4a58-b78b-00a564a0408f",
        "cursor": {
          "ref": "955bcb48-cff6-4f62-93f4-4f3f669e3954",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "39cd99c9-428c-47d3-9d39-0ba1942be5f9"
        },
        "item": {
          "id": "134a1be1-270e-4a58-b78b-00a564a0408f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d2a66f03-333a-4b98-aa4a-b3d915c3af51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f26071-cf6a-4bd5-b642-d6649179ff81",
        "cursor": {
          "ref": "b947a432-e479-4580-ac04-ef4dc7c18e70",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4272061e-7d97-4dd2-8d2a-1366b4402799"
        },
        "item": {
          "id": "41f26071-cf6a-4bd5-b642-d6649179ff81",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "56b48ce8-3a6d-477c-987f-3012a850c65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33816d43-0327-4f1f-b83c-5784ce218312",
        "cursor": {
          "ref": "22e55a6b-507f-447a-8c1c-db974727da95",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "53ac2095-f482-42e0-bb8b-20c246d7ae78"
        },
        "item": {
          "id": "33816d43-0327-4f1f-b83c-5784ce218312",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5edd4e46-cee3-41fb-98e0-28104d5bee62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f843e30-7974-4dc8-ae86-07107f76f983",
        "cursor": {
          "ref": "bfdb9bd1-61c3-4af8-ae8e-dfc1b55d6472",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bb2bf5ad-6f85-4dc6-be52-0a3a3cb0f52d"
        },
        "item": {
          "id": "0f843e30-7974-4dc8-ae86-07107f76f983",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6432041a-5a2e-4e10-9a4b-d1c9cc5cb91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8183fb-18ae-4cef-ba67-edc78a50626d",
        "cursor": {
          "ref": "93920972-b214-46cb-9a1b-aa7247f00bda",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9dfa08dc-00b8-47a4-9aae-a73c4a5b0535"
        },
        "item": {
          "id": "ba8183fb-18ae-4cef-ba67-edc78a50626d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "eb4e45c9-3c41-478c-89ec-e80ff08351ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985ceec4-8f8b-47be-83ed-4adde40aa2de",
        "cursor": {
          "ref": "88ed015c-3f7f-40c9-a1eb-3014737d56a4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8561c8f9-b434-4b0c-9654-3f1869366858"
        },
        "item": {
          "id": "985ceec4-8f8b-47be-83ed-4adde40aa2de",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "af2254e6-5f0d-497f-bef1-5c7283636349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ef1b2e-c6f3-4746-b3f4-aa4ed14de7a3",
        "cursor": {
          "ref": "c003f41f-be81-4702-a547-6c2ade6b852d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "131ac5e0-4335-4b47-971f-dc980423bd37"
        },
        "item": {
          "id": "10ef1b2e-c6f3-4746-b3f4-aa4ed14de7a3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fb9100f2-3a66-44d8-8482-b4131fe39fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb91b823-a84c-41b4-99b1-082e9320cbe3",
        "cursor": {
          "ref": "67e2cbc2-703e-44e2-8a26-3f4346037f45",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fb60f391-945a-4398-bc71-e696d17405d2"
        },
        "item": {
          "id": "cb91b823-a84c-41b4-99b1-082e9320cbe3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "822b25ab-5dd9-43dc-ab5f-f65d0353e0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd55ba4-fa48-4f37-a424-79efeed1c752",
        "cursor": {
          "ref": "b535721e-8f4e-417d-8ba4-53e6cf2cafca",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a476dc81-b9eb-4690-98f4-669c042cfac1"
        },
        "item": {
          "id": "8bd55ba4-fa48-4f37-a424-79efeed1c752",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "10817f6c-2782-4a7c-b53c-0591a4d540fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f12509-54d8-4385-a869-ef4cbc5b4007",
        "cursor": {
          "ref": "dfb01f18-3c86-4c6e-ab2d-44c929a90b2d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a7c7416c-21bf-4183-b863-efb101f1b830"
        },
        "item": {
          "id": "75f12509-54d8-4385-a869-ef4cbc5b4007",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "604530c0-4751-4464-9fd9-aeaef35cbcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13efcf82-b091-4ff1-a030-0a10119b9c3e",
        "cursor": {
          "ref": "af721047-51bb-4513-b745-7e109aba7b5c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "cebdd58f-f51c-409d-8d44-6594c4811fa4"
        },
        "item": {
          "id": "13efcf82-b091-4ff1-a030-0a10119b9c3e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "860cf36e-d71d-40d5-ae27-b4663b93ac85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719fe0f4-495d-46b2-a940-41ff2fdeeb55",
        "cursor": {
          "ref": "50cb74cf-29ac-4acd-a448-efc004c7bc39",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8c745e6a-9802-4f61-ac29-cf012c823e0a"
        },
        "item": {
          "id": "719fe0f4-495d-46b2-a940-41ff2fdeeb55",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ed7a1b96-8850-4cf5-86cd-d2d7cbc1d745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a789e9a-e766-4b06-9b26-6820c481befb",
        "cursor": {
          "ref": "9832db63-adb9-40fa-9c8a-59bd412544e9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b31a59f8-6a49-4e9e-b628-7c72c819c193"
        },
        "item": {
          "id": "5a789e9a-e766-4b06-9b26-6820c481befb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "23ade30e-95b2-480a-9705-64f466bd7440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae501803-c5f5-4627-86be-6010e23ba98e",
        "cursor": {
          "ref": "644819c8-8cff-4954-a5b2-74c68f8a9b22",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6915a29d-342a-439b-9e20-b91b42dd90f5"
        },
        "item": {
          "id": "ae501803-c5f5-4627-86be-6010e23ba98e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fca18d91-1c1d-4c03-9a7c-cfc376a9cced",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716e5153-c8f4-4885-a120-dc5fbb006081",
        "cursor": {
          "ref": "30b7238e-e843-4b92-a52a-35552e097ac4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "48b71761-1e12-4596-80a7-7107e408ff68"
        },
        "item": {
          "id": "716e5153-c8f4-4885-a120-dc5fbb006081",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "782851c5-5f0f-457f-8b41-4d37732a9209",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9ea815-b61b-48d1-9517-cc85c00fcec4",
        "cursor": {
          "ref": "2304170a-843f-4b95-9e54-6cdedfbc8dea",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f62512ac-7801-4ada-93ee-cb58b118bab8"
        },
        "item": {
          "id": "ad9ea815-b61b-48d1-9517-cc85c00fcec4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dd4937fb-407e-469e-8ae7-a13b54f90cb1",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0621857-7135-4647-b8bc-9a88499ff7b3",
        "cursor": {
          "ref": "c7c9756d-4013-49b3-b24b-2a2dda8c1aa7",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "19f70245-62eb-4058-a1b3-8e94767af81f"
        },
        "item": {
          "id": "a0621857-7135-4647-b8bc-9a88499ff7b3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "24e773c9-c930-4c68-a4ee-fdd2a1889f42",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5299121-f6b3-4be5-b1e0-d736171a2934",
        "cursor": {
          "ref": "0dc21a9b-dd8d-423f-b7f3-589607e39712",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "26a531f8-8d4d-4c6f-91d0-aa08ed06efca"
        },
        "item": {
          "id": "f5299121-f6b3-4be5-b1e0-d736171a2934",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a473d566-7635-4866-bd28-583e90dbd306",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5299121-f6b3-4be5-b1e0-d736171a2934",
        "cursor": {
          "ref": "0dc21a9b-dd8d-423f-b7f3-589607e39712",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "26a531f8-8d4d-4c6f-91d0-aa08ed06efca"
        },
        "item": {
          "id": "f5299121-f6b3-4be5-b1e0-d736171a2934",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a473d566-7635-4866-bd28-583e90dbd306",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bae693-4cd6-4c10-a093-87245fb857fe",
        "cursor": {
          "ref": "02887366-fc7f-4906-b9ab-c280ac504552",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3b45fecc-6147-4b81-b568-f8858256a87b"
        },
        "item": {
          "id": "36bae693-4cd6-4c10-a093-87245fb857fe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bf62c8ee-393f-4e14-820b-82f87bd7318f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57a9be2-280a-4a2e-8b30-bcd3f2cf8e3a",
        "cursor": {
          "ref": "fc21d7aa-c517-453c-a704-7f1589109ddb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "df514478-de3c-41fc-b6e4-d57930b47647"
        },
        "item": {
          "id": "b57a9be2-280a-4a2e-8b30-bcd3f2cf8e3a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f37c8ac4-10cc-47de-b792-4c11e0dc2f0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}