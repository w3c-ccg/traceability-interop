{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6401d288-cfa9-4fa6-9592-d38016113ff3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c73ce3ff-639a-44a0-a44b-187f183df5b1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "641d140a-f9bf-40bc-89cc-21891dd3f73c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77a9c68e-2504-4133-9507-ea876b8fa790"
                }
              }
            ]
          },
          {
            "id": "becdedf1-419e-44b7-b5be-87be7994510e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ccbbcdf-0b08-4642-aa86-0c2fb8d0184b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a1925356-d53e-411e-b4da-a9ddfe8ac63f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c87b7d9b-52cb-4186-9ec3-f35c3a8544ec",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6e758280-23b3-46cd-bb8f-61f997d755f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3465c99-202e-407c-9953-ca0760762119",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70429966-c02b-44fb-b3e7-fb7cab52c8be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2e0c9a1-0ff6-4f11-9e33-1acbacba7b74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c5ed557-353a-436d-94bb-221ba6196866",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9b18181-325f-4aec-b343-255887f938f2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9c4a040-b468-443c-9710-709cfaf95af1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04966856-c54d-483b-a3ef-daea513ee98c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdf0a966-d4af-41eb-b09d-312d638eec2f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a2b3459b-6c61-4f30-bb13-9d559c79f82c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9dd13ad-5e23-4607-b7f8-4aec1f75d166",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "528e12e8-04ac-4421-b777-ff1ea1ebaaad"
            }
          }
        ]
      },
      {
        "id": "a44d46b4-8cbc-46c7-a866-31b510b70947",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9f1407ad-8d4a-47a8-8e18-7c19a79afba8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f20f8ca8-2dc0-457c-8e38-59ebd7efb779",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0b9c5a0-4183-4910-8464-7e302a918575",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171a8961-7208-46ab-b432-d9ecf4c11931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ec44dc1-45f2-4680-9732-2aea9074287d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d898ea-3674-4d96-b77f-d7fa6f35a191",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41288e36-d4c0-46bf-b102-bd0d60c47d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd32392d-9281-4cd9-90e9-91d5bb6e4c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f04d85-c7f3-4f2b-aa45-87ecdf02fdcc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41edd2fd-c61f-4ec4-9664-83119eab8439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c87c5426-f6f9-42d5-958c-35c19846f425"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a98de58-963a-4ee5-b85b-970147a2f771",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92c23445-311f-42af-9cfe-fd73ee328b2e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163428a2-efea-4979-be87-ac1cd99cda34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a507ed73-4d77-4642-b344-857bf9f7e847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b7d5c3-a28a-48f1-8dd6-00f9c6c2ad04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dcd309-6047-4006-b614-fd0b2983debb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d5623824-3625-4c80-a2ab-9e2e78b27d4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fad1ee4-f4dc-44ca-873f-f72025ead43e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62347cd7-093b-4b5a-8f6f-5278003e66a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "424a72af-77d8-4458-814c-5323f1e725b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0cbcd7b6-453f-4d17-bba0-d9d8761fd158",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d8fc4684-9322-40b3-8200-5ee357b131a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7145b1a8-f586-47ce-ae3b-ab8c996284a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7437593a-237c-440f-91ac-eca629f55c63"
            }
          }
        ]
      },
      {
        "id": "c9bc282e-f375-420c-81ef-2bc483e42f4b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9c8c8d19-46c6-443b-9f08-934aa296a4e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4b00e51-5c17-439d-867d-6b9248f09641",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1de5b234-2a01-4a06-9c78-a94b286f6f36",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a2b4be-66d1-4d74-ae6a-feaa3b0d9f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f805f4ef-ebb2-4eb7-bdc2-7b50e329b7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde40930-041e-4628-b415-c90bfc41f122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5818fe07-0efc-4547-af7f-43ba9b9395d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b57d59d-bfe7-48f9-831a-ae025b932789",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff7e742-17ce-4aa9-b18a-5ad812869a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5376f746-3755-45fa-8002-df3c2874e45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20e3d40-81a0-4cff-a1db-dee59a5dcb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6518bd6b-419f-40de-b127-be8292d9e9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969410f9-4ea4-4bae-9bdc-d9a0eb7ab1af",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf768b8c-af67-4396-86ab-8163288606d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9389a794-af03-4d47-af12-ba9cb8544a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca5d101-71d7-4385-8c59-7a79ed9fcd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3124bdb-c122-4130-b67d-3a35aafc778c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c222f5ac-4394-4479-a9c7-e4a9f5b82ea4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220bb0bd-627f-4a71-9519-2f6e8ad0da94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8c6703-4c74-478f-a685-56760006a390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96fb5bf-3cf8-4e38-be06-e5f9f1c01fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "172771af-b980-44f0-b4e6-0c6088288374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd6c7ba-8b0b-45ff-8bf2-4e6c9283ac60",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d427a9-0f29-4a6b-8e7b-9e6dbb87f29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d087d3eb-ddc1-4b7c-9c9b-b2a845639ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556d527b-fc36-47df-b241-50a949135ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbe9cf8c-fc55-4197-bf8a-5f717444925b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b44b91-b37f-4224-b8a5-3c0321ed8f17",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecbb224-eb21-4a39-88e1-72df660848e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d89ef0c-8750-424c-8082-8091a0606816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8313d6d5-2f04-41d8-86c2-50faf87c194d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69ad0e55-cd91-4ee2-91ef-6c9ffd7bd7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b0f56f-762f-42ae-83ff-b4eadac69b69",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1646bf8f-1e36-49ce-b670-6a38508bd61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25d96ee-b18f-4077-9837-243dedda9bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc7904d-da58-4ac1-833c-5093821f9c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "865d018c-a86c-40f9-adfe-82b7c60f670f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f12acf3-66b1-4ca7-bd09-fa8ffcdcf511",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9895f5-66b6-4526-bbf0-9bc937eb6ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b3d1ed-5b62-4619-926b-d637545a94c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5804b82-3a5b-48fa-983a-400c0b71b635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b01bcd87-b461-4546-8a28-77741eed550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979f6c0a-c335-49ad-b039-39766bd0c5cd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686cc490-9c97-4786-95f6-0f302f28b8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33333090-244f-4ab7-a813-3297944a565e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdb1086-bd59-408f-8b58-3a9eab65f92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43ac65e0-4983-42a5-99ea-66be079d36b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af28eb18-bf9d-4077-a42c-aabd04ecdf54",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b4d5dc-1fa9-46da-b126-bf0f15a77cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037a4621-7649-4516-8f38-1211c1ecaaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98ea69b-9bb9-4341-8a8c-47019f344add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c23e62f3-2acf-4e21-9c82-c1d1bb039b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0814301b-87c2-4192-baa6-3b511a764f63",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e5be7a-b506-49f5-9660-27e55dab193a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29117f70-5532-4e91-88c2-231b404fa334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b0b253-8268-4c2c-8cc5-67844accfc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80a72e9f-dc52-479a-a04e-1771759877df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9981118f-c428-45b4-bfa7-f620c4f3f6c0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e48dd7-5520-492b-82f9-a7d7f7493300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29096fa1-b150-4665-8bb0-af5734dcbcaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4e5fbf-590d-4828-be6b-eee778c469d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c20c6cbb-a52f-4083-8c4c-a45e916f689b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45284c4f-8239-4967-b5e6-2e1bfd2e7e6e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aafab30-6fbb-4aa0-b419-951199ffae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a9e86d-7559-460e-8e02-c206b7e42cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f15cfb0-b021-4592-86d2-3fd9b8921bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d83a1686-457d-4d37-bfb1-bd0af77b696e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffd052a-5896-4e62-966b-92523c48d96a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01628238-e3c4-43db-9ca4-5ca73ff85e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fc7b44-5ec7-42f4-b279-2fd71d00b7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4853c50f-cb3b-4402-93e1-eee3e071c3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df9c1c9a-740c-42ee-a613-a7b32aec0026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398e481f-7bba-4b5a-8c49-b37cce0ff645",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bf1cca-696e-41d9-a778-e255f63ca9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c83a93-ab6b-4c04-888c-192a90ef61eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854ad425-4129-4491-9528-ace4970ef2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09cc0c65-0cd9-469c-ac36-2146d4cf3089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a037dcf2-cdd4-4004-a793-befce44eb476",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b21e87-6ea4-4e07-a483-5f45321e60f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d2291a-891a-4789-8344-8b6121579581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79fdab9-168b-41e2-a746-925e5d417cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9a0ac9d-bbe5-477f-a49b-5d4fa6bb496b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f8b7d1-8321-4856-94f6-f406ba0222d3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e22acc0-3485-4dfe-8421-ec79c5fdc6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe185abe-c0e8-47cf-ad48-a804fa65d7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7c9f78-ec09-4db5-bc59-63550bfecf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdf9dc7a-f463-44b5-b62c-96a45134ca67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8759493-cb09-4466-aa62-31c2b2ce7283",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63b7a5a-adf9-4536-bcd9-d33fd9385a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66c0b5e-6a70-4eee-86b5-60db3eef5b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2173f7-ddb6-4c20-a849-43e286988ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a84c691-a625-43bc-bf57-3fba06185850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca516ab-d044-4568-839e-d0a86f041ec1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc0ed63-be6b-491b-9afa-cdfc8d72dd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc45f506-92b6-4a93-9c74-7bb9c7ad4b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0db274-4875-4815-b1d1-045db0c5151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa23afd1-6236-4470-b8bb-52274db15b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c872ee5-6b87-4a95-821d-f6e75228fe5d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51426b56-411f-4daa-8600-e87e18bf7c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e47043f-f7d8-4b1d-94fb-c1c92b69aceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6ed757-d8e9-4604-99e1-c72c26035f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94e25aae-1eb8-45ff-8f5c-85080ca2b238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58f747c-aa92-4f80-bf14-8e0605de6e72",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f237cde1-9385-4888-84b2-002521efe86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff173852-cb49-42c4-888b-8d6eb317182c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c41c572-f52a-4d09-af49-953d81bbb89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64885bc3-c7ef-4d9d-ad90-daf27bb49166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080f7151-8d9b-4708-b5bd-fe467f3b8171",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc92fcb-0fc6-4e4a-8960-218ea2810e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328ce731-e59d-4c6e-a1b9-e3251b3cf89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd6025c-1f34-41cf-8efe-ea8de35d30f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e441a5d-6732-4a99-b59e-a7b911c201b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db2dd22-6bc1-4cc7-9ba0-be2524d2d9fa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df40b643-8e52-4dbb-9865-241bad79c11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15faa960-e733-4d5f-88c5-858b219b2f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7cbf63-e380-4223-8274-08c21b539189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a78cd25-2cbd-4c20-9a3c-8e560baa21f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42372317-16c6-4c97-9bec-3fa73ca51acc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3226fb1-46e4-4d93-aa4e-c8c49cd42b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7f0271-a4c4-4087-bcd3-446e79418f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453a5cb9-e442-438d-983d-ba26e17a28e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "13cea5e2-74a7-427a-83a4-03511e60c268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9242c8a-6adf-4eef-bfae-e3da1a1c691e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49799699-cef8-4bd0-8c9a-8917e692c0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef3c071-77b6-4ebe-9bbf-7ddaeaa34a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674e2420-85e3-4f1d-bbb2-e24eb5fd9787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d38a9d71-74c6-4bee-b23b-cbf36dd73517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf4bc02-654c-4784-b685-a393e45644e0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567ec88b-d503-4045-b916-f33f41bd717f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b1e93f-adfa-4902-bd4b-e18bd138d576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0225fc-b7a2-47ff-9b34-d48fb4c10ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75191b39-2edc-410d-9a2a-ee4d69e3d35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04407fe-7cae-40b3-b597-ae56cf261e36",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485583e1-4fe9-4c13-b225-8f7cd3e783c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be22929d-2f83-4930-b1be-5944878d62dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca032308-3acb-42e4-9413-a2c61d535f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25e6a84a-500d-49a4-89bf-828137a4d317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c611f-fe84-45a3-b854-b0428ea4e099",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97fd28c-356a-4122-9a06-1ec6a7491a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852e6a94-8701-474a-b792-49931e163ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09408a00-fed3-460c-8ebf-14e834ce11cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1346e224-4d36-483c-b8d0-4dc6b7805c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e18b29-14f5-45c4-88b3-0ceadd186546",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5bf540-9c4a-433b-9005-b0a3db7b130d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccde69ba-7adc-4167-a7fb-625eb36cd8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ae809e-fb52-4441-8da8-5fa1b6ec1933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a85bd1-44f7-44fe-898e-a4329c52d88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eef0dc6-c5b3-4f59-95ef-d91f228cb90d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a64770-e556-4000-8505-2b7a89e8d34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ea827a-c2eb-4475-8f5b-b2f4a6d36008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76deeeab-fd74-4dec-a6c0-484d22e78f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bfee86-3218-431c-93d8-c101ec7b0497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7aee61-f46b-48c2-a8dd-d89fbede5cfd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535be919-e428-4538-b65d-28773096805f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56def298-e57d-4d2d-916c-ef6d9ae6d18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e9c11d-fa5d-4f9f-9ab0-e23fa8f80557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a46f04-f319-47e2-8d04-5a57d5341adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc02491-fb72-4750-80ca-9355e918d5c3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39ce6b3-4140-449d-a08a-195a75e6fe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9991ad0-fa11-4a70-bbab-c5cd73e058d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b43153-3e75-4299-a316-0d7105e5930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6dcf8b6-1c7b-4123-b53c-886ca7f0d869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a93a547-1439-436f-8d52-dfb4e0d70617",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be91b172-60c0-4a58-9174-8e146bd1fbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39c3de7-c8c0-4f16-8625-eb0bad1f9dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4465a9-ed72-409a-847b-268aba06ce7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f73828-8d89-4c66-b3c0-89a705fca99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dfecab-b837-4e95-b2d6-9db24f8e1f98",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5f1237-28df-476e-b8d3-fad87e745123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f79790-d6c8-41f1-ae15-ac559b1f9246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3260889-5832-4312-8444-4ddd6087d3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb1de89-f882-473b-9f63-e18d837193c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30878dc-369b-4952-9a2c-6dca503c33c4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e683a5f0-cb50-4898-be7c-da3f074e1138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046725bc-a949-44c5-9ff2-ca80487a505c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba890e10-ad14-4019-a522-03f0e143491f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "08408d92-f554-4a5e-8afa-a98960ca834e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117fec8b-e70d-447b-b706-ba7eb48bc40e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a893a01-ce03-4798-8e19-11001f0eec2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88cc2400-ad93-43ac-82bb-9dbcaf1dc240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642c99dc-9922-41ff-8a77-0a53163dceba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2410bf4b-a241-4fbd-881d-eee4ffc8ba04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae98fe22-b3cb-4f84-b836-b947ffcd6793",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c0763d-955b-4d81-9b90-42e3310139c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792e853c-fb2d-48c4-848f-a479c6a123fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5bd964-4965-476d-9916-1825760ae151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c11433bf-6eb2-425d-b6a5-57d7d5d07572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa45d43c-0a25-4795-b5b8-3c4c5de02324",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834650bf-b087-42d6-a5b3-9f2b2e40e65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122f6864-ee6a-4d78-9c2e-3a465a3240c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6619621-9b1e-45d8-a8dd-bb453e0d43f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e443ae-0292-4134-b2d0-f376c4189d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e621a945-ce4e-401e-bc28-0244aa67f263",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a065c4d-7afc-4d92-81e0-43bc3b4818fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4308d863-86f8-4fb1-bd25-0825d7dc7ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa526a9-f383-42d8-9141-a0bc11776f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1c5369-5e98-4b74-807d-8c6bb395c3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5ac3b3-ebb9-488f-be38-23f8cdcfaf6c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90074fa6-7f49-4a2f-8bc4-aafa0c0e60c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8c3d98-cb26-44d5-9ac7-c0dfce36d204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a86b65a-f7f9-46c3-a745-2a4e51cae036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa78a81-5084-4d55-9cd9-12cdfb1f4f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c3c99e-e774-443c-b2a3-e578859bad88",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c50099-7c99-4e9d-9e03-43b79e4dfab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0eb065-29f5-47e7-974d-8e44ffc6bd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16751da-eb61-4f96-8ab3-570f67fa88b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bca333af-ca78-4456-b2c4-f2c7facd571f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591f9610-762d-4a19-9d17-0d07ff3b6ac2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f190f40-9f5a-48b3-a515-0dc73c3903c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9688c00a-5eab-417e-a654-7f63dc975125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd565b8e-cbeb-4658-b334-3f32e7b74426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "014d87d2-482b-46ec-9092-51ed6266405b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b1f32c-e2fa-46e2-bd52-128ffd5c4f50",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bad05f2-e72e-4605-b583-4dfb76b42eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fb8202-7a1a-4ba1-821a-a07fb9d1e04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bdbc42-8e7a-4aa4-a781-965ccf273bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f13d8fd0-2e88-4052-9ce7-bd362e20b1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9435b172-724e-4632-8fb0-5428cea1b6a6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fd5831-7183-498b-9c92-b13bf7d3fd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bb0be1-1293-40b9-b633-9fadd2d3c398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c60b83-79aa-497d-b93c-e066b3f79635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0a472f-1579-4b01-9e5b-9f10e171686e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689b7097-a295-4692-ac4e-3c9063fbdd2a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5064acc7-154b-45a1-a10d-69a504ebe351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c02cac2-6846-430c-93c5-e07c2eb7c267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b329220c-7bde-4f3e-8b32-e6880b42c689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cce266-f59a-439e-9e45-24cc2f7943d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fb0e25-0f30-47f7-9506-985e53bff22e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e5a9cb-9140-41c7-8498-7bed50fe31c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752ec420-152e-4f84-8e0c-0868b4404683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1213191-4bab-4db4-9623-b267780c198c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b55cc4c-9ea9-4093-a1b6-369defe4c686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5669a068-61df-4bcb-8ad4-254ea2f048e9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb665ec-1045-4d5a-bc63-d9df0ad2f08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b658308-dbdb-4fdd-a7e9-872213f880c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152964cf-c5c9-4985-ba1c-569eefad1351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dddfc6a-d7d0-4750-96b5-cef02601b087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115807d4-a781-434d-b639-9796023a1044",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13aea60-9aaa-47fd-a32c-a1b7674bfcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2118c3a-0b56-4d59-bbae-fdae87cb9278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b49cbd-d668-4980-86de-093961f0a4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c48e82-f1b2-4570-9b3f-e74858a1352b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bbad1f-dea5-4f36-905c-220f74f0b1db",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009d91ca-184f-4034-96ae-88530387a22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f81e1b8-ff5c-48e6-bdd5-06bf22484f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5574621e-f08d-4bf5-91e1-50b7688b2ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42fdc0ce-2919-4e7a-ae91-4f736198811b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713dd536-2c63-478d-81ca-9d26e94652ad",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde58164-7953-4511-a058-30163d6e648d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5b4069-0aed-46ea-bdef-57feafd9b456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583ca9fd-91b3-4d0a-a613-165652aabbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a53e1851-7c83-424a-9d8e-04a6d60f2d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da0e679-1a9d-4f0a-95f8-d711e079fd18",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a0e8c2-c18b-4696-b3d9-0da0a1cfc3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7b1e28-54f7-4987-9732-8869d2469770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771a6c73-53f5-4d9f-834b-ce822e3231f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "663b9d2c-b50b-48df-9af8-904219510e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1356d3-0a9b-4cdf-89b6-926af50f2352",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b274c022-3fb1-4c75-babc-6f4fc90e0c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a00d37-fcde-4953-a72e-9f6ddf1064c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1560b069-ae89-4a7b-8afc-a0860cf85d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "302cf410-08a9-4a28-ac9c-70b684c814e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e2a225-fa8e-453d-bc82-269d008d2bf2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13978f6e-ef1d-48ad-9e26-579b709c3f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedcafb3-a0bf-4de0-8c9b-4163632ec3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29956ec-a7c2-47d3-b335-9e942a2d244b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14b1c061-5b74-42eb-b744-8820e9a8c7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa7c0a4-d880-4489-a001-35b4d7d0d837",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fac0f4-285e-4156-ae1f-1a7106066e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a66457-e34b-43e3-acc2-de117a4f9d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fb5b52-d807-4b8d-a836-77f7ff93f46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "014bb983-c1b8-4e07-912f-ebf913b36ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026a8efb-d9d3-4dfe-8eab-3f80d5c83377",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc51b64-3ff2-4647-8c03-50ba05605a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4d67bc-c0de-4d84-ab40-cff401160fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3231dc9b-44d4-45c8-95fd-292cdae690a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "372bf4dc-6efc-478a-b676-00f1d483de40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da161807-23a7-4d38-835a-d4837580404e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa2aa44-caa3-4a73-a8c0-974822927d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532bcddd-e486-4f00-b0c0-b9f2a0df7d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a88f8c-476b-40d5-82ab-faf3402957ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecab7db-c86d-4c17-9c6a-97dd31634847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67471bd-6b57-44f7-a89e-875afbf99ea3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c71dc5-8e67-422f-9aa1-8e2a88f1ff95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b172c7-5b02-4adb-819b-42c03814668f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099254dc-1f4d-49b3-99af-e7fd2bbce98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd22531-49a4-420d-a0c6-db55bcc240e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118ef574-41d7-4751-a28b-584c356f788e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5f501f-468a-4f95-af4a-05f8206135df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af262c4-0cf1-4139-a8d0-d2e24193ae84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3001f610-418e-4b50-97cb-7c6e7624da47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9877fd27-2f63-4eec-a29d-df44af4ca136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf6bb4f-b8c2-4d10-89c2-26e400178ada",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682d5c8c-663a-44fa-b31a-0e65538b7c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc6b8a7-e4de-41b9-ba8f-54bd94e3a010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f37b30-2363-4551-87c8-037f45817df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9e18d0-8037-4f5e-86f5-c2dcf150ed64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1309f000-71e6-4031-9d72-bc244946e51e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554001c0-c32b-4460-93f3-c407bfc46082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ae0f3b-a432-4bb8-94fe-322d6a6b92e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1b61f2-7b4e-45dc-98c1-d54a7ab6d4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a584a91-3fcd-435e-9511-78dd874899c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004d8e33-bc95-43b2-aea3-40f2491f57a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce850617-3c2c-43ce-9c40-2247cedd09b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83792c5c-4a1c-47f0-a4e7-7f27d3429ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e31177-020e-4356-a23f-e6c4bab90b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0790d41-0838-4665-8b47-bacbc7216a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f09ac6-098e-4440-b140-1249ca0c366e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e3fdb2-0887-4467-9e74-5e998aedb3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfeae38e-eaf5-4924-9864-a46600d83dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9fe0e3-0bac-4fdc-ab5c-06251411a5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd050cf8-8b46-4ff5-8405-0d7afdf77cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612bd844-0bde-4035-b127-9065cbeddc6f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7cf29f-295e-4a0b-b98b-4376c679dd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c457352-71e7-405d-942a-fa1f012cb911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081a0ca8-a202-4852-ba69-4a4ee3f38832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7363d418-5f1e-44a4-a93d-af0a12c6a777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6febb0b0-ef96-456f-bb96-2a42ed3f1951",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232240de-1cd7-4184-8b6d-fb7d08b34bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c246a8a7-10c5-4cf2-82cf-9b9e2c37b285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d846dde-3ff2-44fc-b618-c73b2d27277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "588341aa-1236-4c18-9b2a-aea0a2057cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6836166f-3a4c-433c-b8b6-5273daf3eff2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebb1828-8f2e-4feb-a7e3-74ceca0f5fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c4f052-d506-445d-a1fd-1d265bfdb8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbf9cbe-78eb-4c8f-8e2c-1211013a764c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "530edf55-dbd5-4b0f-8ed2-597596a32764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e26453-b4ed-4f00-9571-af1179ec8795",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc95819-4a99-4c88-b471-acb1c5b21264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a397aaeb-2c97-4010-9ece-6849c8ec65ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081cee62-54e1-404e-8785-da31d8e73ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56cce301-29c2-4dbc-bc24-2ad89fd3c5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9ee953-205c-459b-bf52-645d376d5781",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d0dc21-a3db-47ff-a2b8-652fbd4ffdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61398a41-cbfb-488e-b413-bf4b5b882d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca990e2e-1acf-4c77-8128-7fdfa968f47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0b1b8f-9fed-402f-8a2b-f77be8cb4dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5320fe8e-de76-4e27-ba98-8aa2a936a0e4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e8656e-6951-477c-8552-3c2658541d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d28b65-82e3-4156-8218-492c21d77a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f21a71-63f9-4772-9935-09a7db7ff433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "308a828d-fe7c-4394-85c5-f51854632b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5484fb-d497-48ff-9baa-2312b1edf7d3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8afc189-90d3-459a-89b2-d148e6d9c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d80957a-5b2c-4ced-99f5-fc71b78347d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f16e6b8-01c5-4ae0-b7a9-a6a2d03a97a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb40a95-8c42-4140-9083-fa84c4b2994f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717028b6-d2cf-4ce2-9dee-ebf7ea3f64ba",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb389dc-203d-42a8-b299-52227eab28f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f30a98b-bd1d-4547-b800-7d405768524f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef7f2f0-6ad6-40dd-a369-095e54dd373c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad6f2da-35ec-421c-806e-875e2122d381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ea4fe0-5af6-423c-acfe-090ed24909da",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539280ab-f7f3-4192-8454-36d1d7457af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fc0341-d8ae-4213-976c-04a4544c2d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc49158-2b08-416a-82ed-5573540e3374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9401ed1-abea-4f85-923b-56af3710639c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21979789-83bf-4d77-88ca-16e72d19f0d4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3daae9-2896-4407-a1ee-7ba6fa294d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba8ff88-37c4-43b8-b87c-db172a4f5648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312beb0e-10ea-4e4f-9f6b-f24313abcdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61567506-68a6-40dc-8e90-83afe564c4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee4209f-6548-4986-883a-55a656d89f76",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c0740b-ba6d-4ef9-97ef-708876ac0517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddb63fe-9c6a-486d-8d26-c701dad37d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a61936d-bf34-4823-885e-87cd8b64cb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2d45b5-0caa-446d-bdeb-75176b2639f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7417cf67-137e-442c-bf3e-87228596fe52",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586f4f4e-c5b6-4645-a498-58d56cbbea10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115f24f9-7af2-4dca-a49c-b050436ad36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657992f0-5c25-4209-8e3f-da1525b5c407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97a0e09a-1785-4940-b690-f9dfd11b8133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4fd4d1-af48-4c3e-8e83-f49bcfe45ef0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc1ad24-ecea-45e6-9693-d5311fc8a81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059d3a45-a5be-4dd4-a775-4f565663ce39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320c1396-a51a-43b4-b38f-28228e284072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01863b17-8eb9-4fd9-a3b3-d2b3c33d5071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb33a41-aa8c-4907-a661-e71474229cc4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d882b36-2ae1-4c28-8532-92114c736424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292fd2d0-98b4-407e-b567-48eef6cd56d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb928a0-48c3-4d27-9056-9f18871c11dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aacb262f-ff3e-4df6-8fab-65dd716d8723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4dbcdf-f95d-433d-8623-6756ee55cd96",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d945ceb-9cd8-4d49-aaa1-bef9fb28b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51265d1c-ab18-4dcf-85c9-41c93a70f67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa3e22f-3cdc-4f25-9682-6ba1c87deb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a340f3ba-7cb6-460f-a68f-559e24e7e900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6c8d92-0477-423c-b67c-f7f97698f28f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be493d80-b25d-410e-b8dc-dfccdb2df3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc8b75b-fcc5-4fa8-8eee-1486646a7579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8577d831-eccf-43d8-a83d-d0b287b146a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73cc77ec-bf5c-4ed7-9c5b-d59219883243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c21f887-bdd5-4f25-bc37-3350acf0ee4e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d344cf-72ea-45e8-b95c-48469993ad45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f94f9c-b93e-4fbf-b7eb-d00b0b74b1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e809b35-4bca-48ec-9825-8892001ca3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a88418-36aa-409a-baf9-0073db8080a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9829d1-b8fc-444d-bce1-b63eccc312f9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7872ebf1-14f6-475e-a93d-72617d5348a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f61c5c-fb65-46d7-ad6d-3b5991fd4518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4220ba56-41c5-4344-8249-706d85c4fe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b647f86d-765d-44df-abea-3679cb4208e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9002b300-ef86-450f-ac2e-6d89d0dc23e0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5c8523-a346-4aaa-b0a3-6a1e5fb6ea78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847e44e6-59e0-4bee-96ce-292fb7c9bf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0e53fa-d2c9-40ef-b634-a98d5f2aafae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "84417698-b4e6-43ad-ade3-e86e8d9efc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55721e47-a9cd-4c3b-96b8-cb4a43d40e1f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3216c11d-71a6-4123-8abd-084ac066bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394e73e0-036e-4017-ba38-3f70c5eb6972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3ce9f8-7de1-440a-a7b4-87fb49b38b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "513e0fd9-d440-4b0b-b6ef-92db5a497271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529605ea-034a-4f6b-bee8-ebb30d7b4538",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89b5bd0-f499-4541-8d56-7344e61a00df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a606c31e-12fd-4756-a3f6-fcbb8e00cfce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4253334-7833-47ad-b9eb-185866ec2f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3ce64d-5f46-4f58-ab85-f97febe0fa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51de750e-36ec-430c-a800-67f0fd3ae0cf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38db3ea5-c39b-4235-a8de-6405ad8c5900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7724ef-49cd-4116-9c46-d08dd35ad4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b7542-c8fa-46dc-a297-e34e0467cd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8a7bd8-808f-402a-80cc-ff48373d72df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e003bf-485b-47c5-b6d5-d11306427f73",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b279e9ce-2cc0-4adf-8949-0e4f0c0d6d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac3744a-5bfa-4a69-b245-896a4bc70a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be98b9f9-bd7d-4490-9157-5780d9eb21d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46d7c0fe-d619-4fd9-9897-2da43c0bdb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c0467c-3ce0-474b-930e-49c395612747",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6f076a-713e-4da1-b7a9-79fb2f357b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7764065-38b9-46fe-b7f4-ede04143ac5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6643b0-3772-478d-b239-c47d25946293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cda085cf-bc4e-4e3d-b3fb-c5347ca5198b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa528cbc-d2b1-4b99-b753-8b7d94f671a0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e453b81-a46d-4cd6-a17d-9cca54e100c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ffdc52-ac89-4d3b-8934-cea1f68bac33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ad41a7-548d-45cc-8feb-1bf392864c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "525244a9-8190-4187-abf2-3fff11d646bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f21885-5985-437f-8bc5-79d9d1ca8b3f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8c1bca-2e69-4a9b-99ac-4e97c9886b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04fabca-e4a7-4ca2-9071-dfe8207f6e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e128f78-f09c-4ef1-8c35-38c668451d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3b4df1-ae69-4569-a000-e758a56ba0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb3be7c-d4cf-4855-b8d1-233d662f7b35",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d137bfe7-cd11-4b0a-8def-369386176f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48421e4-0ad1-487f-a44f-8d085960b0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d305fa6-aea9-4195-b221-95fd9f3d20ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01309e6e-da12-4326-a70a-853c76148096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae09b52-6839-4c38-92b7-56e60f57fc6d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096a27e6-f5f4-4f55-935f-99e7a518b72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e7f639-ff50-4241-b244-978338b2b221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2d2c35-c2b3-4167-a515-51bbb1b7aa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df5f52cb-704d-44ef-91b0-26b2badf78ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e345d45-9faa-4349-ae70-d41446681289",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eaf9f1-11e5-4ae2-a1bd-94ca858c8fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3ab8ee-c2f1-4138-bc03-0edf7e8149f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad06ecb1-6b98-4e93-aac1-8a3d448c4aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8424e9-075b-4ad7-ba6a-c72bc152f2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8c6c51-eb59-4341-b7ae-dc3c6c52130f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9defbd78-ae4d-4474-891e-b3c79217b6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b8a70880-2e59-4384-9cea-234fc59e9ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6e87e3-bde6-4609-9151-37f4ba5e8cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "104b8280-4d3f-4900-8b4a-a603564238c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7c68404-4547-47bf-a069-80ccd4657fd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "330140cf-9fa3-4bb0-8def-e531356c25b3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57923c40-2c86-4cfe-b6cd-ffaa66b3bfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ebfe9bd-3bc7-4416-bc63-f6d9b52748ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b39b9d8-0f81-4b38-90e6-d7ffb87a9976",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03ff3b6d-60a4-4955-bfab-05427b9d0ad6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e85cfefd-1cba-414c-97c4-91da55a22383",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68399fcf-8b77-4b03-81d5-1894bd8c563c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd7ba71b-390a-4af2-9cb2-a86ad5fba629",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab60b3ca-a5bb-4638-9691-abc42c0ed988"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f9c40e9-ccc0-4990-ac90-37f4bc819704",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bb4d95f-789b-40aa-989f-5abef8e0c411"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ae8429b-6cd9-4d87-8cb8-0d009d828248",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87067c70-6dff-4c67-901d-787a6861b446"
                }
              }
            ]
          },
          {
            "id": "c1133434-c378-423b-a70b-4a77486b10b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be297eb7-7fea-4aeb-92ae-274722f0ffed",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6e3fd583-0b7e-4596-b92b-a7a356c51b54",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9798d58d-ace8-4513-b16c-c9076d6f23f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5aaeb0b9-a5c1-48eb-af32-48af09a44bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f7dea9-3d88-47a8-ae89-bc3fce05b936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c16404-46c5-4bc8-a669-298442d258b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7bd04f6e-1963-43cf-ab15-46d8c2ceb25a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41b1ba01-9f29-4961-b45e-377730ab8d91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "946a1ca1-98c1-4f82-884d-68e0e4b0542b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65dfbfba-d8d2-404a-8bcd-86e2737f5ead",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3287ebdf-7627-4801-a15e-8ac8b06dbfa1"
                    }
                  }
                ]
              },
              {
                "id": "30440af3-3400-4f89-bc83-2b9199af2367",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "765eb6ac-bdde-4f84-9bc0-e40ce8ab956e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed0a5c92-b3bd-4771-9fe7-c36511123537"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "287efe85-3d54-4a03-9aa2-96e5837d0798",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc46c93a-534d-4ceb-9c9b-0ae6c83ac15a"
                    }
                  }
                ]
              },
              {
                "id": "3b03d3a1-6f6d-45e6-9d8e-6c02159c7a61",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6725daaa-afab-4ac7-91c0-5aa2a58bf77a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "433c86c8-216a-4946-b55d-7bf49c6df230"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b75f72dd-9201-493c-aa99-53856883d624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "22a5e207-f38d-4aa4-be91-57b394870a20"
                    }
                  }
                ]
              },
              {
                "id": "78cff592-2774-49c9-93dd-2bdc2e12e3a6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "686d1519-b9f3-4fdc-b03e-9819deff6fcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b42947a-584c-4189-b18f-4c6e1fe8b58e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62f1df80-6f47-43a3-9bc0-f1b778e947b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "178dde74-0374-4934-afa1-7bdf0473dfa9"
                    }
                  }
                ]
              },
              {
                "id": "18d5e1ae-5765-425d-8062-d4c4e9575a09",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01df5714-ccc2-4378-b17c-b3a5faac515c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b5d0e34-2e35-452f-8e33-b4a74240c075"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59ecbedd-6130-4236-b625-e4f3dec4129c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7cb2c73d-ab91-473e-be14-4ef84a91280c"
                    }
                  }
                ]
              },
              {
                "id": "ec33d065-aa13-47b5-b726-6e6c03ba62ee",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52bcc6af-6e31-4ecf-b317-ad78452320d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "452774de-e087-4ec7-9d58-9ea208686e3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a00c9c03-0892-4cbe-9d4c-b7ca9148e0ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00e5f94b-5337-42a0-bf69-08b7e1d7db14"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a958781-6c36-4bea-a92e-fb19a341ae58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ab82a82-b664-485c-825c-b042edb8573c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f590c29-7bd1-467d-bb31-e831f4f786d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a95efbfd-f361-49b9-a048-39e678bec950"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac8dd5be-ac1e-4980-a3c9-06e723c0b369",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c027bde4-5038-4971-a3e0-683f640e9160"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9a47c04-20e9-4956-bcd4-2ab0e8451b9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66dfae0c-d67a-441d-a7cf-4662cd085687"
            }
          }
        ]
      },
      {
        "id": "d7a1577a-9070-4f58-89d3-f380cd9a3afc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b2fdbc9f-db84-4795-ab52-16581f6a09f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48da943d-0e05-4699-8fa4-65c593e2b0a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90fdb504-e041-4dad-a151-28ebc9c2030d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5433389b-1ce2-4cce-b4f7-416fdc5fd25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a2f12b-dfba-48a8-8629-f13e73dbe726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9f070e-e417-444a-b920-4c2ccfe255eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd19ac0-590f-4564-a902-c6ff93e53a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ed41e1-86a0-4690-8a42-4247355f689c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c5b417-e284-4193-8688-b6167af37e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a497a2d8-c207-4732-875e-c7d056fe5721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639dd60c-b1be-4305-a212-fa2cde23ec42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b6f104-242a-4d61-abdb-7a4fcaaedcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4937a913-7d4a-4f34-a79c-f3acfd5ef653",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f676e6-9e1f-4e0e-b687-4577d79c9ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece63a2d-75a2-4532-ad1b-1c7595c69ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6062a1-55f8-4957-bc5c-c360d72a484f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb66eb9-651d-47e3-8392-29914cd7e509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de48394a-461d-4093-9d13-2db7a289ec41",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a729e54-c20b-4752-ad8e-fd0a58fb4b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c697f91-57c4-4a82-a003-f21a6f7ec9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ddfd5e-6edc-4aa0-9563-9399153f4b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15a4f15c-0d14-49f9-b22c-b9e5ce812aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af9d2c3-f46a-400a-ac34-e92e394d990a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daf671b-b580-496c-a653-323efc289152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94bdac2-155a-4773-beb9-370cbed87858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5f1074-b6f2-433c-8ca3-ba6f36edc3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcb7059-1f3a-404f-b00f-5f01d01f05a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a6a657-9882-4130-a7c9-001946ce150f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9801d2d9-ab8e-42f0-b486-8c73da077ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a38bd83-c3ea-446c-bfdc-d5a14a9cb6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bac353-43fa-4f9b-9b7b-7b4518a294f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a732b5bc-2e75-4214-9590-336052f876d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483f4147-bd6d-4c64-bf21-c46a37819287",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cde561-fb87-4f59-a475-733a0ff2e37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bcd44e-0ba7-4574-be1c-deacac455488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9689592f-372b-44fc-ac3e-e4e9927c4f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5fefa6-f2c8-4950-84ba-db4bc1309a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a7797a-34ab-42fc-91b2-bbeb423999ae",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31877425-4245-4d4d-866e-29b813d403a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8c13cb-7df8-4d74-89ee-c43102d28c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24521c16-d570-4422-b458-c37353d517d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce8c4f2-5539-456a-b764-c07950570c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3fbca3-727e-4aa9-a997-6790fd4c3678",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154a8391-069b-4c65-92e2-52c079e17056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bd43e3-ee94-4be0-8bfd-72253bf5a3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14fc1d8-f11a-4a54-b33d-b9e6463c8dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15d861c9-521d-4201-99f0-9a0995a5e03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439cd675-ec2e-49d5-84aa-18a25405ace7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf41e9ba-dae0-42d0-b646-f4ba7b947450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002919cd-51cc-4d90-8fcd-918d32c3c1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627d3235-e418-46a0-9130-55820cb520bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2157d2d-7a7f-4dca-a9cd-93390af789bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2299e3-2b53-4131-980d-b6f1ebcb1f01",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdf4ab8-7c21-4d89-97a9-03bf637fc4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bded9159-2b65-455f-a35d-8e6a764c9d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cc571c-275c-4a14-acb9-92356074fa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aaaf67d5-1fc8-401f-ae1b-581470684c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d24dc9-6df7-490d-811c-99e2619c99c3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba13453-d9e3-4d54-9a68-cfd04f3270f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4d6927-64cd-49c3-bafb-5651e1de44df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93d1b9a-6456-4133-9c88-b7e10814c8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b20352c6-8cfd-44f4-91da-30eb8f1f36f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a0d49e-f102-4cd9-8701-5be26998f512",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b71c78b-b2bb-4fe6-a08a-582246ac3cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df2fcae-cf32-4530-bf95-7647c08866db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebc6bac-5b5c-4857-8765-067e7335e3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5e1e69-4c7b-4eaa-a077-87921ad7a018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6c03b3-629a-473d-9929-76751b910930",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6af907-c35f-40c8-9440-8513f9034deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67e0593-8b26-4eff-b371-5a03cc83753a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9864973-8d8c-4ae2-8de3-a33e615e6f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e163bf-9fd2-42b6-872d-aa1ca14b9880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736a478e-c1aa-450d-a0fd-49120d50c9ed",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942c859-67c8-4a8f-aba7-1915ca760e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ab047e-182e-45d2-9f64-135c19bfe098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a3763c-a29a-43c9-a541-ef70e18cbab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5524eda-11f3-4c16-970f-511bb025ca34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84978822-9da3-4d83-bc94-231ace9427c0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456146cc-0323-4719-bb14-68f9196d7ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b196385-db52-4516-8363-101dfabcf088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a26a5b3-5777-47f6-80de-a117da1b3c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc65c260-c6d9-4cd6-824c-49a90f5805e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8835a8-1795-4007-8cf0-8f26d0126cd2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbc7a64-b6ec-4875-8903-c9fb52eb3dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1980e1db-fee0-4114-bac1-f58f8d086b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa55ac6-98ce-40fa-9aee-894c0f030273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee75792a-ff39-4720-b25c-7f329395bfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f306f1-83eb-4dca-879c-e0a52ce87bc2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614af5ca-6aab-43c7-b369-09567ec87d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bea8e54-e5fd-4b47-b214-b478b441e56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0e4e08-1caa-4547-b477-426d98aed499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83dbbd43-38ef-4866-a308-da38abca265c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6626d5-bf22-4f11-8c44-5c741050deb1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c63716e-16b3-4d67-ae00-096aa5651eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661cd2c7-048a-40df-94e1-b21f62ec77ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eca707-df9f-4d56-abc4-035596f6cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89510636-f64c-4672-a102-6022dca5eb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c67911-dfab-46ae-a205-c4fe3e97e97d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc7131b-3170-4b66-bba7-fc7b2f25be79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda981b6-8bc8-4340-9b49-9ef536fb0f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e65016f-de5a-4cb8-a71d-73a1bdd2dde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9023e67-fe30-4109-8571-7ccca5da5cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342e9844-b8cb-4550-9183-cbf91d50485c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07762a8c-d0d0-47c8-9298-d07508d8e571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331d73c8-7c43-49a8-bf9f-8bd6f78c78a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa331ce-4aa8-4824-aa9f-fc0f42f4c693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea144f5e-1076-45e1-b24d-3e69a6d0c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d4a575-26b6-42cb-a24c-d12dbb0efa3f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3bfd16-cce6-47bf-916a-1feb1eff643a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b3d8bd-329f-438a-9ce6-2dc24a6cb618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6443c5-138b-4348-84bc-587dcba1811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f40eb590-10b9-404e-8fb5-f6a3ba2a86fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d14010-6b7f-4ef1-ac6b-fa6762112bc0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b73dfa-c108-4264-8e7e-f3ae9d33be01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1675cf6-52b8-4b68-8385-c2fd3e316da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7d88e2-d00a-41fc-96f7-c46f24b03611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ebbf2f-1bb8-4f5d-bb35-746df8e5cd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e4ccf1-8e89-461a-9563-c6a293becc5e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4090cc-fbae-444c-88c6-5d09a04bc2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb21ee6-5fb9-490f-8e5b-cc235ba156c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a1ccd2-ca07-4ecc-bf0b-e5ca1517789a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c531467-ff26-42d6-b869-f5639eac2d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce59818-bd8f-4f54-bcf8-0ea59dbdc83a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff91edea-91e7-4abc-8d30-b6a0bb12a435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7837fc7b-1b56-496e-8483-d35311c97849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582971f7-5601-493b-a276-5b9158b08cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44bf136e-3fb2-489f-9d33-68e4857635a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61e7afe-0233-44fc-8e0e-0d44237029cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bf78b0-c25d-42f3-be15-9ff18ba3e421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29df7db-a4cc-4160-849b-6e9f1ceff39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6385542-da20-4030-b1e2-7f4fc3d232b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eaa44db-d2e3-41cd-92a6-954364701b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ae0470-af44-4d8e-8d10-735431c41744",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f327eb5f-5be2-42ab-aae0-5d6a0e1ad228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c022a0e5-6225-4258-8cff-6627e0c2e565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2f5820-ccf1-4ad8-9ba9-b7591ac27938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0398987c-4ba4-4689-a502-20ffd729caab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91c93da-940e-466e-872c-9d0549e0e04b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7817759-b8ff-43f6-8dc4-04df9d747d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7d4db4-842b-45d1-9246-b18c045b1d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1c4ae2-e7d1-4567-88ae-3e3cfac57b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6eb2d24-9d85-4324-99d5-833a38a0f3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183bb18e-657c-4cc4-ac75-17472bf09d29",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dbc8a2-68e5-43e8-aa3d-37cbb0a0a54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c5e46a-b302-4a44-b424-60cf144e996f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8dd922-4808-4ff4-b851-649341652bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab901b3-eeac-49d2-bf34-0344eafd0a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe874b3-bd71-4149-a506-b387df533e0d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c3eb49-8273-4652-9950-6d8af0dccf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff4a705-ce1a-4d30-9556-c8227a9f2639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1e6ae4-7cab-40e9-bf06-773c4df8e6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4921e1-5f78-471c-a77a-45ca3169301b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7855a191-f604-4257-bd5d-88fc6490702d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be45461-10fe-434b-af56-d279494d0c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd0bba4-a55a-4272-ae93-a871c5cf8621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd160f6-5ef9-4971-853d-2577ae239541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "314c3800-761a-421b-8f2c-cf9a0fdb4102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15df5b55-4c8b-47fc-b5db-8af1dcb1f7c5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6091972-5e68-457c-a691-76dccf00a2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a6df94-58ec-49b6-9967-4069c584af1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9b823a-7abf-49ed-8f08-93ec6bf6e0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad000ea-e810-4fce-a781-9abaca204d9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23d89fab-36d3-4eef-8650-f04cdacd70da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53f97334-3c7a-4ef0-ad2e-ce4a9632655b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c39b206-2dff-4899-b4bb-1343b7e627c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f3037a13-e439-49f7-8dae-6ca47bb3549d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d48cd8-cf3c-4250-b1e1-084946c0f3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e64f4ff7-5af6-44f3-8dcd-33a6be89450f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44040d93-1b27-4671-9682-6b8cc92d9db7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "587b0274-2675-4a6a-ab8a-6b47094d6f1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab919c67-a66a-4ce7-b1d2-7166b11f215e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e15cfdbe-5aac-4537-8a0d-4cced0d4e567"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1d2a147-007e-4a13-aa28-04f431e445a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be1d8429-e878-4db6-85ae-dea1b4981314"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06238ac3-c295-4fc3-847c-c30bcbffe800",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16f7e3bb-1210-4d3b-93a6-801acd7f7917"
            }
          }
        ]
      },
      {
        "id": "de271369-0d18-4f6c-8d8f-c494e7499b2e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "960a9524-f87f-455a-88de-4b57e0b054df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3fbee0c-16e5-492f-9951-cd6f9c47bf49",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0ca4c48-1b59-4580-a2d7-7c40b28ce710",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e146c1-4be0-44c2-9b90-4a6a55068d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b6af77-9f59-4567-9488-c15665f5fbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a758f9-53a5-4c23-9cf7-87786ba586eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f94c6b-e0bb-41ca-9a57-0d1855ac16c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecfa53a-ba9c-401e-a436-b5a6cac9a4df",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066aef1b-1798-41ee-a0f3-c84920586d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ce35fc-731b-41cb-8a1a-4d8b8412203d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38846c9-2844-4956-861e-0f97de047aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a007d5-cda8-41e7-83a4-617878e8905f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c741938d-6a58-4689-ad58-48a45fdbaa20",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b6e3f7-df4d-4fab-8861-b48a2b6db300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f53e45-b330-4913-a6c0-994dca3da849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d71ace8-bdc4-4054-bb09-9c540b56aff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e691121-a796-4483-aaae-64d8e2f31778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce21ae7-8056-46a3-9f4d-afe2abb94e7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1865d8-47c0-47cf-baa9-8a70750c2c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbf9344-bb37-4d77-8d6b-3f415478afe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a629f6-285a-49ed-96d4-764bf90fda36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a12d23-0fc5-4290-bd6d-67a39da3b30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2069ada0-3494-4300-907e-c656f283f053",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532192c3-da3e-4d4d-b2cd-a8e543a29487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c545e630-a218-45a4-a021-35f4fe09e827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53ccb99-087c-4c72-be4e-0c3b325489e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "117086ac-642d-4b71-87bd-3a52493e44b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aca6d71-010c-4afe-ac11-9c69ceb92d8d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab17b12-9c3d-46ac-bbd3-9b9c9dc5132e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d080aeab-8c12-4d3c-8d34-be0d94a82b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80378d12-9612-4245-b3b6-a51d868a1819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e30bc83-ce40-433a-b330-c09af0062a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c49d5c5-5865-41cb-b6c0-c81947236422",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fb6f81-cd40-49fa-83f4-8bf6a4e7e142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090096da-826b-415b-81c2-6b5cff13bfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3c6fd0-8a0d-4c27-802c-8d5656a11c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c60fad8d-f3ce-4cb6-a578-f98fb4245815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8877f7ae-9911-4c39-b635-cb6e1bfc7d9a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf6e8da-7316-4e12-8018-d75e573d7501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196790de-97a1-48c1-bf15-7c910302ec7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41210de7-90d6-495b-a839-89c8b975f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82d5974d-5bc3-43d5-b67d-7c60ca00e04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9f8e71-32de-447d-9d8d-3e878e3d6586",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4656c626-35da-4ce5-bfd5-7c8c3820cb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04ef723-a898-467e-a3cb-8d2abfb452b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c873171-e59b-437c-a17d-c4cba761fe05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "629f266f-9d96-46f8-98e0-79b577c650ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619321a7-a549-4cd4-a13e-8abb53bb04bd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee851bc-123c-427f-a5e3-b1738d8d61c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa33a97-449e-4cd7-9adb-6b802fce5e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293b9b8e-100d-4c9c-ad62-2c6736fcb300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f040720e-b261-4d69-af9e-63fab8e13b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143032e8-85cd-49b2-a4ec-7c7236ca114e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84821ae3-e619-4813-a0d8-f85efad3eabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f51da0-8f0e-40aa-9b62-7fb272be2301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c838d862-0d64-48f3-9ac5-cdf20564f2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc9db8c-6f6a-4cea-a28b-2060e9f6f333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076904c5-881f-46d3-a335-458bdac8d976",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e431bde8-dddb-4b08-9bab-f6716a7554b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff625b6-37d9-4e03-8cc5-7c26753b4523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3fb216-e753-418f-b205-0757a892c4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a5b0b1-5a92-49f6-8ead-723bfbe64e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d454ce-3d44-436b-8593-f5dd2adfa718",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8202428-785e-41e5-86cb-dfe757ed6b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acab4329-4b0a-458a-b378-75ef5b39be19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39cccb0-d451-4359-805c-4705ae251ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9f4815-c4b7-452b-bc35-8ac43747685a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0ebb24-3f6b-4f4f-aa58-0123fe2ae908",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45d973b-7f93-48d3-9534-71f84fe8e931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74d042e-ce94-41ff-9c1f-a970cfe80de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4073ced4-03e3-4ed0-a996-746adfaf3500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eff709c-0599-4d31-9a0e-49b0fe73b893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b00894-15b8-48ff-8d8a-f5d53891d61e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a76b4a-b193-498b-afa9-d024714b8d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0cbae8-9fb8-4c29-8ca1-886788e2052c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7149a41-6eef-4c4b-9cbc-e01c6e16c9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae539bf-102a-4230-9d91-6b1f0639f613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f13520-7732-4f4f-b4a5-c73642d505ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5babe40-f025-457f-b4c7-9d8e2559bbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6be0f32-20e8-45e5-9e02-9924e4ecd9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a604d9a1-28df-45c4-89bf-27823e5918eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dfc99c-9298-460a-89c5-142ab804af5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda72a93-c221-4944-9a2c-0a51799281a6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab20b2c-3a11-4505-a554-dddcfa624a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c40ad50-989b-495f-918c-47a71cbb3a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cf390d-639a-40cf-b1e8-4dc198a7ee9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "937d1df3-b6d1-4f7a-9492-d1b2a73ece82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564baf53-5d39-429b-96aa-44ba3913d9e7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a6e362-6262-45b7-a483-93bcce88d07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22479f0-59fb-43bc-990a-0ec298046eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5ccbce-c090-47a1-8031-156037f50a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb58d9f8-dd1b-46aa-b589-d0c49124c3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327020ee-71bd-430c-9044-caf249f999f2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4331acdb-a91d-4a5c-9460-c88afeba4304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc08a357-81e5-477e-8e54-4c59fccaa1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a240fd26-df22-4521-a050-d05e2e7d536c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81157a2e-c2c3-476e-9e82-018a3c732826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de287392-fe78-4ef3-a00d-4ddd467324d5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb14fd5-a3a9-4906-8e9d-2a69337025b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af32c492-ead8-4fa8-9786-5dd306d852b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d543c491-2bb9-43d9-884f-f04b4708e667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf0d857-0bb3-4133-a005-a4ee5bcbeda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51339cbb-3e11-40f7-a9a8-ac9970890dda",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b233edf9-5c0b-471d-aaab-1b5454a2ab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c13d64b-62d4-4afd-a131-f7996bad05a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e4a763-2e17-4bc3-9ea9-ae5635e9a28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98be7b1e-3781-481d-bdc8-3d34a6803941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfac84a9-fa95-43c8-83d7-a6a819fa4b61",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8af027-f586-41c3-b638-d3f91a3f5834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e67f8b-5155-4a27-8111-93475ebee080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117015f3-d95d-46de-bbf9-bd6e7df60e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4846d2-4b47-4b78-bdfb-df43fc4d1509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6265d1ff-910b-40f3-9c16-f58a63abc4e7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4963409f-6213-4bc4-9a44-4b41f9c90ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daae4129-cbb4-4d60-9303-ce2aa4c72460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a2d672-00f9-4f35-b0cd-c0543813991f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "743c9bf2-41c8-4d89-b25b-db3630cd7fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37ca163-d013-4f17-b367-a8ee37eca1ea",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859225a2-f98d-4706-a9c3-b826c3f5944f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef57ee04-8256-4446-8b08-974cbee9cab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf84edf-1392-4a52-a232-72701deda742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "176140bd-4abf-4712-adb8-051dd3b15cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8ee31c-8c53-462d-9749-2e8550fac645",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562e3734-6991-4341-ab95-40c13c16b7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b484c5b8-1174-4e80-b1ad-b222f5f4f8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da7dffb-2a3c-43ae-a169-14d9bcc7e215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c22301-1362-4665-bd06-4ef3b0cecc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3596437f-113d-4b2f-a5a2-6710818a1400",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de38aec-c426-4c8a-89a3-b59006501dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608242ef-ea49-40d6-a276-4502043e534d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882176b2-1aa9-4af4-98f4-2066c30d8446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3df3bb-195c-4b55-98d4-0f3a71b1e163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd2f1aa-fcd0-4e26-9363-38eb751360d4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5da2b08-5595-48bc-8e3a-4825c3f5c220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64bd820-3e51-48f6-9303-4237486b8c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca504d8-0c89-4dbb-9560-03bf677a0293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b36449c6-132c-4b67-ad13-4b0e302a5e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957f5808-53c9-4fcc-8e5b-da96eea8337c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c40c2b2-7697-4420-a991-328149d17813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae59ef2-e749-44dd-be04-2152420d1793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a81da4-99bf-42ab-9906-b3f94bf3da62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd8a024-5406-4732-ae16-c438740a51c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647dca20-0075-4541-8e01-6de2036df225",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ccd6cf-5a5d-436d-8732-bf851995c600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c551ab-4b72-47b3-b1d9-57b112ecb84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23908df8-4f76-4e8c-a1a6-868abb409a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42d8f3e-1966-42e8-9871-ee91e78ed979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b76a461-f0ad-4c84-a16a-92c8de740d51",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054ab9df-00d8-4aa1-b037-fdfa0893fafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747a0177-dde7-4f8d-a08d-47dfbf5477ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c0eeae-af1b-4e7c-abe7-f96533234c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e18f33-3d82-4b49-bb7f-b6d9fb991044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8da335e-d447-4713-8d83-cc22a79ca2c6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fa67bb-c5d5-4d5e-8b8c-f1d7fa77b61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba66b05-7987-461d-9de1-0c0ac63cbfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dca6303-bdc0-43e0-9c97-4cc33ba4cf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e70b38-8083-41cb-ac42-5bacbf5e1df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a19859-8c3d-4665-8193-4380ea9e5c42",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfee206-cac7-494d-a2b4-823008070523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0c86ff-0e24-41e6-bd9b-c9fbde45bcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be53815-4a09-4a2b-86f9-1d5bd6ef870b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "622d4e3e-c255-4f1c-8b10-420dec2bfc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef8b948-cdb4-4e38-813b-840a55262527",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b63361a-e3ea-4874-b3a8-d2a5388d45be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ae5723-4cfd-4dfd-b1b6-9cb06482be85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1800bac-30bf-4ae1-9fbf-c4d7f542e870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "376934fd-5784-417f-82d3-3960987c5970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebfbaec-3e30-40fb-9577-e57a0162df1f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866cb069-ab9b-4116-8a5a-7ad3a218bfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9764f4-d7c6-4f0e-b85d-f3f161220ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a453e8-9f89-41ca-9e1f-98e72873bfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52567151-9b38-4f53-8268-84ca2400010f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53e8ac7-595b-4bb0-af4c-ff7651f0c1da",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1849160b-1373-4418-9df3-373f2a9026cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d61447b-3f98-468e-8c64-16ad1573afd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195ffbef-ad46-413f-b457-63300527cf02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c72390e-4f64-488e-a4da-dea33eff43cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7736af7-ca68-4c60-8652-908727324434",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2e6012-f25f-4b43-9d69-7cc2038f65d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23d8c54-16dd-4ee4-bcc4-677beb932b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3741abe-c834-4e88-b61a-d7ee3af29c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "105fe9b8-385e-49d2-b9ca-b612817a6ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77ea62a-e1b2-4158-992d-6cee3174d4dc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c449fa19-3636-437e-adb0-854e5bf27a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ce561f-99e7-4bd6-bffe-105e5f68cc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c6bddb-826b-4628-bff1-0bfaf185b724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc66f99-8eed-4853-8151-507c9e37ba28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c169dbb-8e63-49ed-b7ca-fab63d04e61f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8452bad3-c652-422c-8edd-03f4d8d292e1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707357a6-659e-4986-80ff-d99e68fc7e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "89c09e61-f604-448e-b41e-6d795676557c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557ed28c-5b11-4bab-a178-c4f9a609d286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36a54ce3-ede2-4066-9863-887380dfc9e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "721b8afe-c6f5-4660-a036-8c8c50d264d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "303e7210-dfef-42e4-986c-765645226906"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "614960fb-1935-433c-9a38-44c26cd2e02f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abac23ac-eaf6-41d0-9235-8734a923d083"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d3c606f-d0b2-4eed-9094-00a0867898d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88b4d74a-2c53-4995-b3f6-d506309bb605"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4076008c-16b2-468b-b89f-230e20e8709b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58b0276a-b9c9-4088-a584-503406436958"
            }
          }
        ]
      },
      {
        "id": "6927e651-8434-4f99-986c-dba2606e2e09",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1bdf1c09-8a45-4732-be81-3f495d5c2291",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74f0f76c-c492-40cf-a84e-0ede965d424a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88e787fe-f8a7-4e19-a3cc-b153e6f47590",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc5f940-83e8-4ce8-82f6-086e05275327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41e34ea-2e0c-4058-9afe-b8e800736488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd40916-f513-4836-aa01-2667b29ad27f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0fa8db-880b-4d45-aed9-a8b5236cc7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab5af6e-ef13-43a3-a88b-2948d9e9a44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d188893-f870-4a0a-9917-9f1f3bc7f549",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b42968d-8ccb-4681-ad41-b413c5baef86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9022204-75a6-4d86-9777-f667b054a6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfcf8eb-a543-45d2-9382-a5d596586046",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ead10e8-c698-4a99-a243-523578d22bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf6501b-666c-4229-b131-d834af9b3ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58db4645-b439-41b7-b9dd-e95144be0699",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bcc30c-0603-4c42-a5b7-162310125b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63da2ae-906a-403d-9981-ea93f6eb50a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073601a7-ddd8-4917-80d0-f1dda84e44e2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234ee59b-932b-4dda-9d02-39e7796290c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d548fb-ea35-4e80-9e17-7f48b921938f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8df0390-6c29-47bd-abde-931c91dd157f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5f7dde-2ff9-4c6c-bedd-6c39a064eaba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0499c51c-a027-4e02-8752-794bb83a0f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2da960e-8cdc-4979-b254-d9a9c220a318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10c5c2d-c855-45c3-8166-d5d1ab748646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fc55bd-5094-417f-807a-fa52cccd3ed8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8451df6c-91eb-484e-bc15-db9bfe17d712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26cc1fd7-abf2-4259-b27b-6c4bb629b967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb59f7aa-7e88-4c23-8022-ad5e3710973a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e830781e-a1a7-42eb-ad8c-e90da690a321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d42da4-3acc-484a-af08-58abaa1e4b33",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fad24b-617d-4fdc-b0d7-b4ae306c7eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44386070-0404-47dd-9c84-0c5c74ae6148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433bce84-3b6a-4ed7-ba5b-8dcbf88af3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911560d5-8693-43ab-adf5-80739a78bd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5607f349-bf42-4cfd-8d98-6dc5c73e9965",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073f6630-8960-4e22-98f1-07c0c413a176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f334bd1e-ec0d-4da9-88ae-690ae7dbd7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5525ce02-c4a5-4c63-b356-5e9b0da3d37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c1ffe6-396d-4981-8384-de7295224d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae090ad4-3a99-4b97-953d-000540333815",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76bc015-3524-4856-aae5-a74f7a126298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6975848-1ff3-4cd9-93f9-7c60ae9e03ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c15174-d49a-4003-901b-ee1117ca9229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c6a44a-af08-4141-8008-48fa04a88c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2504128f-a1c0-4b2e-9964-0b3ea50c04b6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086f2369-e9e0-4a3e-b48a-2b0017b9a549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed78eb58-54d1-4b95-a871-3a936a3f8d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4225e86-6087-48d2-8141-4b057fbb9bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413c0653-ce41-4ae5-b7ae-d879e5913e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89007105-a15c-4bbb-a2d1-5da8d8082957",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b5d834-710b-433f-90f9-d72e44a226a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "986eddcf-92ee-475b-bbb3-4ab99b78f90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feef5ac5-1fce-445b-b984-12008147fd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12991044-9117-458b-8aa9-d87a491d6432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38459426-65e1-44ae-83cd-587d060c17fd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78afa960-d9f7-4a7b-9523-dbeb9f5aea32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c6af73-7db0-40b0-af38-bf2bcd8beb51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2e5dac-8365-419e-9662-dca2b8219ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f220f59-1cdc-40f0-9bcd-98eedc4332b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15146ea8-753b-4164-844e-543f4045a9b2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceed9b3a-24ad-44c3-a71f-07ab3770aed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641141fd-94b7-418b-aefa-9ecd8d97487a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68507fe9-7203-47b1-9b16-1b0ac1fb2494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf008d1-30b7-4c8f-922a-0107793ccb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68b467d-cd0b-4934-a5b3-cb714e8e4108",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89494680-f31c-474c-bee9-bb0ffd70a593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb2c844-e233-4d12-9717-cdfdc559e499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293fc106-f23c-4676-b2bf-401bd9681a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3901ee5-d022-4eed-b530-531b90a3d2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9eaaa17-e905-4af0-b622-d14c478c464b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5334bf-c418-4795-8738-e03238afa99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18a8a9e-bf22-4df5-9610-7979e36da343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d026664f-df4a-44b0-a922-146357bab290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e620645-4c30-44cb-8cd1-8dbeed083717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f4ceb1-ade4-48dd-badc-72d4b20d65d7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94e44cf-7513-4ed8-b778-ecf570c75c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70d9b73-9510-4e70-abac-addfbb76ad66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f729c831-7e58-429d-8050-07ece7c82dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a1a1f6-bc8c-427f-9cb8-6716a889ba99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c417979-1d1d-4ebb-88bb-0451bd43d1f6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3478c76-1982-42ba-b0c5-9785a3b14c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df685f30-873f-4b0d-9b2b-6667d927341c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523e1b1f-170c-40f7-b420-7b452a485c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b55eed8-0a91-4df6-9dbe-163c838918a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d826d731-6ea3-43ec-a535-a59b6fd9dde5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6ac58d-b1f1-4459-8411-7ec9e2493369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f42f2b-93b1-4096-95fb-004d748ed000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07ff065-a092-4744-96ef-550910d3ff61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ecc84f-0c26-4263-b5f4-aa8c501a9876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbbe641-972f-48c9-bc31-e1e7cd97d343",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dacc65-c941-4af9-bdb6-d21fb0412caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84470476-8409-4476-a6a5-f186046a27c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4740138-3477-4245-827c-90288cc11732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617f5cd8-5ef2-447e-925a-c1109cee4c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac41ed8f-26ae-4617-8b4e-3f0cbff53c60",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a234585-c002-4a47-a8d7-5c7d13641af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc82a2a-7d0d-46a1-a4c8-3b96de6419d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde8bcb6-6194-475f-a6f3-4dc284c00622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d5b71a-4a89-4718-a018-c541a52baf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de09c944-03fa-4082-aa67-a148ff55f1a7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2115fcb2-3e91-4d64-a0f7-a026b7331ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc77a28c-e1cc-4f19-aeda-53e60dd2c35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c342305-d28c-4143-8dd3-8bfb4b118846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7888115d-dea5-4e08-9c40-7be5bbade048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0cb8c5-5e20-4dbc-b8ac-1bee96e9a2db",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6c2096-4310-45d6-990c-7490cae8249f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7edef851-da42-446b-a658-5194f8c61381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597fdbc2-30dc-4dee-a2f8-017386ca88d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e85a02-fcfd-4955-8125-7397e1e44104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af478778-0fbb-4e22-9e56-300211c52f5c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa245dc9-b457-4f40-a10f-b908048e1e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41136953-423b-4384-ae3e-72452cae8bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4302d97-7dee-42dc-ba25-845c0b259df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce009e17-f12a-4972-95aa-d6857694f141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28f4800-cb29-47d9-90f9-ef97204fdc85",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ffe265-6cc7-440f-ad2c-0bb3508b5297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "685d80ab-a7b4-4c4c-9d07-0fa25bcf0ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720b8546-9fe5-41ce-bd1d-ec5fde0e7dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2873f50f-c68e-480c-81cc-26945b39a171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46706484-9868-4f1d-be47-6eac1de53747",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2549e3fa-76de-407d-9d1a-e08b869ca608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da97ae8-9579-4dba-8070-476617bb6a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976eb876-4d6f-479f-90f5-df3cffed12c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5886e3e-4520-4737-9904-943b623b4610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c331d718-61c0-44af-9d37-562161dab2ca",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dc55a1-c2b3-40d0-9881-73f8aa27e6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc3cac1-8e2a-471a-95cb-52baa8d25802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41be4686-2bc0-4e86-99cc-545e3c2961bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1bb8f6-bb32-4343-80e4-1b3539daf260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a50ba0-dc41-4133-b04f-e5ed40ff3e3a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3027c8ea-f7b6-4335-9a94-25af8aab0b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c979e3fd-9235-41d0-b240-c5b0afcba790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f39e51-84a6-4cab-adf4-d8cd46336c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c508d4-a3f2-43d9-aeb8-2ca94f2b8081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af454fd-0b97-436d-adb8-fbc0741478c8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6143a7fb-b576-4a97-a700-5187b41657a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a641b8-385a-4319-9545-570d0caade7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cf40fe-046b-46b3-a718-1556c3aea4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3063d32-ee6b-41ca-9009-cb37e2c02cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7bf486-95fe-4a78-90a5-f71be1db9e8d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e95e00-fb38-417c-a1e6-4b5fba027efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eb2cb0a-e266-4ac8-bbca-5862159e2e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578c6639-699b-4ba2-b60a-1c942af31591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b6a134-c620-4b31-8602-56ec302689b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf76159-119a-4b58-bbbd-ff20c09cbfe0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cada9983-aa5c-4c65-91bf-e4cad6f217a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505ce92e-c93c-43ca-bf5a-100aadbc4c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384166d1-a3de-45e5-b46d-31a2010f6b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c71a8e5-3197-4624-9b0a-1cd0069fe8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3008d6b8-0704-470e-b558-db29290632ff",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e10ed38-e509-497b-9a77-9b4b529c2773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9948524c-2161-4123-8acb-51f7fe7e648c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0747d56e-4437-4e4c-ae0e-c47f5118acf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c753f90-2823-41d5-be65-2a2b67244b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea4f3ab-d773-4a4b-b8a9-fdff5d110f35",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62b3ce4-8499-4a2e-9473-2b1421aa4255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efebdd39-5e23-4823-a87d-290ac970eaad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1442bbf-8a7f-4cac-b87b-c5c110df529e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1680ad70-3b38-4069-8fea-8ff1a8fab533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b68859-beb1-411d-86e5-49e8df13aa35",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf5ce06-4313-4c2c-a9a7-f16a748eb56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4550ee20-ca1c-478d-b628-e9063a86df4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feed92e7-b244-4f8b-815a-2aedd5266e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076b08e0-aee1-43c9-9e62-f9c64e368e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b12d11-bf3d-4f92-abaa-65e06ff973ec",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0dc5ec-529e-4cc9-93ef-19338b241a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2a8177-7142-425e-ae75-7c945a1836b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c247ed-f199-4acf-a911-721b5f7dca59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023456cf-f1c7-4e6b-9745-ad3e2f72617b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332fd554-777f-43fa-a334-5ed933e7fa2f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390148f4-bc15-4846-a1ee-9adfb2c063e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9627f826-e0b3-4a29-a4dd-90dab3a59325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a02562f-1017-482f-a9b5-84fcd1c459ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4182be-547c-4dde-ab78-274c91c600d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492f0d88-779d-4655-a708-8de0d0013b78",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5023ab6-58ba-49cb-baab-bc5b450f1898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7963706b-a26c-44c3-b1bb-e1ac4412e624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acd6b93-2957-4f3e-b09c-00aacdcfd96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3541656-25f4-43da-8dd4-8439d0e9b0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b925eadb-160e-4ad0-9101-cd72bbac7dc4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ad97e2-8099-4e27-ade3-2ff398daf904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f5de02-2b3e-4a69-b3cf-40eaa1d0c3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114878ea-9a3f-467b-b653-c1b22c2e2a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60396751-5413-4b8a-82b7-e925d983bd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123d6396-22d7-4764-b607-0756c4177924",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bf8889-bf93-4066-b7de-44a5aba977e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36fc23d-5b68-444a-8ad6-ed4c44e9c033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22786eb8-3529-43ae-a96a-4a4501c68648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58389797-70b7-411b-a049-7be2971ef729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03210c70-d4d6-4f35-8e1e-e98d755361a9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00205edd-0c67-4362-8995-0c86cf12081d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f341ad14-4a2b-4264-ae79-314a7a6d0373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be96929b-a8e8-463f-a999-0babe797e01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3465ba5-96dc-4688-a9d1-a40c0329a7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d952631c-6711-4440-8e93-8c3087575bb4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a14b006-a4fb-42c0-b99a-eb09d02fa149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa076ce0-035a-4725-9d2e-21b6232baf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936c3bbc-8109-4e99-8f44-63b7e6085ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baebe326-3dad-42a2-80b3-8bdeb6632482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961e47b2-a7f9-4dac-9bf1-e9ecbd408957",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73fa16c-edf0-45a4-b556-32384fb66844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0a05cd-b012-498b-a100-8a9d02b4c873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60165245-e531-4fc0-936a-383cbd6c0d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d632e8bc-68e0-45e4-af15-4bd59b37d5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fae82c5-221a-42b6-8bf7-48541a3f1f35",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbd6c18-b662-4deb-a207-66de86355c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ab7a99-6cfa-4461-98a8-ce43473c6e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785de5c5-487b-48b0-88d6-21c89229ff30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777c3ae9-2269-4fd9-b5e9-be471311711d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a20cc19-0e35-4073-ab87-d157fc05ccc7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf77a08a-f298-47ec-9d76-eb50e9a156ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fed4285-608d-4bf3-9f31-d6d35d45557e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca02a4a3-2bd7-4085-aa1a-2687f1c1acd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ac8e0a-a04e-4b3f-a62e-51115aa06dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35895530-de87-4967-aa43-21b369dfd3d9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6d7608-d667-4e26-a7bb-abaf83e20d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf08a3b-e266-4a1c-a90a-05b810143074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efa0c7e-b2cc-41c1-a425-d2c741ebc99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4f9d65-b35e-4d28-8911-672a9727c885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a45fa9-4510-4c69-ba30-6ee8dab4e62f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4a0793-0ac4-41ff-b523-f9300aec39f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835d8f52-1249-463a-bcb2-cf4eefe08cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5f024e-103a-4a9d-a17c-ebfecf757cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ff7163-f0f1-414e-adc2-dd320ec8441a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169068ca-155a-4dba-a192-7452bbcde5b5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87480309-479b-4a52-9fd9-70253555df84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9450e495-33dd-4a85-998a-043a6221d3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860497fa-6dee-474e-b824-75aad9c91db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04b7dfe-918b-4511-a273-de4f75448ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4098dd9-448d-4c44-b8f2-28ffb9ac81b2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1095e114-703c-4d3c-a7c1-133668fbc4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d49f167-1f60-447e-9d01-4cf2edd812f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849e27b3-73a6-4f38-ad7f-632085fe0ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb227b79-827b-4601-9a96-54c3ca5f78c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33c1582-d43d-4873-a856-21d1a158df97",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd66a6c-813f-4629-a6c9-0d3a462d271f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7477f737-9127-4bea-8287-ede6bd0f7ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bbf20d-2c23-42e9-8ce1-862c3231576d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0031446-ab9d-481c-9aa1-13c00a38ce1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36170aee-9327-48ca-ae18-9419197751bb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a68d42-ef05-44f7-94cf-81d629061d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2754b1-4235-4bb8-acf8-ababaaafc131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c2f9ad-590e-4007-8f87-90f5163c299e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c9c2cd-c135-4d96-b976-bee9ac693228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd85fa8-68f2-4717-96d9-6f01a68e58c0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7758b6a8-6605-41c8-b0ca-5b9ad0d89e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce7eec5-176f-4c30-92d3-9764d05b59e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40c0660-1c39-4be8-bdb5-d17af7f6e81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd6adbb-10f8-4fb0-93e8-93afb93ce619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1137b2-217d-4e8e-aca7-aa9f9bf2f651",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afb82fe-2acf-4260-9699-ff688b61bc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710a4088-fb47-4d18-9048-d1ac9196f11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36dbb81-bc94-4d3c-879e-42b6b194f888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd229f8a-bb27-49c7-b84f-02ed45e9ae18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea4c716-10be-4f91-9021-f8eac2d67c5d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3986f93-1e1a-431c-8fec-72c61085686d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09a3a87-4751-4365-8aff-d5a144e4d13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb8468c-8d38-4a81-a695-56b13478ca2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9a1ccd-d891-4d12-883a-0891d8af2f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb44de9c-e553-465f-ada5-9a25a6b96546",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c26b42-4487-4bab-b3b9-516ecf9e9305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f086205-87b0-4f13-a0b7-9cba5233371c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7441672-112a-4ce6-b467-2f65d169f9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487b1ba6-4087-4709-9334-e50f58a8fc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f676cab-a633-433f-a5f4-2ba18a0eb114",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec9459b-5932-49bc-8b36-26e9da2f895b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b27a9b-e280-401c-9d6a-9b4088267a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301e833b-aea0-4aa3-b520-f1a063e40e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61390502-85e6-49ba-ab7a-24b99aceffb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dd944b-e142-45ae-b45b-68a040149049",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322ababb-268c-410b-a06c-25f7cac0ebf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3265f9c6-7d62-4212-b5a6-c4b641149033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7561e0-cdb3-4cf3-b52c-f3c6b6dd30c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb64a85-d6c6-4dab-a225-8e4930ed40da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203da7a6-6ef7-402c-bf69-2fd95cd34bf9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab36d8d-261f-45f9-93fd-00644d4a4999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b64048-9eb1-4d5b-9b2a-fea660ab37e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b728248-adbf-4041-a536-81a09026cdca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb006c0c-687f-4f54-b568-f676b601894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a448ae4f-8b3d-40de-8406-8dcc4d135ea8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89caa5d0-4d33-4f49-b81c-8ea8b5c2f62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ec397b-691d-40e3-b497-46dace3d685c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c6802d-990c-496d-b6be-c5f0a36f4e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae6e3bf-f015-402e-bad6-49fb9595c6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607c008a-8822-46b6-85fb-c474be932a8c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83c5d68-4d4e-4174-8915-3b640f280d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d173f0-2c4c-4448-9e3e-e8b6b95e9a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9631797-990e-4a2a-a173-96f14c5f052a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f354a459-2c86-4f9d-abb9-3adf1542836b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccaf6ad-ca7a-476e-ace0-ef349dd50692",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33abdbb1-e505-4e0b-a36b-ccc903d55512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23410c15-0566-409c-b008-25176cad2a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a022f1-8472-43fd-9aee-dec087b3f596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ece0084-259a-41bc-b1d3-97407495a1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4695e8ad-c28c-44b0-a2d1-5a4b86b4b868",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6a37f4-33f7-426a-8e2e-1f9ae8447bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca74fe7-39b7-432c-a31a-55b5cbc538dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e5a98d-c6ef-4071-a11a-434d087c3eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66be3faa-f6d4-4b96-9e1e-7b62dbcc08ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16850c9-b6fc-4894-a149-6cb6a0d1f469",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5134786a-f0ea-495b-aee0-73f8cd3230e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092cf929-86a4-4cc7-984c-7c9175f2848e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133f5494-ac80-4f36-a6b4-7b68bfa5c4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49ad294-f1c8-4a14-bcc5-63a91b046bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbf56c5-a8c1-4f21-a016-32879537f14e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89339e5f-b84a-4e42-af4b-6b17e6c2b16f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383b9119-d44b-4db5-8410-ee76f904d8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac740140-255f-426d-8dda-ead254ad7c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c9454a-cc32-4d45-ac27-54c97a4c337f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eda02ab-7279-4a83-bfea-a2c569cbef12",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbe6d71-b176-44bd-8853-cc8daf27eb3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b36d27-fcc1-46dc-94ad-336b8aab9ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e751ea41-7de6-4fe0-bcfa-605b964c6d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b431ec9b-ddb7-43db-98ee-a4bb5c2bb784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b30e95-a62e-475c-872e-9e9e9c41db16",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787389c3-3ede-451f-9999-3848025029fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be8f50bd-fe2f-410c-9020-ded6f9bf3c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44241bb5-28ab-4d92-a1fc-f1f8ec89d62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd18a20-72bb-4e1c-a099-e98906d28005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a603d6-a902-41c0-aa0a-38138a8c1ce5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b91507-e95d-4969-a242-f914f2a6b5c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48834301-288b-442d-bdb9-6deb8b6567ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bf5b0e-8806-4238-9282-631388dfb49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9257ce72-68f1-478e-ac01-108acc237283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5cc915-3381-4c35-9e80-854678c140d1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da1724b-5bf4-45ca-a039-5d0fe88ec313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dc11dbf-28a1-4e43-b69c-309c57718124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c9fbd8-bd2b-4640-8301-fa4d2259b06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6af0aa-74f3-4ef6-b693-dd3f08c53cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e6b558-53ce-4002-b0e5-b4f0addaff38",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c860aa-8b91-4c1e-831a-4bed51c10a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0022dc5-9de9-4b75-9e17-5dc8cd84748f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7507b63f-520f-4b34-a479-33e0920e9be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a5b7cf-57f6-4abc-912c-bc68baa887c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26619d6c-0599-4931-b6e7-3e842b963e26",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78515dcb-099f-491c-9365-87e7f00ab5f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222b4644-95f8-4633-bc94-dbe5ca589413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42f11cb-eaf8-4577-806c-dbbb16b73d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9463f75c-f9b4-4a7a-9eb5-8957ce439a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459025bf-a50c-4700-8694-08a3ddf43763",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9084718d-3800-4b25-aa99-b22c24f1f2aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e66bfa-016a-45a4-9832-3ffdc5e2a0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23677cc5-6395-49de-b6da-1d2e808b36cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c63e34-b699-42aa-b749-30fcac351754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3831ee4d-0845-41f7-b77c-60d9788245b8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b61c107-e7e5-4e01-8d9f-0c0b573e0208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df349a0-4617-4a8b-a459-8ba11cfe7249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ca1632-138e-40c6-8538-a0e492246775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1b7a4b-000a-41dc-ab29-9b7c47cc9b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9214273f-99d7-473b-9426-453669ed3167",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780438f8-990b-4db1-a249-b27ab2e0ca37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39cbf64c-8dea-46fd-95a5-851bff009187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea72f8d-8e21-4aa3-bb7a-2e66af441bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cee38c-d94d-4739-aeee-3956f45f2e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77673d0e-112a-4904-b724-675f13a9032c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf8d3b8-5674-4ddd-bdb1-9626555edfe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43905443-92ab-412e-9fd6-b531e3ec2a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53db4571-c371-4895-b454-0eb424cccb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ac1a7d-a773-462c-993d-2d98c6abd1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865fe2a7-b47c-46c0-a673-5c6397f2fc63",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b2126a-9cba-41a4-96bd-486cfcb0722a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1716d17a-38b6-4ea1-9e86-97972700e05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ede01b-1050-4c70-b1d9-efa90cefa965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e58a69d-0a78-44bd-b2e2-2232e809e6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea430088-a7ff-483b-b600-de82c0533c4c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c2e7e8-3570-4565-84cd-ed8f19642800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "132c65e4-3583-4364-825f-dc7f1c0b8e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7757e43c-a544-416b-897a-d9547105f427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83c3a38-4028-46fa-9553-cb70721cfdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b885ab0-129e-43e6-a88d-75d555690a61",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cba7ed-cab9-4b19-bbd8-1ca5cf7a0ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a25077bf-e52f-4018-8b14-92b4af5bc021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5592e321-2a7c-4b66-b7dc-10add909011f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3222723-f158-4761-a95a-f396aae0a8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a4d485-2ea1-4c70-b160-8ec642179bdf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e164cbe-e284-4028-abbf-09aaeefc142c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25545821-bb45-4563-a7e8-04a5d40a2686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f62a397-0ecd-4114-9b84-ab643e0cdc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92e973b-4b5a-4e5b-95a0-2975ff6fcba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f443745-3b2b-44e2-992f-30ae4ea167da",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b590b94-1cec-4454-9262-9e65a7ccfb2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc4d3821-38c8-4e9b-b3ea-408f7d7e6543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91b9725-a8bb-4dab-8b37-46a4dc5c040b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ccccfe-e5eb-4f16-b9ba-1a119bd415a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141c543f-994e-4e06-bc54-4a76e429f2d3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c14d3c-bbad-45bb-8967-cabc625fe740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d14d952-4176-408c-a4af-55c508398d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6d7664-068e-4093-bc5b-fcadbf08caea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3530116-d803-4738-a627-5a4ec31a8d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724dbe6f-c470-4ada-ac99-bcd9a41c7287",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e544fe-828b-401d-8cd8-15374f3d27d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176aacb3-e1e9-4af3-bb71-048185011c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28fa821-bb9a-4c6e-9e2d-41f6b815b99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59d5c21-3825-4512-a743-95bf91ccf1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91449277-32ce-4a8f-b24f-c37162f6d205",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157e6b30-4f7f-49e2-b2a3-270062090148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2fabb3-0d87-4bc2-ada2-25884850c6ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf74326e-599e-40fa-b571-3d6c9a1500c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350e75f9-b649-4213-87ae-3fd6189c6e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9a0823-166f-489d-8832-cd4af9baf2ae",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5fc737-dbb1-4dd5-9ed3-2ad50a6ceb21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec1e1ace-3af7-4fb5-8b2a-c57c4f7fe120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9e84d5-94bb-4afd-a903-24fcbe46b116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38922dd8-3df2-4990-908d-098e0920199f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ed3c8a-0623-4ae3-9b45-0c73c8d349f6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05244cea-db8f-44d1-843c-14f3aad4cad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e477c1e-ee3f-430d-8a3e-41df24626843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb2e857-a001-42c5-82ff-10af27fca9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fb75c4-4ccd-49e7-a8a1-43cdce3c55e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263a904e-e4ea-4549-9095-d150f89fa4d1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9587b39e-4d3c-407d-a2ad-f35a255c5422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f17d4a-0b28-451d-9940-812ba12db3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1518896f-79df-4ac1-a82c-a11d37abca57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c6baf9-565f-4835-8d99-8fdad73c9d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4aaff7-1d47-4ab5-9f92-d4b683b3d323",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5e3905-1510-4eae-b9a9-630bbbd0a021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1488df1b-6149-46e4-a43b-68507361a7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b50517-dcda-47b3-bc9b-fd0166b2dbca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b37719-0313-4622-a952-fadbbaf8c27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b132a2ae-cdc1-4ac7-9e76-83554533a8e1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f7e907-8d45-464f-80f8-4577881c8ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "576b8e77-ca56-45a9-b6c9-3c4eca13a75b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788f8037-f95c-4ecc-a275-6bf1bc1d73a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede818bc-ec77-4d27-a7f0-f21090f9cc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364e631c-d5b9-4d0c-b7b7-bd4693a9d720",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a4b466-d467-4d01-8cf9-2c565bf1a9cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c34a8e0-55fd-47eb-aad2-3bbd17a2d3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6705c7bb-aa1e-4986-ba61-62b8ca2aa0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88b4596-bfb5-487e-9a12-e65dd4750481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17df571d-6b03-4e20-a3c1-30a51d8f1967",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2241f11-1cd8-4258-b3cc-d1ab54aa1356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55e9e990-36a4-4958-98c5-015e9c908c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8196e024-027a-45a8-8639-cd41c8b48bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fb8ecb-bf86-4ece-bca3-6c24fe9c8a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e16730-925c-4ebb-800e-6735ca7eabfd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a051d4ad-f942-4bbb-99da-c7fcbdfeffde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da5fca9-ed6d-4acf-90f4-ced14c348d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f120f1e-d8a9-4e44-a084-17739c3666bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2652a3ed-4344-4339-b01c-4a3f12c0130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497cb654-3068-4c43-adbf-2147dc44b090",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3deed254-960f-4419-a221-9976a3be2022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c031287-b405-4d40-8ccb-9975d31f7ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f85f73-a345-4e46-83e8-8448342aee5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0e7e40-ecf8-4838-bed3-89ac93a56729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fbb5fa-6014-44eb-ab24-348a7783d122",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30641aea-6edd-4e23-82af-50b3726f6c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfed8215-b82c-4aa6-9ec2-9a0cf1204bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5265cdd3-9958-4fbe-925a-6fb897ebad83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79a721e-0d3c-49bc-b87d-8cfac3d4a507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d44d26-8d14-406f-9551-96abbe6cebcc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8f9437-a87f-4bdb-a2c2-bd3a5ec21cdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de66baca-c2d8-403c-8c0a-5a083765a942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeba80c8-103e-46f9-8078-052411f44a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1402c87-23ae-4e2d-826e-644bc5b6701a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28d73e8-d001-4b26-bd6f-3325c30a4f23",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8deabe9-5f5e-48af-bab2-30b4c00fe818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9cfb19b-0159-45eb-8f4c-e0b12ea4e0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465b084e-5ded-46f1-8eae-35d8c2f7d9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af55adc-d591-433c-a69b-b02fc5846a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8169a9-efe2-4d6f-ab4d-7237f97c38d3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c08291-bd81-4586-bc2f-c28bb8dc0f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7787de4-f4e1-4d8e-9fb4-a599a1e526e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bf0398-6aed-43e1-b967-4b04f0385258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290389dc-0332-4f76-9de6-d81216971761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46585aa4-22b7-4f77-8588-718aa493afa5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fcd0a6-2bd8-47ea-b555-956f0d6d0926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e362b998-1d90-47ca-82ac-4602670e4410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80020489-9072-4840-8497-e1f811059a5b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498db4cc-e456-4f57-9a6e-0c6d51ea6879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7ec401-5454-451e-aecf-502b59f70dcc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09dc8fc-5067-460d-910b-c968da1ee078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2304d1-9d26-4ca8-b7fd-a62b8eb33651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b4ad95-1674-4b2f-a18c-f34648582864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f2051c-d2c2-4962-828b-889cd474c021"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8f8fa3d-39b6-41da-8537-7b2bafc3bdee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd3b42dd-48b0-47b1-9950-a2abd7df6e11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8507188-8733-46d6-bd23-a50162ae6c69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69a51864-c777-48f9-9406-85e78cea32f2"
                    }
                  }
                ]
              },
              {
                "id": "2c885eac-e8c3-43b5-a9e1-8bdf32ea50f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb7e678a-3135-4f7c-a7c9-3b16be3d01e1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00508f7-1ca4-4fef-b395-d27cda87e6a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3dde49bf-0218-46d9-bb84-20def0815a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3613a152-543b-4a43-88e0-cb073ada0aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cad04480-9efb-48b9-9716-992879c03db5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d4ec36b-054c-40f1-8ae3-b496b1f6c642",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b51d2d02-6bf9-4e3c-b7db-f013ca392c49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cecc853b-d319-44b5-b39c-6f388446047f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a82d809-a56d-4d87-9da0-a513a50dd274"
                    }
                  }
                ]
              },
              {
                "id": "9f65a7f1-32fa-4d1e-8367-57f1dbe0e108",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3b9deed7-c258-450a-a4e6-b4e2d9b16ea0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec4631d-bb98-4dc5-8234-9878b30840e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4100760a-5933-4efc-a20f-d806fad98ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4aa6669-b93e-4587-821a-f8f31ae0f5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba09622-fd85-4869-958f-0513226a2018"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cef57e81-61e1-42f6-9363-f5182c3d68b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f0cb3b8-485f-4248-90cb-9af1a8cab2a0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33a092f6-5cd6-4120-8edf-d932be3e422e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a3be00cb-de46-4420-a0e5-0543b2773a01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae8381ab-a092-496c-ad82-4232b62b9572",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f546622c-a543-46c7-be6c-306d24b2a76b"
                    }
                  }
                ]
              },
              {
                "id": "83a66a02-267e-45c7-b757-3d3b277754e9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe8af0fd-1a1e-4028-9087-1bc169d4d0db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5f3a12e2-aa65-4fc1-a625-1e8fbcec0a5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5363d88d-46c5-4a7e-9524-a98e1c2c4aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e6b0d2c-a775-4b6c-b1a0-f553131be5e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24b3cb68-3d1b-46f3-b7af-caef25c793db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fad64135-ed51-4732-93ba-8d27a1fcef66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e926147-779d-465b-a59b-8a740e81cc63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea7b611c-6a0e-495f-9121-6122043502ac"
            }
          }
        ]
      },
      {
        "id": "99e2593a-edc4-44e8-a701-e945f243a307",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "db05b84f-d8dc-4570-99bb-2866e31e870d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0faa83d-9290-4e2c-976f-bd9d7d128579",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52f8b053-f2a9-47e3-b7b2-bb5dba0b90ef",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3df38a-6959-49ee-920f-d556eafe00a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1ab322c8-2cc6-4da1-8aaf-c34c15245817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6615e4d5-e56f-40ac-bd83-98cb7b73fc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "437942e1-1592-4b49-8314-e5b7e7ac4eb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3206be66-aab4-4496-83c6-8e03a9b7f04a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8b47110-00b2-4232-87fb-286d753e323f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a534147-3324-4678-a592-966645b5ce1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1435b90c-a25f-46d4-aa91-78fd149d7b80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "225650c7-6fbd-4aca-95ba-7d58122d13e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ff1f8860-6077-4879-85b2-4ec3c1cb9745"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a0990e-5b5e-4e38-92ee-969887fe943d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91317c4e-cb24-4349-a235-4521674f229e"
            }
          }
        ]
      },
      {
        "id": "ec4f657e-53b7-4e0e-9a90-6df4249b54e8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9c2028f3-ef10-405e-97d7-f0b3438e5d01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "606f2915-de49-4568-9cce-92627cf47ecb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "047aa2e8-a1a0-4e54-ae8a-8f26e500438e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aefac1e-a1aa-4755-858e-2e572031d3d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6b3aded-897f-4c84-bd51-5e5f578dda6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033f9615-06a9-4c8c-869f-324dd0cc963f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0811b3f-ddff-419a-a722-273a03e9ea49"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a740644c-9e48-49ed-8907-464ca321fc03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d795708-8427-4848-a36f-89a383c59562"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "641ab8f2-b5e7-4f99-9c71-9d15a947322f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff5a04d9-0e95-4ed8-892a-b8ea69647d99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e3aab1a-d73e-42d6-a1bb-00c5e3bbb680",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c2f67b5-7646-4006-9304-00281bb71d9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a9c2aca-86db-440f-a47e-03a33f9dcdab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ad5f582-45ce-447e-9426-97dc6fda0684"
            }
          }
        ]
      },
      {
        "id": "80e32520-028f-41af-882b-c7711fad0be1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "055412bf-1394-405c-a073-2d260fc910a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "407a49a4-6465-4b18-922d-b511bbafa11f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8da29cf-cfba-4790-8bed-a87e0dd24a5f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f330f43-690b-479a-976f-a8f02da30833",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4b5bbdc-5ee4-4543-8f88-6ad8382e9607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2145f5c8-864f-4ade-a517-b59103f41f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8659d076-0f49-4cc7-bd88-f9cb1811b20e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c0317ea-b6ed-4b72-bbad-d6051bf67ee5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2eef8bd6-5223-4900-a3d7-138b75bb1afe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49dcdc45-cdcc-4bca-84ae-981a4505ed21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "662fd55f-e67a-4371-b690-7740294abace"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "648dc658-9ea5-48d5-86c1-5901c096ddf1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "adf61093-4e25-4abd-91d2-eaf43291f2e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef78e76d-4f2c-47ae-bb06-21702db6334a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0cd343c-4889-4624-a6e5-c53cba18bfc0"
            }
          }
        ]
      },
      {
        "id": "1c273ca7-6bf3-4975-8fe2-849b69961966",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f4d6414-94fa-4097-a2ed-134268e6aec2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef119fb9-e4eb-4be9-8e50-7bd7d60185c4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "13e47e98-1464-4ca1-bcb7-d5446c7b3e05",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "573a080f-03b6-4681-8513-e340a433e444",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98cf7cb5-3586-4b4f-8d7f-b6480b11bfd0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 243.14736842105242,
      "responseMin": 10,
      "responseMax": 8874,
      "responseSd": 1122.092590560743,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698712444646,
      "completed": 1698712526317
    },
    "executions": [
      {
        "id": "c73ce3ff-639a-44a0-a44b-187f183df5b1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f5dbbd54-c7eb-4346-9503-5515f735a244",
          "httpRequestId": "8bfce479-9673-42ae-ba49-f3ad513de80a"
        },
        "item": {
          "id": "c73ce3ff-639a-44a0-a44b-187f183df5b1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "735ee161-2c73-4877-beaa-2aff52b17530",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "becdedf1-419e-44b7-b5be-87be7994510e",
        "cursor": {
          "ref": "f5e17092-d907-4ec2-ba2d-3633013fd422",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "506e5663-360b-4743-b1a2-4e2642e4d492"
        },
        "item": {
          "id": "becdedf1-419e-44b7-b5be-87be7994510e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3f71d874-18d8-4c42-bc13-4760a731b2b5",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "b3465c99-202e-407c-9953-ca0760762119",
        "cursor": {
          "ref": "6db44a78-9428-435b-8750-75e8da1ca86a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "29b6f6d4-f3f1-439e-8cd9-1a31f0e6d364"
        },
        "item": {
          "id": "b3465c99-202e-407c-9953-ca0760762119",
          "name": "did_json"
        },
        "response": {
          "id": "e5084c8d-a9cd-43fd-aac8-e3647d5b5d19",
          "status": "OK",
          "code": 200,
          "responseTime": 1562,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b9c5a0-4183-4910-8464-7e302a918575",
        "cursor": {
          "ref": "c18b1d75-3e7e-4385-85bc-a5284b5b908b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bfd924b-b1e3-4a63-b350-07c5ab1d8037"
        },
        "item": {
          "id": "c0b9c5a0-4183-4910-8464-7e302a918575",
          "name": "did:invalid"
        },
        "response": {
          "id": "46d88a5c-86ef-48d8-b335-00215146c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b9c5a0-4183-4910-8464-7e302a918575",
        "cursor": {
          "ref": "c18b1d75-3e7e-4385-85bc-a5284b5b908b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bfd924b-b1e3-4a63-b350-07c5ab1d8037"
        },
        "item": {
          "id": "c0b9c5a0-4183-4910-8464-7e302a918575",
          "name": "did:invalid"
        },
        "response": {
          "id": "46d88a5c-86ef-48d8-b335-00215146c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d898ea-3674-4d96-b77f-d7fa6f35a191",
        "cursor": {
          "ref": "d029e31a-aa8f-44e1-836c-23badff55e8f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d12d7d6a-2f19-4a1c-aac7-5f7695ce26a9"
        },
        "item": {
          "id": "46d898ea-3674-4d96-b77f-d7fa6f35a191",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7a51fb81-fd86-4128-9ba1-486e2a68102d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f04d85-c7f3-4f2b-aa45-87ecdf02fdcc",
        "cursor": {
          "ref": "03e389a6-0ebc-4e5d-bece-1d69bf31a2c2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "624152f0-64e3-49bc-902b-25cca82035d8"
        },
        "item": {
          "id": "48f04d85-c7f3-4f2b-aa45-87ecdf02fdcc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "398ab083-0509-47bd-89c6-be8539de74f8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c23445-311f-42af-9cfe-fd73ee328b2e",
        "cursor": {
          "ref": "61248d84-482f-4588-b0af-0e5779aa0537",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f9541c7c-f98b-4aff-9f57-c01bcf409f0b"
        },
        "item": {
          "id": "92c23445-311f-42af-9cfe-fd73ee328b2e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1d213fc5-7999-4511-b50d-0e3714d76709",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fad1ee4-f4dc-44ca-873f-f72025ead43e",
        "cursor": {
          "ref": "f5e7b3c9-da71-42ca-9ad0-7c63e421fdf2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "df786df2-0f79-4863-91b0-40e431f798b8"
        },
        "item": {
          "id": "7fad1ee4-f4dc-44ca-873f-f72025ead43e",
          "name": "identifiers"
        },
        "response": {
          "id": "1fd76417-51b0-4000-ab2f-6631cace580f",
          "status": "OK",
          "code": 200,
          "responseTime": 1228,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de5b234-2a01-4a06-9c78-a94b286f6f36",
        "cursor": {
          "ref": "4a92c927-7065-4da0-b4c4-d4a4396cd385",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0d252aea-de49-4cfe-b260-8d4886afd24a"
        },
        "item": {
          "id": "1de5b234-2a01-4a06-9c78-a94b286f6f36",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "23281762-0c98-4f04-bb0f-d57c5b01288d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b57d59d-bfe7-48f9-831a-ae025b932789",
        "cursor": {
          "ref": "507ae5b4-58cd-471b-9be4-cfe92e633bc5",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "edd66a13-f137-4d1e-b233-0f8da8f6dcdf"
        },
        "item": {
          "id": "3b57d59d-bfe7-48f9-831a-ae025b932789",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "58014a6f-a976-4658-b45f-8e7660d8d3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969410f9-4ea4-4bae-9bdc-d9a0eb7ab1af",
        "cursor": {
          "ref": "ce7d2664-d791-45f5-9a4a-c000a00b2e91",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8bbb4577-48f8-4381-9173-69a2f2d4a376"
        },
        "item": {
          "id": "969410f9-4ea4-4bae-9bdc-d9a0eb7ab1af",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "09b9844e-bb40-435e-9aca-b2785a318646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c222f5ac-4394-4479-a9c7-e4a9f5b82ea4",
        "cursor": {
          "ref": "caa04143-bfd0-4f62-a684-850b3e4c519b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "56b21bd5-c4d7-4221-9a1a-6ab961466c6c"
        },
        "item": {
          "id": "c222f5ac-4394-4479-a9c7-e4a9f5b82ea4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7c634aaa-466b-4ed6-84d0-11e546c0cf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd6c7ba-8b0b-45ff-8bf2-4e6c9283ac60",
        "cursor": {
          "ref": "acbcb822-04ca-47ff-9ca4-3f0536dfd86b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9a5b4b12-4031-492c-96cc-69f28a786bc0"
        },
        "item": {
          "id": "ecd6c7ba-8b0b-45ff-8bf2-4e6c9283ac60",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bb1c8e44-572c-49ca-913e-1c2380ed30e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b44b91-b37f-4224-b8a5-3c0321ed8f17",
        "cursor": {
          "ref": "ef2d846c-1b17-427c-a763-c9e7ce5e3394",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "430fa772-d9d5-4503-8b7d-1ee326a757da"
        },
        "item": {
          "id": "a8b44b91-b37f-4224-b8a5-3c0321ed8f17",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c15d548c-b234-4109-81cf-8a8dc9f85472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b0f56f-762f-42ae-83ff-b4eadac69b69",
        "cursor": {
          "ref": "6e921997-911d-4119-b1cc-64b2d21623b3",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7dce8672-33ad-4cdd-975c-fdf740b3984f"
        },
        "item": {
          "id": "e6b0f56f-762f-42ae-83ff-b4eadac69b69",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8bac0a79-9d17-43d5-b492-89b0b4ad487d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f12acf3-66b1-4ca7-bd09-fa8ffcdcf511",
        "cursor": {
          "ref": "06efb976-08dd-438f-bd22-fc52d5b81741",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "015839f0-4659-4680-883d-1e95952479d5"
        },
        "item": {
          "id": "8f12acf3-66b1-4ca7-bd09-fa8ffcdcf511",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ede9a66c-93a4-4230-b14d-bf25b4450135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979f6c0a-c335-49ad-b039-39766bd0c5cd",
        "cursor": {
          "ref": "433e3d8f-d1bc-4c7a-8248-ceaf02ec17b2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c322645c-75a2-40e8-ad44-9e4c75a91369"
        },
        "item": {
          "id": "979f6c0a-c335-49ad-b039-39766bd0c5cd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3a33f75f-074b-499d-af76-695ed2e5c0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af28eb18-bf9d-4077-a42c-aabd04ecdf54",
        "cursor": {
          "ref": "81b29217-ea59-45da-b689-7dab633f73ac",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ab95333b-d46c-4117-bca0-044c112bd4b6"
        },
        "item": {
          "id": "af28eb18-bf9d-4077-a42c-aabd04ecdf54",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06dda383-e420-42a4-93d1-34eb91469451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0814301b-87c2-4192-baa6-3b511a764f63",
        "cursor": {
          "ref": "99bbb69b-bc7a-42e1-8978-d111e9eeae5b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d0e61e77-d14b-41c0-8e64-5db89a75a713"
        },
        "item": {
          "id": "0814301b-87c2-4192-baa6-3b511a764f63",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b1562ded-9467-40b7-8fdd-3added685017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9981118f-c428-45b4-bfa7-f620c4f3f6c0",
        "cursor": {
          "ref": "ba585176-36d8-4a88-b5a6-995e29ea48bf",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "db9b0481-454c-484e-80eb-ad7ecb639eaa"
        },
        "item": {
          "id": "9981118f-c428-45b4-bfa7-f620c4f3f6c0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "186d7c37-0949-42b9-a9d3-29cc1abf9f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45284c4f-8239-4967-b5e6-2e1bfd2e7e6e",
        "cursor": {
          "ref": "87c184b2-ce93-4223-b722-db3aaca7582e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "47f757ae-0daf-4250-81c1-630ef7e6b67a"
        },
        "item": {
          "id": "45284c4f-8239-4967-b5e6-2e1bfd2e7e6e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b8f1704d-e41b-4e87-a0cf-15a2715816d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffd052a-5896-4e62-966b-92523c48d96a",
        "cursor": {
          "ref": "b410a47d-617e-460a-9bff-eec15227d209",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "df646400-42bb-4fa4-8eb1-918daf9ee3cb"
        },
        "item": {
          "id": "dffd052a-5896-4e62-966b-92523c48d96a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "584fa6b9-56b2-49ce-bb0f-b828d6d4a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398e481f-7bba-4b5a-8c49-b37cce0ff645",
        "cursor": {
          "ref": "f4ba865d-90f5-4f92-addd-2891d6d315b7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ca2a893b-1f4a-4990-9876-b52e7764dea3"
        },
        "item": {
          "id": "398e481f-7bba-4b5a-8c49-b37cce0ff645",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "972491f8-e9f3-45da-b0ae-24817bbec106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a037dcf2-cdd4-4004-a793-befce44eb476",
        "cursor": {
          "ref": "4822a2a2-482e-49b9-9142-2cc0dd9e0b1a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "39809320-62ee-4f9b-820c-3d11910cd3f0"
        },
        "item": {
          "id": "a037dcf2-cdd4-4004-a793-befce44eb476",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3c024c6b-14b9-4693-97bd-8be19f5ab296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f8b7d1-8321-4856-94f6-f406ba0222d3",
        "cursor": {
          "ref": "e06cc395-7d90-451c-9651-22e3a36f07ba",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "407c09e4-4f39-4df9-914a-2334a57dd93a"
        },
        "item": {
          "id": "a6f8b7d1-8321-4856-94f6-f406ba0222d3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f73bdc2e-4b67-4c42-932c-07be5cc56d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8759493-cb09-4466-aa62-31c2b2ce7283",
        "cursor": {
          "ref": "bdf49454-eb3d-412c-a4b3-a41c2d3e3cb3",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1f80d9d3-f75e-4a4f-861a-e651bda6080d"
        },
        "item": {
          "id": "e8759493-cb09-4466-aa62-31c2b2ce7283",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3cc0b30e-ff41-4e44-95da-92ca30b5cc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca516ab-d044-4568-839e-d0a86f041ec1",
        "cursor": {
          "ref": "fc6f08c7-c129-4b7b-b61a-2897eb7b7f31",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "36aa6d81-e984-449f-a4cd-a30f901a8c28"
        },
        "item": {
          "id": "9ca516ab-d044-4568-839e-d0a86f041ec1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "259ff574-e036-49c0-ac12-2c80ad5af34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c872ee5-6b87-4a95-821d-f6e75228fe5d",
        "cursor": {
          "ref": "53951b7a-c5d6-4a1d-b2f6-1b2829369fb8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d154c799-5506-403d-84ab-e9bd02762b2b"
        },
        "item": {
          "id": "7c872ee5-6b87-4a95-821d-f6e75228fe5d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bb8bbb4f-07f0-4761-a713-f0964bfecb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58f747c-aa92-4f80-bf14-8e0605de6e72",
        "cursor": {
          "ref": "9f3a24a0-3b20-463f-bcf8-e97ddb512f0b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f34998ed-4b6c-4c0e-b629-45a230bd4ef1"
        },
        "item": {
          "id": "e58f747c-aa92-4f80-bf14-8e0605de6e72",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "05b3dad1-0c78-4ca5-b8f8-c7720db99e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080f7151-8d9b-4708-b5bd-fe467f3b8171",
        "cursor": {
          "ref": "7e63c45e-2c09-4d3d-9bc8-f90d0ead7b4e",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8a796258-10d3-4875-9edd-f95cb8da99d7"
        },
        "item": {
          "id": "080f7151-8d9b-4708-b5bd-fe467f3b8171",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6c9a0dab-5289-4d6c-a2d1-98b3f753c31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db2dd22-6bc1-4cc7-9ba0-be2524d2d9fa",
        "cursor": {
          "ref": "a5c1a2a5-1b7c-46c6-a9d1-a995d61db504",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9b925762-0f89-438c-b0ad-82dc097fa0d9"
        },
        "item": {
          "id": "2db2dd22-6bc1-4cc7-9ba0-be2524d2d9fa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0717ab66-b6ca-4482-9c02-45132b5c8d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42372317-16c6-4c97-9bec-3fa73ca51acc",
        "cursor": {
          "ref": "fd8ab02c-8d9c-4780-9e13-419b77ab7d46",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "32367d75-9a7a-43c7-8d50-b985a07434d4"
        },
        "item": {
          "id": "42372317-16c6-4c97-9bec-3fa73ca51acc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "75543e62-3825-4dd9-9ea5-cda634152b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9242c8a-6adf-4eef-bfae-e3da1a1c691e",
        "cursor": {
          "ref": "191ee36b-34ee-473e-b97d-a64e6024498c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ef0582d2-b1e0-42e1-8b38-db6bfdde47c2"
        },
        "item": {
          "id": "c9242c8a-6adf-4eef-bfae-e3da1a1c691e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5d388223-a808-44f3-8f7e-041e32026d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf4bc02-654c-4784-b685-a393e45644e0",
        "cursor": {
          "ref": "e1c0ad5e-8bba-46fe-bee9-61691a0c5288",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "15a5a4b4-5f5c-49e4-9c8a-3250c3619428"
        },
        "item": {
          "id": "4bf4bc02-654c-4784-b685-a393e45644e0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e8160b7e-e682-483e-8671-1b17783fa867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04407fe-7cae-40b3-b597-ae56cf261e36",
        "cursor": {
          "ref": "d8bdb283-e5db-4583-a951-30ae6ac5287e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6713b6b3-eeaa-4799-bd38-1e24005deb75"
        },
        "item": {
          "id": "f04407fe-7cae-40b3-b597-ae56cf261e36",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "706e2853-a30e-4e74-a4bd-821386f984b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c611f-fe84-45a3-b854-b0428ea4e099",
        "cursor": {
          "ref": "48576dc6-2f99-471f-a99d-43e8d6b36b5f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "49bad17b-2970-4729-bb22-78c7c09fe0f9"
        },
        "item": {
          "id": "2d2c611f-fe84-45a3-b854-b0428ea4e099",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "290337eb-0bc1-442d-8c13-0f11fa0f6821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e18b29-14f5-45c4-88b3-0ceadd186546",
        "cursor": {
          "ref": "a44b5fce-9a29-4c00-9805-ab68bf61af74",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e98464ca-1039-4c4d-9658-c97f5d433d5b"
        },
        "item": {
          "id": "25e18b29-14f5-45c4-88b3-0ceadd186546",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ce9b3875-a788-44dc-8feb-1dd58799db97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eef0dc6-c5b3-4f59-95ef-d91f228cb90d",
        "cursor": {
          "ref": "f39cf949-63c3-4b98-add8-0dd0cf0b2bda",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "56cf3ff2-0698-4e94-a413-a6fd1fee9cdb"
        },
        "item": {
          "id": "2eef0dc6-c5b3-4f59-95ef-d91f228cb90d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d74e85dd-18f8-437a-8164-ba0927dceba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7aee61-f46b-48c2-a8dd-d89fbede5cfd",
        "cursor": {
          "ref": "577ec4df-ad1a-4b2b-8397-a461487f9667",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b32e0ce8-5084-484e-9076-efc2ecf47592"
        },
        "item": {
          "id": "ad7aee61-f46b-48c2-a8dd-d89fbede5cfd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "96dde425-b966-4aba-926f-2fe6ef28cec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc02491-fb72-4750-80ca-9355e918d5c3",
        "cursor": {
          "ref": "a7238c2b-d43d-49fa-b533-609997ce360f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "68610a29-9d66-4261-a595-bff124b2f94a"
        },
        "item": {
          "id": "cfc02491-fb72-4750-80ca-9355e918d5c3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "79bb18a3-8271-4d7a-b565-a94575f85c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a93a547-1439-436f-8d52-dfb4e0d70617",
        "cursor": {
          "ref": "8772680d-7a45-464c-82c3-7c2479df4ee6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ec78fdf8-663a-46bb-be8c-b822866da215"
        },
        "item": {
          "id": "8a93a547-1439-436f-8d52-dfb4e0d70617",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "181fffb7-21bf-457a-b702-ee2c3b1637a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dfecab-b837-4e95-b2d6-9db24f8e1f98",
        "cursor": {
          "ref": "32e349bc-2894-4a2c-96b0-f5d1a42360bc",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c79c2813-de88-4f98-9c95-d31e80307eec"
        },
        "item": {
          "id": "82dfecab-b837-4e95-b2d6-9db24f8e1f98",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9f87deb4-a935-42fc-ab99-99d747661846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30878dc-369b-4952-9a2c-6dca503c33c4",
        "cursor": {
          "ref": "958fbe81-4d11-4604-b279-13cd41dff281",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ce492c70-e57f-46d9-b8cc-d82d0c87c99f"
        },
        "item": {
          "id": "b30878dc-369b-4952-9a2c-6dca503c33c4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2e817775-9290-4398-bd4d-c7cc7a1eb5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117fec8b-e70d-447b-b706-ba7eb48bc40e",
        "cursor": {
          "ref": "e86b50b3-1e7f-47bf-89b6-deaad99ee1e6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "644fc8ac-8892-4e6a-8dbe-428463110175"
        },
        "item": {
          "id": "117fec8b-e70d-447b-b706-ba7eb48bc40e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "774eb5f8-82f6-4441-9ad3-ab6ae931285c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1495,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae98fe22-b3cb-4f84-b836-b947ffcd6793",
        "cursor": {
          "ref": "48b462c3-841b-4dac-be2c-f99a3d9fcc8e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bb957993-16b6-4fbf-bbbe-ea68f4a1ba36"
        },
        "item": {
          "id": "ae98fe22-b3cb-4f84-b836-b947ffcd6793",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f7bc4bf7-e05e-4fba-aae1-3282204b8738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa45d43c-0a25-4795-b5b8-3c4c5de02324",
        "cursor": {
          "ref": "38406cad-9b87-4950-b3d4-1768cd5b9f47",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f85edd86-e68f-406d-a5b8-fed5dd60c876"
        },
        "item": {
          "id": "fa45d43c-0a25-4795-b5b8-3c4c5de02324",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fff9aadf-3ed4-40bc-9a33-e2c7174de95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e621a945-ce4e-401e-bc28-0244aa67f263",
        "cursor": {
          "ref": "45efe134-7757-4fde-b739-f3fb423171f6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "261a02fc-8bca-43d8-bd8f-15dfb62a068f"
        },
        "item": {
          "id": "e621a945-ce4e-401e-bc28-0244aa67f263",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "704abacd-ce5f-4a7f-83c8-652fc62ae728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5ac3b3-ebb9-488f-be38-23f8cdcfaf6c",
        "cursor": {
          "ref": "5cf57fa6-6f39-4176-951b-857a72b3aa73",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "58b4ed4b-d93f-43f4-aca3-2b37191c7102"
        },
        "item": {
          "id": "ed5ac3b3-ebb9-488f-be38-23f8cdcfaf6c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8ac01564-af8c-45a9-9af8-b6a0520e206e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c3c99e-e774-443c-b2a3-e578859bad88",
        "cursor": {
          "ref": "6d0dbdcb-b0b1-4950-9961-c0b8beb1155c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fd0d20f2-9da6-4c17-afb8-47200fb0cef7"
        },
        "item": {
          "id": "95c3c99e-e774-443c-b2a3-e578859bad88",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "561e1066-ff58-4b96-84c3-064432904e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591f9610-762d-4a19-9d17-0d07ff3b6ac2",
        "cursor": {
          "ref": "8da21b46-cba8-402b-8c6c-73bb9cef99ea",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "437b546f-261b-4708-999b-3bd9b7759843"
        },
        "item": {
          "id": "591f9610-762d-4a19-9d17-0d07ff3b6ac2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "44ef5f33-f680-423d-abda-2361bab3043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b1f32c-e2fa-46e2-bd52-128ffd5c4f50",
        "cursor": {
          "ref": "3a1e59c7-57d3-4fd8-814d-32eb21816945",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "221b3ef9-9a5b-462e-bf8d-a8bad3810b7c"
        },
        "item": {
          "id": "d3b1f32c-e2fa-46e2-bd52-128ffd5c4f50",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "66796690-ef38-4ff8-9a0b-f26e970a601d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1474,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9435b172-724e-4632-8fb0-5428cea1b6a6",
        "cursor": {
          "ref": "fe742273-ae13-429c-9965-9cbbea8d79d3",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ea5599d5-5cc1-4782-a1c5-7f7fe73478df"
        },
        "item": {
          "id": "9435b172-724e-4632-8fb0-5428cea1b6a6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c48e8d31-9ac2-40cd-b2f4-88a4ab810864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689b7097-a295-4692-ac4e-3c9063fbdd2a",
        "cursor": {
          "ref": "973ad86c-e248-44eb-8b2c-df521d216438",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9f9e5962-2c5d-4b27-a3a1-dc3c1ba8691c"
        },
        "item": {
          "id": "689b7097-a295-4692-ac4e-3c9063fbdd2a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "70d509e2-a973-41ca-af58-08570c56a616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fb0e25-0f30-47f7-9506-985e53bff22e",
        "cursor": {
          "ref": "3e1dc0da-3c24-4a46-9105-bc5117acf49e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "879c92e6-3875-4f1a-90ed-83fde84b19c3"
        },
        "item": {
          "id": "23fb0e25-0f30-47f7-9506-985e53bff22e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a0d855e0-f07c-4c51-83d6-99cae0bfb019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5669a068-61df-4bcb-8ad4-254ea2f048e9",
        "cursor": {
          "ref": "cb999228-9134-414d-83ac-2f335df89dbc",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5dd74b11-f0c0-441a-a23f-312dc42ccf7a"
        },
        "item": {
          "id": "5669a068-61df-4bcb-8ad4-254ea2f048e9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "64a0db61-c20d-40a4-9410-7fc761368c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115807d4-a781-434d-b639-9796023a1044",
        "cursor": {
          "ref": "50e2b0b5-aa56-4f34-84a2-095d9efe18b4",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "63da3df7-049e-46b4-bc33-4f8e2643d849"
        },
        "item": {
          "id": "115807d4-a781-434d-b639-9796023a1044",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "72ca2ade-6d98-4b74-892b-3d15d73e4842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bbad1f-dea5-4f36-905c-220f74f0b1db",
        "cursor": {
          "ref": "ff349622-928e-418b-8e37-ff599a5d3714",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8d0b451a-5363-46a8-9fc0-8f7afb721fc7"
        },
        "item": {
          "id": "19bbad1f-dea5-4f36-905c-220f74f0b1db",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b9027a12-9254-4325-950c-b341a3b00cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713dd536-2c63-478d-81ca-9d26e94652ad",
        "cursor": {
          "ref": "15304a3d-a556-45c8-85ee-55fd9b41f909",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "36e77159-8c99-4389-bcfa-7e1a61bc5248"
        },
        "item": {
          "id": "713dd536-2c63-478d-81ca-9d26e94652ad",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "29493229-22c5-4489-b0e1-58c5ad26d93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da0e679-1a9d-4f0a-95f8-d711e079fd18",
        "cursor": {
          "ref": "ce45dc96-65d9-4145-ad35-0425e507179e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1846277d-090c-4949-9f81-2553e8b74b1a"
        },
        "item": {
          "id": "9da0e679-1a9d-4f0a-95f8-d711e079fd18",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c8202374-8280-4e95-b6a3-737aa7a8a268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1356d3-0a9b-4cdf-89b6-926af50f2352",
        "cursor": {
          "ref": "0f00c0af-c4ac-4992-b0b2-26b6b1a5f7c1",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b7b1ad59-8ed2-4d99-a08b-480b15dd6a2b"
        },
        "item": {
          "id": "cb1356d3-0a9b-4cdf-89b6-926af50f2352",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "892ad282-781a-4bc5-9522-5613531aed26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e2a225-fa8e-453d-bc82-269d008d2bf2",
        "cursor": {
          "ref": "769fe771-07f7-4cbb-b475-c9ef8d151bd5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e27c736c-d9d8-4c87-90cb-e178811c6022"
        },
        "item": {
          "id": "16e2a225-fa8e-453d-bc82-269d008d2bf2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b60b1519-160b-4379-9ed2-0250227677c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa7c0a4-d880-4489-a001-35b4d7d0d837",
        "cursor": {
          "ref": "80313649-cf48-4a02-807e-a5c056c305f2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "27fe02a1-9e6d-47a4-b26a-959a1089ded2"
        },
        "item": {
          "id": "0fa7c0a4-d880-4489-a001-35b4d7d0d837",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bad370ee-fc25-4026-ba7f-9db2a0755cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026a8efb-d9d3-4dfe-8eab-3f80d5c83377",
        "cursor": {
          "ref": "b1fadd22-665c-4fab-bf0d-0e710803ff80",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3661b45e-2a13-4cdb-a44b-ea0e968b6aa8"
        },
        "item": {
          "id": "026a8efb-d9d3-4dfe-8eab-3f80d5c83377",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3f6130fb-0840-4886-b3d2-ce39f77af960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da161807-23a7-4d38-835a-d4837580404e",
        "cursor": {
          "ref": "0835f496-8e2b-4a4c-ad11-9195293b3f41",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f0eff5c6-2a1f-44bb-b10c-892a90ef4a97"
        },
        "item": {
          "id": "da161807-23a7-4d38-835a-d4837580404e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "87556f80-801a-4b80-b840-29ef30d4f3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67471bd-6b57-44f7-a89e-875afbf99ea3",
        "cursor": {
          "ref": "68aa77d3-9cd8-4eb2-b913-59ba7d76ac97",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "63ba4d3c-55c9-401e-8e4c-ccc49c4e7bf9"
        },
        "item": {
          "id": "b67471bd-6b57-44f7-a89e-875afbf99ea3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8e028cc9-2e19-4e65-80ee-168c0d514f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118ef574-41d7-4751-a28b-584c356f788e",
        "cursor": {
          "ref": "35ed59fd-172b-42d0-8206-d9e29fa71d8c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1f58a67c-1c76-4286-b5f4-f60e6de08b38"
        },
        "item": {
          "id": "118ef574-41d7-4751-a28b-584c356f788e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f1582d38-559f-4229-8d7d-0291b49cbba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf6bb4f-b8c2-4d10-89c2-26e400178ada",
        "cursor": {
          "ref": "2ed1ed13-2bb9-4193-b6a8-996b88defe9a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6e5814ed-3f93-4278-a884-76935c20bdff"
        },
        "item": {
          "id": "8bf6bb4f-b8c2-4d10-89c2-26e400178ada",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0f009666-3665-47c0-947a-69e2922e884d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1309f000-71e6-4031-9d72-bc244946e51e",
        "cursor": {
          "ref": "711ba1d3-5ec8-436a-b982-fc1d77ca0374",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "009b31d2-dfbf-4ee7-a307-9b6a4fef3027"
        },
        "item": {
          "id": "1309f000-71e6-4031-9d72-bc244946e51e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "142fe191-c650-4f84-b639-236d3a61224d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004d8e33-bc95-43b2-aea3-40f2491f57a8",
        "cursor": {
          "ref": "b1c335a7-7100-4c56-8ee1-4a25aa22d7ff",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3ce8ea0e-511b-40b2-bb57-9c414c8dabdf"
        },
        "item": {
          "id": "004d8e33-bc95-43b2-aea3-40f2491f57a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ef5184d9-02bb-4275-8a9a-254dba1496e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f09ac6-098e-4440-b140-1249ca0c366e",
        "cursor": {
          "ref": "935fc865-8feb-4207-af26-0fbceffb4384",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "28428266-b967-4aea-a270-77b74cb00b94"
        },
        "item": {
          "id": "15f09ac6-098e-4440-b140-1249ca0c366e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1ad16499-0ead-4106-bc1f-f392f9e4b6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612bd844-0bde-4035-b127-9065cbeddc6f",
        "cursor": {
          "ref": "713767af-797b-4710-a375-459958d4cce0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "68174a44-3fe3-4f26-82e3-cb9a0db6479f"
        },
        "item": {
          "id": "612bd844-0bde-4035-b127-9065cbeddc6f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "db4bfa1d-2964-437a-8df4-316720dc5788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6febb0b0-ef96-456f-bb96-2a42ed3f1951",
        "cursor": {
          "ref": "1a339bb7-f91c-4b47-a920-fdf48ca2ad40",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "537dbccc-01ce-45c3-9d65-f68e02e456a2"
        },
        "item": {
          "id": "6febb0b0-ef96-456f-bb96-2a42ed3f1951",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "624b49f2-0e71-48b9-b0cc-7547e2374719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6836166f-3a4c-433c-b8b6-5273daf3eff2",
        "cursor": {
          "ref": "007b1097-bd61-4f20-bd59-0d1147dc444f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1f2d125c-8edc-4b9a-b93c-47b0f30a20da"
        },
        "item": {
          "id": "6836166f-3a4c-433c-b8b6-5273daf3eff2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cee25617-4a36-4f7e-8c11-38f772485377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e26453-b4ed-4f00-9571-af1179ec8795",
        "cursor": {
          "ref": "359a3edb-35bc-4ac4-8f46-4a0773a56f42",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fceec55c-aef4-4aea-8607-1188876afaec"
        },
        "item": {
          "id": "34e26453-b4ed-4f00-9571-af1179ec8795",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "39f868fd-09b0-4150-9d15-783fbedf4a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9ee953-205c-459b-bf52-645d376d5781",
        "cursor": {
          "ref": "af257b3f-c43d-493b-971d-32b73721e517",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5780806d-2add-452d-b181-c3b8360b30e2"
        },
        "item": {
          "id": "ab9ee953-205c-459b-bf52-645d376d5781",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "00c1bcc1-2c36-40fd-8e74-1c2e799009c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5320fe8e-de76-4e27-ba98-8aa2a936a0e4",
        "cursor": {
          "ref": "a9f491a5-e442-40fb-bac7-f1f17267e045",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "424d0db3-bf37-49c6-aa9e-97be8a326f79"
        },
        "item": {
          "id": "5320fe8e-de76-4e27-ba98-8aa2a936a0e4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2bae49c1-0797-4bd2-98a9-0fe28546def9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5484fb-d497-48ff-9baa-2312b1edf7d3",
        "cursor": {
          "ref": "5a411314-6374-42a9-ab10-e67964e7d3dc",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8a804f0c-8ecc-41a6-8cc4-84ea19e8eb84"
        },
        "item": {
          "id": "bc5484fb-d497-48ff-9baa-2312b1edf7d3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b900864d-21c8-4e1d-af68-c0f45ab020c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717028b6-d2cf-4ce2-9dee-ebf7ea3f64ba",
        "cursor": {
          "ref": "ec71ef3f-3355-4354-906e-cad5dfd5e2b5",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c8c3da05-1695-47ff-8741-3eae759cf623"
        },
        "item": {
          "id": "717028b6-d2cf-4ce2-9dee-ebf7ea3f64ba",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ff15db9a-ca1b-4af6-90ae-0e491cac2753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ea4fe0-5af6-423c-acfe-090ed24909da",
        "cursor": {
          "ref": "6c818244-6d6b-4ad9-9c17-313af265234a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "46037661-0ff6-4436-82eb-80dd50935aef"
        },
        "item": {
          "id": "e5ea4fe0-5af6-423c-acfe-090ed24909da",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b8f52e8f-7a45-4306-af6f-1587ae9b3482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21979789-83bf-4d77-88ca-16e72d19f0d4",
        "cursor": {
          "ref": "ffcc4b23-62f4-40b0-aa15-575ff7204063",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2b51f68d-0434-4d4f-afac-ffcb74b6258c"
        },
        "item": {
          "id": "21979789-83bf-4d77-88ca-16e72d19f0d4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "45875835-d7df-48fb-8b49-e903208a86de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee4209f-6548-4986-883a-55a656d89f76",
        "cursor": {
          "ref": "13b9bbc5-a3b5-4e90-8e1c-cc5aef1ed7e0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d5df33be-5749-40a7-adec-cbe2596d1cbd"
        },
        "item": {
          "id": "9ee4209f-6548-4986-883a-55a656d89f76",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a0a3f193-d747-4c2d-90e2-deb2601bb7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7417cf67-137e-442c-bf3e-87228596fe52",
        "cursor": {
          "ref": "e035530e-1492-4239-9564-70ef0346bb2c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b99fcbdb-99a1-4aaa-b32c-42f8c36780c7"
        },
        "item": {
          "id": "7417cf67-137e-442c-bf3e-87228596fe52",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b68240ff-6233-475a-8c6e-3d89634fb83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4fd4d1-af48-4c3e-8e83-f49bcfe45ef0",
        "cursor": {
          "ref": "acde05d5-2258-4823-b957-f93e52b15b9c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3d796d22-508d-4f8b-8507-5cfa052ba7c8"
        },
        "item": {
          "id": "7d4fd4d1-af48-4c3e-8e83-f49bcfe45ef0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2b096fbe-6807-4238-8818-05cfed84a4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb33a41-aa8c-4907-a661-e71474229cc4",
        "cursor": {
          "ref": "98ab3943-67dc-4881-a320-d37bb3108a26",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1c97233f-122d-404f-bfbe-7a43ebf1c886"
        },
        "item": {
          "id": "6fb33a41-aa8c-4907-a661-e71474229cc4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3a393100-4589-4415-9225-4cc654a3fb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4dbcdf-f95d-433d-8623-6756ee55cd96",
        "cursor": {
          "ref": "1b8a23a1-1dc2-41ed-8493-d20990b543ff",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "af10daf3-3d76-4684-ab4e-99435329acd3"
        },
        "item": {
          "id": "3e4dbcdf-f95d-433d-8623-6756ee55cd96",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "458b8132-9fbe-4485-bf06-848d1d714903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6c8d92-0477-423c-b67c-f7f97698f28f",
        "cursor": {
          "ref": "983fe017-6186-4784-864d-d5859ff5100c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "05ca4b59-4c9c-4774-bf98-7839e60dec73"
        },
        "item": {
          "id": "ae6c8d92-0477-423c-b67c-f7f97698f28f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a387a5b9-3932-4ba4-98f9-f048e7baeb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c21f887-bdd5-4f25-bc37-3350acf0ee4e",
        "cursor": {
          "ref": "e43a5960-39a4-4f6b-8fa8-d0faf2416b0c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5d4ad147-8565-4149-9f70-27959c0150eb"
        },
        "item": {
          "id": "7c21f887-bdd5-4f25-bc37-3350acf0ee4e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "199b7329-7e0d-427f-a681-f3d045f87f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9829d1-b8fc-444d-bce1-b63eccc312f9",
        "cursor": {
          "ref": "ffa64611-ebc2-421b-a8aa-a914e59af2b8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "04993989-290a-43ad-a9d1-cd6752975569"
        },
        "item": {
          "id": "8d9829d1-b8fc-444d-bce1-b63eccc312f9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "032e8e65-8ae1-461f-a25a-bc1c71b3f36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9002b300-ef86-450f-ac2e-6d89d0dc23e0",
        "cursor": {
          "ref": "eab3d34d-7499-4b43-ac71-775e373eeed1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "21526361-84c0-4521-9e59-1d4adec21f71"
        },
        "item": {
          "id": "9002b300-ef86-450f-ac2e-6d89d0dc23e0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "49e94d76-de0a-470a-93f7-a0f60ef6105b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55721e47-a9cd-4c3b-96b8-cb4a43d40e1f",
        "cursor": {
          "ref": "510e07b0-6257-4323-a2fe-01e2de4eb780",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "61466aa1-278c-4eaf-b771-4af51b0442fa"
        },
        "item": {
          "id": "55721e47-a9cd-4c3b-96b8-cb4a43d40e1f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6f327984-26f2-495d-a195-13e7187328f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529605ea-034a-4f6b-bee8-ebb30d7b4538",
        "cursor": {
          "ref": "4accca1e-7fcf-45aa-a862-1193193cba93",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d1978595-1fc2-48c1-9809-c0239137dafb"
        },
        "item": {
          "id": "529605ea-034a-4f6b-bee8-ebb30d7b4538",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "25d83603-4ae1-4e4d-9b5b-382e6fa904db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51de750e-36ec-430c-a800-67f0fd3ae0cf",
        "cursor": {
          "ref": "612ac42f-7bb6-4ac6-9512-0ac62e442029",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f5abbd74-c2cf-4230-977a-530b70ec26c7"
        },
        "item": {
          "id": "51de750e-36ec-430c-a800-67f0fd3ae0cf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d292d981-efc3-474f-b42f-28360f9ca344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e003bf-485b-47c5-b6d5-d11306427f73",
        "cursor": {
          "ref": "2dfb4b29-d067-48ac-94c7-95349395a7e0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "988922e1-8778-4b00-9e1e-0f90a570df77"
        },
        "item": {
          "id": "86e003bf-485b-47c5-b6d5-d11306427f73",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ebaad1cc-7b63-4067-be72-be3c861b6d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c0467c-3ce0-474b-930e-49c395612747",
        "cursor": {
          "ref": "53dfec85-b994-4a23-aa82-50f9983e0ca9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1a23b6c1-98e1-4485-aa14-218445fd157a"
        },
        "item": {
          "id": "56c0467c-3ce0-474b-930e-49c395612747",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "05d5f19d-5da1-4337-b044-2da9b9f0de65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa528cbc-d2b1-4b99-b753-8b7d94f671a0",
        "cursor": {
          "ref": "976b3e2f-6640-43b8-83c8-4d15adbb0407",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a0b6cd24-9be6-4964-866c-362b809b5049"
        },
        "item": {
          "id": "aa528cbc-d2b1-4b99-b753-8b7d94f671a0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d284df4b-cc64-45e3-b965-16e2ef832b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f21885-5985-437f-8bc5-79d9d1ca8b3f",
        "cursor": {
          "ref": "40aa485d-018a-4e2b-b18e-55f3810f4f2a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "887611ef-46b9-454c-902f-5a3dac3d5d79"
        },
        "item": {
          "id": "c6f21885-5985-437f-8bc5-79d9d1ca8b3f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "936343cd-48ba-4bb7-abbe-d1ecedf509da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb3be7c-d4cf-4855-b8d1-233d662f7b35",
        "cursor": {
          "ref": "eb58c6fa-9235-4da5-b9db-c4f2ce635cae",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "929ce350-ddce-4463-8ff3-a33f18e61f16"
        },
        "item": {
          "id": "1bb3be7c-d4cf-4855-b8d1-233d662f7b35",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "548aa325-a355-4f21-bb47-d07b7cbd7963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae09b52-6839-4c38-92b7-56e60f57fc6d",
        "cursor": {
          "ref": "2ca47d68-23a4-4c6a-bdfc-005c6c8cee87",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8f781592-1885-4db2-8e68-5715c13817dd"
        },
        "item": {
          "id": "7ae09b52-6839-4c38-92b7-56e60f57fc6d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3e2d1ca3-2403-4a10-b170-44ad17708417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e345d45-9faa-4349-ae70-d41446681289",
        "cursor": {
          "ref": "6c394633-af0d-4b15-a9ec-3fb3d9e590d5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8e905461-e27f-4114-9a2c-34179e654b19"
        },
        "item": {
          "id": "0e345d45-9faa-4349-ae70-d41446681289",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "86eede60-4214-4c02-aefa-1e8e84e61cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8c6c51-eb59-4341-b7ae-dc3c6c52130f",
        "cursor": {
          "ref": "308b641d-aa6b-438e-8d96-c71db98f18c5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1385ab72-a1b4-42ab-b512-b27bb85b06c1"
        },
        "item": {
          "id": "6c8c6c51-eb59-4341-b7ae-dc3c6c52130f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "02d294d5-8884-4bee-82ec-29574198164c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330140cf-9fa3-4bb0-8def-e531356c25b3",
        "cursor": {
          "ref": "d911b676-0417-449c-9d92-4e9b8384288c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "281c11a8-6ac9-4e3f-a7d3-9a2e19734df1"
        },
        "item": {
          "id": "330140cf-9fa3-4bb0-8def-e531356c25b3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3f499070-bd59-47ab-b3bf-2e40c4c20cf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3fd583-0b7e-4596-b92b-a7a356c51b54",
        "cursor": {
          "ref": "30a55b85-12d8-4793-a93d-9800c52d4650",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fd295e8e-c781-4d6a-94b4-8152bc57a3ae"
        },
        "item": {
          "id": "6e3fd583-0b7e-4596-b92b-a7a356c51b54",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "43fc825d-90d9-43f4-8b15-977bec71a56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7bd04f6e-1963-43cf-ab15-46d8c2ceb25a",
        "cursor": {
          "ref": "e47f209b-b4a9-4484-bf48-42771ded81d7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ac686ee9-fc21-431a-b383-226f9cfcd8d5"
        },
        "item": {
          "id": "7bd04f6e-1963-43cf-ab15-46d8c2ceb25a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4865c55d-ba27-46db-96ec-a048f3e5bde0",
          "status": "Created",
          "code": 201,
          "responseTime": 8841,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "30440af3-3400-4f89-bc83-2b9199af2367",
        "cursor": {
          "ref": "977d6981-6689-4f7b-8590-9d3b0000a30b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a951fff1-a6a0-485d-ba45-3d3731972d4c"
        },
        "item": {
          "id": "30440af3-3400-4f89-bc83-2b9199af2367",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ce04db77-f6c0-4301-a310-cf21e45e9d5e",
          "status": "Created",
          "code": 201,
          "responseTime": 8097,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b03d3a1-6f6d-45e6-9d8e-6c02159c7a61",
        "cursor": {
          "ref": "139c11a4-97a4-4977-a783-0096a229e36d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8c24f0bc-6e3b-4d5c-a114-f91a854a21e4"
        },
        "item": {
          "id": "3b03d3a1-6f6d-45e6-9d8e-6c02159c7a61",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "78036912-55e2-403a-b0bd-75fac1aad621",
          "status": "Created",
          "code": 201,
          "responseTime": 8874,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cff592-2774-49c9-93dd-2bdc2e12e3a6",
        "cursor": {
          "ref": "dc60711a-53c1-4ab7-a07c-6970116b7fb7",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "771ab48a-0a94-421d-9390-46816d5cfd0a"
        },
        "item": {
          "id": "78cff592-2774-49c9-93dd-2bdc2e12e3a6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "05028527-f6f2-48ba-93ec-2b0a17412168",
          "status": "Created",
          "code": 201,
          "responseTime": 8103,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d5e1ae-5765-425d-8062-d4c4e9575a09",
        "cursor": {
          "ref": "ad36de65-1b85-48aa-9ce6-91f77559fea3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e4a7ee21-4025-414d-8eaa-b111ca7c9fa9"
        },
        "item": {
          "id": "18d5e1ae-5765-425d-8062-d4c4e9575a09",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "813aa1e3-1d7b-4927-a62f-cfb580c5bd90",
          "status": "Created",
          "code": 201,
          "responseTime": 8469,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec33d065-aa13-47b5-b726-6e6c03ba62ee",
        "cursor": {
          "ref": "3964a959-fe29-4d0b-aff2-da20c34d6eb4",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3bbc797b-f02c-42c3-936c-438e3c26e635"
        },
        "item": {
          "id": "ec33d065-aa13-47b5-b726-6e6c03ba62ee",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "17af9fda-871b-48a3-91d4-43ba0500e38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "90fdb504-e041-4dad-a151-28ebc9c2030d",
        "cursor": {
          "ref": "c64bf391-6630-4ed9-ad35-9f54f201aa77",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2a5f4f76-181e-4bd9-8ebd-0bee2ec5d666"
        },
        "item": {
          "id": "90fdb504-e041-4dad-a151-28ebc9c2030d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "73f4c4ad-35b1-4d33-8427-f08384ed4104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ed41e1-86a0-4690-8a42-4247355f689c",
        "cursor": {
          "ref": "2bac0037-5c08-4740-b7db-d65bcc4ef30b",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "de8417d5-aa73-4366-ab48-be14f8d55f0f"
        },
        "item": {
          "id": "13ed41e1-86a0-4690-8a42-4247355f689c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b46a81f2-11d2-4bac-9c61-98b220998a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4937a913-7d4a-4f34-a79c-f3acfd5ef653",
        "cursor": {
          "ref": "e2909bd2-ab13-4351-8e6b-7e953fa8354a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "48b4bd5b-58e3-4d93-8232-e244469ef33a"
        },
        "item": {
          "id": "4937a913-7d4a-4f34-a79c-f3acfd5ef653",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "404d181e-f48b-4c04-b4bd-faa5c86bb63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de48394a-461d-4093-9d13-2db7a289ec41",
        "cursor": {
          "ref": "3da0bdbd-c291-4109-890c-e80ec474839f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3dd9e4f0-99c1-41d9-9c44-df5d1f2fdd91"
        },
        "item": {
          "id": "de48394a-461d-4093-9d13-2db7a289ec41",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b2221bfc-68df-4ea1-b6b9-ffea36b8df70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af9d2c3-f46a-400a-ac34-e92e394d990a",
        "cursor": {
          "ref": "b525c25e-379f-44cd-9080-2b6c0ba566c9",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "03cf685b-32a0-4ed6-8143-5422a1da934a"
        },
        "item": {
          "id": "6af9d2c3-f46a-400a-ac34-e92e394d990a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d2d75fce-676d-4d56-ace2-665953346a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a6a657-9882-4130-a7c9-001946ce150f",
        "cursor": {
          "ref": "36c4464e-14bc-4817-b503-0632c40b0707",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6f137cab-0e31-41ab-91c7-200f7e27069e"
        },
        "item": {
          "id": "02a6a657-9882-4130-a7c9-001946ce150f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "193182ef-7353-4f19-9ab2-e9825a735f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483f4147-bd6d-4c64-bf21-c46a37819287",
        "cursor": {
          "ref": "f40ba65f-ca8f-41ef-8d17-9ddb667bf241",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "08020716-fcb3-48cf-8246-e3772ea34859"
        },
        "item": {
          "id": "483f4147-bd6d-4c64-bf21-c46a37819287",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d6ccec1d-5adf-4fc2-b9e2-4fa488f84a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a7797a-34ab-42fc-91b2-bbeb423999ae",
        "cursor": {
          "ref": "1474dec4-ae2e-4e93-9c67-4b0593c7de7e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f45c8010-7bbf-47ce-89f9-5600c3cc39bf"
        },
        "item": {
          "id": "73a7797a-34ab-42fc-91b2-bbeb423999ae",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8bd1174e-e7ad-4d69-a599-21e1116205f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3fbca3-727e-4aa9-a997-6790fd4c3678",
        "cursor": {
          "ref": "d9f0610d-6724-4da8-bafc-8f9e5a3385e7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "883f4718-b742-45ce-bb84-8ea7d0e4dd7a"
        },
        "item": {
          "id": "6c3fbca3-727e-4aa9-a997-6790fd4c3678",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "755b6982-bab0-4b88-acfe-1075c64d84d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439cd675-ec2e-49d5-84aa-18a25405ace7",
        "cursor": {
          "ref": "5731e200-ac45-496b-9ec5-03bad2fbc805",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0d540101-ba83-4069-90b5-ce050d3ba8d7"
        },
        "item": {
          "id": "439cd675-ec2e-49d5-84aa-18a25405ace7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c1ddbf8e-0bfa-4c57-8275-c635b2ac22bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2299e3-2b53-4131-980d-b6f1ebcb1f01",
        "cursor": {
          "ref": "6047945c-540b-4837-a8a0-0bd3e0c25e4d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "995d44c5-7b2e-46ee-9f0c-de27598db5a2"
        },
        "item": {
          "id": "df2299e3-2b53-4131-980d-b6f1ebcb1f01",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f91e3ebb-720b-4ba9-a62f-20aa2de9881c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d24dc9-6df7-490d-811c-99e2619c99c3",
        "cursor": {
          "ref": "1760efcd-64d0-4f61-ba95-285db5758d6c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "719b8fee-9d92-4132-a689-7b82c5dfff13"
        },
        "item": {
          "id": "28d24dc9-6df7-490d-811c-99e2619c99c3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3629a362-81b3-4dd5-bf6f-1a91afe8163c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a0d49e-f102-4cd9-8701-5be26998f512",
        "cursor": {
          "ref": "193a6219-2e95-408e-a308-92888336695d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8e22e2f5-cf3a-49f1-8e31-097472cf7e4d"
        },
        "item": {
          "id": "d2a0d49e-f102-4cd9-8701-5be26998f512",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "23dde17d-cc5e-4f11-8086-c1412f1f01b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6c03b3-629a-473d-9929-76751b910930",
        "cursor": {
          "ref": "62a7fbe9-b0f9-43c8-a1ff-61f5b1e2e6a2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a3851156-a54a-4b17-9508-a468a96ee62c"
        },
        "item": {
          "id": "8e6c03b3-629a-473d-9929-76751b910930",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "46637d14-cb48-4e0d-a05e-3132801773e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736a478e-c1aa-450d-a0fd-49120d50c9ed",
        "cursor": {
          "ref": "7ae7f56e-82f6-4791-9ca6-626632a5ae84",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bae2e961-5a41-4160-961e-5f918518c185"
        },
        "item": {
          "id": "736a478e-c1aa-450d-a0fd-49120d50c9ed",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "65ed944b-2903-46a5-b2d2-3e715959d914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84978822-9da3-4d83-bc94-231ace9427c0",
        "cursor": {
          "ref": "c37be707-06db-48c2-80a1-9c04e4435461",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d1b6a330-9bdb-4b3b-8183-0d08f22d5aed"
        },
        "item": {
          "id": "84978822-9da3-4d83-bc94-231ace9427c0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b7dc0b3a-f93a-4cff-8f0e-72b0decea5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8835a8-1795-4007-8cf0-8f26d0126cd2",
        "cursor": {
          "ref": "ecd3761c-0e22-41e8-9272-707366c5d43f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0e90dc46-6bac-4c7a-99ef-1601b95f26eb"
        },
        "item": {
          "id": "bf8835a8-1795-4007-8cf0-8f26d0126cd2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "080ab296-f107-4f48-8921-7fb497dee5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f306f1-83eb-4dca-879c-e0a52ce87bc2",
        "cursor": {
          "ref": "85e747f9-7ec2-4c03-82ae-1fd076153140",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "60cf62da-d4e8-42ad-a23c-ba2aceeb60de"
        },
        "item": {
          "id": "b0f306f1-83eb-4dca-879c-e0a52ce87bc2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0de8f17f-5a7f-40c0-9d10-03bf2695381e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6626d5-bf22-4f11-8c44-5c741050deb1",
        "cursor": {
          "ref": "721e696b-dbce-45cd-8e9f-04540a641820",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dfbe2ad5-3644-4c9f-b450-d9c705997bf1"
        },
        "item": {
          "id": "6d6626d5-bf22-4f11-8c44-5c741050deb1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "114d29be-4d87-481c-91fb-d87a6d28bdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c67911-dfab-46ae-a205-c4fe3e97e97d",
        "cursor": {
          "ref": "1a0c18aa-fe3a-4bef-b46f-42ce23a2d971",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d556e787-1734-47b8-afb4-3dee941f0ea6"
        },
        "item": {
          "id": "75c67911-dfab-46ae-a205-c4fe3e97e97d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b8a4bc64-4f84-4401-a240-f48479554eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342e9844-b8cb-4550-9183-cbf91d50485c",
        "cursor": {
          "ref": "3c10399b-e182-408e-b993-472c731f1623",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5f08fbdb-b5e7-45b2-befd-ac195dc0ce18"
        },
        "item": {
          "id": "342e9844-b8cb-4550-9183-cbf91d50485c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a890edfa-66d1-4141-878b-140528d39499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d4a575-26b6-42cb-a24c-d12dbb0efa3f",
        "cursor": {
          "ref": "0b135b00-34ce-4736-8ddb-99ec5065bc70",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "aa632d63-c995-42f5-8375-812b4dcc01b5"
        },
        "item": {
          "id": "12d4a575-26b6-42cb-a24c-d12dbb0efa3f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6b2a72e2-5ceb-4cb4-ac13-c7f7c3d7e285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d14010-6b7f-4ef1-ac6b-fa6762112bc0",
        "cursor": {
          "ref": "fc98461f-069c-4b31-8767-247fb2dae31a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "af90277e-f39e-4a7b-a021-ed4a9da77991"
        },
        "item": {
          "id": "64d14010-6b7f-4ef1-ac6b-fa6762112bc0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7aa4f671-2f8d-476e-a3d8-93260f86ae68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e4ccf1-8e89-461a-9563-c6a293becc5e",
        "cursor": {
          "ref": "8f1d7a7c-bec5-4de3-a688-5792b221d43a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eccf5854-92d7-431a-9cf0-6dff763bf907"
        },
        "item": {
          "id": "71e4ccf1-8e89-461a-9563-c6a293becc5e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b05bec8-35be-4553-ad2a-be63753926ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce59818-bd8f-4f54-bcf8-0ea59dbdc83a",
        "cursor": {
          "ref": "b21306af-a0ab-41bd-8d15-7f1222a1b5aa",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a36192a4-1dd2-4435-a135-971cae14757e"
        },
        "item": {
          "id": "6ce59818-bd8f-4f54-bcf8-0ea59dbdc83a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d0626c60-364b-4fd3-974a-0f4cd1373251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61e7afe-0233-44fc-8e0e-0d44237029cb",
        "cursor": {
          "ref": "76866c87-9483-42ef-a573-867393ddc6a2",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8ec4de3d-de4c-440b-96b3-b908a1718676"
        },
        "item": {
          "id": "b61e7afe-0233-44fc-8e0e-0d44237029cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7a3f315-4f7a-4b13-b295-97369be78730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ae0470-af44-4d8e-8d10-735431c41744",
        "cursor": {
          "ref": "64eec190-4041-41fb-ac2a-3d19b45ceda3",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "717affde-2e9c-4cce-b204-56ef73a3e11f"
        },
        "item": {
          "id": "60ae0470-af44-4d8e-8d10-735431c41744",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e8c1b706-e819-4233-a3ba-5cbeb76f3349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91c93da-940e-466e-872c-9d0549e0e04b",
        "cursor": {
          "ref": "e98c7962-da51-4ddb-836f-466fa82bda07",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "72dc88b2-00f6-4447-8c07-c57bb396a74a"
        },
        "item": {
          "id": "c91c93da-940e-466e-872c-9d0549e0e04b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c6b8885d-5cf6-4833-bdc2-11a60551ab3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183bb18e-657c-4cc4-ac75-17472bf09d29",
        "cursor": {
          "ref": "4e386946-a082-4f1c-af96-ec971b0cc7b2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8b2677da-afcb-4fe1-ba96-1c9cfa5a7ad1"
        },
        "item": {
          "id": "183bb18e-657c-4cc4-ac75-17472bf09d29",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1e4c5f93-a1cb-44bb-b917-2714e7d6b3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe874b3-bd71-4149-a506-b387df533e0d",
        "cursor": {
          "ref": "c6e0ca57-12ba-4078-b796-2afce2caf28f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b07692c7-f061-49e0-b102-5e5e22c9b8ca"
        },
        "item": {
          "id": "dfe874b3-bd71-4149-a506-b387df533e0d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "195d7d7d-cbf3-4678-9214-2b1095286675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7855a191-f604-4257-bd5d-88fc6490702d",
        "cursor": {
          "ref": "4c45a413-1e35-49ab-98cb-c54be1539d88",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e7b78070-e94a-4588-aebd-c46fbf109d58"
        },
        "item": {
          "id": "7855a191-f604-4257-bd5d-88fc6490702d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "23659200-f6fe-4b0f-8ab1-2d3e1bf06f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15df5b55-4c8b-47fc-b5db-8af1dcb1f7c5",
        "cursor": {
          "ref": "c6980d82-f94b-473a-8f0b-4f88effd3c3a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "09e02224-3798-4d46-886b-b1610706e190"
        },
        "item": {
          "id": "15df5b55-4c8b-47fc-b5db-8af1dcb1f7c5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "97d70199-9e82-4877-b814-42136ce01a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f97334-3c7a-4ef0-ad2e-ce4a9632655b",
        "cursor": {
          "ref": "44a01054-dc87-414f-8456-a797beb8d49c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2dbed208-b6fc-4b19-8ac1-cc89c606313b"
        },
        "item": {
          "id": "53f97334-3c7a-4ef0-ad2e-ce4a9632655b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1870f41c-3632-4519-9be1-f015e9694ebe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ca4c48-1b59-4580-a2d7-7c40b28ce710",
        "cursor": {
          "ref": "1b1b503e-9346-48b4-b71d-b48de8d67be2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c353d37f-6609-4478-8eae-edcaabdb6db3"
        },
        "item": {
          "id": "f0ca4c48-1b59-4580-a2d7-7c40b28ce710",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98003f81-9f8f-4047-9a0b-1637026eddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecfa53a-ba9c-401e-a436-b5a6cac9a4df",
        "cursor": {
          "ref": "f55e0c55-9376-4b70-883c-645314aa80d5",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9f5907a1-6747-4686-8e62-beec7829141a"
        },
        "item": {
          "id": "cecfa53a-ba9c-401e-a436-b5a6cac9a4df",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6831a8be-bd14-4ed5-bab8-87d24af69094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c741938d-6a58-4689-ad58-48a45fdbaa20",
        "cursor": {
          "ref": "1a5337bd-91bf-4a32-a754-6c9ac13d454a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4baa830c-009a-4c43-a2a9-de0028e86d83"
        },
        "item": {
          "id": "c741938d-6a58-4689-ad58-48a45fdbaa20",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "350db935-4e9f-4d3c-ac84-deb745b2bc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce21ae7-8056-46a3-9f4d-afe2abb94e7e",
        "cursor": {
          "ref": "2890a795-1320-4d9e-a652-9554741c8f29",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3486f867-c16e-4b7a-87a8-0e7347fa697f"
        },
        "item": {
          "id": "1ce21ae7-8056-46a3-9f4d-afe2abb94e7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dfaa2904-1e66-4e90-ad44-68e0ac3d6358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2069ada0-3494-4300-907e-c656f283f053",
        "cursor": {
          "ref": "d1c5833c-ab78-44bf-99b5-45966a7e729f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e35f3718-b0a7-4d88-8291-59f159c3333f"
        },
        "item": {
          "id": "2069ada0-3494-4300-907e-c656f283f053",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e890ac3a-0923-4ed6-8b4a-48caf8166f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aca6d71-010c-4afe-ac11-9c69ceb92d8d",
        "cursor": {
          "ref": "8b77acad-e289-434c-bb61-029ccbdcb5ea",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0f260d4c-78fb-4fc9-90e9-e438d0553c32"
        },
        "item": {
          "id": "1aca6d71-010c-4afe-ac11-9c69ceb92d8d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9f495f10-0821-4e68-8a4e-788219b103d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c49d5c5-5865-41cb-b6c0-c81947236422",
        "cursor": {
          "ref": "319c508e-9b27-4eb3-83e2-832f32ae7026",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "81173453-83ed-4c39-a334-bc19170829b6"
        },
        "item": {
          "id": "2c49d5c5-5865-41cb-b6c0-c81947236422",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "537a6137-cb30-4300-ae46-e2e69a971009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8877f7ae-9911-4c39-b635-cb6e1bfc7d9a",
        "cursor": {
          "ref": "a0b5c17b-3c8e-422b-93f0-7a7e83f05ced",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "573897b3-7dc6-405d-b4e8-6e20572c8094"
        },
        "item": {
          "id": "8877f7ae-9911-4c39-b635-cb6e1bfc7d9a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "968d1bab-3c94-4d2c-a135-f00343acf8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9f8e71-32de-447d-9d8d-3e878e3d6586",
        "cursor": {
          "ref": "a1ef84b7-a388-483c-b2be-a5c33bdc480c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4d81620a-1a81-445b-8490-b8837533a2af"
        },
        "item": {
          "id": "4d9f8e71-32de-447d-9d8d-3e878e3d6586",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "984fb7a6-864a-43b8-b81c-7962df9c31d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619321a7-a549-4cd4-a13e-8abb53bb04bd",
        "cursor": {
          "ref": "f8edf305-018c-4ea8-8b87-d6f2ff325f31",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b80bc78b-5369-47df-9c16-e52c38995e29"
        },
        "item": {
          "id": "619321a7-a549-4cd4-a13e-8abb53bb04bd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2d2a86cd-fd62-4c54-a2e8-9f1612d29d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143032e8-85cd-49b2-a4ec-7c7236ca114e",
        "cursor": {
          "ref": "0b90608a-f355-4012-bee6-ddb55f44abb1",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b30315d8-ae2a-4906-843e-a123fefcbd6a"
        },
        "item": {
          "id": "143032e8-85cd-49b2-a4ec-7c7236ca114e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ba2d1d63-7a18-43f0-bd78-2e918398d62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076904c5-881f-46d3-a335-458bdac8d976",
        "cursor": {
          "ref": "2602460d-53b3-4b25-b415-26f767bc8c1f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e24217e4-7bf6-4bb9-a7e8-7492e1506d65"
        },
        "item": {
          "id": "076904c5-881f-46d3-a335-458bdac8d976",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c90c17fa-41fe-4c71-a256-d34c21e628a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d454ce-3d44-436b-8593-f5dd2adfa718",
        "cursor": {
          "ref": "fa0a7c66-5631-402d-96ac-bf5109205297",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e3aa6b1d-85a8-48cb-85e1-06fed5e06fc1"
        },
        "item": {
          "id": "10d454ce-3d44-436b-8593-f5dd2adfa718",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3eb2dd84-4242-4351-8e38-39b805f53fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0ebb24-3f6b-4f4f-aa58-0123fe2ae908",
        "cursor": {
          "ref": "fa892583-29c3-4053-ba14-05effdbf9535",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3ca0d970-b491-454a-9b73-3448d2cd2410"
        },
        "item": {
          "id": "2a0ebb24-3f6b-4f4f-aa58-0123fe2ae908",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d91ba05b-6a4e-4f66-9cfe-11ff55ae75b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b00894-15b8-48ff-8d8a-f5d53891d61e",
        "cursor": {
          "ref": "9061c8c5-2943-44d5-b779-a43573ec8682",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b53219fc-b2c2-41f3-b5bf-aba53a01154e"
        },
        "item": {
          "id": "19b00894-15b8-48ff-8d8a-f5d53891d61e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "20e1c0a8-3b52-4f32-b360-deac61acdc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f13520-7732-4f4f-b4a5-c73642d505ac",
        "cursor": {
          "ref": "2a30f145-c2e7-4555-bd7b-2717dcec9267",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ed7eb378-563e-49fb-831d-34a37b98a5ae"
        },
        "item": {
          "id": "88f13520-7732-4f4f-b4a5-c73642d505ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fdaf9740-a96d-4261-a2f6-9d8816eceded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda72a93-c221-4944-9a2c-0a51799281a6",
        "cursor": {
          "ref": "c60933f9-999b-4c10-96d9-8411d59db0da",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f68d86d4-1a53-441d-a453-ad918d5950ec"
        },
        "item": {
          "id": "eda72a93-c221-4944-9a2c-0a51799281a6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f9082e2-5c58-45fb-a2ae-a9e027ecc04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564baf53-5d39-429b-96aa-44ba3913d9e7",
        "cursor": {
          "ref": "2a7b314d-4a80-4393-b319-243fbb8f51d5",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1e155993-005d-4848-9b2b-41f2f3d22230"
        },
        "item": {
          "id": "564baf53-5d39-429b-96aa-44ba3913d9e7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d616aab-7f2e-44c7-80ae-2de622108dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327020ee-71bd-430c-9044-caf249f999f2",
        "cursor": {
          "ref": "4d5441f2-9e95-45e5-916b-a3e188ee701f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8350ecd7-7408-4b31-a223-91a5a3866842"
        },
        "item": {
          "id": "327020ee-71bd-430c-9044-caf249f999f2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f9f9c4fe-8298-4bd0-ad21-59543c6f902f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de287392-fe78-4ef3-a00d-4ddd467324d5",
        "cursor": {
          "ref": "6bee4153-f069-40bb-b3f3-428588e5dd36",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "619a29db-5b75-451b-ac9a-b43d040ed111"
        },
        "item": {
          "id": "de287392-fe78-4ef3-a00d-4ddd467324d5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "afb9b58c-30df-4269-b5d3-1cd99d719fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51339cbb-3e11-40f7-a9a8-ac9970890dda",
        "cursor": {
          "ref": "fbda0d9b-2824-4543-8c5c-06a65da8c34d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d3671331-d0d2-4c4b-859b-09d5f99ed4c0"
        },
        "item": {
          "id": "51339cbb-3e11-40f7-a9a8-ac9970890dda",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "75793668-cb17-4a2b-b2b6-410058b57a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfac84a9-fa95-43c8-83d7-a6a819fa4b61",
        "cursor": {
          "ref": "66f226db-383f-4dac-87d6-98a4d994b59e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a70561d9-ed00-40fc-bda7-a50bd7c8c598"
        },
        "item": {
          "id": "cfac84a9-fa95-43c8-83d7-a6a819fa4b61",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a21662b2-dd00-4420-8829-4236ee0c4adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6265d1ff-910b-40f3-9c16-f58a63abc4e7",
        "cursor": {
          "ref": "43b98186-b286-4966-ab56-441a47afee64",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aece455c-3b6d-4a2b-a6db-4232da61aa38"
        },
        "item": {
          "id": "6265d1ff-910b-40f3-9c16-f58a63abc4e7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3c7b2568-3de0-4b81-bcab-4f3322fa90af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37ca163-d013-4f17-b367-a8ee37eca1ea",
        "cursor": {
          "ref": "c1b53227-730d-4cb4-b8b3-b044b01ffa83",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dbb19a05-dc0b-4c84-82a7-1b57c513e105"
        },
        "item": {
          "id": "a37ca163-d013-4f17-b367-a8ee37eca1ea",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "76cfece5-2740-4108-9895-6a253be39805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8ee31c-8c53-462d-9749-2e8550fac645",
        "cursor": {
          "ref": "fee2782c-631e-4749-8a8b-bc28d5557d2e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1fc848cb-e26b-4896-9868-e41c18ee4774"
        },
        "item": {
          "id": "fc8ee31c-8c53-462d-9749-2e8550fac645",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ccccf333-604b-4692-8450-f52361612245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3596437f-113d-4b2f-a5a2-6710818a1400",
        "cursor": {
          "ref": "2ce91f61-f8a3-4ccd-9ceb-a16f6ae29587",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c2dc6a7a-4836-46e4-a19d-277c82efd949"
        },
        "item": {
          "id": "3596437f-113d-4b2f-a5a2-6710818a1400",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd0b7491-8f8a-4862-abdb-71fc0297ce98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd2f1aa-fcd0-4e26-9363-38eb751360d4",
        "cursor": {
          "ref": "bdb09850-608d-4d25-baf3-853c4718d1ba",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bf40ad94-6613-47cd-9f2b-b737ae854dd2"
        },
        "item": {
          "id": "edd2f1aa-fcd0-4e26-9363-38eb751360d4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9a3f4a7c-1ed5-47f7-95bd-8dd7c7fbf833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957f5808-53c9-4fcc-8e5b-da96eea8337c",
        "cursor": {
          "ref": "26e5e943-138f-45b0-857e-653fb4b858e2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "24ab07bc-505b-467c-8c18-419f36080ede"
        },
        "item": {
          "id": "957f5808-53c9-4fcc-8e5b-da96eea8337c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "40807f1b-7d23-4d25-b34c-2f72bc5ad8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647dca20-0075-4541-8e01-6de2036df225",
        "cursor": {
          "ref": "15640441-7699-4f49-a40b-35a2c676ec14",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "98f44186-b77e-4e63-86d8-d9210be83b08"
        },
        "item": {
          "id": "647dca20-0075-4541-8e01-6de2036df225",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5832b164-22f2-417d-a999-19bf66a98ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b76a461-f0ad-4c84-a16a-92c8de740d51",
        "cursor": {
          "ref": "4487eb88-a2af-47bf-a539-189642f17b7a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "851f6b1e-03b2-4291-94f4-65655a7ceb61"
        },
        "item": {
          "id": "6b76a461-f0ad-4c84-a16a-92c8de740d51",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "869b14a7-eaa2-42d8-9920-f9d4548a07b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8da335e-d447-4713-8d83-cc22a79ca2c6",
        "cursor": {
          "ref": "36c30fe7-2457-4597-bf28-c5c1eaf93633",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7cea267a-b612-4a89-88ed-a73113512929"
        },
        "item": {
          "id": "e8da335e-d447-4713-8d83-cc22a79ca2c6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7c3fbf7e-9395-4e13-9a46-bd3703c1a940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a19859-8c3d-4665-8193-4380ea9e5c42",
        "cursor": {
          "ref": "6fcbf9bc-70b6-4c40-b7b6-6b4eb53d9fde",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "13893cae-baa1-4453-bf96-68e41579bd98"
        },
        "item": {
          "id": "76a19859-8c3d-4665-8193-4380ea9e5c42",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6a8c8c92-79cb-495c-bc6d-07fd39251add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef8b948-cdb4-4e38-813b-840a55262527",
        "cursor": {
          "ref": "8b37f24c-01ca-4b71-a87d-9cfacd68105a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "008d629a-b92b-478e-a62f-3756ed6aff1f"
        },
        "item": {
          "id": "7ef8b948-cdb4-4e38-813b-840a55262527",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "216cb5b4-54e0-4c66-8afd-3a0f9533a5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebfbaec-3e30-40fb-9577-e57a0162df1f",
        "cursor": {
          "ref": "9a6b5877-d060-4cae-a23a-3d099d4a4b65",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "249b0dc9-dea8-4014-a891-7bf1ee2d2bb9"
        },
        "item": {
          "id": "3ebfbaec-3e30-40fb-9577-e57a0162df1f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4264c0c6-9607-4ea0-9308-8d2c78dd1a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53e8ac7-595b-4bb0-af4c-ff7651f0c1da",
        "cursor": {
          "ref": "7e64db86-24c2-423d-904f-ce8b6db12997",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9899fcce-9568-4ad7-b674-c081070d0d1f"
        },
        "item": {
          "id": "e53e8ac7-595b-4bb0-af4c-ff7651f0c1da",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a8d81df0-862f-4e2e-829f-5feec8e0acaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7736af7-ca68-4c60-8652-908727324434",
        "cursor": {
          "ref": "28ac74f4-6562-4fea-9e2f-21f3ffdbe1d1",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a15c0b8b-09aa-446d-890c-996705164412"
        },
        "item": {
          "id": "a7736af7-ca68-4c60-8652-908727324434",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4ab2a685-2cb1-46e1-a32c-56d6d93bc499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77ea62a-e1b2-4158-992d-6cee3174d4dc",
        "cursor": {
          "ref": "12fe0534-54bd-4ec1-bc23-d62ee57f2b1c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9b8ce15b-382a-4c2f-a9c8-b4d290a01699"
        },
        "item": {
          "id": "d77ea62a-e1b2-4158-992d-6cee3174d4dc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ffe5e10e-4570-4404-818d-c834d1c65f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8452bad3-c652-422c-8edd-03f4d8d292e1",
        "cursor": {
          "ref": "2685e533-b853-4be4-ab6f-6509e6b42e53",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "18299567-d7e5-464e-98d0-e99bb73892c2"
        },
        "item": {
          "id": "8452bad3-c652-422c-8edd-03f4d8d292e1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e420822a-ddfe-4393-9965-939d2174c4ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e787fe-f8a7-4e19-a3cc-b153e6f47590",
        "cursor": {
          "ref": "b10114ae-fa69-4871-b69f-ca81c1af2786",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9a6e0511-2817-40c6-b768-ec6eb1d4dddd"
        },
        "item": {
          "id": "88e787fe-f8a7-4e19-a3cc-b153e6f47590",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "767f3498-7b76-47cf-9fa6-470cb3631eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd40916-f513-4836-aa01-2667b29ad27f",
        "cursor": {
          "ref": "3de50b1c-3c7f-4bb4-8180-2a4e19833689",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "57c8c6a1-9a83-4209-a523-1bf145e1d215"
        },
        "item": {
          "id": "5fd40916-f513-4836-aa01-2667b29ad27f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c35e9582-5089-4870-92df-070e72075497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d188893-f870-4a0a-9917-9f1f3bc7f549",
        "cursor": {
          "ref": "1e0f6a9b-308d-4011-af2b-e26eba13e03e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d8899d24-217d-46ef-9c08-c3c89c05acc2"
        },
        "item": {
          "id": "6d188893-f870-4a0a-9917-9f1f3bc7f549",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d9ca5b3b-be67-432f-8d36-0b103cfc9ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfcf8eb-a543-45d2-9382-a5d596586046",
        "cursor": {
          "ref": "7b80597a-6c9e-406f-ac59-bd3a7cdd3d55",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4614915b-f72a-48e7-90dd-2462388ef6a8"
        },
        "item": {
          "id": "acfcf8eb-a543-45d2-9382-a5d596586046",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f3cb489a-ba22-4afc-9c87-fad95ca06656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58db4645-b439-41b7-b9dd-e95144be0699",
        "cursor": {
          "ref": "eb588ff5-c8d3-4666-8d56-0acaa35e66f3",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ad11c9ab-2680-49cf-9113-55502197c1df"
        },
        "item": {
          "id": "58db4645-b439-41b7-b9dd-e95144be0699",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7e60486c-0dc7-4104-8b92-1e7bb0bbc818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073601a7-ddd8-4917-80d0-f1dda84e44e2",
        "cursor": {
          "ref": "0656ab9c-76dd-4013-a849-90dcde532c70",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2a4ffefa-06dc-43db-951a-926c748e7e1b"
        },
        "item": {
          "id": "073601a7-ddd8-4917-80d0-f1dda84e44e2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "34074da5-a85e-4ac2-a361-190150955169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8df0390-6c29-47bd-abde-931c91dd157f",
        "cursor": {
          "ref": "be71b0bc-0c10-485f-a280-a4769160b3bd",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a6b7d82c-ce6b-42f2-9198-bca9da61ff46"
        },
        "item": {
          "id": "d8df0390-6c29-47bd-abde-931c91dd157f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e257d834-9713-4f82-9cdf-713d7d20ff20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fc55bd-5094-417f-807a-fa52cccd3ed8",
        "cursor": {
          "ref": "c55b651a-389f-4b06-a122-d4ea7295cd67",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bd027505-5d3b-4754-8ca3-756a09bf0b6c"
        },
        "item": {
          "id": "45fc55bd-5094-417f-807a-fa52cccd3ed8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1cd1bb6d-4f42-4a10-a069-9787e9af3c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d42da4-3acc-484a-af08-58abaa1e4b33",
        "cursor": {
          "ref": "95167727-6a1d-4313-9769-183bc1a75b2b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "08d081bb-25b6-496b-b957-c1c889d4d7c8"
        },
        "item": {
          "id": "97d42da4-3acc-484a-af08-58abaa1e4b33",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5cd6ba3e-831f-431f-a965-bf72e897b117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5607f349-bf42-4cfd-8d98-6dc5c73e9965",
        "cursor": {
          "ref": "0c0ce573-06b9-4bac-aaa8-211f7c0747fe",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7ead0d44-2bd7-42da-80aa-6810b95000fe"
        },
        "item": {
          "id": "5607f349-bf42-4cfd-8d98-6dc5c73e9965",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9a8e5606-d542-40df-95e9-c6bc422a59d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae090ad4-3a99-4b97-953d-000540333815",
        "cursor": {
          "ref": "586b62bd-b6ff-48ce-bfc7-b744f46cafb0",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8d521891-e451-4836-b509-a8d6b0958a3c"
        },
        "item": {
          "id": "ae090ad4-3a99-4b97-953d-000540333815",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "66c0c02b-4188-4b69-974e-ee489ce8527c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2504128f-a1c0-4b2e-9964-0b3ea50c04b6",
        "cursor": {
          "ref": "286432c1-db62-44b5-a0bd-d3013012e66a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e9c2754b-91dc-4155-9832-8e744b705722"
        },
        "item": {
          "id": "2504128f-a1c0-4b2e-9964-0b3ea50c04b6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "15b3512b-dbd1-4cbc-b05a-7a9815acbc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89007105-a15c-4bbb-a2d1-5da8d8082957",
        "cursor": {
          "ref": "429d7b32-7aa0-4b62-a049-d44248539079",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "36744e3f-b87a-41d0-9712-9ce2ff31b775"
        },
        "item": {
          "id": "89007105-a15c-4bbb-a2d1-5da8d8082957",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "45910790-1a1e-4b3d-82fe-af1f4cb2bdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38459426-65e1-44ae-83cd-587d060c17fd",
        "cursor": {
          "ref": "79246208-45ef-4099-8766-cc30317a4997",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2fe1905a-159b-41e7-86a7-f578d6621b32"
        },
        "item": {
          "id": "38459426-65e1-44ae-83cd-587d060c17fd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2be4a858-e10d-45d6-bda3-ece3ead73913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15146ea8-753b-4164-844e-543f4045a9b2",
        "cursor": {
          "ref": "3d2cf1f7-004a-4e5c-9243-7d951afbed82",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "491d1b1f-56a0-4c21-b1e5-06e74dbddcc4"
        },
        "item": {
          "id": "15146ea8-753b-4164-844e-543f4045a9b2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fab59ae0-5529-461d-a00a-27cbe8a04601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68b467d-cd0b-4934-a5b3-cb714e8e4108",
        "cursor": {
          "ref": "1f95acb8-bad5-4efc-972c-b5e1301ddf67",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9e066012-d9c7-48ac-926e-cdfb9bd54865"
        },
        "item": {
          "id": "a68b467d-cd0b-4934-a5b3-cb714e8e4108",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f72f24ee-9c93-44e6-a565-a27622f52aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9eaaa17-e905-4af0-b622-d14c478c464b",
        "cursor": {
          "ref": "b1276c02-63f9-4aee-aa1b-b332ae23e8c8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6a9875b6-0ba2-4228-9fa2-a210510d403c"
        },
        "item": {
          "id": "c9eaaa17-e905-4af0-b622-d14c478c464b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c16883ab-e3e1-4070-ab67-88d606bd5a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f4ceb1-ade4-48dd-badc-72d4b20d65d7",
        "cursor": {
          "ref": "b798c71d-69ed-45e5-b9bd-28c66888a1ca",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fcdbb3d2-ebe0-4390-b226-b178308d4ce7"
        },
        "item": {
          "id": "73f4ceb1-ade4-48dd-badc-72d4b20d65d7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f46370d7-a86e-4c05-9a15-fe160c1ebfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c417979-1d1d-4ebb-88bb-0451bd43d1f6",
        "cursor": {
          "ref": "e83c9105-f563-465d-823b-5b91c0481b06",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f31cea96-891c-4aeb-b059-85e3b07c6822"
        },
        "item": {
          "id": "5c417979-1d1d-4ebb-88bb-0451bd43d1f6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ffde6a9f-abdc-4d82-98c2-565127f06162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d826d731-6ea3-43ec-a535-a59b6fd9dde5",
        "cursor": {
          "ref": "8cb41271-70a1-4d1a-abb2-62c09b38db3b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ebb8fe55-8639-4703-b36b-74624e836a6d"
        },
        "item": {
          "id": "d826d731-6ea3-43ec-a535-a59b6fd9dde5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7dfb6d2a-cf40-4d86-be9f-8799102a7f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbbe641-972f-48c9-bc31-e1e7cd97d343",
        "cursor": {
          "ref": "7993dcb2-24c7-4964-aff5-65ace5084e53",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "87abf705-706d-4101-91d0-c3973483e9a9"
        },
        "item": {
          "id": "4bbbe641-972f-48c9-bc31-e1e7cd97d343",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "59cb9317-d4da-46c1-a0aa-8bfb8170cf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac41ed8f-26ae-4617-8b4e-3f0cbff53c60",
        "cursor": {
          "ref": "ae4908b7-000b-4e36-a83b-71da823ee48b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9fd81891-0f25-4c42-9716-bbb93b5601e5"
        },
        "item": {
          "id": "ac41ed8f-26ae-4617-8b4e-3f0cbff53c60",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0f88ec40-6210-4bad-9bbe-42f9ec6f3e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de09c944-03fa-4082-aa67-a148ff55f1a7",
        "cursor": {
          "ref": "f9d8503d-f8b2-4fec-985a-52d0ad2d32ca",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0fb26f8a-e177-4723-9374-003e4b149bfe"
        },
        "item": {
          "id": "de09c944-03fa-4082-aa67-a148ff55f1a7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5ae5a256-039d-4baf-aee7-df8a484cc766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0cb8c5-5e20-4dbc-b8ac-1bee96e9a2db",
        "cursor": {
          "ref": "25984abe-bf86-41ff-b381-dec8398e670c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8deb7d4d-671a-4b83-bce8-ee6163947631"
        },
        "item": {
          "id": "4f0cb8c5-5e20-4dbc-b8ac-1bee96e9a2db",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b7bf0504-88e1-4d79-960d-1c2d4bef9d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af478778-0fbb-4e22-9e56-300211c52f5c",
        "cursor": {
          "ref": "beea92f3-552a-4855-9465-7a23d0acacc7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5e067505-8925-4d5b-b529-89f2f36b454f"
        },
        "item": {
          "id": "af478778-0fbb-4e22-9e56-300211c52f5c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0dd4d8a8-a150-4dcc-9267-10878ee97fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28f4800-cb29-47d9-90f9-ef97204fdc85",
        "cursor": {
          "ref": "92fcd694-9726-4c2c-9418-38360bda4b2b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c954ed79-3879-4e6f-bccd-ea0b51ed4b6b"
        },
        "item": {
          "id": "e28f4800-cb29-47d9-90f9-ef97204fdc85",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ef7fb1d6-00bd-49a2-87ac-1ee96fca1f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46706484-9868-4f1d-be47-6eac1de53747",
        "cursor": {
          "ref": "50bf9a13-676a-42b6-9d47-1f7be764a7dc",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c9fad515-9083-4785-ba1b-2cdd326cc92b"
        },
        "item": {
          "id": "46706484-9868-4f1d-be47-6eac1de53747",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "62d58734-254a-4adc-8ab3-9c2a1abe569a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c331d718-61c0-44af-9d37-562161dab2ca",
        "cursor": {
          "ref": "27359415-a50d-475c-97eb-269cfb7522bb",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c9a3daee-0180-48fa-a69f-6c70770f8fdb"
        },
        "item": {
          "id": "c331d718-61c0-44af-9d37-562161dab2ca",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6e2fb01d-0b8e-4c68-9f88-8107c5a6749f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a50ba0-dc41-4133-b04f-e5ed40ff3e3a",
        "cursor": {
          "ref": "404eb667-1529-4e46-a111-525086c6ae45",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9c5682b5-8c36-40e5-adc7-1df5925db870"
        },
        "item": {
          "id": "c1a50ba0-dc41-4133-b04f-e5ed40ff3e3a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "55629966-021a-47d2-9c26-97d86d2babdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af454fd-0b97-436d-adb8-fbc0741478c8",
        "cursor": {
          "ref": "471fd430-4004-4030-99f6-706c6422a87d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "99d858fe-8405-4fff-8bb5-30541a7bdf8e"
        },
        "item": {
          "id": "9af454fd-0b97-436d-adb8-fbc0741478c8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7ed99cd4-29e5-4a5f-b2c2-9f144841fc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7bf486-95fe-4a78-90a5-f71be1db9e8d",
        "cursor": {
          "ref": "c0aab7d7-94f3-4f46-b3dc-1e9c630546e8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d9afe63c-cf38-4246-9949-e61a1e95790f"
        },
        "item": {
          "id": "6a7bf486-95fe-4a78-90a5-f71be1db9e8d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "09cbcddf-41a4-4f8d-a2b7-e19049033ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf76159-119a-4b58-bbbd-ff20c09cbfe0",
        "cursor": {
          "ref": "4a0fad19-231a-484a-82bd-b9ef7cf36839",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "47fbf543-903f-403a-a8d3-08967ed692d0"
        },
        "item": {
          "id": "abf76159-119a-4b58-bbbd-ff20c09cbfe0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2332c98a-2a40-4582-8166-2f6d63af0de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3008d6b8-0704-470e-b558-db29290632ff",
        "cursor": {
          "ref": "4e54cbfc-8cb4-4816-8bcd-88fd3968aad6",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "77f93e0a-fbdc-4f93-8e8b-8bbca256b702"
        },
        "item": {
          "id": "3008d6b8-0704-470e-b558-db29290632ff",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cd482bfa-038c-41f8-9111-2cc695b985ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea4f3ab-d773-4a4b-b8a9-fdff5d110f35",
        "cursor": {
          "ref": "00e498ec-5381-4e4c-aa32-acb90aec6c5e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0fb31cc9-d7f4-435b-97a1-68f1c40ecc79"
        },
        "item": {
          "id": "3ea4f3ab-d773-4a4b-b8a9-fdff5d110f35",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4d2cf935-a046-4f05-bddf-2d3549019a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b68859-beb1-411d-86e5-49e8df13aa35",
        "cursor": {
          "ref": "9f1c9d98-bafb-4d5a-abf9-ee42e3c4b70e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5045eb0f-7d69-400a-94d1-0607e8e534f9"
        },
        "item": {
          "id": "39b68859-beb1-411d-86e5-49e8df13aa35",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4271404b-1d45-414c-8b6b-741fb84571e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b12d11-bf3d-4f92-abaa-65e06ff973ec",
        "cursor": {
          "ref": "166418d8-0b6b-4aaf-86da-aac8dc964fdd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "89387f2a-98ef-4a44-85b0-16cebc1eba50"
        },
        "item": {
          "id": "a7b12d11-bf3d-4f92-abaa-65e06ff973ec",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a94529b1-387d-4f5a-a959-df95ef998582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332fd554-777f-43fa-a334-5ed933e7fa2f",
        "cursor": {
          "ref": "2cad5efc-3abc-4d56-9c8f-d03b5702ad94",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "376fda73-5ef1-444c-b909-398fcb23ee4f"
        },
        "item": {
          "id": "332fd554-777f-43fa-a334-5ed933e7fa2f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b47a80e6-5de9-42f2-bd58-9e19849e3561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492f0d88-779d-4655-a708-8de0d0013b78",
        "cursor": {
          "ref": "8e4cbb2e-dc68-4bd1-ac69-9b339fc924bf",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8931530d-6f74-4252-8f5f-87574b4e5e06"
        },
        "item": {
          "id": "492f0d88-779d-4655-a708-8de0d0013b78",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "31752e2c-8c15-443e-82fb-f530f1f5534c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b925eadb-160e-4ad0-9101-cd72bbac7dc4",
        "cursor": {
          "ref": "bc9330ee-19a0-4a13-aea4-469cc0a3d8a7",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e33ce150-1e98-4a2e-90a0-daf6f365b692"
        },
        "item": {
          "id": "b925eadb-160e-4ad0-9101-cd72bbac7dc4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "964e4f16-0e6b-4592-a2a5-d1fe8ee80cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123d6396-22d7-4764-b607-0756c4177924",
        "cursor": {
          "ref": "cee31ac9-e440-4b6b-9adc-eddb29b7295b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ae2f15a4-1a98-4bcd-a8f4-72b434d6811b"
        },
        "item": {
          "id": "123d6396-22d7-4764-b607-0756c4177924",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "09ad8fa0-cbad-41e2-8719-c7017f1e06de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03210c70-d4d6-4f35-8e1e-e98d755361a9",
        "cursor": {
          "ref": "cb671d8d-d5bd-41ba-a6c8-9650ea5202fd",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a3a06020-3cfc-440a-b953-909588473fd5"
        },
        "item": {
          "id": "03210c70-d4d6-4f35-8e1e-e98d755361a9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0d3b3143-38a8-42b3-83cf-f65ba236b9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d952631c-6711-4440-8e93-8c3087575bb4",
        "cursor": {
          "ref": "24f16d63-c9f6-4f9b-8a9b-8f7d4646eaf5",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4547e6ef-2764-4031-9c81-98d6a5e4e50b"
        },
        "item": {
          "id": "d952631c-6711-4440-8e93-8c3087575bb4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "de3f6059-cf75-4f9f-b121-e12ccdd52afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961e47b2-a7f9-4dac-9bf1-e9ecbd408957",
        "cursor": {
          "ref": "52bb1b32-0123-42e2-a64a-9feea1c6f5c1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "50d566b2-abde-440f-a2fc-ae433e0faed6"
        },
        "item": {
          "id": "961e47b2-a7f9-4dac-9bf1-e9ecbd408957",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "136b0144-4bf1-4d53-93e8-053792ff80be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fae82c5-221a-42b6-8bf7-48541a3f1f35",
        "cursor": {
          "ref": "bec50ac2-06e1-4c0b-b57e-dc717f5e6484",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b1ca527a-2398-441a-bdac-738fb9c5ed5a"
        },
        "item": {
          "id": "3fae82c5-221a-42b6-8bf7-48541a3f1f35",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eef62311-d82e-4a57-9f58-f1ce94f45c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a20cc19-0e35-4073-ab87-d157fc05ccc7",
        "cursor": {
          "ref": "12e85796-6da2-4bbd-b797-e25678ed7166",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5f22dc6f-3130-460f-899e-b72da263842c"
        },
        "item": {
          "id": "7a20cc19-0e35-4073-ab87-d157fc05ccc7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f6b5e170-13ad-4bc0-8a3f-6644d4d6a85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35895530-de87-4967-aa43-21b369dfd3d9",
        "cursor": {
          "ref": "52cf98f9-ebca-46b1-a7c3-25f68d325c8c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "636d0cc9-3e2d-4a85-91cf-0dee6285e08e"
        },
        "item": {
          "id": "35895530-de87-4967-aa43-21b369dfd3d9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6f214838-2b5c-410b-a3ba-cec7bff780ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a45fa9-4510-4c69-ba30-6ee8dab4e62f",
        "cursor": {
          "ref": "6a589b3f-943a-466a-9750-fda60e6fc253",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4ef0522f-3cb5-4535-9f97-6bb7d754549f"
        },
        "item": {
          "id": "25a45fa9-4510-4c69-ba30-6ee8dab4e62f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ce69f7c8-15bc-4865-85b6-24046ff3cb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169068ca-155a-4dba-a192-7452bbcde5b5",
        "cursor": {
          "ref": "113646de-8c57-4647-ae18-72c54320983f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "de2659ea-647a-449b-b69c-f19bb39598fc"
        },
        "item": {
          "id": "169068ca-155a-4dba-a192-7452bbcde5b5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5be89853-9502-40b8-b675-b908b86825bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4098dd9-448d-4c44-b8f2-28ffb9ac81b2",
        "cursor": {
          "ref": "8911e0d6-c75e-4a62-b37a-09ee1783558a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d0db9ad5-ce07-4155-8a51-41d167a2de84"
        },
        "item": {
          "id": "a4098dd9-448d-4c44-b8f2-28ffb9ac81b2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "daaf4718-23d0-4af4-ab5d-8640d22fce04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33c1582-d43d-4873-a856-21d1a158df97",
        "cursor": {
          "ref": "876f69f6-aa61-4ac7-91e7-09a7acc14e68",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7bc12de8-9fe4-408b-bae2-3eadf07d5bd4"
        },
        "item": {
          "id": "b33c1582-d43d-4873-a856-21d1a158df97",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "547b479c-4ffc-4393-bf5c-c7aaa803637e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36170aee-9327-48ca-ae18-9419197751bb",
        "cursor": {
          "ref": "f3896d96-42bd-4c63-a674-39d58795dd94",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "21fab305-90f2-409b-9434-c37c117a911b"
        },
        "item": {
          "id": "36170aee-9327-48ca-ae18-9419197751bb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "50123ebc-5ee3-493b-96cf-b35be059114f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd85fa8-68f2-4717-96d9-6f01a68e58c0",
        "cursor": {
          "ref": "d5cf75c8-03eb-45ca-88bb-70a266f9e7dd",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f95b3248-f6c4-4324-aa2d-209af81d2db7"
        },
        "item": {
          "id": "4dd85fa8-68f2-4717-96d9-6f01a68e58c0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f1467c1d-a58b-4b4f-a348-484c997a81a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1137b2-217d-4e8e-aca7-aa9f9bf2f651",
        "cursor": {
          "ref": "ef0250f0-8a4c-4639-b6d5-c2d82f387061",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1b8e2d9c-54bf-44af-b25f-8c8c2ac6ccff"
        },
        "item": {
          "id": "1d1137b2-217d-4e8e-aca7-aa9f9bf2f651",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "74bc9e0d-6455-4c34-9751-f4cf0bbdc59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea4c716-10be-4f91-9021-f8eac2d67c5d",
        "cursor": {
          "ref": "b85d51b7-9ab4-42d2-97fe-8a57b89b4a90",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ba865944-fb4c-4dc9-84e0-fbd8c954abac"
        },
        "item": {
          "id": "6ea4c716-10be-4f91-9021-f8eac2d67c5d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bf4603fd-9b54-4e9d-a392-081d4209f6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb44de9c-e553-465f-ada5-9a25a6b96546",
        "cursor": {
          "ref": "03d648b4-fefc-4037-8c78-f3d38a2afba8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "420247e6-bb79-468e-9118-22002e1d8e2a"
        },
        "item": {
          "id": "bb44de9c-e553-465f-ada5-9a25a6b96546",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5e769875-ec6a-40ac-80d3-c6cf08e66957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f676cab-a633-433f-a5f4-2ba18a0eb114",
        "cursor": {
          "ref": "a73062f4-1a05-4767-b6c3-8251c251641c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "76b1280f-39b0-4fae-aa3c-aa4bbf90b371"
        },
        "item": {
          "id": "4f676cab-a633-433f-a5f4-2ba18a0eb114",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "47d62663-2950-4b61-9f5f-6e3197c9d082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dd944b-e142-45ae-b45b-68a040149049",
        "cursor": {
          "ref": "bd8f75ca-d212-4200-8f4c-78629808a1de",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c6a12cb6-1a01-43f9-ae20-9ca436c9180c"
        },
        "item": {
          "id": "c3dd944b-e142-45ae-b45b-68a040149049",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1deb233e-60e7-4eb1-9fce-f23312a8802c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203da7a6-6ef7-402c-bf69-2fd95cd34bf9",
        "cursor": {
          "ref": "81a7d753-d7e1-4dbc-a01b-f5c3ae343c9f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0b1178a2-94c0-47ab-bfa9-173dbcd72d86"
        },
        "item": {
          "id": "203da7a6-6ef7-402c-bf69-2fd95cd34bf9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "eef6ce78-c098-4d84-a28f-97a495d414bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a448ae4f-8b3d-40de-8406-8dcc4d135ea8",
        "cursor": {
          "ref": "1842ebbb-5e8d-4980-b567-942b6180cddf",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e2ab0dde-72fe-4c68-bf99-497b28702f57"
        },
        "item": {
          "id": "a448ae4f-8b3d-40de-8406-8dcc4d135ea8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "84d3d346-2322-40e0-a3df-195f9453b7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607c008a-8822-46b6-85fb-c474be932a8c",
        "cursor": {
          "ref": "275fcea9-05b7-45b7-9133-7899f7634875",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "aa61516c-3f89-4d4f-a2a2-5792d922fd2c"
        },
        "item": {
          "id": "607c008a-8822-46b6-85fb-c474be932a8c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "54c3c078-0e52-4b1f-bbdd-ee8e15af4bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccaf6ad-ca7a-476e-ace0-ef349dd50692",
        "cursor": {
          "ref": "760e023f-8c89-4923-b5ea-bfda1612d2b7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "108f2667-2361-4ac9-ba4f-93ef1a1a3978"
        },
        "item": {
          "id": "7ccaf6ad-ca7a-476e-ace0-ef349dd50692",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1ebe325b-92f0-4284-a396-c66047a95dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4695e8ad-c28c-44b0-a2d1-5a4b86b4b868",
        "cursor": {
          "ref": "2a3e0e13-e42b-492e-addb-4ca5540f7f9f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ea632b05-143d-4b3f-afe8-e51bf2c0d4f6"
        },
        "item": {
          "id": "4695e8ad-c28c-44b0-a2d1-5a4b86b4b868",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7dd5f514-ef09-4b69-aede-ee666814c7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16850c9-b6fc-4894-a149-6cb6a0d1f469",
        "cursor": {
          "ref": "4fce1b0c-f3d6-4bd6-a32f-c68ea0fa05dc",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cd7722d4-67f5-465e-8149-f7abdae12053"
        },
        "item": {
          "id": "b16850c9-b6fc-4894-a149-6cb6a0d1f469",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5fe87c79-4994-4141-8aab-15dc34ef44d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbf56c5-a8c1-4f21-a016-32879537f14e",
        "cursor": {
          "ref": "30087659-b97d-436e-9115-fe4f2005f816",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "18bc4b05-b579-4c04-afa1-d89aabadb481"
        },
        "item": {
          "id": "8bbf56c5-a8c1-4f21-a016-32879537f14e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1f87a76b-623c-4a67-940f-5f5042aa9c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda02ab-7279-4a83-bfea-a2c569cbef12",
        "cursor": {
          "ref": "13490d6b-7ded-48e1-acdf-a05a4fbf6784",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3d2d040e-b064-445c-ada6-b5e0d9674262"
        },
        "item": {
          "id": "2eda02ab-7279-4a83-bfea-a2c569cbef12",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2f189cad-92bb-4e11-b525-abc98217322b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b30e95-a62e-475c-872e-9e9e9c41db16",
        "cursor": {
          "ref": "71c02247-0618-4c3d-9d52-140abe9f092e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "490b0d54-6a7d-4f30-ac64-48d0608279c7"
        },
        "item": {
          "id": "c2b30e95-a62e-475c-872e-9e9e9c41db16",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a4342dc2-92cc-4492-92b7-cd84d770ce0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a603d6-a902-41c0-aa0a-38138a8c1ce5",
        "cursor": {
          "ref": "260a1a2c-6d71-442b-8236-f0ff38ef7338",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0b540d25-6e4b-4980-b0e5-6d62071f373b"
        },
        "item": {
          "id": "59a603d6-a902-41c0-aa0a-38138a8c1ce5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3d99f574-0e26-4086-bc51-135acc28422f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5cc915-3381-4c35-9e80-854678c140d1",
        "cursor": {
          "ref": "f1d0afc9-e548-4d50-bcd3-8fb459ecea79",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "720dbb6f-7645-4256-99f0-71aa892e452d"
        },
        "item": {
          "id": "cb5cc915-3381-4c35-9e80-854678c140d1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8b8fad91-db82-47bc-b132-0bfe276d2b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e6b558-53ce-4002-b0e5-b4f0addaff38",
        "cursor": {
          "ref": "df514e2f-490c-4c6c-a24f-b0506b38ee12",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bc1f9c7a-9f57-4090-9e1f-f94321a444da"
        },
        "item": {
          "id": "30e6b558-53ce-4002-b0e5-b4f0addaff38",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bc072e89-212a-44e0-9160-8950aa3044db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26619d6c-0599-4931-b6e7-3e842b963e26",
        "cursor": {
          "ref": "cf89ec31-cc54-4737-8868-ec4a1f6e2344",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ded5939a-63a6-4e64-99b3-ac251271513c"
        },
        "item": {
          "id": "26619d6c-0599-4931-b6e7-3e842b963e26",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "35abc95b-e39b-4247-97a7-d02b9b187b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459025bf-a50c-4700-8694-08a3ddf43763",
        "cursor": {
          "ref": "f538314b-ad6c-416b-b4c8-4ec61c39ac98",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f43416a0-d8a6-4e85-8692-aa0aed2d6201"
        },
        "item": {
          "id": "459025bf-a50c-4700-8694-08a3ddf43763",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ba574f4e-db3a-414b-af98-5c2c4292a69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3831ee4d-0845-41f7-b77c-60d9788245b8",
        "cursor": {
          "ref": "56c656b5-6c0c-4643-910f-838b6bb30bba",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f8b63cc5-e9a3-4764-9b37-3402fd4fefcb"
        },
        "item": {
          "id": "3831ee4d-0845-41f7-b77c-60d9788245b8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a3206e1e-8df5-42f1-8099-6ee243e1f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9214273f-99d7-473b-9426-453669ed3167",
        "cursor": {
          "ref": "754fcf3b-479b-43f1-b12e-66eb9f9352a2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5a1d2c97-c198-4fbb-8e11-e6eb1beab96f"
        },
        "item": {
          "id": "9214273f-99d7-473b-9426-453669ed3167",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4a05cfeb-2080-4ad9-92f2-678469642722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77673d0e-112a-4904-b724-675f13a9032c",
        "cursor": {
          "ref": "def074d7-b62b-452c-bd7b-3f594e4608a2",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dace4015-e055-4bf9-a2f6-48c2767954c4"
        },
        "item": {
          "id": "77673d0e-112a-4904-b724-675f13a9032c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a2cb21e9-ed74-472f-a73d-0ab1fa165349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865fe2a7-b47c-46c0-a673-5c6397f2fc63",
        "cursor": {
          "ref": "422872db-849a-4c53-937f-7ba1bdc84fa8",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "56e44e5b-4010-4623-890d-02f1249f14d8"
        },
        "item": {
          "id": "865fe2a7-b47c-46c0-a673-5c6397f2fc63",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8230f41f-d0ff-4117-b39c-ac9af6f5a853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea430088-a7ff-483b-b600-de82c0533c4c",
        "cursor": {
          "ref": "e9625b35-32c1-40a1-bc33-c2d13843985a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d1b63b6a-fc49-469f-88a7-9178bcd239ac"
        },
        "item": {
          "id": "ea430088-a7ff-483b-b600-de82c0533c4c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7d9c9b5f-7bc5-43df-b030-2740e2a24784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b885ab0-129e-43e6-a88d-75d555690a61",
        "cursor": {
          "ref": "c80c7ace-d03f-4135-9f11-044bd291013c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4855d34e-52cc-4472-aa72-df7b66fe1d52"
        },
        "item": {
          "id": "9b885ab0-129e-43e6-a88d-75d555690a61",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "90ffce08-ffdc-4276-bcf8-69d3b8774dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a4d485-2ea1-4c70-b160-8ec642179bdf",
        "cursor": {
          "ref": "0712bccb-61bb-4d13-8699-89fbfa995f20",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a5146ebb-2965-4f54-a9a1-53b68c532a3b"
        },
        "item": {
          "id": "96a4d485-2ea1-4c70-b160-8ec642179bdf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d96e4c49-c2b1-4b53-8fa4-2d51027942b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f443745-3b2b-44e2-992f-30ae4ea167da",
        "cursor": {
          "ref": "3fcd5b3c-d86a-43f3-b15c-5d2221fe4bb5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "67bb0896-3b69-4323-9e92-9fe89a54f831"
        },
        "item": {
          "id": "1f443745-3b2b-44e2-992f-30ae4ea167da",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "93f24aaa-c5bc-4e48-bfea-8c1ddab9f9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141c543f-994e-4e06-bc54-4a76e429f2d3",
        "cursor": {
          "ref": "a80d86c4-ff87-49cf-a26e-fe188ec33c96",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "789d469d-ba3d-4c95-b684-5770d985dc00"
        },
        "item": {
          "id": "141c543f-994e-4e06-bc54-4a76e429f2d3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "395211fa-c93b-4552-8539-d8d2d8102fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724dbe6f-c470-4ada-ac99-bcd9a41c7287",
        "cursor": {
          "ref": "e3fc291e-0235-480a-9d00-d5443a9f13c0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f16b0ee5-93c8-445a-8c18-e23b117e0bba"
        },
        "item": {
          "id": "724dbe6f-c470-4ada-ac99-bcd9a41c7287",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "733dd1ad-7506-4439-94a4-1d5d69adf9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91449277-32ce-4a8f-b24f-c37162f6d205",
        "cursor": {
          "ref": "62618a3a-f2bd-474e-a3f2-45318ad11fce",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "966c43ce-75a3-423f-a652-cced7efd35a6"
        },
        "item": {
          "id": "91449277-32ce-4a8f-b24f-c37162f6d205",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0a56b28a-c854-4adb-86aa-d1dc7c1d7934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9a0823-166f-489d-8832-cd4af9baf2ae",
        "cursor": {
          "ref": "eb6c25e6-bd7f-4071-832c-484b49b65829",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2045e126-5161-4449-94c4-1f8cdcc27d18"
        },
        "item": {
          "id": "7c9a0823-166f-489d-8832-cd4af9baf2ae",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "00cc690b-19d4-4dd0-9e27-1b14a2ebda44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ed3c8a-0623-4ae3-9b45-0c73c8d349f6",
        "cursor": {
          "ref": "13a0a0a0-d4a1-4734-9299-40c93ead530e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "54474962-1300-417c-af0a-4c6f7655d903"
        },
        "item": {
          "id": "08ed3c8a-0623-4ae3-9b45-0c73c8d349f6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "59e5629b-0b03-4adc-bc88-f1c849b02cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263a904e-e4ea-4549-9095-d150f89fa4d1",
        "cursor": {
          "ref": "fcbc98a4-42b2-48ca-adac-4f6b93abb288",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "489c4dab-c6fb-4baa-a257-ba9337c53419"
        },
        "item": {
          "id": "263a904e-e4ea-4549-9095-d150f89fa4d1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6ef2e90d-c6f2-406e-a80d-0e7eb5eec741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4aaff7-1d47-4ab5-9f92-d4b683b3d323",
        "cursor": {
          "ref": "f75aca1a-2b2b-47dc-bc9f-beffb7ee026b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4c573d70-0e4b-467e-b31f-8b924a3a5e8a"
        },
        "item": {
          "id": "9a4aaff7-1d47-4ab5-9f92-d4b683b3d323",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "44627854-0065-426e-b692-2fbee0cfde48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b132a2ae-cdc1-4ac7-9e76-83554533a8e1",
        "cursor": {
          "ref": "daefb8ed-81a1-4ad6-b92b-0dc64632cb74",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2d6ee503-ae17-43cc-b3bd-b0e0e2b84b04"
        },
        "item": {
          "id": "b132a2ae-cdc1-4ac7-9e76-83554533a8e1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d0491c98-1069-4856-ba48-1616950ba67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364e631c-d5b9-4d0c-b7b7-bd4693a9d720",
        "cursor": {
          "ref": "cbf1f36c-d5da-47d3-ad79-bce73f65ecf5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "26e6c485-48e6-4efb-872d-ebf3d703f400"
        },
        "item": {
          "id": "364e631c-d5b9-4d0c-b7b7-bd4693a9d720",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a7373f2f-4b75-4106-a8c2-038d173b9ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17df571d-6b03-4e20-a3c1-30a51d8f1967",
        "cursor": {
          "ref": "bd0c8550-8273-41cf-b0a3-654b7c77988b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8d4fb202-e24a-41dd-ab4f-608d8ce47d08"
        },
        "item": {
          "id": "17df571d-6b03-4e20-a3c1-30a51d8f1967",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "86b1c25c-15f1-498a-84d7-a122b473e606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e16730-925c-4ebb-800e-6735ca7eabfd",
        "cursor": {
          "ref": "3f12adeb-eb6b-410c-8447-0d4ddd791a81",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "72689f37-e032-41bd-9604-e67ec186e7fd"
        },
        "item": {
          "id": "15e16730-925c-4ebb-800e-6735ca7eabfd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d336a6af-1ce6-40b3-823f-5aaf6d9e8b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497cb654-3068-4c43-adbf-2147dc44b090",
        "cursor": {
          "ref": "8224d840-4291-402a-b7c7-8e6f07972f04",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f629fde6-61c4-40ca-95c6-1fbd6ea922af"
        },
        "item": {
          "id": "497cb654-3068-4c43-adbf-2147dc44b090",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "79ce7c56-faa0-468a-abb3-cb310ddce78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fbb5fa-6014-44eb-ab24-348a7783d122",
        "cursor": {
          "ref": "8ff06c80-7e94-442e-acb4-ce00f5bfd060",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6d3bd6a9-9f20-4d2c-bf2d-9dccd24da897"
        },
        "item": {
          "id": "50fbb5fa-6014-44eb-ab24-348a7783d122",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "de57eee7-f8b4-4e32-b1b9-d649a0d1924b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d44d26-8d14-406f-9551-96abbe6cebcc",
        "cursor": {
          "ref": "bb3b8e41-c1be-4ec8-916d-7a12fc2083d6",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "60ae6dd0-ebc0-4807-96c1-accba5b8a213"
        },
        "item": {
          "id": "18d44d26-8d14-406f-9551-96abbe6cebcc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1b403be8-9ebc-4870-89fa-abf2aa1ef330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28d73e8-d001-4b26-bd6f-3325c30a4f23",
        "cursor": {
          "ref": "f13b9a57-0766-4849-a024-add41f821059",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5caf8067-e6e4-4367-b411-c793699d73ad"
        },
        "item": {
          "id": "a28d73e8-d001-4b26-bd6f-3325c30a4f23",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2e3d38c7-24c2-45c7-adec-3799a090d88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8169a9-efe2-4d6f-ab4d-7237f97c38d3",
        "cursor": {
          "ref": "c727a71c-1469-4bd8-a6c5-469a354292c5",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "211fe6bf-f92f-476e-a395-030bfce21e08"
        },
        "item": {
          "id": "ac8169a9-efe2-4d6f-ab4d-7237f97c38d3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "25b59411-8939-4663-8939-218f694c0704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46585aa4-22b7-4f77-8588-718aa493afa5",
        "cursor": {
          "ref": "040782b0-8630-4a64-a3c7-86b8eb7fef83",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "017d3318-291c-4e13-977b-ac1d368d6154"
        },
        "item": {
          "id": "46585aa4-22b7-4f77-8588-718aa493afa5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b37f0015-97b7-4023-a222-1899aa34db92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7ec401-5454-451e-aecf-502b59f70dcc",
        "cursor": {
          "ref": "98c99ed1-f344-425e-bc5a-2b8a175a3401",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cf0e92ec-d094-4441-ab83-71ff803b14ed"
        },
        "item": {
          "id": "bf7ec401-5454-451e-aecf-502b59f70dcc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bd0ea868-c8fc-40fd-994e-caf0aacb653e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7e678a-3135-4f7c-a7c9-3b16be3d01e1",
        "cursor": {
          "ref": "695ff7a0-a66d-4efc-9b36-194016a5fcc2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5b0698d1-e1a5-48a8-8862-b4e546878fb3"
        },
        "item": {
          "id": "fb7e678a-3135-4f7c-a7c9-3b16be3d01e1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ed6bafb0-ce08-4799-b654-44fcf8c5bceb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9deed7-c258-450a-a4e6-b4e2d9b16ea0",
        "cursor": {
          "ref": "a0ee6369-25d4-412f-a517-145952f180c4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bf27d232-d18e-4f81-8f21-9d51c53c011a"
        },
        "item": {
          "id": "3b9deed7-c258-450a-a4e6-b4e2d9b16ea0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "aed4cdec-8927-41fc-9f0d-ed0e7fbc4f38",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0cb3b8-485f-4248-90cb-9af1a8cab2a0",
        "cursor": {
          "ref": "3d9b042f-9560-4675-ae35-5646bd584fe7",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7224f3cc-4309-4894-9f57-fa0925d5749c"
        },
        "item": {
          "id": "1f0cb3b8-485f-4248-90cb-9af1a8cab2a0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8f83732b-a7e7-41a6-94c9-56cbc4437a64",
          "status": "OK",
          "code": 200,
          "responseTime": 1649,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a66a02-267e-45c7-b757-3d3b277754e9",
        "cursor": {
          "ref": "49164d5e-4dab-4def-9ea9-6b52dd9ff4f5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0c1e11e5-13bc-4d50-a406-69e16b33be2b"
        },
        "item": {
          "id": "83a66a02-267e-45c7-b757-3d3b277754e9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "87c5ad9f-ea60-42a8-9b18-f4d1f2f98b25",
          "status": "OK",
          "code": 200,
          "responseTime": 1393,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f8b053-f2a9-47e3-b7b2-bb5dba0b90ef",
        "cursor": {
          "ref": "52f245ac-543a-4e15-9c98-e0c723624622",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a3dd3f9b-bebe-4cc9-9695-011f1c0cbd56"
        },
        "item": {
          "id": "52f8b053-f2a9-47e3-b7b2-bb5dba0b90ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "13bc1adc-7f67-4a80-8ff0-77565778c6e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f8b053-f2a9-47e3-b7b2-bb5dba0b90ef",
        "cursor": {
          "ref": "52f245ac-543a-4e15-9c98-e0c723624622",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a3dd3f9b-bebe-4cc9-9695-011f1c0cbd56"
        },
        "item": {
          "id": "52f8b053-f2a9-47e3-b7b2-bb5dba0b90ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "13bc1adc-7f67-4a80-8ff0-77565778c6e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047aa2e8-a1a0-4e54-ae8a-8f26e500438e",
        "cursor": {
          "ref": "03a381d9-684f-4d4f-a730-c58edb714b0f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0cd096f2-bf5e-48d6-a188-42039e44b04c"
        },
        "item": {
          "id": "047aa2e8-a1a0-4e54-ae8a-8f26e500438e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c08eba87-6c7f-43e4-bc9a-83252095194c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8da29cf-cfba-4790-8bed-a87e0dd24a5f",
        "cursor": {
          "ref": "f2b9448a-58f3-4901-a437-745484aa086e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "dda5e3a6-3300-4058-8c0b-8beb5e471c0b"
        },
        "item": {
          "id": "a8da29cf-cfba-4790-8bed-a87e0dd24a5f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5ec388e9-9337-4388-9ab1-06648217d8f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}