{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "87032f3a-9642-44fc-aae4-3580fad3207a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ded97768-7ecc-4271-8a17-1b29133b854b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5da6114-253e-4954-9e2c-9ba4b6275e2f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "65f5e024-1162-42ac-a4d0-5e25c9ea6cf0"
                }
              }
            ]
          },
          {
            "id": "93e72f83-b2d8-4f71-8ddc-ed25d0647c51",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b0021d95-bfe0-4f9f-aece-57cf9d2cd6fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3c87f1cb-6061-402e-ab68-fda751d81ebc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "03150b9f-671d-4422-a345-00a9addcfe6d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "062dcb7d-8132-47f9-87e2-af1a3323f28c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca30724c-01c2-4fc9-9364-49a4ed1b3c24",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7cfda99-7b1d-4a67-9c7f-2fda7f5c45c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5177e6a1-d3fd-4ddb-881b-0539324d072c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9aa30693-ef24-4b75-8368-ae5747c8bb5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8873fd0f-32ab-43e7-a231-6452bfa0c1b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "503f1a0c-55df-45e4-939d-a95d43c2d750",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "282ffc4b-179f-4d3c-b7d2-c23c2b86a3de"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b204964-af49-4efd-9057-d058e1125cea",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bf9d8dac-4791-4926-9f80-d84756d48012"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c4d3243-bea8-4d8b-8de7-f1a7bb3c2be9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c64b5cbe-2b06-44d5-bf3b-665a356febee"
            }
          }
        ]
      },
      {
        "id": "792ebdbc-3461-4d63-bb3a-c269b6b14028",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b57ea433-e9c9-40b4-90b0-5b1dc8710f2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a12f1f6-c81e-42df-b98f-1943677f99ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7dee649e-ac69-4af1-86ca-d00a48c47e44",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3be4bd-fe71-4d78-a80d-dd31fac3e60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "138732a2-ae2d-459d-a399-3b22bb7cc117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85203557-5646-416a-8359-3b97f615c1e8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bc4d13-1f9f-42c2-9cd9-66a1baac74cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99aa7192-3f43-4a3c-a945-5f094a6a077f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897e1ce0-489a-49dc-b93a-71bf0871ad77",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e604693-11ee-4402-ac8c-5583d56e9ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe4aa497-4d9f-4f6c-a8a5-52fece8e0000"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a204bbea-6f7f-45b9-91ce-f8af367e0804",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38ae9e71-d1fa-4431-b14d-0723e657018f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a486cbeb-7ca7-44f3-adc7-67f1359dd848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0913b46f-a08f-4727-91d2-d2285f0d99fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85ca2e9-28b2-4a5d-8beb-274265d3581f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5a239c-2373-4524-b048-223419fd424d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4e36317b-3023-4cce-8e2e-b42c7c419f1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "761dbd9d-93db-45cd-aa9b-8f31e4dd26fc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d442d1c-a6d7-4fe3-9133-597648e9af9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "613988e2-6b87-4afb-ae29-ce7afb2f6bcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c87e161e-6cf0-4d98-8572-e45c31f1f0a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "653fac62-3fa8-4f19-aaef-fd07bbfba1ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3cb0d5a-8b6f-46b2-92a7-1ffde8837de8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf3a4724-e81c-4524-b606-ca393e43573b"
            }
          }
        ]
      },
      {
        "id": "eca20cca-5992-4627-be48-14ee4dc1ad64",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fa14136e-7946-4089-bae7-45435fb324c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd4eddc1-6887-4964-8da4-ed78af9db4a6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "32f701a0-0286-4be2-99a6-59a50554a17c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e60dc9-c507-4493-920a-d1f978eb47a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479d9a6e-4861-4598-8b89-53586a730308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e43ee1-b4fd-402b-b2f6-010374665e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e75ea454-66a1-405a-bd2d-a03bb545bd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80302448-c5af-473e-aaab-b53b8270125b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a129a5-cde8-4b94-9e7c-c35183c45376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c68ad5-c105-4d87-bff4-e7755909874b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950394ce-69e1-4066-9a2e-483726f15db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d50a1e5-208b-494e-9359-4fd514d0171e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572a0903-7807-4f76-a261-39d8356cf541",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8055b66-7e49-48cc-824a-bb81a6571db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a5d9df-34ef-4a05-9ad4-7447d2eb8a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0b0926-c3e7-4f43-87c8-e9b49836abc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98feda73-4f38-4b5d-bda2-81be1bbc6a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7a073d-1075-4736-9c47-70ce149c40a6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d64158-d8bd-4388-bc79-c5a909433b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ef8306-acd6-40b7-812d-fdb2b0749c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd764e8-0887-4883-9b36-1e81ca4ed58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02eda670-efed-4750-b8ab-b80ecf166509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9550b6a0-ec6d-4eae-89cd-37a35df304c0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb2fe78-2ec5-4ba4-86f7-7ff346bd62cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed12e1e7-c6a3-42cc-9b4f-11624833c12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21f9378-3cd6-4c88-84e1-19930bf6aefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4197c517-fca6-4456-8199-094d1d9a147c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e953a66-6a6e-40f5-b3f4-59358f0772ec",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca698d11-16de-4fd2-bdae-3f78c2aa41fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19815523-ce1d-44f8-acdf-b3330429be5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571d9c85-27d8-4dea-8529-e7364e12aebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f65fda9-75d9-4c3c-abf1-d71f83496c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5da0fcf-c708-49c3-b6f1-daa4e9df4bec",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d47c86-6fee-4b15-a7e2-e65c37408f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b98d20-d744-4391-8e1e-c6643840f2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6150d5-2bf4-4efb-8954-abc3a9563741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8e02ea4-9ed9-4435-9931-68179168ba0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c136e5f7-a230-4632-ba57-4e9809d51e22",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b45a27-5655-4e29-8051-4af77b69f40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2744bb11-4ced-4745-b8bb-698e393d2d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f26d22f-b939-46d2-a949-66b01c8b6cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "832623ec-42c3-41f6-89b2-030787c10bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1f4707-fb17-41e8-a9e1-ef0ba990d8e0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34c38f3-1298-44b7-95c7-080866e75517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1292304-08fe-49bc-84d0-7c6737fcae7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7174ec0d-ae83-4b27-bd1c-700f5c9d48bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d61691c6-d178-4fe3-8754-553ad869d8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07339be2-229f-4336-b0b8-ba5eb91c6693",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c240b1e-1856-441e-b710-b8d8de4f6916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43330be7-28da-434e-8803-406496acc7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d879258-a427-43ef-aa95-2ef8b5c5d560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "071cdf40-8689-40e5-8d0f-c4b9e5bfefa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f0abca-1a62-4381-9288-b54e833e0719",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0816f2be-4cb4-46e0-8c93-c77517dcf8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6af71b9-1cab-4edf-84f1-e80fc1804750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13528e60-199c-4830-a67e-af74f948fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa097a1-dbf6-4ac3-9ecb-e830789fdbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52b2945-ba4f-4dcd-86c7-5b379f1efcb3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c865d2-451e-4782-9203-afd633d3e356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1408727f-1b7b-49fe-bb20-285b1dfddbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69689f7a-14fb-45c6-8bfd-a49fd31e9884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2e21b2d-e028-4df6-a476-1734e1d05582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06429d2b-eb63-4333-9af6-4f6f08067ef1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0dd8f1-5137-48c1-aa2b-9201b8ecfdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71723e94-08e4-4062-8281-317a1c18b07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c5f66b-f471-49c8-9a4a-479d6bcfdcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97271cac-8af4-4e6c-9b0c-062a61a45847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce1a177-ced3-45b3-bc44-4c7e93db89d4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4416b6-c7b0-49ea-9788-10cebede00de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcb243c-c6a1-4fc2-8574-aba0de6ad34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6d8744-fd6e-49ea-a7e5-aaee4b8f5f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3135d631-cbaf-41b9-993c-811164ec2394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6cd98e-cedd-40d7-8ce7-2e92cb4e9a53",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7ce251-5aa4-47e3-8923-67fabe5dac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a5a8d2-b5ef-4372-b41e-fe0da7888d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac44a30-a1c1-4875-ad4a-4716dfa9534e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e713abe9-bb42-401f-a75d-85c3eb693da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88d804f-6d5d-49aa-9d1d-279fa7b4ef37",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e017964-9f0a-44b2-99f3-4909de40bd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b02c43b-eb82-46bf-9fda-35e07a8f8826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4bd0d1-35b1-4c14-b2f9-d4d40482f26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "936a26ce-f42a-46bd-83be-b3a1a2f43994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0af303d-afd8-4ac4-8d42-9ba87e4e19e8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b47fd5-5c78-4af6-9138-b09188da009e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df390118-c9e1-460c-8952-9d87f94db9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514cbeed-9008-4776-a9ed-3239c4a4a2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bce4b35-85d4-402c-a307-10f20531fe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4a632a-0609-4984-b2fd-7c6d37954771",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffd8068-dab2-4871-9dd9-748289587a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f20c90e-c8fa-4461-9a05-15ba93408b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ce29e8-9f55-4251-982a-237a348147c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f2e2ca-78ba-4448-bf20-bcbfc307fc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0fe632-c275-4b3b-b60d-908f71c70229",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34379973-12c7-4c9a-82e2-f08fb55d170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d486d5a2-c16c-4610-aecc-edd196a3c134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05972e4e-1f5a-4b5a-ba0d-3d08d2a18eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb727ff9-6e42-423b-8eb5-d725756329b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5674d8-9ffc-451d-9896-8053226bc26c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818c7964-eb10-4845-b3f7-9238770ec7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b38488-fa97-44f9-87a1-2b653944fa39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184c50fd-1e91-4417-8ecc-8edb2d181312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc61b9de-029d-4d09-9f84-90a84ffa4509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691740e9-04ae-4f63-b34c-33e917ced30e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb3c791-70bb-4d45-a326-a5c58201b93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beccc997-9c43-42d1-ba78-f0619b56c837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cc21d3-64cb-44aa-bb97-51675cba37bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2490c5-7518-4479-a349-dfeed9287f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcfa1a4-3f1c-426f-84ae-2f79723be77b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e62589e-98c6-4f3e-8e2b-f903f9fab625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcb7dcf-99c0-4e86-878a-7f5777355e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef83c868-d43d-4c4d-9bb8-216452fa97e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "507f39a4-71af-4058-97fe-8545067cda5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca6cf44-8b7d-46af-a82a-035066a09ce8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562e50fd-2161-4183-96b5-0b596016c43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997d0986-8ef5-4113-8be9-b5af18338d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325b0aea-da72-40f3-ba5a-6ac305472c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38de0e36-4a4d-4ade-8d2c-898e85bfadb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757fbcf4-2436-4888-bfad-aa97cc649c01",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce65748-815f-4a99-a857-9f45b6d5ccb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa81f10-dfd8-48cf-b06d-04c643efd6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1830a1a-3eb8-4db1-a24e-7732518f5bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0298940f-a70a-4299-98a8-35fbdfb6d652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd9fca5-3d28-4a1a-ba48-2a67ab7303bd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a000ad-8a5d-4104-9902-f3b1579c802a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caf6679-f459-4145-b632-ad3a17eee78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c903b8-e7ac-4e53-a6f5-a154d6ffab83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c0d450-2d82-47d7-a560-1573f4f51e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b69e05d-75d2-48d2-bf17-1ebc22f2a1b6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb1937c-dcb7-4c6b-88a1-bf2956839d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20753e8b-cd97-4ef6-b575-66895cee6914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde52656-1119-4043-afda-57d03151d472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b14ebf2-ab58-40d5-9a05-43877d12ca70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c27af68-c3c7-4c14-94d1-9ff6837043a9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efb3239-8fc7-42ae-bb1d-45653dc53e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db0c0c6-e275-43f6-a1ce-42e844964b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04cfa2f-cbfa-4721-93e4-6f6712c9f2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcd8dfc-36f2-47c2-9555-4bc08a22e7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e000d493-0835-4f85-923b-3aaf4f8af64f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143979d0-85d5-4405-926c-95cef699f9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcd2ab6-4b4e-47c6-a8f6-0352b7319dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba1e5aa-a0c3-487d-b24a-e9707d03fee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "120b76e1-305a-452c-b10e-b3259305c86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fdd3c3-0f5e-485d-8b0f-91237fd4e20e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855bcd93-17f5-4de1-b3dd-b9db83323aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f034317d-9871-40ea-a2f7-9eaa24bf34d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6606f20a-0648-4e19-ab2b-924545079f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d08b04-bf6f-4636-b13b-1f7d0b6f95cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d387ead7-3731-4290-9cf4-8d1451f0a716",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff7ded8-c328-4c1c-b975-5b70c9cda17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea77685-0d36-4a46-b09f-045f1986211a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f88684-2be6-438c-91bc-ffa48c15080f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d042f97-2344-4d95-bf46-c43185eb63a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538de970-a965-456c-987f-a268c06a8f66",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab9fade-7b3f-4344-807d-d1870129c443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006d42c3-61fb-4bc5-a82a-71ec37e7a37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e473c5a6-5e79-4f2b-8e32-90f74f15652f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "250ed2f9-e13a-448b-919a-c9e6358ff87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95b9203-72a0-47f2-8de3-f5ba2291422c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d899a23-b4a5-4a8c-a47d-e11376882f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a327a14f-5ded-4b12-840a-d6c68e18a663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007dac69-c46c-423d-9a1b-0fcf49fd7200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2be61ec-51b9-4ae7-9ed9-eae13d24e6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287ef305-00d0-48c1-aa61-9b8c3a5a5f3b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199a2846-2cfe-4c8d-b188-1d297d290ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae23e85d-bd23-48d0-aa32-13fcedaf4d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13755ce-2623-4729-a22d-3d9056bd3538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e2ee71-cbc4-440f-8315-43320e113900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77194596-5cac-4f86-82d3-43bb3c1cc409",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b12628f-eeb1-4ca1-bcd2-6df70856eb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b18f04d-bba9-4b92-9bab-2579923053a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23df804f-fee4-427f-80a7-45f565384fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a042dd-f994-479c-8c44-37ae4e5f1a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8794d9-1c03-4314-95d8-420fdee800f2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfade20-c809-48fd-9316-d5ac42c56d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7cdd7c-3bd5-4064-a4cc-3f2ccf65d9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168ee096-c56c-44ff-8f92-2415422387f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4318da92-b7b4-48cf-92b4-fadd06564c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499e7e46-9956-4fd8-9548-c4fc580a30f0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fd997b-e2e5-43f0-85dc-2a01d0b29a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c8905ed-1d8f-44be-aa28-4b5015d86ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b108fe2-eed8-4008-90f7-57f9d7a2d152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afd1041e-f49b-47ee-9c11-9b514aad87f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97357eb-1289-4a1a-ba38-0738d81257de",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e55544-ada9-4d1d-8b6e-502b39297a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cc6b4e-a6c7-49f6-af0a-4bf66436d552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb25e7f-3b9d-4917-b5ac-200cb196ab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad22c0ad-4ea0-442f-8f14-fad65e350a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29c1524-73fa-4eca-b59d-e40126f10ce2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbcc30a-04dd-492e-aa87-41a459c64f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca46a3c-ef49-45fe-bcab-1a2fc996e2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe6f854-3d34-44d6-9e46-f07435fbef1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2eea97a4-edf0-4eaf-bfe2-f12ef57d8d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1453e93-61ae-475a-ae72-be851370fc19",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3d48d3-7c26-434a-bf54-9ab95041b2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940f73ac-04eb-4e33-a512-a893202c4d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b4c1bb-b23b-48ed-a5aa-5e612c48e0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fbe09e-62fa-4b79-a9eb-88c808a31dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782a3ead-ca3e-4271-a789-be9dcee485c0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346b0e1b-0956-49fa-be10-9eb35474ad12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec09fbb-5ebe-4b12-b4df-94a53a333fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce62e097-dd7b-4d36-8f58-dcdfc0f22ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5b04ed-0c64-4c41-8d56-6478ba79c3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879a0899-63ef-4ad1-ab45-8741e12b9dcb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad76ff3-0935-43b5-8bae-6cdc832a9620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b157eab-5dc5-418f-9383-35df8ce5d727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9038bd5-cfd6-4d04-99cc-2ae8fadc47c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b293e42-92a7-4027-8f1f-725afaf9afdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7fa37c-5aa6-458e-adcb-65342fd2d477",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc242625-923d-43b9-8adc-8dfc046993c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522d5887-710e-4a56-9403-9a73650d4ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e16197-43a0-4500-9e58-27b51bce210e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6caa77-a1b1-47a9-be04-1984270af296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c402dc63-10cd-4946-b184-6790b455443e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf337e4-e49c-4bf3-93ed-d1f529dee61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4018f27c-e956-416f-8e42-5823f484b956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0be4bf-e98b-4ff7-a994-87680683f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8697e6d9-3ac0-4689-ba9f-f289720923c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371e4eb3-09ef-4079-b29f-febd481acbc5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c244bb1f-1053-40ea-842a-230a8fb413d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406f3bbb-32ee-4eea-ba09-77170b9fa6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4b8199-4ca8-4d77-8f67-0e6192ba50fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd17420-f3ae-419f-99df-d992ffe67a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f38e3d3-6b26-49c0-a49f-8c952dd976b9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c601f543-d704-4a88-a18c-f914d21ffd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d0553a-ad23-43c2-a672-b9be746c430b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6616d423-b6fb-404e-aa8d-f14927bd1d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98fa764-c122-4578-9246-abbfe7ebc086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce67ce6-0e18-4557-a3b7-a9b72a17d755",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64ca044-f6bf-4a45-831b-3e1f874a8237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f73fd05-817c-4b26-a8ff-0c3bc1ed76a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcd8fcb-a11b-4362-afeb-3e12ba420c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dceac0a-1490-4b3e-be97-c493994febfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ecd6bd-78a6-4200-be02-3e5bf16bf242",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea98c8ba-35a8-48ac-9666-6a05d192c23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3a7792-f96c-40c0-8ed4-92dafe82d7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a926305f-7dfd-482a-8b09-e1890879b3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "708cb84c-7c7b-46c7-adcf-6cd9ea2cd32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b1925d-d80d-4be7-a8c3-d85a393d2b4e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7059b57e-6f77-4acc-be89-a1a368b60380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90297c5-3532-477b-acb2-4196219af854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ab0977-99df-4485-ba1b-cbebdd32ce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1cd66e4-77a3-4d3a-9e07-c66fefc9bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8a0fc1-d829-4d39-b058-762dfe0dbd0b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145eba35-8920-42c2-9609-dc611b69320e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7706c3fa-2008-4e42-acbc-6d846ba7eb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e3e944-e692-4604-880f-575b7904479e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f588dcd5-a38c-4f4c-b13e-fd9b208d9186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4953ad72-b1b6-412c-9c5b-fb9d7c350a59",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c524d91-2c21-44b1-b0b4-caedf8c2066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0b100f-52bd-4a60-931a-346a26c42e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1fd247-947a-41b2-a554-9a47532d58df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c95c365a-3326-44bf-a942-4bd3f1ff2474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f976e9c-806d-46bc-bf3b-048ad1f33fa6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a20378-2862-47b1-b2f4-985213474ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5132ed93-43c2-4147-885c-12b7e1198839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccc5c67-0eff-4323-8418-82c18ad42cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0b0b37-e36f-47fc-b69d-32f182a391e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe7e0ce-7656-4a22-b6e0-426b6c678d7b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bee038b-d603-4ce1-b26e-e6083290b41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda59b4d-9632-45dd-9f93-0cf712e2c291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16576a42-a276-447b-8d02-b0519a8d4db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2782e26-6921-4610-8b15-4aea9b6b52bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207dd668-9f1b-439b-a4c0-e2931ec8ac31",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3894df4c-7fb5-4e71-9e1e-22f6646251d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3789e6e9-2580-4f6b-bf7e-18ccaedb77c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d5327b-67c3-4ba5-b3d4-1c0866e95fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c908ca-7a1c-43ee-b0cb-4702eaafbf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f814dca1-1d7a-4c83-8d20-8d6b648d836e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3637177c-cedd-4b9d-ab03-9268a5092bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995c9f30-89cd-40d5-997b-75c8e8b8cda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7763b4-d4e0-4f23-8541-b0c5c4abaa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df951e1-259c-406e-8743-c36bb5869e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b6a699-9e1d-4df5-94f3-298318db5b47",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210abdcf-c3c3-4149-a8bc-f37a36750492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26181d79-27c9-43cc-83c9-f4662a6228bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2c9497-17c6-4763-a2ab-b355e0608ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5347d8-81f7-4751-bf08-cc09034032b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1a6555-e423-4899-bfb2-46fa6041c4c0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cbf3b1-deab-4344-9447-e1927f7dcd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b4a9ca-feec-4a3a-aa8e-1e73ca3d311e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e092e8-feef-4e49-854e-018a08962e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8394e30d-ee1b-439e-bee4-33d902f34aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3625008f-845f-49b3-99af-f1fae90cb4b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f453ce-7122-4bf1-b7d1-a8f1fbb2204c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0a1a26-0ee0-4cb4-852b-64910f984378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a00adeb-67dd-4735-86a3-57adff525f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "75a3fca3-bc69-41f6-9f9f-471661f0de34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384faef6-3ec7-4530-b269-9b7b834f5088",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699fc187-622b-44fc-8873-ca573597ae38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff53108-26f2-426a-b606-faaaaa492608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7262500e-fd09-43ef-bcf5-5d94703adba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8949a1d1-2fcc-4d42-9c95-4112b711ae0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779cbedf-fd1d-422f-aeff-75f347f53155",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46abebc8-8ef4-427e-bb76-5c25de5673e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc09c53-90ca-491c-9db9-1875289e3edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76500d44-346a-4106-a3e8-4dd4dce7247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6593d28-85a7-4f89-81f4-24c6136ffe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b09de3-7bf5-4c8d-b387-a4fdb32af7e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc54e008-9a0e-4ada-b8fb-364fc9d417cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7539aed-4b6d-48fd-835d-094e87c71d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991721b1-75bf-48b0-b47d-459d1aef68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc5a694-ee90-4d1c-a022-3699eeeeb41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02f07fd-baed-4041-819e-85d72c5c1cc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afb8d0e-3a4f-4235-a136-f0c66066a2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d912936-5004-43b3-bf89-d8f52e43ffaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b69981-2f4e-48d2-91b1-5621fc27f8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1623ea7b-357a-4b98-b9e9-5881943fd2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d085890-2e71-4306-ab4e-bf19b7ccca03",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7364c5-1721-4917-ad4d-74135b3bd17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f6b54f-4024-4b51-8e09-4c10ce0db158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6dcf2e-4df5-43df-9efe-e9013c4cc2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8823e6-2237-4811-accd-16e4f0ada78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d5f8a4-2150-498a-b0ad-2d00f749d003",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60702ef6-317e-4e52-8a9c-e9335d20c009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecacb66-7fdd-49d6-8d55-d9a33eba1c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9325fb4-711b-4de4-8eea-def08b00c260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2c47a7-9203-4d9a-8453-91195f78c416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9899d087-fda9-41e0-b89e-43fdd7656e48",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42038a7c-2fed-48ce-a9a6-f9524b447405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b564c9b-8888-4054-bd55-8798f867ac5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92192184-d54b-4a6a-97e4-8925603cfd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a83ff69c-bde2-495d-b15f-7ec31132d73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854b5726-11dc-402d-b2c1-2889b59fd569",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e3f8dd-061b-4767-b2b8-04606f4d86a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f80ef60-da47-441b-b86c-20f98732e019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8f5a78-3dfb-42ab-9363-76ac60dbd60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8b780a-3fb8-4300-ae64-150c23dbab63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f8a58e-885b-4620-9d8b-a96a08dd3b89",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751e1765-24ea-4c3b-9949-c3b6e2434337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396194f6-8711-4cd2-a39e-440f9213655a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2ff0aa-1976-4942-90bf-641e3b3d2d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48fe5dd6-15b1-4f58-9edb-0df180c5ea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01d883b-bcd2-48a4-9c23-fae4dc29babc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c715d361-d667-413a-9e76-791821dd40d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bf18ca-2974-41f5-b6ac-963f6a52f48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a0b8eb-a326-4eba-9142-f1aff06fef38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2efdaf26-60c6-44e1-98d8-cfe3b44e7f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9352b4-2054-4fdf-bb2d-09f13f3b777d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9bc588-67c9-4906-aa63-b68bc164446c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f520b396-22ba-48d1-b03a-bd12ccd1d7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d2188c-488b-4c39-8b8a-6e3cd3ceaa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "893b9a2a-8e16-490e-84d4-a51937a0e527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec96038-a402-43bc-ae7f-be00f29c8c43",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c1ecdc-8f6a-4b8a-9b0d-6034795dd55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20ac96a-5557-480e-8091-2bf90004e557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3b9f26-d9db-4c73-a7c6-f68015a8fadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed07122-36b9-410e-bbac-3d0fa5c583a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976dcc10-d9ca-4f70-bdfa-fb47d45f350c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641d2ebf-9da4-481b-ab78-40bf9120f4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dad93f-5fef-4b43-97bc-aed035edfc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bf0880-be3c-4761-b366-54ec24d72ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87b84646-fa76-4ed7-be57-4cfff9039f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121c3cfb-02d0-4f01-b9f1-a0e846cbee36",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e2dc99-d726-414d-8ee1-1da13fb4fa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24456acb-5945-4790-aa57-9c0b9cc61ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49baf796-9bbb-4166-95c3-189144db7a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cff8b57-6aae-4b4e-ab0f-57ff6c57ecd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a51e6fe-3c11-4313-a5e9-de76ad3176e3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57654ca-ec04-4119-90bf-d266025dbf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9085a8fd-ea63-4603-9acc-8990d7b1424b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb2e735-5484-4170-a4c7-9fdd986f47b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f957af-963d-4c06-8d18-17f280f27748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5ac5ec-397d-4e9f-a558-c60ce2e3c0cc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18e2263-8814-4a29-a72e-40289df0fe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00410907-7a9a-4634-abaa-3c37d867c3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09075e9-7c1d-4ef0-ad10-d4f27b6ecc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "559632ae-e0c6-43b3-951e-0d123d0c8e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475304e7-b720-4006-8867-1da35c499ff4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c79c45-20bd-4d74-a0be-8d170ceba0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858e16d7-e79e-4db1-b7e5-b1ec22f49c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475b34b9-8f3a-4f15-b774-8389c155e2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46cf4d93-91a8-4063-9134-3df0f0ca54c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793ddb21-3a31-4b58-a11a-40bb42447421",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfa9635-fe6b-4748-afc4-4a40744ac57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c28acd8-2b8d-447b-a8e3-18d0169ea8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f92467-ed4e-4bc2-ac17-27486d355e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "434c645d-75bf-4c05-a78e-d770b874780f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d21e53-d9d9-46ee-a00b-0b406fcf90dd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba661a95-1929-41f0-a852-eb6c2fc0c885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df59477b-4f6a-41a9-a3c9-27b4f0130ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b742ce-5ee0-4f77-b969-e7b6ee857920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a1b42f-c0a6-4f91-ad9c-f97c93505bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fffdc60-d578-48fe-ae88-a0a1486eedb3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b341f81-bfba-4561-8d4b-4a9d72487dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0158e8cb-3d95-4bf1-bc48-c21121720471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c271f2-eaaa-458b-8795-6aea35affb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3455ba-f0ed-44f2-a10c-6ce677321933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2705a5b-bd79-4832-9714-4750ae5f136e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce6fa82-7641-412e-bb17-98a66c778046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17df8306-34cc-477e-a941-8392e72e31f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25eef8b-854e-4b9e-87a8-597ae662f80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5641b3f5-1505-48c2-be2e-d77b59809f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38263831-d8ba-45df-bcef-c77e6a885030",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8698bc37-11e8-4ea8-850e-fe9867662b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dcccd0-de57-4f30-8c4d-d043c2015790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770679e7-9c46-4417-b22d-7c42cab2e310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d10f28fd-db18-4336-bf53-89fd12b3cb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0540f7f7-d93b-44c3-8bdd-23ce0f0647ca",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ff61f8-fba0-4708-9430-e87a598bd1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4b1601-32ac-4389-a59b-02b022319da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaaee75-fe34-45b3-ba27-dd6d6e329ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62f67acf-c53b-495f-ac18-c97acd98c813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3faaf2-bf9d-4cff-95cf-a8cf9853eddb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df73b156-5c87-4006-bb8e-37fe0615e243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da87843-dbd2-4eda-9a89-64c79bcc847d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9080dd70-7ce6-43d3-a8ce-fdcfbccee963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "321cbdb8-7bed-45f2-aadc-7b3aa3e91159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946e59db-2fe5-490c-8770-421326ad538c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f9e715-fa1a-4a3a-80e0-d3536e4eb044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6dff7f-5bc6-49df-9a8f-30c95f7621cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d90345-075e-47a7-a0f5-255fde47a9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87b0568-5278-4fef-872f-e41b08f6bec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf9f51a-785f-496b-bf76-b9f6404afb0e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd323f9-9552-468e-9e87-6b54d819488c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5e1970-95b3-4044-b177-9557bd8498ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eadece-09a2-4515-a3fe-a9fd57c8d763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "168786bb-b9b2-4813-ad18-a80ccddfa395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc46e5b-d334-4158-b8bd-b9cecf405360",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31df0bca-08af-4e1e-bd3c-c6caf88e8e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85155c8d-c607-4c6c-bd11-390807829f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2900f9a-073b-4b23-8d84-875929275e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb74406e-30ef-4c20-90ce-ee95b32ce264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1d5b60-29c9-40b8-ae5a-9479a7402579",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffe5c65-c39c-4a0f-8efe-26951e2aff7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ff5f57-10ca-444b-a5b3-c7a143c754af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb6b049-20ab-44ae-8e98-f7cf0fdd1011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52cdc64c-ad35-4e12-8c9e-02fd1a2816b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0914af-df88-42f0-b82c-9c3a18cf8244",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386b2dee-4df4-42d0-a473-1b9114c54aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1bf61f-bf44-4114-8569-021b4bcead9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e63499-434d-4292-affb-5008f8d47a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "569c6cc5-896b-441d-a43e-35f2c1463716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e3fc66-076c-46f4-a516-c697f3f0dc82",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2440995e-a71d-4970-a746-6e0d79f0551a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5edb44-ce5b-4aad-973b-30cf49f56632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182d0a78-b7f7-4c38-84f4-bcc3cc7cc434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1ce526-643c-46d2-bb24-1f62557af418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48f03ef-84a9-4ea9-bff8-233746c673c2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01299ec9-59d6-4d77-b8b9-818aa1601dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5157b8-cbed-4c8e-bcec-f282dcacc7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517a2e4f-372b-4ff4-99e7-43766673350e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38a5d935-1e07-46e9-b4ac-d3e3d3f67bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c32fd53-3dc0-4ba8-b5e7-b8bc8a679923",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d4af3d-16c2-4cdf-a71e-1ceb3407da8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d97162-5a9d-4eda-97c1-b601daac5efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fcfac9-22ab-4687-8610-21c94e8f079b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "505f3986-e1bd-4974-ad01-9a6210dac79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca93f74c-6f54-450e-b015-621000e6fe65",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8d5f9f-76df-4f36-9aeb-8075e9beb4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b846cb13-e9cd-4344-9f34-62844acc37db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51391d7-e606-48fe-a07b-089fc331bf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "513f055f-197e-45d5-96c7-28fcee313bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e390c43a-6f27-4107-9672-d83b68cc2197",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a19a7de-7969-42fa-916e-ba5fbba43720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358b718f-e79b-4272-9709-3191e71b4aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bbfdee-ef1c-41b8-b637-155a5baf416d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecec9bde-dc2c-4464-8998-d72ab45c2b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9e1622-cace-4a65-920a-3eafb288d4cf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cdf65e-aae7-4e41-ae01-b34f85d99357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "70a7c025-cc09-4c7b-a6af-a6ef109d6faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb2b96f-f08a-434c-80d6-c1ccfa6fe375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae39a03-57f6-4162-839a-7dd45cbe2812"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56325c43-069c-4b3b-84be-0acd292af5a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad62e6d0-2e71-4142-82cf-68bd3c04460b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fed1b40-cab0-409a-b4d7-354f72b442ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3af4354b-21a0-416a-b3de-dcf153e86724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85223154-58e2-4b3f-aeb6-452fbb181ee8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e497a75-c9a6-425a-aa89-08a6d5da41ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09a4f2b4-112f-445c-a3c1-141e182dafdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1f543c1-91de-4754-a052-c552a9bf7fc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0caf8d0-d4aa-4557-8924-99fb97304073",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6821782c-f155-436a-b414-1807796e3548"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00234ff7-116e-49c4-9037-af634d1e55cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8b35645-6773-4ec2-802f-a2c5b897169b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6daa71ed-3c74-4ee5-94bf-292d4bc1b7f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eeeca83b-a1b4-425d-92a7-fb64979ff40f"
                }
              }
            ]
          },
          {
            "id": "8987ebbf-372f-462f-8c47-f9501876ef60",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56ad66a9-5501-4fa6-969b-4d194a42811e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62472827-effd-4cd6-b7eb-2ecd865beba5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4df12e79-2561-40d4-b520-722c99b39dd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "435a45e0-27c4-43fe-a421-e089f4b59036",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b4ab3fc-6c84-40c1-8b7b-07d35b943f47"
                    }
                  }
                ]
              },
              {
                "id": "f0e99d6c-6c56-4b21-9f6e-79469be2f60c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07d76ec8-a8cb-4af6-af34-1f3a2dc0858d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87e37c8b-3f70-4140-bd70-9e92141d180f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df283fbc-6d30-4018-b3b4-d5204f8d4c39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "375ece85-fa72-4e55-a253-aa90512c2cc4"
                    }
                  }
                ]
              },
              {
                "id": "35c50b02-c41a-4ab6-a0e0-76d9579532e7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea060b48-9be4-426f-b267-812014a5190e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24db60b1-45b8-4981-a216-66d968e25cbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f3ed5bd-fa01-47f6-b0e5-8675f8d88dac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb4b595d-ca16-426c-869e-e438199fa553"
                    }
                  }
                ]
              },
              {
                "id": "db9bb9ab-5efc-4c4c-84de-122944a94ca7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9c3b3fa-1df4-4531-9fcc-862a44e75d24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a35d11d-8b0f-441c-b034-14ddf7c321c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8488a4d7-0627-4433-a4f1-160456aa3f23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "888644cf-5db2-47e2-8f61-0085e35e76c5"
                    }
                  }
                ]
              },
              {
                "id": "420630fb-86a8-4a8a-ba6b-483c542e2365",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32938bfe-e8dc-4d4d-97aa-45119bf65e56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4b7ec2a-ae9a-434c-907f-3a6aaf8a1a8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfc089c3-5ed3-4ce6-a6b6-b3c82916e709",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f6df4d72-7eea-43fd-bf83-e377b8befb31"
                    }
                  }
                ]
              },
              {
                "id": "b5046175-501c-477e-ab61-7a75fa61f50f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2023f9b5-64c1-4663-be96-17db4e8b97fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b48b37a-4bd1-4a90-b829-94f306565073"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d3d1c25-6ba4-4626-a27a-0754938f891a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a07668d2-aa19-4041-b645-9ee84f9b056e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4025e78d-7811-4de4-81dc-c3f989862330",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4adfcb9-8c46-40ae-8610-3b6622e23ce9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8d96885-e022-4de3-8021-55e3057b2156",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce093739-af5f-462a-a1fa-9360989d4d71"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4ba80ff-4211-40cf-b2d3-321f20f0fceb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c650b1b4-ed72-4737-9e66-223362058ef7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a75be595-9374-429f-b138-d23303b6f4ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c64db411-06a5-4ad3-829a-9b15eb626053"
            }
          }
        ]
      },
      {
        "id": "e6ad6a18-5199-42c2-94d0-515d7ec95b13",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6c82463d-8f40-4173-afa9-dc7defa920e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f8eb866-7cb9-48de-8e9f-c461a7c78c1c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41149767-ee6e-4641-8357-f0467eb92612",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e709a341-da9a-4f18-bb91-a298538b05a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5addc78f-2e44-465e-a737-9082db8c3254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7178f4b-eafb-4981-a261-6e85d2db521d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84b69ec-263b-4518-88bc-753b5c85cf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b28ccda-a068-4911-8e9e-87e7549f1e3a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c67baa-7bec-460a-b776-e7111f967a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a1c310-a7c9-4b26-971d-d687c74d3f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2268106f-7011-4d97-8890-3012e3112b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcdd828-c2dc-46f8-804c-5a70e43e2a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed3749d-5500-4f50-9eb8-b94a905afc35",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc55cc42-a59f-4bfe-9944-da7e4da44b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b153f4-36aa-4116-b6bf-79e75240cf02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8f2fec-4326-45d1-9fb7-9f993b4caac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8858a1-2a55-4fe9-98f1-2f4622e66d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9215e9ae-6a9d-46fb-b83c-f95235989dad",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c2fb7f-d943-4003-9f28-89184c8f9833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabedb01-3336-44b0-b9cc-0fd278a68bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af1c0ab-06e6-451a-ab04-003e7ec79c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da9ced53-6be8-4443-b3ba-82db56dca607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec780500-72ee-4c4b-a005-15aa4716b50c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39daa9d1-2667-4334-aa2b-6d98f5454b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ea9635-05bb-4e89-ae13-9a54dde47c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c41f8f-5e52-417b-8273-a605fb706e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e37a407b-952e-4cf1-85de-1e6fe469dcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a95de81-4d48-494a-bf3b-8e440dc322bb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28dd95d-a513-427b-a040-85d05bb9533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08963d63-8f2b-4b06-bbdc-8a58c23798b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ba24a3-1445-44e5-a24d-4683efd10757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc99ccf2-12cd-4d26-bd60-7cc1c21342a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4399a3-3c77-4474-9136-407a39764f00",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22675e11-34f7-49e5-b466-17100c7d8345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542ffecb-7a1f-4540-a77a-5e2308f491cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72d211a-301e-49b1-aca2-558dd0389a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d55ce9fb-4b18-48d8-8596-e2798f0cd7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a105c94-8ee4-43bb-b104-942c9ce149c9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f852b1-4f77-4e79-a72c-cd50db6be476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b894fcbf-c2f8-4518-ae05-ddc53d981c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74766f00-6d77-4349-be2f-e37b399f0e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c1e89e-99e4-478f-a3fd-cf42cae777bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a013c8b6-03b2-4931-afd6-acfffda6c9a8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3849cdc6-b4b1-4038-954d-ffb41c26e01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b6984e-01dc-42c1-b064-3d01bf90e2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e806fa26-f898-48a1-961f-20497215eff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79f467d-64b6-4056-b5c1-cb62f69af26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f38d7f-d12a-4ade-8449-e3a75024a7a4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7012e6-6dd0-43d4-a67d-00638b808170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c83a0c-4841-4fab-b3f6-34e74213976b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d3781a-6368-4950-af34-0e4d0866037e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93a3c6b8-df22-4038-99f8-882245ae9982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5551da0d-b2a1-4acb-97c5-82b62352cdd1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4905f5a1-dfb2-482d-bd0b-8f8b1bf09a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f13845-f603-4a54-b2b9-596f87c9eaa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e435d21-1448-4df4-a9c0-1baaa11b684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d017e0c6-1908-4b76-9283-98e6207736cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa81fbb3-9331-4286-9069-a080b469eaff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b5f951-f371-49c6-9705-2dbf50402b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acbb096-e3aa-413e-b002-524e7bba1de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3566426-c18d-47a9-8a2a-8d1d723a7cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b75f4dda-7951-4c8c-805e-33909686c319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45c4373-9e00-4fb5-a048-37b2138aa0c8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a75fd82-cb5d-44b8-a384-cc672cf0cf02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b71efa-3611-4efa-8929-ec089788f830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5ef383-b936-4bb6-b48e-a72fba641fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b651b44-fd1d-4992-be32-bee2e694891c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ded6035-03c9-472c-9338-ac4f8bee023b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f79c1e-0fa9-4586-bb79-d6a545c70396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d33b6d-0541-4d2e-ade2-ea0990034166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eb24b6-9ffc-408f-b8dd-3bd949b4513c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e3cb2e-fb2f-4441-99fd-88e87c58bf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaebf07-4106-43da-8878-db1448000410",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8473dce8-db57-4cac-bd77-3545af4b2f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2a80be-f871-47df-9b47-5b8c1e76bf72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a5a790-d07e-4629-aeb5-f139fe95635f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "78097202-e96d-4fac-9f9a-87ded7547ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05c9180-4900-4b2d-95b0-619ec82d1415",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70ec79b-b818-40d5-8434-ecea281aad1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27e7e4b-6e84-4ada-8850-5017c933ac4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9891365c-dab2-46a4-9d54-e52156a744cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c463e1bf-7e15-4179-a6fd-cac99ac3288f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe4912a-6a81-4868-a588-87683563b7ed",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213f4b25-051e-4315-98ce-427f265c2f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0bc8b9-21a3-4506-ab1f-1ec37f71ed2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb00489-7719-404a-82e5-da589860d963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6eb216-e437-4b18-a297-e8624126205a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac7a594-3128-4ac7-b68f-fe9fe679d341",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79a8289-e532-4f39-b0de-068e4aaa8b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221a7b52-93b9-464f-8b45-227c606d51b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15ac65c-987a-4ace-b01f-fd566e666ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43143db6-7252-48f5-9c51-89ba43aeeae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d00b681-3141-464c-88da-24db40fa293c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2a1a52-9a8d-45f4-aa87-aff87539769e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ab3b4e-fc43-4513-8b0a-f6242039e19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40530163-99a9-42bf-8a18-7aa4d077929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a40a1b-ec6d-46b5-9ab2-ef5a5dd6bd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c741cff1-d8b0-42c9-8c8d-072a1efc74d3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5423597-47f3-486f-8d43-da8cb5f8f5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eec0c4f-ca8c-4724-b70a-d7e5ea9f27fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28024b0d-f07e-45e0-87da-70d9b5975782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba30b820-87ce-4c5d-8255-929d4c28d759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907f1fb3-c296-41c5-bff2-2d4dbdf80ef9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2308201a-8d0b-4a95-bee9-dd2448963f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b2d05c-ae6b-4ff5-a796-4984add152ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a10314e-7774-4c6e-acdf-c4c53a0f7b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6b6cad-434a-4a6c-bf86-d4c731beead5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7e011c-8cc0-4185-ab89-91c0c839da72",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44ecb67-b22e-4c5f-aab9-328cbfbe82b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1af25e-abe6-46a8-8761-f7bf65a4ffd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf801d2-4eff-4220-b04c-789d6ef73dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8e1a74-9302-4615-9dee-25f20c167672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da39793-5a6d-49a2-bce3-85b0681e0f31",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20560142-7e68-4ad0-a9f8-223275153eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09cd132-3106-4d21-aacd-2b718f4ae4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbf4464-7c2e-44b9-8144-b607606f98d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12e9ee4-0f19-4d3e-9435-bb90156d0226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c03f08b-e094-4f42-810a-fff4ac4168a5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f00e53-d6ff-40e8-ab79-bb3f32bf6627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba315351-c768-4585-823b-6730994c8df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402b1dfc-b0ea-49c0-9b4e-805945c0ad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3309befb-c6aa-4297-8d4a-f3f748db575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fe3e9a-e979-4d79-ae00-e7db5dc6a133",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3c587c-3235-4624-9486-12f78aa11e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db068a6d-630a-4dc7-8de6-c17f5d367fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc771e9e-4dca-46b5-b630-2e82fcce0fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96fb9126-b29c-4ab4-8ce4-a79c90e99e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c54fc5-4e97-46d7-bf28-cdff4244194c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e80ae69-ad52-4114-97df-edc3c67fd112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0d4a12-15e6-46ef-9af8-7ab218c23716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e815011f-33aa-4445-abfa-0e7432b64209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2371a9-d4ff-4ddd-b185-3920bbc102e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d186323-0dc8-4c42-82e3-b70005202fb7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b092ea-8657-4f9b-990b-43b78513f3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd4f7cc-de91-41af-a5a3-fe8f47e4f55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608655e5-cc8f-4d93-81ec-c77a6ad656a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df608d47-8779-49e4-a296-b01b3e4ae533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a31a99-77b9-4ab3-943f-4e2c2bf469bd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e857963-7e03-47dd-a907-c7b674061dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d47c86f-0cb5-4ce8-a3fb-cc4152e764af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c230ff6-a92f-40cb-97f1-8ff88de81fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c03a259-e02f-48cb-8405-1ddbbca880bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6966694-583a-48f5-aea5-cbdb1c5b8368",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bc9ea3-5841-4b48-b347-ef89ada035a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a67d136-7597-49fc-b5c5-f3563a30fcaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb450db-313a-485e-9972-ba3af958968a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb160061-1018-409f-be91-c8aea4868328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd420879-a9bc-4623-96fd-392d10ed2e60",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320651d2-c346-44e2-9be5-5a3714efc2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f53392-9704-49c4-9a10-18ea2296f794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6666c5a-d4a0-4a91-8d32-d371d112c302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f816144-bcfd-4855-a219-bef614331057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e461a5-41a1-4671-aa11-0ea2a792f978",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac342e7-020a-4b2e-bc32-d782acd7e616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc1c2f4-ddf5-41fe-9910-39c5cbcdd4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae1d355-186b-4e8c-8b84-dbc16084eb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02d8afd4-7014-40a3-94b6-db914d8348a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af44e1c-31e7-4452-95c5-f40025ca27ae",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8475374c-bee0-4774-b307-1781f6e5d7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1333cfda-7e16-48d5-ad6c-dcbda9b9dd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29377ff3-9856-488b-b8e2-5f221e37ab2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acfff56b-159c-4efd-afd7-ef778fb52910"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45d173f4-304c-47d7-b3ab-d73bb0da7a1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6587161c-d6a6-4180-9896-8bd724c4d773",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec24d218-538e-455e-9c22-0633c020c8c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4833b779-a8cf-4323-a312-c68c4a352a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72e0857-fdc3-4812-86d9-1ba3944bcc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f11c78bf-b985-4293-a67e-4c78954e132c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43c9621d-58f9-439d-b44e-53a41d31a3c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb29997d-be3a-40b0-ae2b-85887f2017c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93437f13-50cf-46ab-b0e6-0d8987a33ba4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c099b188-8073-4b7e-883e-b5d5628e9818"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4ea36e4-2d9b-4e8d-8f7f-c00d333b3254",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef8c1405-cb5c-4e41-ba02-3181cdf99074"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3acdc69e-1447-4927-99ba-c08789779e04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82ce34d8-bdf4-46f5-a694-fee6a26a5fc0"
            }
          }
        ]
      },
      {
        "id": "95772c8a-66d7-4e8e-98ae-b70854984dae",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a308acec-f3ac-4b1b-a270-2b5bcbfc247e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d33edd40-a503-4adf-8747-22eda108499e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec0135ff-50c6-476a-9ede-d74fc5bd7d08",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7189dac7-b637-400c-8962-e6c5bc17396a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c73cd5-36a5-4d38-b342-6ce4b7663da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e754caa7-d980-4a59-9fe4-fc65aa273789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a6723c-897e-437b-bb32-8c99cc589183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84d4963-5e2f-40bd-9983-dabdf08bff1e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0af1bcb-c94e-4d96-abd2-09eb934dfb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327b093d-1acb-4f9f-bad6-6302c3408720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f65037-b5b2-4681-938a-ce5635e8f367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0adb5c4d-2964-4152-9a46-cdd33a3d3a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c65a604-9261-4765-b804-c52cfc236364",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0c95da-ad81-4e9a-b05b-8703ccfe20e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d66a03-f598-40e4-b3fe-13d9d0d45924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6567c37-f39e-429e-9df7-a7fffc899663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f4f335-541c-4918-9d8d-f1c8758dc32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e91e39-73c7-4134-b4b4-3b5083af9a11",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331858c7-2559-402b-84ae-d113ff23b9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8fc9c8-09b8-4688-898a-5dcf2e53921d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b686209-c6f6-445c-9a40-55220f90a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8254b0-6209-4d88-ad1d-0d1b40266715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3eced22-ce26-4224-8338-35319b470672",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c500271-8c1a-4f92-a4cf-f9565cd55592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7d6e49-1615-4fce-8b40-07af7b8cb9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb81238-e37d-4fdd-a6a8-8b3b6f7259b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1d4361-718a-42d2-851a-2ad0526275d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6a0bf2-4e6c-47ac-a4c2-11bd7076a86b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0554dadf-5fff-4ade-97c2-f2f4e5353345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40aa0d3a-9c61-4d66-ac71-793d361c76af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac56289-2971-4901-ac28-067a0ceb1e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35188790-a266-4b5f-a5af-ec8fe6c7748f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fe4ed1-3cd5-478e-9e7e-5ef04a5e07d2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7152ff-09fa-4d74-94c2-73131b2732e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872d1a11-a7e5-4949-9824-a48c4378d33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19f0cbf-4515-4842-91ad-77703b123036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb67665-e2e8-4038-91e0-9c004d1c21c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8040fe57-469b-4bde-a5ae-d7b1f1c4926e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e9158b-5d2a-4ca2-8c42-5499c082a939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2ae320-e206-4c4b-9f91-0bec1392f8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b90fab-20da-410c-a34a-9bc94b6443a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c911e1c7-07fd-48df-ace7-f88468f91f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54942b8-153b-49c7-9e57-c29663317439",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c18d4a-9c25-4d4d-a544-064bc343621e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3848523c-00dc-4ef6-8f16-a8bd855f4f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad1c2b8-b7f3-4e4a-acc9-0d251dadebe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc56e42b-8831-4d4c-9322-398890f5e8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97569d5e-3e8c-4c8f-8b5b-dc28854a4005",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a4761d-6236-4e2a-921b-1a1c00593cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1af2fa-5533-4444-9f94-dd23d5d1d3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b439b4ee-8651-44c2-bc19-987aeb20257f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ed3d89-f2b6-42a3-9007-06356d646c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd279f63-72f6-4cd1-b506-568bab351705",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92866bbb-a228-4523-80ae-2aa622fa32c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55abb7f-bd65-44b4-b812-0d3e03ec317a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f65dfa-23f4-45e1-931c-df08f07f0996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1eed9f6a-b537-4651-a7bd-32abcf661b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5453cf5-b057-4216-9094-1b9bb76eebca",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d60b14-28f7-401b-876c-04aad650a37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8968e55-09b3-4d10-bdb0-a9bfdd250e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ceb85a-6060-4e82-9a36-6e9f2c442ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7cb1e1-909f-4f99-b38f-fab06fc05c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43066fc2-1159-4d07-ab3a-6434001f8169",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e1d07e-8e25-40fb-8655-f435fd6f593c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b39109-0b3d-4d6b-b9a7-0bbd32a10da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e04e3c3-af40-472e-ba85-f228636701bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "110f5202-161c-4a0c-9e5d-997ad6b2ce3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12dc405-fa24-4675-8837-e4d57f32bf46",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ce08fb-08ab-4dc7-95f1-8594bc3e2e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54445658-dc9f-4880-99af-d1a3749f665b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe727b4-7426-4219-b723-7bc131399354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1756c0bc-088f-4b97-b16b-2a8ba9950d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd483b5a-f733-4696-ba79-ff0b7cec5693",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d697e9-8b2b-47e9-b0ad-5738ab8376ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d514e3d7-4f74-4185-b58d-3b12c3d3cfb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2de01bc-520b-4ee5-b941-be87d92d7ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc29a68-277b-4382-a864-363ab38f4bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2828091a-64c0-4469-aff2-902b3c64218e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1decbd7d-5f00-4784-8f3b-6b53c8c852ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bae4d5-5b5e-4863-bde6-e06b8834fa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82abcb2-354f-4b7e-a23f-49320029d759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a724a74-fcbf-4941-88a6-35d8b35e5380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e52060-fb45-4c98-9ea7-cefb6f7541e3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2a5561-a228-4733-a5fd-cc9cf267b10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910b715d-bce5-4565-bfd4-2d43f99d8dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b6ea78-ab30-4ff7-929a-39e3e53c906a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "201da619-c2a2-4634-a8cd-f2fa1b09caa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18263f09-6c66-427a-a576-0bb77c4afab0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b2a10d-4b81-4c02-a500-18c172175e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4b4f12-f018-4342-a329-d921facd5d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9966730c-c393-47f5-8999-e1ed48f781ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9745d871-3961-450d-89db-c37ce6f7c7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2025646e-7fe5-4122-903b-671e2ea449df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6d6e49-b8f7-4ac8-9f7d-3a25b21fcc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5994cadb-e928-4d60-bbb3-4ee58b65b598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2619eb6-df6b-4d91-883f-a3c95c39bbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f500855-94fa-4614-904f-c9f9f2b9405a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76972d77-976c-443a-891f-a927aeb678f6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2806e1bb-ad51-481c-86f0-72820830533a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70df5692-477b-45d5-86f4-07f3527560e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec954872-8b64-4ac0-aebd-618e77d15199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b592a41f-a654-4be7-89a9-5f38b00b12f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bd9324-0a2b-4ec7-8130-82956c4621e5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa6bd84-a06e-4767-91de-30b5281e6a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3675d3b-c72f-4bc1-a3ee-a09c9185293c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528df321-dade-4867-bcd0-15e644691b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f81a2c2c-f79b-4ae8-9c8b-d9b8a9e08745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f9140d-1365-40d7-811c-0e7da3741777",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe066bca-9683-4e06-9fcd-b5f1128dfe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0b172d-87bf-421b-b26f-20d5b06f331f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81acaea4-288d-40ce-bbe6-4f3dac8727ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0533fcb-68b8-46ea-be56-ce706d363db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6507fd07-b8ba-4ccc-bac5-a8d900e97bd1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75429de5-3b05-4891-a34b-11650947b67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e11500-c6d5-473e-b1da-6aff9b8e7947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3f3b38-a937-496e-a1e6-9cae613e9c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c3aa9c-2f09-474b-9c04-59c830ca7446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018942b4-14a3-4b61-b728-3eb1ab610399",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b3e36d-5889-4e83-ad66-47a354c96eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434f0b31-39c9-4009-89de-13a3d7d36d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b27563-b74b-480e-b21f-ffec9c6fc9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04427ee-e788-44e3-9232-3dee11593a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bdedf1-90bc-48a9-b181-c8d98ec0aed7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b64f7c-e6f7-41f8-9bf0-02c9b769555c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5491ef3-3696-4e5f-a0a7-64b830bc8f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bd0b72-69ec-4f0d-808b-f523ead7829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85837e4-80d0-4b41-918c-dac97ac5c4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbcacde-cb6b-42e0-afc9-65954cae67b5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090e821f-9ffa-430e-b10a-05544d1787d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c5f44c-f991-49fd-9a9d-7c5242b27260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd58d56b-d065-43ab-8b8e-5b8d4643b139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c370dd-77bb-4487-bc86-5cfcb9fe8194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4f1a0e-d871-4e9c-bceb-9fdb61671d08",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea42e6f0-f55b-4719-ad8e-e44a1df57a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77565720-b539-464f-8815-9167013a4791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcece78-a2f6-4ee6-b5a2-83fdbdcf8302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f34915-e1fd-491a-943b-e9522b482d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e016042c-c4d5-4364-9b7f-40f80966ca06",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6183e9c-c232-473a-a0fb-47d9afa107a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d97546-d646-40f2-956b-ab2605406071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0426c7f6-8c45-4d7b-b68d-1b3b379f8520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f2a611-807a-4ae1-9072-6ff9d5025af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7159854-9875-4428-a4b5-a18b518502fb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd4fd10-9282-40c7-9d3e-8b5eef92255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95674003-d332-4fa7-a429-a431493a66d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360855d6-e87e-4149-ae44-c7b9e574d519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68766cb1-9371-442b-8196-9a2557094310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68014c48-310d-4521-ad78-1dea9b68e9fb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c6cc52-f261-4f02-866f-4472afe139ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c276e8e-d2b8-424c-89b3-6a076230f041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5282533a-2d4a-4571-b930-6a7883cc04fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c87dd0-46b4-4b9a-85a4-d6e3764026e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f12c50-e464-4856-a0a1-6188f1126e76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71f9461-29ab-4389-8fe5-aa459d646e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1e7123-ff98-4c28-b662-adb262e574b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7bc3e3-793e-4d1d-ab16-4c70d5d3fa87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a527e49-8938-4107-8f45-d5439e993765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9301465-5761-4c4f-bdba-8fea19bb37c6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f207ae48-20c3-4259-9ac4-8679c739c3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2739a22c-cb34-40fb-b55a-b793028fa816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48ad06e-c3a6-426b-8d49-b8c2cd4fc9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d7bfe4-044f-43ba-9093-7f1159c0c2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a65918-c124-44f8-a62a-81f5002b4eee",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442b1073-b4db-4bd5-a27e-541c593ef9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3775b9f-7c49-4be6-8e50-553492222348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01cc0b1-2c94-47c8-9055-4d72d5f63454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd1abbc-39cd-4de9-b65d-8b1846f2f93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d215f48-34dc-4f9b-b809-ab9b9ff3f68e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc52cd90-c0a4-4038-9ebd-adcfd422419e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddc9bf1-0e27-4f15-b755-f0cf96476539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19611649-620b-43ac-bd68-ca5ddbc166b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a35ab845-14ee-4d29-a5d1-24edaeff85a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c886e2-07ad-4a20-be7b-d2d1bc7f940a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a097c9f4-535c-40a6-9afc-a2776db815b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87414a61-edd1-4d4d-bf5a-c765a5a06854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57a7a2e-0bb7-476a-adc6-d7c2c6af41e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa7c4df-d1cd-4290-9971-3adb5bc88f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1afd64-b7ef-4fda-b30c-dac97b7207cd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e2256e-cc0c-4e4c-947e-c59e0c4a5bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c61a2c-6b94-4926-b989-577358b677a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e20617e-41d1-4ff3-a9ae-9d92643b52db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a963bcab-891b-4359-bf50-842b18b9d94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec343c3-3398-4b7f-a09b-2a190e05df87",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faab8246-b3a2-457a-af96-3a0463e93ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f765f31-2049-40b1-860a-f4ed2ada76db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4f52c2-85a4-4c85-838c-7465c18c3c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "630aedb1-1760-4990-8b8c-dcae1ab01fb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14bbd371-1431-4509-b9d8-27506f5daefb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51095196-7a12-4ea8-b9b6-58a07ab4bdd6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa60d91-823e-4f90-954c-bccf4b29ca2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ab114736-6995-4b56-966b-f6f20b631a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e93e01-2776-4fd4-817d-5861b20802a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df6a673d-c616-4b99-9951-2d99ace023d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b132f53d-dc92-4962-9e29-d59240110ab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5c0346e-18ba-400f-b974-6a5d676adea3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b86a17c-d570-448b-a1af-24beaf43107d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5784ba54-e0eb-4ad4-a90f-5d95a8ff7812"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d32753fd-7529-4925-82b5-33547d87b947",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "400aa598-53ff-427d-b727-f00b33cb3555"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13db7c4c-5962-4c05-8c6f-aa35c7eab838",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "580ea552-d1e9-456a-82c6-087b27e4a3ff"
            }
          }
        ]
      },
      {
        "id": "fbfb5cf1-c7c6-40d0-b1ef-85d7cb19ebab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "641efbdb-060f-447e-bed9-83c22d011641",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52866163-76ad-4b3b-8a3f-cf8583f658cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ce76628-44ec-4a48-aeb0-f08990b33cb1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24a35f3-a2c1-4202-b984-61778f9ea826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b47d6d3-4111-4119-b36e-cae82fde0f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10328f8-44da-466d-9c89-ec0bb5a0e851",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246d6406-55a3-48b4-9e7b-961659d14252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fea726-88a2-4907-8739-31451208ea17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e3264d-c2c0-4bdb-9ac3-9a0a585f82bb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce4465e-a330-482d-90fc-5f3841173080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da498398-fce1-409c-9726-36f531eed67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4356355-a1cc-4440-bd73-3979301f5043",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa105bae-1600-4f27-af04-8818d92f767d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c142c97-afc1-4eb1-b74c-e4b90b6e4642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dba66ac-a9de-466c-9bdd-fee9ff43602c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccac7c2e-da79-4b30-8090-64d70e27c9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6f5eb7-69cd-46f6-aa45-244f238cba3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e011b1c7-c4e9-478d-b040-e7b6a7d1ded8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bcf929-8e8d-49f1-bb2d-d1cb6721cb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b0e25d-6ed0-436c-8336-36daff0da1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7e752c-6a8c-4c1f-884a-0639d941a2cf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e87fbf9-245c-4e21-8629-e8882369acb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eae584b-ec47-4e78-a38f-47fa8d25d342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a603a73f-6ae2-4668-a226-7364b45f9da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac21f03-caee-48b3-bf25-bfa6363e0434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61eb063-4a16-4737-8624-09494e259063",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6253659c-78c5-487e-b47c-f81026a13a1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cff7e73-fd7a-4a46-b7ba-08c8dd885e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ff30b0-2f96-4e5e-b056-57fc2dacb72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee71ea56-623e-4805-9b66-6b7caab5389f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d9312b-51ad-460d-a447-7387e1da8d35",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1a63d8-0325-4446-bd04-9bd2e12e9ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23396614-052c-44f3-878c-643b03c3a32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed46d30-3ae1-4f18-b6cb-2549e3372084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c468c0-60f8-4e77-a43c-110f627ff6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e87ce40-d029-4454-9cce-da892da31b1b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c26164-56ea-484d-9f9e-df86e40c1242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "676a2e09-3039-432f-ad42-93a2cbfb4f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d3a3eb-0288-463e-ae25-4b29bc3b2646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235b47ba-56ee-47ce-b7bb-4a7b9e4d4d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade4e700-38c6-4b1c-b2f0-8284a0965960",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f116358c-f59b-4001-a178-0807d7435009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee26994-a8f5-4bef-bc76-7a48c4fcd160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b7e102-212d-4ede-b3f1-be85ccaa2496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ab0862-b5b6-40cf-b42c-d2fd6823a825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eefbc7-ede6-4317-a4e3-10fc29567629",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8968fa0-278d-4b3f-a259-7a48d30a1b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4369d99f-c461-43a9-b07b-5c33ea933021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf682b4-ee32-4dbb-8d50-489be157f8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e17101-e684-48c3-9cc4-fcd560a35df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd4f653-141d-40e6-a1da-4422905cdbf5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c2048e-2630-4279-81b4-7641f27639ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a01764-e5da-41c0-8c1b-82e70b8b0464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba94e0a4-5603-4938-91e3-a6131da26d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb35075-de16-442d-9219-db2b5dfce7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d09d65-d968-4a21-90ed-30e5bcb88ca9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0943565-a892-485c-9612-8bc15c0e5fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8edfdb12-805f-4123-8dd1-7b8251e2bdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1e3d4f-92e3-4ee7-aec1-48f5a6d34728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30803b0d-aa76-488c-a049-1ba707662d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c600cd4b-f1b0-4012-9e78-78e8f60595e5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6b830d-98b6-4705-8a25-2f2edcb0b3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b6e52e-14be-48f7-87fd-090d7bab5006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e09d6b2-f9c8-4264-a3b3-aafd0deaa6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e43b192-fd8a-4968-8e64-721e811c859d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadbad62-160a-4730-9856-49ac01612e1d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942c77eb-6ef0-4ed7-bd96-4f666adf9503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40ffb57-f8e3-4cc6-88c6-9bfbb0be1b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e55cd5-c62b-4195-a0cd-2b850a0aa303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a06b29-aef8-4ca9-939b-9f9f4c3bd83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a4e882-57df-4eed-9a42-ade851b69b0f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8402f04c-1cf5-4e79-a659-2801175db635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201bbd8f-2e6b-4f2b-9713-4caba9993ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd13475-c1ea-4cb0-ba17-ecb38d694f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f1d163-29b4-4812-9d14-dd7e21929b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600e7ea4-c71c-4209-a139-545b70cfe02c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526379c7-4462-4cd7-be6d-57f7816bbc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de490db6-e951-4ac8-8111-44f7302fe0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9426416-ab20-4e64-8013-6911af0c66cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e37f8ff-6cd5-47c6-b0c7-b6133bbb63bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f445af36-8b7f-453a-9d6e-c81c68a62ae7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331e205f-2945-4dc6-9c08-eecb8bfffc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bcc728-a6b2-4695-85f6-63201f2125f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031e3291-555d-450a-ad88-91f48903247e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885d1920-80c4-49fc-8e8e-44526ec640b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4435e9-f4ad-4fca-b185-e35fad6e8970",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb92139-dceb-4fc5-81be-5df6046daefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a022542-8c7b-4d0e-9454-0a692dde2bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b90f3c-448b-4ba1-8e2e-f4f0cec0309c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183e1de9-569a-4eb2-be88-5edc3c0ac0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8e63fe-c89b-4a7c-a8fd-72c80826cda8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fe232e-d014-4837-b984-6efdee05ecb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33906f14-6371-4e3c-a009-2ad2989d2a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bf8f1f-b439-44e7-aad1-7e6e626e3dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49afc8e3-b70c-433b-b5a1-b352e233601e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4320da6f-2821-45bf-a19d-e75b9e2f0b16",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c219b9b6-4889-4c4d-9dcb-7d1716b1c2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9d254e-d75e-4e3e-ac60-09f14734e30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a43554-725c-489d-9e3e-0f959175c4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621b6821-f781-469a-9501-0e178f053dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7568cbce-f3e7-4ac8-9164-f245929d3224",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88802b92-69ed-49bd-a6b2-f9745bf749d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210a388e-8690-4080-a2fc-10922260f04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc8762d-cf92-49e0-b965-ebe4a9d8fef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8389f8c1-3e74-424e-88c0-c538e17e0eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6db97a7-a4a4-42ba-ad46-76018ad3e511",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13bf47c-417d-4a7c-a45b-cd08efcf9e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa3ac3b-33bd-4c55-a907-30c45975d805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bcc4ac-deaf-4fb5-9f07-61cd97f4e2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e681b00-cbea-4c57-a673-961f31bb713a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2786c3da-0153-44a6-a699-78cf2bf3b0d4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329673a5-5e08-4875-96a1-4f4862299a71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5032e1a5-209d-4104-9c57-dba71ea5010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f993e1-c9f0-4042-977e-2bdfed6bd629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b32a1e-3de1-47df-98a9-c62e0ba9c572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2902b75-6f65-401f-82e4-755a4530a440",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e6c5de-5579-4661-9acc-082695e572c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3ed36c-b56a-4fa1-8289-29c7f00672fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d40b137-653e-434c-a930-7235ae97c15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c4995c-4a08-464b-a571-49223559678f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7da311-6639-4ab1-b28b-b51733ef5172",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53a0caa-c931-4100-83bd-93874e1fee4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f248384-fe32-4b67-838d-0775ed166d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1afe01-b6c5-4359-979f-c01e2c23e84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f37f67-051b-412f-9126-346ac661487b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c96608-b8d2-4cf6-a73b-e839928477a8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66e7d36-c2b2-4d22-8cfd-2973a269df81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1338b48a-37cd-4305-b24a-08d9f522aab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de51f2d-ee9f-487f-a9ce-4e79ce85fc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5f3810-ef62-46fb-8b30-c73e317d177a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82641726-6695-4837-9de9-81ab33e2d6fb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3345db-c62b-43ee-b347-3be331db0833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b55615c-ffc4-4fd3-b3d3-95f119bb06de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6c45e8-279c-4229-a9db-817ee9dafe75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2248bc61-7151-47ed-8b85-b54d2a1f6220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76036129-068c-4db8-b80a-d8224a4ffed6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59656515-88dc-4e7d-b9d6-e83cea819016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd64c325-00d5-49eb-9b2f-569dd85c680a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41259acd-b4e9-4475-b2d3-186721ddcee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e06280-488d-41b3-828a-2bdf6c240e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f967f9-5030-41f6-850b-283feac08fdc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d73d03d-7490-474e-b4cd-4210617c5063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6665f5-38bd-4cca-b1ac-e7fcfb750aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a277be-fcce-4990-a473-670de4d95c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f6efb0-6223-4e4c-ac87-d080b8f4be6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf3a6c6-a066-464c-8479-77a541298321",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e038a0a6-a722-4ae8-945c-4569912b83b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658a70e7-ef6f-4ea4-b0b0-5305bfca5316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d1ed29-f276-4ed6-ab7a-8ce6c9a19333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c056b24-e517-4919-9ce8-df5114321ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f166d92-5cd7-4485-928e-a91c7ca082f5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7f55b1-4f8f-42e3-84bb-195ce1ec0fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b95f3a0-534f-4ce6-9046-06a7e0368868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cef608-1d9c-49ed-8aed-a248a5ec69ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7ef7b0-58a1-47d7-b78d-8b208af97cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b192264-59b8-4397-917a-c28f0b4c41f3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297f74d7-b5fe-4b7c-b64b-70ebc9d0f347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786d2698-634b-401f-9efa-05527903fd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4d37e1-d0f5-4377-8a58-c2be7fc99ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9ce635-46cb-4715-9265-5a3ef5370451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1af4fa-7d48-4845-9c7a-8b92801c5a9e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba606d09-049b-49cf-8740-021d904cd818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80e9a25-fa64-4039-9984-567136eb3fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3682df97-06ad-4555-81b7-66f13c364b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa008911-daae-4ea3-bdf6-761fe19e2965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708fa35d-cf75-4293-a1f4-a23c87345567",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b345ac-77fb-4434-b658-243791b05389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe58dd4b-5c52-4fc6-8dae-5c074ee5b2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3895d67-00f5-4387-bf10-289bdcc7b959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38394d3c-b577-4bf7-8ec7-658412ce2165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb78558-8272-4666-a417-547ef23ce099",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164221f5-66c5-48d4-a367-38086f380bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9100c512-8d46-45c6-84e6-478c8d3f40f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b329e5c-09da-4502-9ec9-9df3a26897af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1f557e-3226-42bc-84b5-3966a8fcf09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c920d89b-5c01-4868-9b4c-b73dc779b040",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d640ae-3869-4243-b672-d416dcb70864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07972a6a-7da1-4029-8e27-09fdebafad29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76443863-68c4-441a-aa86-3c7e9457ba94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b7312b-69d7-4541-998b-ab56600e5d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ead36f-a94a-46be-8c48-2a5991e11bad",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f084f374-202e-487a-b5fe-109fe6726e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcfcd8d-ac3d-400a-81d0-1766fce43fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc07221-1034-497b-a105-0f3d1d0ea745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ac8aab-3a33-4447-89da-efe4a5597555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9552ae42-d819-444a-8948-eabbbd464404",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9cf05b-ca79-43fb-bfe5-f1500a8503e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cc3607-aa96-4921-b6df-637857896cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccf6011-d257-4616-b2cd-25db7d67c760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9925cc-031d-4aa0-8d3e-abfd2c2bce5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de784014-8dff-4d05-b5cb-a4243ab69055",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472e9913-a5b2-464e-8fc8-36a5ee6e50d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f95fe3d-0814-43da-88d6-d61d93a8c0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc79a34-e142-4932-9425-f6126466b5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0556fb42-a3a8-476b-8ee0-84828f9a7036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e063c19-f1c3-4041-b208-c6a487f0c7c1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac1e49c-73fc-4d88-92ae-f34cf91f2bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a2bcf6-2e08-4ad1-af4a-ac727ace2b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908c5e3c-6664-4f8a-97f2-062c89474562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdf86f3-a908-4af1-8490-bb96b0fe4570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e869578-c263-4e13-b88d-6c87e3823a8f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad170715-8ff8-4bcd-827d-69a581b06310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b465a0ff-12b9-43bb-89db-5f65eefba24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb0caca-cb2a-4015-b1fc-7e480baf729c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110a9c56-a4ea-4cf4-9bc3-d0ed51fab93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b4c807-b4b4-4e36-8698-7dcc1cafab7d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d59b26-6df2-4655-a5ee-28a9289106b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5879e923-c341-42ba-b189-46ea63b7017b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc25234-4ecd-43b9-81dd-1cf83829cea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c5ade5-9b2e-4ebf-bfd8-5569375c4ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c8977a-3520-4176-95bf-a1c8638046a3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4385f7fc-cfa4-47d1-a943-8387ed5b73c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3acf52d7-bbcd-4d09-b6df-508f2572a081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd89956-94a4-466b-a0e1-34f5b65d407f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263493ef-c6b9-4913-ab78-08a8b1868497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9ed06a-e0cf-47cd-a62b-d088f96364db",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cf6c57-1de2-43b2-8370-8c85823cfad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d80686-5ba9-4569-ab50-22b15d5ac4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea873f4-667a-434c-bbba-d19219ef7254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620784f4-e513-431b-bfed-4b2e6fe04de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3e1c47-9b9c-488b-a8bb-c39906e6e905",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeda432-4a8b-4646-8713-71bb2929d77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2ef2a6-7f3f-4258-904e-8adcb9235fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cb3cde-4e15-400b-a961-60abf259fe25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6181b5d5-2db1-4811-b59e-0774002eae4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33389ecd-e720-462d-88b3-c249c56d7d09",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3661dc-b8a8-4d73-8f3b-dc89ba7efbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab01f4f1-9a02-4ef6-b1c0-98a49281c903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e587b12-9da5-4149-aff8-d22a71d16416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b375038d-72eb-40f5-99a1-57b81592b98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687e1f05-df3e-4be1-8429-d3ae3a401b66",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a16b51-4dfb-4800-8110-65c6f44fa1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f02b401-6ab2-4db7-bf28-7ea1f0067ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0e9c49-d297-4e4b-b248-817f2e20b0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e6128f-735a-463b-b983-c61bf0602c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fa9f13-281f-4fc9-a3d7-513d30804281",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522587a4-79a7-45ac-8af8-e703655f254c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a272e1-ff22-4f95-8a5e-52dc48fa9466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e451dd77-c6d1-42f3-94b5-8c4ac80b4723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1066021-59cb-4da2-937f-375595370bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50993246-3f2f-4488-bb0f-ae458afc571c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac33aeb-5343-4ea8-839a-2ea9bdfad3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5c87a6-ee64-4bb2-a1b9-78db32a617eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b36d82-adc8-4818-8480-1670cc9966a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d89583-fb41-4e7f-9380-73fb405ea99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b20b8e-fcb1-42dd-b954-635b651cd6ed",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f5a65c-8f70-4fa6-a530-ab6343953313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bac9a58-13b0-4129-b5c2-bbad80e51a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45d7cd0-b33c-4bd5-a1bd-a90b8daed641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfa7229-efcf-40eb-8697-9e7c094abf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2570c72-0e44-4e27-a80c-b438623b237c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64bbdab-8dd7-4b4e-bd20-de0a3a80c38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f50d283-e683-45c9-bdac-59ddff618532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fbf995-296c-49bb-90d6-b8513bb9ef6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a507549d-ead2-4fba-96b6-015eeb6dc714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d000d876-83ad-4134-8163-92840c24190c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b8a31b-4a5f-49e7-9f1f-85b685c25638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2327200c-4a0d-47e2-9dc6-978fff683a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7613ba-1e43-4563-8bfd-a147d1dc7b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659276ef-ebfb-4ad8-b134-cdce4443871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45f2f05-2d0e-4142-8e5e-129700580099",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01be354-fbb5-4b2d-b328-11ee33714673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da0c4bc-98a5-421d-a2a2-7bd9fe88a2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e011a68-d246-4c06-98da-6174b6cb5809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99746f54-0bbb-4cf8-9aac-f97fb1c71b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a36668d-d9c6-4c75-ac56-7593a89de1b5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243432d4-3efd-4d18-bf38-fdc6811acaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10413fc-b6b2-4a31-8880-82754ca99f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704bae42-eb9f-4ad2-bc7b-87d686f4d114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4ba0b4-1223-4271-9f47-e362b8586fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cc11ee-7906-4537-9261-ed332ecffb83",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e82789-b3c7-4a5d-8820-7a8d91446f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee5fb40-c774-4457-bc5c-0ae2e716b193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b08733-2ba7-47ac-af5f-0886f1b85b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cff5ba3-8df3-4548-ac32-ac7d27e03ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72748610-1648-4ec2-9927-50954891f87a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c3745f-f392-4fc7-bf6c-b7c4ff99de4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e87b04-11fa-4c25-972f-a33b8cbc99fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed88cea8-79ab-4aea-8d1d-38c271c82732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721d1994-c690-48a2-b728-c777ad671bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5dc5d1-2f29-4c0e-a90a-15aa6f95470b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fed6f6a-6b1a-448e-91a6-315b070de227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ae0db2-f499-45c1-bb84-b0ab6c94bddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa35ea1-7157-43dd-bcec-472469871782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d805a6a0-b545-47ea-9573-6448f490c5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c61b495-a2bf-47cb-a1ad-e48c8d4f9150",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ac7f9a-3fbb-4fff-9e1f-969da8422084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62e52c1-7a79-46e1-bef1-94e3e9c65f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8792ae14-5016-49e7-804f-b9dd28df1b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37306e16-a90a-4b76-a84c-f653711121e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcbb28d-6b5f-4a2c-adf5-36c2fe37beb7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db9ec46-e2c6-4266-bf1b-44ef9ab88267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf93c2a-bcda-4d0d-bf20-c2abdfb4c66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9cc54b-b4f6-4c60-ae9c-1ec1a08b628f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8aa5e3-6308-4297-b9db-728d8f422a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b67bf5-b466-475e-9693-27cb9381d66d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae223e1-0eb7-4c9e-bd9d-7e7625031ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00970595-6ee7-4ead-a47f-fb59ff3f1690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44df779-2704-4aa6-ac9e-18f16ee48555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0d39c3-619e-48fd-a2bf-8511dd3dc4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019b37e6-9aea-4467-90e3-3701fafcfcbd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dc00c9-ae9b-483c-984c-60a38a6debb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8b1c20-06a2-4d3a-b374-c4ad349f3a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d3d534-0341-4b23-ba49-ea65373ec7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846a0ecb-cbe8-4993-adaa-5e374e678c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5efbca-e2fd-4e29-8181-6a03bf0b75b5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e92aa0-5423-47d5-a005-6a295442294b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5325c7ea-033e-4931-9f75-3e8e84abfb39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacf715d-fdbe-4760-93a0-003c7553f9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230e8edc-1ae8-45ce-be03-b275841cbe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b6db93-6c50-4344-8cb4-9f47615bf9ed",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25797576-2e80-4892-89b7-0ee67bb04243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db588fc8-9856-4785-8e94-7bf45ff34a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f3b977-2a97-425d-bb57-20b036c3378c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78db6959-09dd-435e-b10b-e971a041baea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b7b178-d4e4-4bb2-9fe1-3a332546b3d4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11310fa5-010e-46e1-8837-4f055dc04731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a76d18-2618-4486-915e-f0e2adf55d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dc8687-0115-4945-aeae-05ad40328b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095042d1-c4b0-46c4-8298-b37d2269bfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373e8035-9e46-46e5-9914-ffd29af1daa8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187dd7cc-363c-4302-ac45-075949e0f549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d6aca64-55ed-4bc0-92f6-6dc33f5f3def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86d64ad-c78d-465e-841b-9f3013ccade8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c568a17-ca51-444a-8fe5-3f5ddcae2afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9541e5ff-d23b-4afa-a491-2ea70b6c2af8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8744a2-a353-4df6-aa54-9c1c495c9a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05628aad-db55-4f87-9884-90d49bb6a6ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fabd63-6e76-4858-9fb8-754120007afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf21ee5-a1c9-4627-8f80-8ee7f3429d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a8bcd9-4302-412d-81bb-98e90444c8c9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dc1208-5d0e-4dcf-adbb-2e2fa62e7160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715e5f13-b2d7-4b91-8e5e-23d9e65f29e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dea98f-263b-474e-a8b3-d52fedb99caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0936bf66-4cf1-4668-a30e-5c97740b7f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26be2dbd-7764-485f-82a0-f330d5ab7b20",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31feae6d-61f5-4ad0-978b-cb9e7984a32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aee6635-daf1-4c5a-bcc3-18eb6b8d4721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf15ca-32e0-4557-9ab1-a82c544e5758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5919bf17-d1cf-4cd5-8fdf-b807ebd734d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8951f8d4-38d4-448d-b1e2-58ab25cdda1d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd521b4b-f478-4ffc-af27-fab41ea1ca4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1d9296-1f3b-4235-af25-e2914e0091d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df379958-ed77-43af-a3c0-426717ec23ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1af7158-c908-4925-b594-e89abfd39a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0414d72a-8d00-4003-a5ff-14603541ba57",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4142c9-4db1-4b51-86f8-289c40290b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c219a5bc-2ea9-4034-932c-f91233f6956b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662e6fc8-99c0-4e7a-9210-6c657509827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ff55a1-8cda-4147-a562-6166a79b1372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a308de16-d99d-450b-b9b1-fb8ba8846cb1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4727e084-1249-4948-9309-c43e02844dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd93358f-6f3e-4694-9806-38debc010bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70639607-f74f-4f68-bc50-8facada25a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022f3ea7-349d-48e1-bc09-0f2063f509b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bb6de5-c90e-42e6-bf41-a9e063c770de",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5b947b-4f64-4415-9838-5f283b74d82d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09574a4f-8308-47c0-8a0f-deeb6739a7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44934ade-425b-40bc-b31e-23d2636e00dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a0f97e-9c19-422d-8944-089709432f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38c3bad-ae85-4f86-8f25-bf6af3345a77",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc059e40-7519-4ec5-a442-75b197df6574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f3db7f-1fd9-4fac-bf57-cf56f9baea91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dcd3cd-93ed-4ba8-93bb-9a7245d1dde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1557894-4bb2-4f1e-8132-49a7a6c5959b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664f5645-474c-4912-847f-52d4bcdd68b8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9763e4-baec-4e34-a7b3-0303cee3ed64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7fdec4-d038-428a-ba3f-a5e8e27a1a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907fcf64-7418-4c63-86fb-b1dbc0ebe871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e330fc-fd8d-481c-8de0-0c744620ecba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebf7fb9-319a-422b-8f92-04538cdb5e5c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5669b19-ad06-4e61-af9c-5a558dd39a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a95ae4-d008-4f63-b304-e5ef62ec8755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde7c1e9-de9b-4fe9-8ea3-5ab496c163da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f59e92-6fdb-4164-9cb5-8c09ea690e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0cc04a-3f01-419c-ac47-0afc20e9eb7d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468a7909-03af-4a22-932a-1c777b52e272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8269b7d1-859c-49b6-b401-439eeb0a41cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d372bc6d-77e8-4457-ae1a-ac7164445853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8331ca5-d410-485d-8144-77cbae3a56a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e1e710-22ae-402c-8a7b-c6e1dfda5bb8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5cf84d-246e-4f51-9752-97302f95301d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6668d313-90d2-4954-b90d-7494894385ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d28e5d0-5393-4be0-9831-e05e5d532bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7a6b55-0bbc-4521-90d7-3a118d1326d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23a4c53-78d5-4925-9522-90c3f3af839b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d127b125-31b9-430c-8a83-a8d3b37fcbbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe523840-8423-4003-ab32-72e5f2c57064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e1571-dbdb-45f3-8006-5a8a37a187fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259315e7-3460-42e3-9560-40343b61c130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388ceda3-3a08-452e-be5d-44a4e0a089f5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de44c1fe-f8ab-4917-91d3-457b14dbe907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2aca5a-669c-42e4-9b65-b50cf002ea18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfe6e98-477e-468a-a143-39961164cd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211ea148-af2e-4914-bb44-f1b82dc3c345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9220b60e-92ca-4146-9755-5873ad40f989",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29837657-0f08-4d4e-a8cc-978d03e8ed42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59e279c-7ff1-4ce8-9322-9b7e1d4074cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff201b3e-c0d2-4596-9424-12c7251cde55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0c1e7c-1801-4f17-9033-c3a1c0f95fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1a4464-b202-4943-bba3-b6f673c40df9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec80c24-c1d1-4f61-a1f4-3f38a9d7912d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3d1277-5341-49c9-a991-1f8d33c89024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493c8419-8199-4ef2-b4e5-ae472aabf406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8329af0-482c-49db-a7a6-37a0684a232f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c7ae3b-5050-49ab-b1b4-9a29eea397c5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92cd6b4-5ccf-403a-b206-7582ea50386c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f61c787e-dd91-45c9-930f-2e4c8b9c7f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af66c5e-a2b9-4b8c-9216-cebb513ac456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd82c21-c7f2-431d-a080-4731ed7422c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5dfe7c-4691-4e1e-bb10-26219eb13270",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020696ac-12cf-4dea-bd5d-39aa970b0bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd017109-f370-4391-8657-71304fef0e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84021db3-8521-4fea-960c-877f5449c5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56000dac-6aec-45ef-bacd-5e6fae6815bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee46f055-876b-44e3-a409-037e387dcb68",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5944243d-db49-4a77-9702-def68809b551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db10240b-c598-44ed-980e-e7a7e2a201f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d90a22-6c33-4205-870b-8294527ac723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2295b97-14fd-451f-acb1-22037829929f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e62aa4-60f6-43f4-b1aa-c4a0a4c0b4d0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bfe166-9c0c-4bba-9b11-d3c301a43512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d5b69a-98d8-4043-b44d-06491b22812e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4084b169-d9aa-4887-9577-3bb4e4331b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2547e8c-308b-43ec-bae7-e79dc10cc5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb56224-a231-419c-95f1-eb6fef6964a2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18972dd-5527-4182-8d39-9df8d45b9bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f643e6c-01be-43e4-9bc4-004916788b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a124a87d-7481-476b-bdfa-f2fffe138c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e68e22a-da91-42c2-a3db-d58f2c2e9ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f06e8c-abe7-45df-9e1a-305d35492a0b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e921e00f-ef88-42fd-8c44-3ce124172006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3502440-6a78-4af1-b738-f9ffca93e63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ac29ff-895f-4afc-a188-61e971c3e677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc6c8e9-1586-4fae-918e-102689c7ddc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28615a3b-b7e1-4ad0-aef4-226ec295ef21",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7671e1f-dbc3-45f4-a83a-504cb8cee4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a57e884-d2ee-4745-8995-b51a1e8af88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19db5a2d-1a12-4379-ac32-791a263fb8e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6440de26-de6c-4285-a9d8-5135bae6d217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7f1459-da4e-41df-9011-66f7605ebcce",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a9123e-6841-4c27-bbe5-dbd9fc787b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7a089e-6f58-4a0e-a1a5-705c54607c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b812707-7b1f-41c0-8ca8-edb222343ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3bb193-f830-43f9-bbd0-de2ada49dbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb8161e-9806-47a1-a61e-a45d8a8acb83",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccca5344-17ec-4c4e-a903-799ff87ec370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b029d6-4ef1-41ff-9ac8-d7e2f8211d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1409d38b-8754-48a0-9f17-8982341e16c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778d27a7-a6c2-4c0b-af2b-844927b0a748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b19211a-33e1-4a2a-9fb5-0890b9eda394",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0385b1e-5231-4298-bf78-fd8ed11023e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249abb40-98fc-4e9e-8eda-d81ee1a894b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837743b0-d12d-45c9-8a3d-0a400738c0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff68d63-2100-4e7c-adbe-6959ab709827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc33ce7-800f-4c5c-9bf5-156712fe7f28",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff250470-881b-450a-89fd-3bc3281d2016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f63b9c-9508-4faa-8900-978db4ffc3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bbe4e8-8b60-4bc6-922b-5acdf3065e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4ae04b-440f-4f86-976b-fc9927820b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebb1caf-77cf-4bf9-a290-fa8ee2bf4578",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fcfd2d-87f8-4ac9-9188-5478054a87aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5bcdd8-7e21-4ec6-8114-01f2e146aea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fc3bd8-8d83-4375-80b2-c762d53151d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5d2c3c-52e0-4a85-bc26-0713bdedf67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d60a342-d3e2-49c0-8d1d-16651008d40e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c60693f-2313-406d-9502-52cd53647201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "defa5730-5fea-473d-908b-4b9862f56310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067c5d3e-c038-4c98-97a7-347948f8bf93",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a02cdd-edd6-4204-9265-69208b5b8b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d342e5-a912-4849-986f-7bce8c68cf54",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70159eb-b9e8-4bb3-b765-61e6f6181e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d643910d-99fc-431b-96d6-1385d51d8521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98d72a0-636d-42db-9128-82c04c4b8a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5899b43-1221-4122-b615-f6265f2ceec4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "453da5da-cbc1-4125-8329-da572e705d48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0190386c-00a2-4391-9a0b-b16765be6368"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0c98b72-c161-4148-98de-2230347a5fdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d48b946-a8fe-4d8a-b992-30a00cb03ba1"
                    }
                  }
                ]
              },
              {
                "id": "008856bf-21ad-4ab0-9628-82ddbca0dd79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "835eaeb6-1748-49f7-aa22-73ade4609dd8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fd3687-6711-49a1-80dd-00d2d7fba463",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "350e563e-c73b-46b5-b12e-ea2865335d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742bb045-6f68-441c-8ee7-b257dcf79301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53d6c1ca-7af3-44f1-9292-298d772da538"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd815ba3-19a8-4bfd-9659-f3cbfffe454c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e62869a-0c05-47bf-a928-1e020adabb6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa977501-1933-4b65-8c0c-1fe8f8ffd057",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d19f84e-5c5d-41e4-b914-5782fbff8d7d"
                    }
                  }
                ]
              },
              {
                "id": "d0a8de74-4759-4209-a9f5-b6f57c1fbd44",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "de6c7931-e869-4971-b674-46beb6c76fe1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853800ac-4c43-4db5-a312-9147bec49372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4cf00ab0-c3ff-4de6-931f-d2eead197fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6c57e6-1c58-4acd-be48-0df2ff2b1a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b84266-093d-4bdc-9a3c-1f08516f52ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "03d8d147-2f6d-43d1-9958-f436c778d236",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cdc2f641-b9c3-4e0e-ba5f-64e3c53a1243",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e59303-1bf3-4348-ab00-381745bd761a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5d378b8b-8a00-401e-9b62-4c308e70e42c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c32a00ac-a89f-4402-b0c5-64e51d759525",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0aeb6971-fa59-4ff3-84e2-f365f61db3c9"
                    }
                  }
                ]
              },
              {
                "id": "95b8aa7f-4c70-4b7f-99df-a420540baa9c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f98798ef-91cc-434d-b7fb-93998dbaf47e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6993f39b-0aec-4a99-9c63-cf23c9bb009d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1918d08-ab6c-4cd1-9ce0-d8a9dc612434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "208fdcbd-a30b-4893-ad75-2af66c07de92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9d7dc27-268d-4c27-beb3-2a7d5ff5448a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bbe4ba15-a784-43ea-a8bc-3ac67d5333a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38ba9e1d-d896-4f40-a4c8-d82888f3a146",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29814aff-8f84-498a-9185-c962f1bfcb1b"
            }
          }
        ]
      },
      {
        "id": "aaf18144-87c2-423f-b2b1-f92bf6c36218",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d63e76fb-8f75-4507-ad11-5ae3ecf221d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8a02ce0-a889-47a9-b44d-aa9106281b65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb73715e-af10-44bf-9147-3a8e56ab1852",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6b225f-eab7-444a-a254-3c6e8ab1ab8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6d11043c-4672-4f8e-a32b-22e7567484df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbd445e-96bb-47e0-9046-3b56e442b3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c40b58fd-7826-45cc-8b70-22668c8a2435"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "094d687b-3f36-414c-80bc-23c81ef15ba9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3005aadf-2617-4052-b8a1-8a81d6c95f88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "859891e2-440f-44d9-becf-b245cb0c2348",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e58263c-16fb-4ffb-99bc-e7308dedc37b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0a57341-f059-4899-8ba0-a2091d2ffd4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "af900847-2b5f-4019-aff7-357fae34af19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52146092-befc-4ebe-b343-5e2194035fb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a9cc770-003b-43ed-9db9-c26dc4f6813f"
            }
          }
        ]
      },
      {
        "id": "3976eb7b-ed41-470e-8d59-162acb8d434f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "545a5998-7c3a-4839-8d25-63974c986107",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a489311d-a83c-41b9-acc9-d93b218160a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a7b8ab1-0c54-46a3-8ab9-f7a21e3527b6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70307e51-3b74-4704-a812-21e4b9af81f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ed6e6da-e3bf-4113-9d6c-c3ca7dafaf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61b3117-d458-411b-aa3d-b1c07830b6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94bdf7fe-6b72-46f7-a522-dbed06bb57ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "387b2450-fbe8-4189-b907-c5e19c8e600a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8845ef2c-d553-491e-bdf6-5f1365c1cc57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3e3af28-3a9a-421d-ba64-701043c278d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19cc4b8e-7703-4da8-ac5e-0c3a5d49e0f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "458fee31-af59-4415-a869-7c62a73a9592",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fae823a9-5e16-4a7d-9e0e-caf77a37bdd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e88bcc99-2863-4780-b1b0-eccbd27acb76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c0a31a0-b874-4c51-9c30-bc14f6ab5950"
            }
          }
        ]
      },
      {
        "id": "43c63546-821c-4496-95d3-e97632caf0b4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9a46debf-17c9-4657-9f09-25cd46b881ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d74f907-38a4-4703-a1d9-8adbd9c96045",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c5e0724-9742-4507-a6b4-888197af8c45",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe03733-1f96-49e0-9d7b-11e9c1f0c92d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9550a95e-7598-4cf0-8d1a-41ab30fb3fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5572d2f5-ff7e-41c3-81cd-08fc82528634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1b5e8ab-19a2-4eac-a0c8-d79f5fb5c1ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec1d9bde-c1cd-4d7b-9801-739f03ee6945",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bb37223-d7d6-4568-a456-5aff6be95254"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0111d94c-2772-4409-ab69-68cbdffff12b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb2f175e-4ec3-4de1-9d9d-6c4900d46e29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40ff20e1-cb0b-4c5a-985e-7014f74d8b49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68ca46bf-03e8-4841-98fd-c3f8b5c1417f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cea42537-a38f-44b0-92d0-0ccb53f30880",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36b84b32-8650-458d-81f7-9d27ba0d2826"
            }
          }
        ]
      },
      {
        "id": "f6f64b7c-0299-4991-b690-8602e8817d70",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "324acbc0-273a-4b86-ad3f-035d550c4c0b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2aba41da-7c81-43a3-bba8-e1959ca27037",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aa48fe00-83a2-44fb-92ca-ead4602c614c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da2d4360-bb81-4e57-a0b3-fa2b6486c42d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24b5a84d-eb1d-4b12-ae65-9576e767b1c3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 224.29929577464787,
      "responseMin": 16,
      "responseMax": 6733,
      "responseSd": 705.2409576232526,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689122926036,
      "completed": 1689123005135
    },
    "executions": [
      {
        "id": "ded97768-7ecc-4271-8a17-1b29133b854b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22eb9aa4-f107-414c-af28-1e6de8513ae4",
          "httpRequestId": "02116568-860e-4036-9c74-cbd622d207f5"
        },
        "item": {
          "id": "ded97768-7ecc-4271-8a17-1b29133b854b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7bec6336-3496-4464-8c5c-0f4b34da9e54",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "93e72f83-b2d8-4f71-8ddc-ed25d0647c51",
        "cursor": {
          "ref": "061e4f76-a77a-417d-95ce-48bed23d6c48",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3eee4032-e461-45a1-84d8-6b6c8cbf99b5"
        },
        "item": {
          "id": "93e72f83-b2d8-4f71-8ddc-ed25d0647c51",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "68827894-56b1-4e10-a6ba-dcda02211f7c",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "ca30724c-01c2-4fc9-9364-49a4ed1b3c24",
        "cursor": {
          "ref": "6a885165-5639-43c8-9c98-d76b64daec88",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a130705f-601a-4594-94cd-b1436bf59e0f"
        },
        "item": {
          "id": "ca30724c-01c2-4fc9-9364-49a4ed1b3c24",
          "name": "did_json"
        },
        "response": {
          "id": "bd4f15f4-d763-4327-997a-6c009410e41c",
          "status": "OK",
          "code": 200,
          "responseTime": 362,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dee649e-ac69-4af1-86ca-d00a48c47e44",
        "cursor": {
          "ref": "07e2be13-0503-4f2a-aefa-f1b4f9efe91f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c67b56b0-9e4d-4759-87e4-a76d1785fed8"
        },
        "item": {
          "id": "7dee649e-ac69-4af1-86ca-d00a48c47e44",
          "name": "did:invalid"
        },
        "response": {
          "id": "6d3e004f-ccbd-4701-aa95-3dd990ca9fd4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 623,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dee649e-ac69-4af1-86ca-d00a48c47e44",
        "cursor": {
          "ref": "07e2be13-0503-4f2a-aefa-f1b4f9efe91f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c67b56b0-9e4d-4759-87e4-a76d1785fed8"
        },
        "item": {
          "id": "7dee649e-ac69-4af1-86ca-d00a48c47e44",
          "name": "did:invalid"
        },
        "response": {
          "id": "6d3e004f-ccbd-4701-aa95-3dd990ca9fd4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 623,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85203557-5646-416a-8359-3b97f615c1e8",
        "cursor": {
          "ref": "810f3242-606f-4cd2-94a5-b37918bcf995",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a8f45f86-a02c-42d0-b6b8-2836b11bbc0c"
        },
        "item": {
          "id": "85203557-5646-416a-8359-3b97f615c1e8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "038caa27-acc3-4d66-bddb-a16e98a3c8c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897e1ce0-489a-49dc-b93a-71bf0871ad77",
        "cursor": {
          "ref": "61b3e9f4-b7f6-4859-8a2f-49be15773676",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4796a2fd-b4de-46c4-85ad-4f4e881fc1c2"
        },
        "item": {
          "id": "897e1ce0-489a-49dc-b93a-71bf0871ad77",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b45c361-07f9-48b1-98bc-4097fc7c969b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae9e71-d1fa-4431-b14d-0723e657018f",
        "cursor": {
          "ref": "a9b0bf00-512e-4252-ac0a-9ed09cfd8869",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c206830-d8af-4dad-b2b5-b0b7bc1103ca"
        },
        "item": {
          "id": "38ae9e71-d1fa-4431-b14d-0723e657018f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5f0023e5-61ad-4afa-a0f9-d5f88d7dd0d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761dbd9d-93db-45cd-aa9b-8f31e4dd26fc",
        "cursor": {
          "ref": "134c536d-576e-4557-a373-cc28ccafab97",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7d3db370-2166-4f19-bcbc-2c6c94508b9c"
        },
        "item": {
          "id": "761dbd9d-93db-45cd-aa9b-8f31e4dd26fc",
          "name": "identifiers"
        },
        "response": {
          "id": "3fba2d3d-b043-40a1-ab62-61d974b0a3d8",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f701a0-0286-4be2-99a6-59a50554a17c",
        "cursor": {
          "ref": "70282809-7fe4-4493-b661-5b50b8526f76",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d8753490-68df-48b5-9434-d5a00f41263d"
        },
        "item": {
          "id": "32f701a0-0286-4be2-99a6-59a50554a17c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67ac9a5a-43f1-4ba2-a0af-ac2c3b6e45b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80302448-c5af-473e-aaab-b53b8270125b",
        "cursor": {
          "ref": "93cc1401-d880-48e3-98f3-a44bf34bad36",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4b5cfab6-8b30-4039-96b9-4bbd11ad6b88"
        },
        "item": {
          "id": "80302448-c5af-473e-aaab-b53b8270125b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c07d3f39-8965-42ff-8fd8-b12e1c269b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572a0903-7807-4f76-a261-39d8356cf541",
        "cursor": {
          "ref": "21fcddb6-f3f8-40c6-828f-616a1e37c6fe",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "80107d42-9772-469f-a191-23294b1fa031"
        },
        "item": {
          "id": "572a0903-7807-4f76-a261-39d8356cf541",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "20573088-95f8-4d4b-8a43-d32876b8e4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7a073d-1075-4736-9c47-70ce149c40a6",
        "cursor": {
          "ref": "b449f903-f1e5-4de1-8fbb-ca720021ed74",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a0caba3d-a52d-4e8e-a7d1-2945e9c862b3"
        },
        "item": {
          "id": "4f7a073d-1075-4736-9c47-70ce149c40a6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "689a0e7e-9eb6-4175-8481-f24c1e6a8fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9550b6a0-ec6d-4eae-89cd-37a35df304c0",
        "cursor": {
          "ref": "d54a6399-ab74-400c-8df4-9117ce6ef588",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "05a2963c-a958-42cb-96a8-e4a28aadab9b"
        },
        "item": {
          "id": "9550b6a0-ec6d-4eae-89cd-37a35df304c0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ea66149f-5d0e-4fe7-b157-3707daf3200a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e953a66-6a6e-40f5-b3f4-59358f0772ec",
        "cursor": {
          "ref": "6c4ff5fa-5601-4183-b245-20b49ff708f9",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c841e598-9038-43fe-bc82-4ac0082f5701"
        },
        "item": {
          "id": "2e953a66-6a6e-40f5-b3f4-59358f0772ec",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6a0c85b5-e021-4a81-9560-1371fe236212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5da0fcf-c708-49c3-b6f1-daa4e9df4bec",
        "cursor": {
          "ref": "e4a1e56c-9304-42e9-b8f9-77ef09374446",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e78c63cd-b919-4832-872f-55b74c90265d"
        },
        "item": {
          "id": "a5da0fcf-c708-49c3-b6f1-daa4e9df4bec",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "470152b5-2ed8-4032-9755-d61ce04e3699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c136e5f7-a230-4632-ba57-4e9809d51e22",
        "cursor": {
          "ref": "69414378-0ed9-411e-affc-1813e1b73cab",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "90705ea8-5c6e-42fd-96e4-20df5a92f109"
        },
        "item": {
          "id": "c136e5f7-a230-4632-ba57-4e9809d51e22",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b3d4ee1f-100b-4740-b94c-7b0be13753b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1f4707-fb17-41e8-a9e1-ef0ba990d8e0",
        "cursor": {
          "ref": "a324fa24-38e3-4cc0-96c4-bb8275984d06",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7f052d5b-2491-451b-a30a-fd0f970b5994"
        },
        "item": {
          "id": "dc1f4707-fb17-41e8-a9e1-ef0ba990d8e0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e4d4aeb7-0118-4a7d-9106-29e03b363096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07339be2-229f-4336-b0b8-ba5eb91c6693",
        "cursor": {
          "ref": "eb2c933f-83b0-4e0d-84b2-d7edf074beb4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ca9e2f0c-7c28-400a-906e-3f64d48c700f"
        },
        "item": {
          "id": "07339be2-229f-4336-b0b8-ba5eb91c6693",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e557be74-7c48-4577-adc2-b2fd5b27d54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f0abca-1a62-4381-9288-b54e833e0719",
        "cursor": {
          "ref": "b409faab-b61d-4b59-bdab-b4883dc1b5ab",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bd128ab4-de53-4b5b-b4ff-43cd77da8d3f"
        },
        "item": {
          "id": "f5f0abca-1a62-4381-9288-b54e833e0719",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "82e1c34c-970e-4016-981e-52ee24c743c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52b2945-ba4f-4dcd-86c7-5b379f1efcb3",
        "cursor": {
          "ref": "aa28e07a-84b5-417f-acd2-09673ae79a1b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "443331a0-63bb-4716-99cd-28d9b439e7e6"
        },
        "item": {
          "id": "b52b2945-ba4f-4dcd-86c7-5b379f1efcb3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0594577e-0c5b-4479-9247-dec123e63254",
          "status": "Created",
          "code": 201,
          "responseTime": 881,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "06429d2b-eb63-4333-9af6-4f6f08067ef1",
        "cursor": {
          "ref": "f4ed4158-9db4-4c37-a74a-ab52b1cda560",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "49511d1d-c431-42aa-9680-76d5cb5e55a8"
        },
        "item": {
          "id": "06429d2b-eb63-4333-9af6-4f6f08067ef1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5b69a9a6-eb65-43a2-b9b6-1a97453acd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce1a177-ced3-45b3-bc44-4c7e93db89d4",
        "cursor": {
          "ref": "1351ed66-6325-40fe-9423-af983c6eb930",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "100ecaf0-3494-4053-8747-2799cc250553"
        },
        "item": {
          "id": "5ce1a177-ced3-45b3-bc44-4c7e93db89d4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6ffa0cfd-5bba-4e7a-98f2-85f64230b21d",
          "status": "Created",
          "code": 201,
          "responseTime": 6733,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "db6cd98e-cedd-40d7-8ce7-2e92cb4e9a53",
        "cursor": {
          "ref": "cdb9ac82-58ff-4444-8ffa-02f58c9253cf",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f0be1eb4-09d2-4f32-904d-a16655fee406"
        },
        "item": {
          "id": "db6cd98e-cedd-40d7-8ce7-2e92cb4e9a53",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "153a0720-61c4-4ff6-ae7b-c64dfe2205c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88d804f-6d5d-49aa-9d1d-279fa7b4ef37",
        "cursor": {
          "ref": "07d6dc3e-6d74-4696-843e-658bba0dc764",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a7535296-89c4-4e2a-98ee-ef5315f543ea"
        },
        "item": {
          "id": "c88d804f-6d5d-49aa-9d1d-279fa7b4ef37",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b7f95599-29b8-4db5-88f3-dbada0642661",
          "status": "Created",
          "code": 201,
          "responseTime": 3286,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "d0af303d-afd8-4ac4-8d42-9ba87e4e19e8",
        "cursor": {
          "ref": "183968c2-211a-490c-8489-25b9251ea5f0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "adb0e549-ad22-4413-b570-b3e49cdc980e"
        },
        "item": {
          "id": "d0af303d-afd8-4ac4-8d42-9ba87e4e19e8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "39c001d5-ee81-4737-8f9c-fdd27f1062e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4a632a-0609-4984-b2fd-7c6d37954771",
        "cursor": {
          "ref": "d318994d-b685-4196-9963-3539f75a9abe",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8da2172f-aa91-4dd8-b5c6-1d8714dfde03"
        },
        "item": {
          "id": "ee4a632a-0609-4984-b2fd-7c6d37954771",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e8f00eaf-167a-445a-b36c-afdbc50ddd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0fe632-c275-4b3b-b60d-908f71c70229",
        "cursor": {
          "ref": "8047e42e-01fc-43a2-b3d9-4c930d7e2cd1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1d4ae3a3-ec11-426b-a7ee-6801d697c4e5"
        },
        "item": {
          "id": "9c0fe632-c275-4b3b-b60d-908f71c70229",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1cb4edbf-dfb3-4cb5-9344-984bf87eba6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5674d8-9ffc-451d-9896-8053226bc26c",
        "cursor": {
          "ref": "5769aceb-882a-4f37-92a4-2b9f7aeb3244",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "52f9e3da-e56f-4b36-a8af-d802ffb7e6b7"
        },
        "item": {
          "id": "0e5674d8-9ffc-451d-9896-8053226bc26c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5a5afeda-561c-411a-bfc4-9d6fb250b509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691740e9-04ae-4f63-b34c-33e917ced30e",
        "cursor": {
          "ref": "8cee04b3-f7ad-4b44-acc3-405080cc6157",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f5dc892f-270f-4ae2-86f4-7431c206b28c"
        },
        "item": {
          "id": "691740e9-04ae-4f63-b34c-33e917ced30e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fea87982-0db2-4331-8159-7f5175548878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcfa1a4-3f1c-426f-84ae-2f79723be77b",
        "cursor": {
          "ref": "ac6f7014-5200-4c3c-84f1-509a9bf72fec",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4d449d17-e5ce-400d-8464-833b32aa3768"
        },
        "item": {
          "id": "0bcfa1a4-3f1c-426f-84ae-2f79723be77b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "de6cb438-77dd-4d2c-9cec-dfd720d46ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca6cf44-8b7d-46af-a82a-035066a09ce8",
        "cursor": {
          "ref": "5308b276-8eb2-46af-aa83-4b4a72f94428",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9437c5db-fe28-4f84-8916-fcb8b47da5d2"
        },
        "item": {
          "id": "aca6cf44-8b7d-46af-a82a-035066a09ce8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1fb14ea2-ef92-4b76-92c2-59c95110ef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757fbcf4-2436-4888-bfad-aa97cc649c01",
        "cursor": {
          "ref": "2d6fe93e-d6d2-453a-ae82-d1e5480b5f3e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "74b11098-c4cb-4657-aad8-87997ba63289"
        },
        "item": {
          "id": "757fbcf4-2436-4888-bfad-aa97cc649c01",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "84d2d824-67e7-4401-a1b0-9121e3e1127f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd9fca5-3d28-4a1a-ba48-2a67ab7303bd",
        "cursor": {
          "ref": "3338149d-b47d-4054-a155-764739caffc6",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d53f3df8-666c-43b4-99fc-e8fbe753ad0d"
        },
        "item": {
          "id": "4cd9fca5-3d28-4a1a-ba48-2a67ab7303bd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2d29871d-c5ad-4104-9b1f-27130a3f81ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b69e05d-75d2-48d2-bf17-1ebc22f2a1b6",
        "cursor": {
          "ref": "27281116-cd54-421d-8ac3-9dba9ed7fe3d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d221849d-8ab8-4fdb-8cd5-5278bbd359dc"
        },
        "item": {
          "id": "5b69e05d-75d2-48d2-bf17-1ebc22f2a1b6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0b15e172-f2e3-4d08-95c8-f94fe5a16d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c27af68-c3c7-4c14-94d1-9ff6837043a9",
        "cursor": {
          "ref": "5a483036-01ee-4ce7-9d39-caf3a9fcfe67",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c4374fa4-f6d7-4761-84bf-24678cbbd1b3"
        },
        "item": {
          "id": "0c27af68-c3c7-4c14-94d1-9ff6837043a9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9e6bea2b-637a-41fc-93ec-3b60fff089fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e000d493-0835-4f85-923b-3aaf4f8af64f",
        "cursor": {
          "ref": "990c86af-2502-4ca6-94d4-49595759b75b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "27e958aa-5c07-4e91-acdc-1f971badd3f1"
        },
        "item": {
          "id": "e000d493-0835-4f85-923b-3aaf4f8af64f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "36377b8b-aa81-4f60-ba4d-db20f03ce09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fdd3c3-0f5e-485d-8b0f-91237fd4e20e",
        "cursor": {
          "ref": "68c121b0-1d6d-49a5-ab37-1fc6045640c6",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "621e1798-7b6a-4ef8-ac8f-becb5ba205ac"
        },
        "item": {
          "id": "23fdd3c3-0f5e-485d-8b0f-91237fd4e20e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b1d3f95d-6fd1-4b55-8797-f6e04a15757b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d387ead7-3731-4290-9cf4-8d1451f0a716",
        "cursor": {
          "ref": "56dab090-32d7-4ded-8ef4-36fa77ec4d07",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f3815231-1fd0-43e0-a057-dc1d25f46073"
        },
        "item": {
          "id": "d387ead7-3731-4290-9cf4-8d1451f0a716",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c7cc10b1-442e-467c-b32b-46c1c7e24760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538de970-a965-456c-987f-a268c06a8f66",
        "cursor": {
          "ref": "b4c43e70-0ce5-4a2c-b745-bf83192e2b0f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ad3a8ca2-213b-490d-b571-c2339812d04c"
        },
        "item": {
          "id": "538de970-a965-456c-987f-a268c06a8f66",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a66831af-f0a8-48f0-ac5f-0431ace54068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95b9203-72a0-47f2-8de3-f5ba2291422c",
        "cursor": {
          "ref": "4dc030ff-f80a-4bf2-ac27-24a4e68195e4",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d15ec678-21c0-4377-a71a-89aac0f0e885"
        },
        "item": {
          "id": "b95b9203-72a0-47f2-8de3-f5ba2291422c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5b8e2803-5595-4340-b5e5-b33d9826aa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287ef305-00d0-48c1-aa61-9b8c3a5a5f3b",
        "cursor": {
          "ref": "7053dd02-f6a6-4e66-b254-11c8b5520570",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "03f37835-ea09-45f5-b0ec-a3c51f4bd863"
        },
        "item": {
          "id": "287ef305-00d0-48c1-aa61-9b8c3a5a5f3b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "08629576-27c5-4e39-a92f-a8a416f45c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77194596-5cac-4f86-82d3-43bb3c1cc409",
        "cursor": {
          "ref": "5851ff7e-e93f-4e76-ac4e-4a245283324d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b7a832ad-1943-432f-890d-dd83155226d4"
        },
        "item": {
          "id": "77194596-5cac-4f86-82d3-43bb3c1cc409",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a1442c55-2055-491b-a35c-5d1cb79f2e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8794d9-1c03-4314-95d8-420fdee800f2",
        "cursor": {
          "ref": "271d4e4b-b165-4e05-81ad-f679856472a9",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a830e6bc-1a7d-4a2e-b765-450681bbdad0"
        },
        "item": {
          "id": "cf8794d9-1c03-4314-95d8-420fdee800f2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "59bd24fa-de7c-4507-9bd5-8d860eb1f691",
          "status": "Created",
          "code": 201,
          "responseTime": 2798,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "499e7e46-9956-4fd8-9548-c4fc580a30f0",
        "cursor": {
          "ref": "caf7950d-bd7a-4a2c-8c9d-372da93291cc",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "28dbf849-88df-4c7f-9cd6-be9971897852"
        },
        "item": {
          "id": "499e7e46-9956-4fd8-9548-c4fc580a30f0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c2014e8f-eb70-4130-b99d-0cba7ec0d274",
          "status": "Created",
          "code": 201,
          "responseTime": 2722,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "a97357eb-1289-4a1a-ba38-0738d81257de",
        "cursor": {
          "ref": "f708c161-e386-40f4-835a-2cca6708e16f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "535bb03c-ef7a-4c7d-9775-acd4c9a34b05"
        },
        "item": {
          "id": "a97357eb-1289-4a1a-ba38-0738d81257de",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "63d5be67-b07a-443b-8152-18474372db48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29c1524-73fa-4eca-b59d-e40126f10ce2",
        "cursor": {
          "ref": "9f2a4d32-dbf0-441a-ac32-0cd337060d6b",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "50ffb1bd-fe1d-4f4b-8f2d-6edd40dac411"
        },
        "item": {
          "id": "f29c1524-73fa-4eca-b59d-e40126f10ce2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "de77c6c8-85dc-4f94-aa1f-58e987740192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1453e93-61ae-475a-ae72-be851370fc19",
        "cursor": {
          "ref": "85734117-3d1c-4636-87c3-bdfe2f88359f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8c85c652-9da6-47c1-a680-d1e657efb116"
        },
        "item": {
          "id": "b1453e93-61ae-475a-ae72-be851370fc19",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a51c11a9-490c-4be7-85e4-a568aa474fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782a3ead-ca3e-4271-a789-be9dcee485c0",
        "cursor": {
          "ref": "30776efa-b2c6-4f94-ba00-5074e9166866",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f0096973-03f1-4440-9e1f-88625aceee00"
        },
        "item": {
          "id": "782a3ead-ca3e-4271-a789-be9dcee485c0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "caa5f50f-6323-4a90-9a59-380e9297643f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879a0899-63ef-4ad1-ab45-8741e12b9dcb",
        "cursor": {
          "ref": "1de5e197-7972-4aa4-8410-5641cc70cc4e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f42b34a8-57e3-4d03-9a4c-98bc5b5e5fe0"
        },
        "item": {
          "id": "879a0899-63ef-4ad1-ab45-8741e12b9dcb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e183a880-0e8d-4680-89a4-1adae08f3ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7fa37c-5aa6-458e-adcb-65342fd2d477",
        "cursor": {
          "ref": "91f83393-2531-4379-8b30-5e5579965e1b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bb7a6e86-86b1-49d4-b460-e03b1597d622"
        },
        "item": {
          "id": "9c7fa37c-5aa6-458e-adcb-65342fd2d477",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d4c716e5-a7d4-488c-a2b9-6370eb3988ef",
          "status": "Created",
          "code": 201,
          "responseTime": 3011,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "c402dc63-10cd-4946-b184-6790b455443e",
        "cursor": {
          "ref": "800c3ced-8678-4195-81db-cd4c4c6a9349",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "80b2e2c9-8565-439d-ae0a-b7cbefe74a55"
        },
        "item": {
          "id": "c402dc63-10cd-4946-b184-6790b455443e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "88a12874-05fc-475a-887b-2e7c07ea8f54",
          "status": "Created",
          "code": 201,
          "responseTime": 2567,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "371e4eb3-09ef-4079-b29f-febd481acbc5",
        "cursor": {
          "ref": "1f4908f9-c017-4216-baae-328c80cc7cd8",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f0017906-88f0-4055-bf66-3bfa68d11377"
        },
        "item": {
          "id": "371e4eb3-09ef-4079-b29f-febd481acbc5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f0c2ee86-ee4b-478d-b48e-9d207c454e85",
          "status": "Created",
          "code": 201,
          "responseTime": 2247,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "6f38e3d3-6b26-49c0-a49f-8c952dd976b9",
        "cursor": {
          "ref": "4fd536bd-a149-40e2-99fc-8e880328a1cb",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f1c7ab3a-8d97-4eaf-8269-b899b565b163"
        },
        "item": {
          "id": "6f38e3d3-6b26-49c0-a49f-8c952dd976b9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4620731a-473b-46eb-bf4b-a9b4b0591ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce67ce6-0e18-4557-a3b7-a9b72a17d755",
        "cursor": {
          "ref": "721940e1-fe62-4d46-bdeb-45d405913762",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6d732b14-c15e-453c-b928-8a303e1d9570"
        },
        "item": {
          "id": "9ce67ce6-0e18-4557-a3b7-a9b72a17d755",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5843f0cb-688c-4bb3-9dae-22339bef7510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ecd6bd-78a6-4200-be02-3e5bf16bf242",
        "cursor": {
          "ref": "805ebeae-b8b9-4cb6-989d-eb71d1e94c9b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e1425ee5-b031-4717-b8d9-dc181a8313ae"
        },
        "item": {
          "id": "e1ecd6bd-78a6-4200-be02-3e5bf16bf242",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8786f522-6d51-431a-8225-289ee0f1a283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b1925d-d80d-4be7-a8c3-d85a393d2b4e",
        "cursor": {
          "ref": "b282a075-2dda-4a7a-b7d1-b5076fda9c31",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ab5864f3-6435-4735-90bd-443ca05fe83a"
        },
        "item": {
          "id": "54b1925d-d80d-4be7-a8c3-d85a393d2b4e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4ead100b-bad1-4cf0-8e3e-f65c51516ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8a0fc1-d829-4d39-b058-762dfe0dbd0b",
        "cursor": {
          "ref": "35915c47-d60d-4b77-9a53-79e7e46b67e3",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f322fd9e-00d0-4ed9-9fd9-84ef22aea91d"
        },
        "item": {
          "id": "da8a0fc1-d829-4d39-b058-762dfe0dbd0b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2821f711-1cc8-43af-ba32-50e89798dc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4953ad72-b1b6-412c-9c5b-fb9d7c350a59",
        "cursor": {
          "ref": "4f6d3cdf-fd6f-46f9-9392-2f4d5f6dac0f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "40853fc4-aeb1-47f9-bd2b-465572ee2858"
        },
        "item": {
          "id": "4953ad72-b1b6-412c-9c5b-fb9d7c350a59",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9f8fdbe0-e4b4-49fb-b246-004f18baf3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f976e9c-806d-46bc-bf3b-048ad1f33fa6",
        "cursor": {
          "ref": "3ad8ef6a-1156-4769-91fd-781ea82978be",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "991c8afe-ce8a-44fb-ab80-78549f5b65d6"
        },
        "item": {
          "id": "5f976e9c-806d-46bc-bf3b-048ad1f33fa6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ecbca79f-25f4-4293-96f6-a101d6ab5b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe7e0ce-7656-4a22-b6e0-426b6c678d7b",
        "cursor": {
          "ref": "3e0284ac-1ac9-4ea5-b18c-8b3e990bd3d8",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3600ccc2-ee34-4a8d-8cda-1d4509f5e869"
        },
        "item": {
          "id": "9fe7e0ce-7656-4a22-b6e0-426b6c678d7b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5181aebb-30cb-4b78-98e4-0365d7d88ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207dd668-9f1b-439b-a4c0-e2931ec8ac31",
        "cursor": {
          "ref": "b7bddb84-5803-440b-b606-d25bb0f58741",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "250a61a3-c639-4b4e-8626-64c6fb613e1b"
        },
        "item": {
          "id": "207dd668-9f1b-439b-a4c0-e2931ec8ac31",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3231feac-08c2-45b8-9310-5a0994715540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f814dca1-1d7a-4c83-8d20-8d6b648d836e",
        "cursor": {
          "ref": "487d2694-4d43-492d-b938-0f9803c4d3ac",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e73b1e66-221e-4567-9f1e-ca34e4a4cf5a"
        },
        "item": {
          "id": "f814dca1-1d7a-4c83-8d20-8d6b648d836e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "72c3bdd3-2de5-45bb-a779-cbb540a67984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b6a699-9e1d-4df5-94f3-298318db5b47",
        "cursor": {
          "ref": "e6cb0102-ee0a-4622-a4dc-c9626b9280fa",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0aa45677-2237-47ab-baab-6eb21f72d044"
        },
        "item": {
          "id": "e5b6a699-9e1d-4df5-94f3-298318db5b47",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "28e307e1-f185-4619-b64e-ef3f7309d74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1a6555-e423-4899-bfb2-46fa6041c4c0",
        "cursor": {
          "ref": "8667d7a7-badb-4dca-bfa4-0129ce0b1c6a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "10dae730-6228-4f5a-b98d-3fda359aefb5"
        },
        "item": {
          "id": "5c1a6555-e423-4899-bfb2-46fa6041c4c0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "deb21e22-1b9a-423b-95bc-9544a4e08e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3625008f-845f-49b3-99af-f1fae90cb4b9",
        "cursor": {
          "ref": "00250c5b-a398-40a9-b2c8-03395683b5e7",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "578331a4-531f-480d-8d73-7587312237aa"
        },
        "item": {
          "id": "3625008f-845f-49b3-99af-f1fae90cb4b9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "47f145c1-cedb-4589-aa5d-575dc3574be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384faef6-3ec7-4530-b269-9b7b834f5088",
        "cursor": {
          "ref": "9498cdf8-d7ed-4d07-aee2-e57d3cf2dafa",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b3c40060-f6d7-4af1-9a18-5044ae275234"
        },
        "item": {
          "id": "384faef6-3ec7-4530-b269-9b7b834f5088",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b85dc9a6-8caf-4f95-816e-5aaf93555647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779cbedf-fd1d-422f-aeff-75f347f53155",
        "cursor": {
          "ref": "e32747ed-9036-43cd-87d7-1f4dbdd2f893",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bcb48849-09f8-430e-b8fe-ef291a6aee22"
        },
        "item": {
          "id": "779cbedf-fd1d-422f-aeff-75f347f53155",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eeaf4fbf-81d8-49bf-9f51-569fb33af3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b09de3-7bf5-4c8d-b387-a4fdb32af7e4",
        "cursor": {
          "ref": "59b7dd77-2b64-4c07-bb9d-f3fe16f173f1",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e9e58ab3-2c6c-491f-951c-ca46923c0b55"
        },
        "item": {
          "id": "29b09de3-7bf5-4c8d-b387-a4fdb32af7e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6216c63f-b789-40ac-a3f7-fc2f76721aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02f07fd-baed-4041-819e-85d72c5c1cc8",
        "cursor": {
          "ref": "2b0a3915-19ab-48d7-98b6-6632a83a625e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "03f543d3-513b-4c71-bb71-6687bcf3883c"
        },
        "item": {
          "id": "a02f07fd-baed-4041-819e-85d72c5c1cc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "efb41b15-c657-46d5-9599-b45c067f53a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d085890-2e71-4306-ab4e-bf19b7ccca03",
        "cursor": {
          "ref": "9f68dd04-6f71-45d5-8f09-686eda86a646",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "46200fb8-c2bc-44f3-9977-211b7184d04e"
        },
        "item": {
          "id": "8d085890-2e71-4306-ab4e-bf19b7ccca03",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3516a414-6420-4b21-9f75-e2c0f061efb0",
          "status": "Created",
          "code": 201,
          "responseTime": 2864,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "91d5f8a4-2150-498a-b0ad-2d00f749d003",
        "cursor": {
          "ref": "cc32d93e-6a36-49f2-b300-928aea934fc8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "26626623-cb5f-40a2-9be2-f0fdba6b174d"
        },
        "item": {
          "id": "91d5f8a4-2150-498a-b0ad-2d00f749d003",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9af90f6a-f661-4f50-895f-9c999a301e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9899d087-fda9-41e0-b89e-43fdd7656e48",
        "cursor": {
          "ref": "b02107e2-6a5c-4f7a-9dbb-2305944f9e6b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4f2ba596-51ca-4c4f-9e90-57a72c8506c4"
        },
        "item": {
          "id": "9899d087-fda9-41e0-b89e-43fdd7656e48",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "10a93c62-7311-4dc0-87ff-423bcbf2cabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854b5726-11dc-402d-b2c1-2889b59fd569",
        "cursor": {
          "ref": "f3943e8d-d5d0-4a9f-9938-ef5366eaec52",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4ffacea5-a972-4433-a9bf-9088523bc1c7"
        },
        "item": {
          "id": "854b5726-11dc-402d-b2c1-2889b59fd569",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bca76378-9f7e-450f-9d44-949d96fcf4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f8a58e-885b-4620-9d8b-a96a08dd3b89",
        "cursor": {
          "ref": "a8f70fb8-9934-4f30-afb6-b63fcafebf21",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "795c3f3a-7b71-4adc-9e19-e001a1bede4c"
        },
        "item": {
          "id": "23f8a58e-885b-4620-9d8b-a96a08dd3b89",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b1b87101-2973-40f2-aee9-9486d5dab22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01d883b-bcd2-48a4-9c23-fae4dc29babc",
        "cursor": {
          "ref": "16a674e1-d57f-4f2b-a34c-0d8f856c98cd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ba650e9f-5faa-4e99-a642-8440eea0401f"
        },
        "item": {
          "id": "e01d883b-bcd2-48a4-9c23-fae4dc29babc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e5453940-40b6-4ea1-9d6c-75937ac6fc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9352b4-2054-4fdf-bb2d-09f13f3b777d",
        "cursor": {
          "ref": "81aadc87-1e8b-46dd-9761-1394ac20d569",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "585a6533-b7d3-47e6-8a28-6bd2e6142252"
        },
        "item": {
          "id": "ca9352b4-2054-4fdf-bb2d-09f13f3b777d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a00324d0-b97b-49e4-8947-e37d7698181c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec96038-a402-43bc-ae7f-be00f29c8c43",
        "cursor": {
          "ref": "fd6e9781-e9dc-45e8-947d-28c0eebc73ad",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7d8d1c7a-e491-4eeb-a03f-31621b9d339f"
        },
        "item": {
          "id": "dec96038-a402-43bc-ae7f-be00f29c8c43",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "81cc9e82-4d64-401e-a007-98cc98bf6e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976dcc10-d9ca-4f70-bdfa-fb47d45f350c",
        "cursor": {
          "ref": "c8725546-f599-472d-9250-7aa38da508b4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "43c7ed57-ca20-42a9-b9eb-f2a55999c143"
        },
        "item": {
          "id": "976dcc10-d9ca-4f70-bdfa-fb47d45f350c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f9c8605d-fe9e-493c-892c-540931c0dd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121c3cfb-02d0-4f01-b9f1-a0e846cbee36",
        "cursor": {
          "ref": "fcd680f2-1d10-4866-b1e4-c594779d680d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f8a5f065-81b9-4f85-b15e-ff7055b5e02c"
        },
        "item": {
          "id": "121c3cfb-02d0-4f01-b9f1-a0e846cbee36",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ff63d2c4-571c-4af8-9284-9c2fc5cd88db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a51e6fe-3c11-4313-a5e9-de76ad3176e3",
        "cursor": {
          "ref": "70a6709f-fdf3-4244-87b8-aeabb4673e4d",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "033611ef-7ac1-45ab-beeb-96948f9ccf7b"
        },
        "item": {
          "id": "6a51e6fe-3c11-4313-a5e9-de76ad3176e3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e3fc6dfe-7688-4009-ba7f-41542d1c6d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5ac5ec-397d-4e9f-a558-c60ce2e3c0cc",
        "cursor": {
          "ref": "bc34ec77-f026-4a73-9787-e882d3f95073",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b4aadbc8-a62e-4217-bdd5-f3138a5a6366"
        },
        "item": {
          "id": "2d5ac5ec-397d-4e9f-a558-c60ce2e3c0cc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d1b2780d-dc24-4c96-89c4-80e4f518d2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475304e7-b720-4006-8867-1da35c499ff4",
        "cursor": {
          "ref": "5006e799-2c20-4e25-b365-763f7ac24eb4",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ab461634-9226-409a-a996-ee2ccf74a39a"
        },
        "item": {
          "id": "475304e7-b720-4006-8867-1da35c499ff4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "89bc148b-017c-4095-a2e4-e95fbfca95e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793ddb21-3a31-4b58-a11a-40bb42447421",
        "cursor": {
          "ref": "50007c0d-85e2-4455-bd81-817d10b9a607",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6ca77049-fc1a-4bc0-9541-ec689a746355"
        },
        "item": {
          "id": "793ddb21-3a31-4b58-a11a-40bb42447421",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5deeb35a-7682-47a4-98df-72103c07b441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d21e53-d9d9-46ee-a00b-0b406fcf90dd",
        "cursor": {
          "ref": "29429440-62a3-46eb-bf22-6fba250580ea",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0ee01300-35eb-40b4-afb1-a2ad2cc7b09f"
        },
        "item": {
          "id": "49d21e53-d9d9-46ee-a00b-0b406fcf90dd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "aefaffe6-05a0-4ce0-afaf-5b206c6190ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fffdc60-d578-48fe-ae88-a0a1486eedb3",
        "cursor": {
          "ref": "323dc67c-c5c9-4d6e-ab64-8435899c0c30",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "15701919-33a7-4bdc-b9aa-4168ff300e8d"
        },
        "item": {
          "id": "4fffdc60-d578-48fe-ae88-a0a1486eedb3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "240353d5-3cad-472f-95a3-7d484d5513e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2705a5b-bd79-4832-9714-4750ae5f136e",
        "cursor": {
          "ref": "5afcf4d1-e5d7-41f9-8b69-210cd934a790",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7d87d387-ca18-4d1a-9b57-4304ec3f685d"
        },
        "item": {
          "id": "e2705a5b-bd79-4832-9714-4750ae5f136e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "de66ee43-5783-48d8-a509-92c080636047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38263831-d8ba-45df-bcef-c77e6a885030",
        "cursor": {
          "ref": "44d9824d-552a-4e01-abaa-7f62018ce605",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "045521fe-92e0-4d35-b3ab-4b2dc61fa0b3"
        },
        "item": {
          "id": "38263831-d8ba-45df-bcef-c77e6a885030",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a103e61c-0a24-4cc3-853a-4e77f305a148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0540f7f7-d93b-44c3-8bdd-23ce0f0647ca",
        "cursor": {
          "ref": "65743681-4c96-47ee-9e6d-ad6755ad23ae",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b3aa4656-96a8-4d49-b8ee-55fff3f95b27"
        },
        "item": {
          "id": "0540f7f7-d93b-44c3-8bdd-23ce0f0647ca",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "06aee7d8-72b0-4b71-ac26-2236a9f769b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3faaf2-bf9d-4cff-95cf-a8cf9853eddb",
        "cursor": {
          "ref": "9ec983e7-820f-4df8-acbc-58cd8b6aae48",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7956c220-cbc7-48b0-9594-eb8ddea43418"
        },
        "item": {
          "id": "6d3faaf2-bf9d-4cff-95cf-a8cf9853eddb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dc69030b-ec77-4ff1-9244-6aa1b917f6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946e59db-2fe5-490c-8770-421326ad538c",
        "cursor": {
          "ref": "560ecc09-a4f0-4c8f-b9eb-81f48fdb1264",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "40d786a5-94eb-4a15-8948-928c3e749337"
        },
        "item": {
          "id": "946e59db-2fe5-490c-8770-421326ad538c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8ed5bf7d-0114-4397-95a9-63266bb36e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf9f51a-785f-496b-bf76-b9f6404afb0e",
        "cursor": {
          "ref": "5a43d8a2-3f90-48cc-b36a-41bcb963fabe",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e3c27f32-a1da-4849-8363-2640bd5caa7b"
        },
        "item": {
          "id": "caf9f51a-785f-496b-bf76-b9f6404afb0e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1430ac90-cd70-4429-98ee-e1a71ea1d145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc46e5b-d334-4158-b8bd-b9cecf405360",
        "cursor": {
          "ref": "d13b8f17-6b09-42af-94c5-06988b562e14",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b030e20a-2066-4fc5-81f6-3d467e013b31"
        },
        "item": {
          "id": "3bc46e5b-d334-4158-b8bd-b9cecf405360",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "88f86b2d-55a5-4fa0-ac68-5cb7bc570e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1d5b60-29c9-40b8-ae5a-9479a7402579",
        "cursor": {
          "ref": "26a412eb-9c9a-4e3d-821e-f754bfb822f7",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7796aeb1-9789-4db6-9946-0685b8db4dd8"
        },
        "item": {
          "id": "6b1d5b60-29c9-40b8-ae5a-9479a7402579",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "936e5581-bc68-4603-9c45-3917158a3f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0914af-df88-42f0-b82c-9c3a18cf8244",
        "cursor": {
          "ref": "575471fc-3953-447d-927b-886da9de5000",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0fc42323-530c-4a6d-a4b8-1627dd14f3fc"
        },
        "item": {
          "id": "8a0914af-df88-42f0-b82c-9c3a18cf8244",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f3983c21-c093-45e2-8f0d-4db87b784ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e3fc66-076c-46f4-a516-c697f3f0dc82",
        "cursor": {
          "ref": "00255bdf-1937-4513-be80-8f5a48ce8e95",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6fcfb39a-b3ac-4b5a-9a86-24eb50ec8d4c"
        },
        "item": {
          "id": "a1e3fc66-076c-46f4-a516-c697f3f0dc82",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "85ca2eb5-439c-4a6e-9247-f778a80046e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48f03ef-84a9-4ea9-bff8-233746c673c2",
        "cursor": {
          "ref": "4a77e14f-350b-433e-836a-4ddf6fd4fc06",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "63bfffda-f1c1-48ad-9a3a-2592f54c1714"
        },
        "item": {
          "id": "f48f03ef-84a9-4ea9-bff8-233746c673c2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e416087d-597a-4faa-b799-771a5a15a088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c32fd53-3dc0-4ba8-b5e7-b8bc8a679923",
        "cursor": {
          "ref": "0dc113a7-7087-4edf-8c1d-a2b62ef746ac",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "26afd045-3ac8-4051-a107-441710c40a3f"
        },
        "item": {
          "id": "4c32fd53-3dc0-4ba8-b5e7-b8bc8a679923",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7e5f2944-bf65-4041-b01d-a54349549b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca93f74c-6f54-450e-b015-621000e6fe65",
        "cursor": {
          "ref": "8c521d83-f527-4d13-a46a-0b7c10120591",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9d28c08e-7e3c-4373-82d5-431745c46f08"
        },
        "item": {
          "id": "ca93f74c-6f54-450e-b015-621000e6fe65",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d54eacff-ae53-4a50-92f3-cc31d88f44cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e390c43a-6f27-4107-9672-d83b68cc2197",
        "cursor": {
          "ref": "9156c38d-80e8-4671-9c41-b36406f23c19",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "32afaedf-523e-4c28-9e56-feffda0d8d37"
        },
        "item": {
          "id": "e390c43a-6f27-4107-9672-d83b68cc2197",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f5b620a7-e304-44c3-9f2b-ae40c109c59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9e1622-cace-4a65-920a-3eafb288d4cf",
        "cursor": {
          "ref": "799485bb-5106-4da4-ab96-b1b2df1c1408",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d4ffad0a-0f38-4ef8-8f33-8e3622fe6fbd"
        },
        "item": {
          "id": "ad9e1622-cace-4a65-920a-3eafb288d4cf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3ae7074c-ce94-47bc-809f-6d9aa51a9677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad62e6d0-2e71-4142-82cf-68bd3c04460b",
        "cursor": {
          "ref": "9d20e6ff-86eb-4af4-982f-5711182cb2c7",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0d534265-aedc-4ae9-b984-3e3aaa47ae19"
        },
        "item": {
          "id": "ad62e6d0-2e71-4142-82cf-68bd3c04460b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5aa2e02c-d1ef-4552-b6a6-096a0dfa14c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ad66a9-5501-4fa6-969b-4d194a42811e",
        "cursor": {
          "ref": "4604126e-d235-40c8-a703-812a968c568b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "aca31847-d558-4443-9123-b5e65571713b"
        },
        "item": {
          "id": "56ad66a9-5501-4fa6-969b-4d194a42811e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "09b92c16-3620-4ca7-9848-50d06d22dd1f",
          "status": "Created",
          "code": 201,
          "responseTime": 2202,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e99d6c-6c56-4b21-9f6e-79469be2f60c",
        "cursor": {
          "ref": "df06d9f1-c5ce-4882-bff9-f8ab5c68556e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3d857d54-bc9e-4dfa-adae-814b019727e9"
        },
        "item": {
          "id": "f0e99d6c-6c56-4b21-9f6e-79469be2f60c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3dd43bd9-7860-4d0a-b6a5-b168b4485b9d",
          "status": "Created",
          "code": 201,
          "responseTime": 2577,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c50b02-c41a-4ab6-a0e0-76d9579532e7",
        "cursor": {
          "ref": "bc68b693-9efc-40be-9990-0e3f88683863",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f0635011-8643-4626-9ed7-121266a54b76"
        },
        "item": {
          "id": "35c50b02-c41a-4ab6-a0e0-76d9579532e7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f50d5f76-3576-4dd2-9b4e-39118e3a1349",
          "status": "Created",
          "code": 201,
          "responseTime": 2433,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9bb9ab-5efc-4c4c-84de-122944a94ca7",
        "cursor": {
          "ref": "0437f1fa-0e72-42ae-8212-553a7b603fc8",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "800b76f8-4622-4cae-9555-cd5fa06effbc"
        },
        "item": {
          "id": "db9bb9ab-5efc-4c4c-84de-122944a94ca7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c7be642a-1dd6-4fab-ae79-b36861bceab4",
          "status": "Created",
          "code": 201,
          "responseTime": 2943,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "420630fb-86a8-4a8a-ba6b-483c542e2365",
        "cursor": {
          "ref": "b3c4d10f-6549-4329-8505-cca3fe1cdde7",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f0d80524-d08c-4c4e-99ee-45b49019a688"
        },
        "item": {
          "id": "420630fb-86a8-4a8a-ba6b-483c542e2365",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "01cf472c-c3a8-4392-ac8d-9efcaa9d0a4c",
          "status": "Created",
          "code": 201,
          "responseTime": 2611,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-12T00:49:37Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-12T00:49:37Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b5046175-501c-477e-ab61-7a75fa61f50f",
        "cursor": {
          "ref": "53fe012a-2866-4900-925a-120657868b81",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d5508796-45ae-483a-b63a-cc8a52c33d0d"
        },
        "item": {
          "id": "b5046175-501c-477e-ab61-7a75fa61f50f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "897bad9c-01df-478b-bbae-0d32572da212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "41149767-ee6e-4641-8357-f0467eb92612",
        "cursor": {
          "ref": "e1293097-53b9-4f77-bd99-d6804a9dd4d8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d93650b6-8cf1-404f-9b31-225cdf846b08"
        },
        "item": {
          "id": "41149767-ee6e-4641-8357-f0467eb92612",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c25d8c8d-b26c-4e60-9f81-7ba381b64122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b28ccda-a068-4911-8e9e-87e7549f1e3a",
        "cursor": {
          "ref": "7ecac15f-629b-41a0-8825-55426eaa2991",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "89ddf158-5cd1-422f-836f-85da2be17d61"
        },
        "item": {
          "id": "8b28ccda-a068-4911-8e9e-87e7549f1e3a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e2262408-0ec3-4bc8-a5ea-4334624e4bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed3749d-5500-4f50-9eb8-b94a905afc35",
        "cursor": {
          "ref": "f87a0e24-83f0-487e-acf3-e0e332bac7d1",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "28b17d53-edfb-4252-9a46-fb34e50ceab6"
        },
        "item": {
          "id": "8ed3749d-5500-4f50-9eb8-b94a905afc35",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "42a410bb-acb8-4f07-896d-924b72c5be08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9215e9ae-6a9d-46fb-b83c-f95235989dad",
        "cursor": {
          "ref": "2dba1501-b616-4c53-bf32-de0dbbf221ea",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "37ece712-57b3-42a9-a88e-0fb0bcc6ccad"
        },
        "item": {
          "id": "9215e9ae-6a9d-46fb-b83c-f95235989dad",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1315d032-1541-4226-aecc-616dbfd43869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec780500-72ee-4c4b-a005-15aa4716b50c",
        "cursor": {
          "ref": "a5cc06ba-c8db-4114-ad22-7cbb2c2e7c32",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "85d3653a-55f8-4e6b-8479-937c94afec00"
        },
        "item": {
          "id": "ec780500-72ee-4c4b-a005-15aa4716b50c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a3933daa-7fe8-49a9-bd1b-86663ef301be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a95de81-4d48-494a-bf3b-8e440dc322bb",
        "cursor": {
          "ref": "f17aac87-f56e-472f-b32f-2d7e91d94f07",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "24f4c1e3-d7a3-4c2a-bfc0-d1aac749221a"
        },
        "item": {
          "id": "3a95de81-4d48-494a-bf3b-8e440dc322bb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7923619d-5401-49de-a093-d1b9b07cc389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4399a3-3c77-4474-9136-407a39764f00",
        "cursor": {
          "ref": "1d961c65-e6e6-4c7c-a2be-d3ec897037dc",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "754721c6-b93b-4049-a2df-46f9666b85eb"
        },
        "item": {
          "id": "7b4399a3-3c77-4474-9136-407a39764f00",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cdd2d5b7-3ab1-4038-ab3c-dd0719f57fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a105c94-8ee4-43bb-b104-942c9ce149c9",
        "cursor": {
          "ref": "562821dc-c970-4a62-95b3-704543162718",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8021cab7-91cd-4d6e-84e6-c89284a7847c"
        },
        "item": {
          "id": "5a105c94-8ee4-43bb-b104-942c9ce149c9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ca740318-1463-46b6-826b-3b2cd5b234dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a013c8b6-03b2-4931-afd6-acfffda6c9a8",
        "cursor": {
          "ref": "dc8a5c08-73a2-45ba-86be-eb0b53ad11ef",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f9ba28d1-fd56-4768-aa5b-9359afb5f340"
        },
        "item": {
          "id": "a013c8b6-03b2-4931-afd6-acfffda6c9a8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "942c922c-1cdc-48f3-9547-53f440dd9ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f38d7f-d12a-4ade-8449-e3a75024a7a4",
        "cursor": {
          "ref": "3e6018b6-1132-4567-b961-e523148baf89",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "32a785e2-4df0-4a5a-ab48-cbe60925ab4b"
        },
        "item": {
          "id": "38f38d7f-d12a-4ade-8449-e3a75024a7a4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "40f4202f-d99a-4716-8598-45588a257b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5551da0d-b2a1-4acb-97c5-82b62352cdd1",
        "cursor": {
          "ref": "bf0102e3-a5c5-4c56-bff8-bad5d4129b22",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "55514c99-ad10-4e59-bd01-56e1bca9b007"
        },
        "item": {
          "id": "5551da0d-b2a1-4acb-97c5-82b62352cdd1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c1faf795-6339-4e3c-8376-c5e884faaf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa81fbb3-9331-4286-9069-a080b469eaff",
        "cursor": {
          "ref": "2e67afa4-c376-46c5-862a-69dbab8c114b",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d4ae242a-3872-4cb7-b2b0-0ba7d8fe1715"
        },
        "item": {
          "id": "aa81fbb3-9331-4286-9069-a080b469eaff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cc7d39cc-6dcf-4ef0-a4fd-59b69787b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45c4373-9e00-4fb5-a048-37b2138aa0c8",
        "cursor": {
          "ref": "376ec7c7-b6e5-427e-a680-c3bd61613159",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9a314d72-2fdc-4f48-baad-4fd6bf74adea"
        },
        "item": {
          "id": "e45c4373-9e00-4fb5-a048-37b2138aa0c8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a457a362-f3a5-4108-bcdc-7ca68395247a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ded6035-03c9-472c-9338-ac4f8bee023b",
        "cursor": {
          "ref": "c367b602-82fd-4e95-ad2b-9f1c0bc17091",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "23437292-1241-43b6-a18a-0ffc33c2fc41"
        },
        "item": {
          "id": "1ded6035-03c9-472c-9338-ac4f8bee023b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e8e22da-85c0-4fbd-a165-610c2898f9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaebf07-4106-43da-8878-db1448000410",
        "cursor": {
          "ref": "58dccf7c-b6c4-402e-a585-a5b8de23c0a0",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "14c3fdb1-21c9-4b0b-a95f-5c0181209c28"
        },
        "item": {
          "id": "bfaebf07-4106-43da-8878-db1448000410",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c0edae12-6db9-4e9a-9d37-50f102e0780a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05c9180-4900-4b2d-95b0-619ec82d1415",
        "cursor": {
          "ref": "02dcc859-597c-4687-a570-45d5390d3305",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0a093dbe-0fef-44f7-9d99-4ee38e0c1fac"
        },
        "item": {
          "id": "a05c9180-4900-4b2d-95b0-619ec82d1415",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5fbe896b-2b02-4b7d-8dc7-d9e83d7fbabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe4912a-6a81-4868-a588-87683563b7ed",
        "cursor": {
          "ref": "5d23ede6-91bd-40b4-940d-6e5fcab2047a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aad80e62-0cf6-48c8-a122-ee7b88f66acc"
        },
        "item": {
          "id": "9fe4912a-6a81-4868-a588-87683563b7ed",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7990262e-8e97-410e-abeb-36e0dddafbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac7a594-3128-4ac7-b68f-fe9fe679d341",
        "cursor": {
          "ref": "fa2544c7-4fd7-49fd-8fd8-f6f28c1d762c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "72150392-4041-47b8-ac01-198bd408e234"
        },
        "item": {
          "id": "bac7a594-3128-4ac7-b68f-fe9fe679d341",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c024c107-e9bc-44f0-b369-33f336834895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d00b681-3141-464c-88da-24db40fa293c",
        "cursor": {
          "ref": "66c9c59e-c738-44ee-bc05-d508413ef221",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0cdec72c-62e6-4f48-b439-0b13422824b7"
        },
        "item": {
          "id": "3d00b681-3141-464c-88da-24db40fa293c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "570ecb29-c9a1-422e-bbeb-915c8b1d26ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c741cff1-d8b0-42c9-8c8d-072a1efc74d3",
        "cursor": {
          "ref": "28b5cad9-d0dd-4923-8775-ea3d642e2493",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c21f66bd-745a-48b5-bcf9-4c831294668b"
        },
        "item": {
          "id": "c741cff1-d8b0-42c9-8c8d-072a1efc74d3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6082c364-46ab-4c93-9067-dd4f94b2ac02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907f1fb3-c296-41c5-bff2-2d4dbdf80ef9",
        "cursor": {
          "ref": "2577f9be-56e5-4c87-96c3-5f8bb38249fc",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2acb4d89-0d55-498c-8976-5a86b9b66e18"
        },
        "item": {
          "id": "907f1fb3-c296-41c5-bff2-2d4dbdf80ef9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b7f344be-316c-4db7-95ab-fc288dc2c36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7e011c-8cc0-4185-ab89-91c0c839da72",
        "cursor": {
          "ref": "293dd08b-c3f6-44aa-ba1b-1dc1facec18f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6e40e907-c055-4b41-b658-1a2ea856374f"
        },
        "item": {
          "id": "6d7e011c-8cc0-4185-ab89-91c0c839da72",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9ff756eb-e008-46e4-b3c5-0cc01a1e11ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da39793-5a6d-49a2-bce3-85b0681e0f31",
        "cursor": {
          "ref": "5c81517f-b83a-48f6-b37c-857f3cb92e53",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "abc3ea07-334b-415f-a2e8-5d266a92dc89"
        },
        "item": {
          "id": "6da39793-5a6d-49a2-bce3-85b0681e0f31",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "94cec561-d190-4557-9874-dc2d09b2d7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c03f08b-e094-4f42-810a-fff4ac4168a5",
        "cursor": {
          "ref": "6825a73e-2c80-41a3-9824-d4e5f52d938b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e9d130e3-281b-4736-a13d-92ca12876734"
        },
        "item": {
          "id": "3c03f08b-e094-4f42-810a-fff4ac4168a5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "747bebb4-87de-4022-a0e8-dccce4fbbe65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fe3e9a-e979-4d79-ae00-e7db5dc6a133",
        "cursor": {
          "ref": "b89a7f26-fead-4a7c-b937-56a56afd7eee",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "af849c31-7ba2-4b28-b2d4-592bbeaebbe9"
        },
        "item": {
          "id": "65fe3e9a-e979-4d79-ae00-e7db5dc6a133",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "659949c1-7d54-4e8c-be0b-9510d41a4dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c54fc5-4e97-46d7-bf28-cdff4244194c",
        "cursor": {
          "ref": "946db310-5473-4729-a087-06327ce5bc31",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5b53e8ac-b903-46f7-8907-8bce359a6c01"
        },
        "item": {
          "id": "e4c54fc5-4e97-46d7-bf28-cdff4244194c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "85805a77-7d02-48ba-8744-2cc591eb0d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d186323-0dc8-4c42-82e3-b70005202fb7",
        "cursor": {
          "ref": "ca6e6f1a-5f23-4716-a468-00dc5731b1ab",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0c86ee7e-d213-484e-8620-ca9a3b0a2b54"
        },
        "item": {
          "id": "6d186323-0dc8-4c42-82e3-b70005202fb7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b86e88ef-0961-42cc-b63b-13a9866b27bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a31a99-77b9-4ab3-943f-4e2c2bf469bd",
        "cursor": {
          "ref": "53788115-9b7a-4e8e-bc64-778a05437bef",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5d3494ad-20ff-4687-af57-d2e740e60004"
        },
        "item": {
          "id": "88a31a99-77b9-4ab3-943f-4e2c2bf469bd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d8864089-f7e8-49a6-b0fa-4e7b06e3303b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6966694-583a-48f5-aea5-cbdb1c5b8368",
        "cursor": {
          "ref": "3f659196-fc2a-4a6b-9c57-1444d855f48b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e3ceeb00-1024-4f05-9dac-26a2bf4051b8"
        },
        "item": {
          "id": "f6966694-583a-48f5-aea5-cbdb1c5b8368",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5ae28089-a426-4620-a936-427255058276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd420879-a9bc-4623-96fd-392d10ed2e60",
        "cursor": {
          "ref": "1cd09781-7608-46f1-9c50-12daa24364e8",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5e6fe131-e667-4c9a-a1b4-a4b48640494d"
        },
        "item": {
          "id": "dd420879-a9bc-4623-96fd-392d10ed2e60",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b7c6aae0-4471-4e64-bae1-3cbe1be06dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e461a5-41a1-4671-aa11-0ea2a792f978",
        "cursor": {
          "ref": "bb9c530b-c7aa-4d89-a9fd-dfe9dff95849",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eff8c1f5-b6db-41ec-a1b5-b26068de6522"
        },
        "item": {
          "id": "28e461a5-41a1-4671-aa11-0ea2a792f978",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb7d529d-af70-48fc-a0a3-bbb53585184c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af44e1c-31e7-4452-95c5-f40025ca27ae",
        "cursor": {
          "ref": "f7e1352b-9534-4183-89f1-439eaac5d0eb",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "42785b94-5934-491a-ae96-0e207030c9dc"
        },
        "item": {
          "id": "8af44e1c-31e7-4452-95c5-f40025ca27ae",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8da8bbab-0856-4fcd-b03d-5ef1e7d759bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6587161c-d6a6-4180-9896-8bd724c4d773",
        "cursor": {
          "ref": "2e98984c-0b56-4cba-a91c-2e40076ba833",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e0bfb0ee-e5a3-45b6-9cb0-3b6b52553c6f"
        },
        "item": {
          "id": "6587161c-d6a6-4180-9896-8bd724c4d773",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "caa43ac7-e529-449d-9901-39c8151f6f0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0135ff-50c6-476a-9ede-d74fc5bd7d08",
        "cursor": {
          "ref": "d24745d2-4e20-4ece-87ec-e453462afb29",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b5fc0fd5-00e7-4bae-8e45-8d67be17df7d"
        },
        "item": {
          "id": "ec0135ff-50c6-476a-9ede-d74fc5bd7d08",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e463ab63-5fe8-42b1-bbde-7bb8fd5c5154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84d4963-5e2f-40bd-9983-dabdf08bff1e",
        "cursor": {
          "ref": "70a4e0ba-0b27-4477-b76c-688476e26f70",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ac1ffd5b-819a-45c6-84cd-ce8b0521bfbb"
        },
        "item": {
          "id": "f84d4963-5e2f-40bd-9983-dabdf08bff1e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "58e9f3f1-a04f-4343-911a-370f74e1ce92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c65a604-9261-4765-b804-c52cfc236364",
        "cursor": {
          "ref": "de3e701a-917d-41ad-83ab-d36858fbef8c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "98f76080-876c-4925-be0d-d89deced4032"
        },
        "item": {
          "id": "8c65a604-9261-4765-b804-c52cfc236364",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "30ebf43d-eebf-4c5f-879f-4d01a4fc4212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e91e39-73c7-4134-b4b4-3b5083af9a11",
        "cursor": {
          "ref": "5590b2e5-48b7-4b49-9f9f-b0f7ec495d3e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5598a11b-7429-451e-83a7-39834065d064"
        },
        "item": {
          "id": "f8e91e39-73c7-4134-b4b4-3b5083af9a11",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "97ad600c-81b8-479a-8819-e8a3825f1a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3eced22-ce26-4224-8338-35319b470672",
        "cursor": {
          "ref": "03101698-5533-4f91-a1cc-617e55baa8a5",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "157e781d-e47a-4a37-b6b9-abb11b593b4e"
        },
        "item": {
          "id": "c3eced22-ce26-4224-8338-35319b470672",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "29999106-c4e5-4536-9bdd-13cec3f6ee09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6a0bf2-4e6c-47ac-a4c2-11bd7076a86b",
        "cursor": {
          "ref": "892f6347-6c45-4c55-93b8-02902b2ed94d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "47d31d72-2847-40ef-8d67-fd0d75da036d"
        },
        "item": {
          "id": "1d6a0bf2-4e6c-47ac-a4c2-11bd7076a86b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2a54bdd0-3214-4866-a250-cba661e3e0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fe4ed1-3cd5-478e-9e7e-5ef04a5e07d2",
        "cursor": {
          "ref": "0e6c9ce0-e2e0-4bc9-b9e0-94064e2b6166",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "84877f07-5775-4903-8033-7aa14e747ccd"
        },
        "item": {
          "id": "28fe4ed1-3cd5-478e-9e7e-5ef04a5e07d2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a07a0184-cf4b-4680-85d0-57b26250f766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8040fe57-469b-4bde-a5ae-d7b1f1c4926e",
        "cursor": {
          "ref": "449582b7-4a91-4637-b5b2-a0a290941548",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7278e689-7515-49c5-a65e-3f04a5af49a7"
        },
        "item": {
          "id": "8040fe57-469b-4bde-a5ae-d7b1f1c4926e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c2ce4668-7dac-4fc9-9163-790dfaf779f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54942b8-153b-49c7-9e57-c29663317439",
        "cursor": {
          "ref": "f6b059ac-323e-4932-937b-471f5f42ba55",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aec3efc2-9e22-418b-a0e6-757440de3b6b"
        },
        "item": {
          "id": "f54942b8-153b-49c7-9e57-c29663317439",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1c532f60-5d36-4078-bfc0-713f377ea6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97569d5e-3e8c-4c8f-8b5b-dc28854a4005",
        "cursor": {
          "ref": "475590f3-b1d1-4cfd-a946-f828e3a9f966",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9821cb92-1c9e-48e6-a618-d613341a2aab"
        },
        "item": {
          "id": "97569d5e-3e8c-4c8f-8b5b-dc28854a4005",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dd7f297d-1a6e-4f39-9a6e-a5cf4b1d4aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd279f63-72f6-4cd1-b506-568bab351705",
        "cursor": {
          "ref": "35b03d8c-e054-41c9-8028-d95c9b9c39c1",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "199de1b6-2976-4f22-88dc-b49bf8b8e60b"
        },
        "item": {
          "id": "bd279f63-72f6-4cd1-b506-568bab351705",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fb0a3761-c269-406a-bcdd-af666081b3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5453cf5-b057-4216-9094-1b9bb76eebca",
        "cursor": {
          "ref": "a5b9ba23-b99e-4778-be46-381e01c129a0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "73a88317-c583-4574-a88c-a288fb0384ae"
        },
        "item": {
          "id": "c5453cf5-b057-4216-9094-1b9bb76eebca",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c5804473-6fbd-42b9-ae24-bab40155a7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43066fc2-1159-4d07-ab3a-6434001f8169",
        "cursor": {
          "ref": "91f74deb-e86f-4d64-84d7-2a658bca7a0b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b253c6d4-bf56-458e-9e48-5a1d12fad22f"
        },
        "item": {
          "id": "43066fc2-1159-4d07-ab3a-6434001f8169",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6c218f98-4ca8-4b45-a711-92b5046ecb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12dc405-fa24-4675-8837-e4d57f32bf46",
        "cursor": {
          "ref": "e9549fe1-ca38-4941-b1e2-44e8895db8a7",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "033a34a8-6b45-48ab-ac02-4d497202932e"
        },
        "item": {
          "id": "d12dc405-fa24-4675-8837-e4d57f32bf46",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fee45588-3029-4e2d-88df-728ff103540a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd483b5a-f733-4696-ba79-ff0b7cec5693",
        "cursor": {
          "ref": "fd4cf38c-ced0-4aa4-abe8-181605de0267",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "34315e67-0ee6-449c-80b3-af9cc58ea2df"
        },
        "item": {
          "id": "fd483b5a-f733-4696-ba79-ff0b7cec5693",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e46b2586-3bcb-498c-9178-ea70170c8906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2828091a-64c0-4469-aff2-902b3c64218e",
        "cursor": {
          "ref": "78739b2b-c81c-4b4a-b158-73c1d06091dd",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1fb6f934-00a6-4634-9e3e-7b293c298c52"
        },
        "item": {
          "id": "2828091a-64c0-4469-aff2-902b3c64218e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fcf9a33c-4fb9-40f8-8e8d-39a6a6b3b019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e52060-fb45-4c98-9ea7-cefb6f7541e3",
        "cursor": {
          "ref": "19c42558-a9c1-49cc-b98d-60a6c9157039",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "93181d04-b62e-4d14-959b-c36386f12bf6"
        },
        "item": {
          "id": "e3e52060-fb45-4c98-9ea7-cefb6f7541e3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b7e9aaaa-dcf2-44ea-a705-845be1bcbda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18263f09-6c66-427a-a576-0bb77c4afab0",
        "cursor": {
          "ref": "8a163518-0d7a-44d1-997b-0d75603b9be6",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "746bd0a1-58fa-47d5-a814-ddf3c8028fb7"
        },
        "item": {
          "id": "18263f09-6c66-427a-a576-0bb77c4afab0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b7beb908-bc8d-4ed3-8edc-4f752fcbea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2025646e-7fe5-4122-903b-671e2ea449df",
        "cursor": {
          "ref": "8d9f4632-8451-4b1f-883d-d6939b045b9a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a2a100a3-706d-4704-805c-911b73288dce"
        },
        "item": {
          "id": "2025646e-7fe5-4122-903b-671e2ea449df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "901e53c6-e85f-4a41-ae5b-823532035096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76972d77-976c-443a-891f-a927aeb678f6",
        "cursor": {
          "ref": "6bcd2cd1-2dd3-4dd5-801b-0cc93a5af94d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "05144e9c-d681-44cb-bfe8-16dd2dc8f1c5"
        },
        "item": {
          "id": "76972d77-976c-443a-891f-a927aeb678f6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "49174251-5fdb-4768-a837-fec7f6712c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bd9324-0a2b-4ec7-8130-82956c4621e5",
        "cursor": {
          "ref": "b11c99f4-4c7b-495a-8511-d52071d1c737",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "31629147-1b93-40e2-bc96-e177e38558a9"
        },
        "item": {
          "id": "a8bd9324-0a2b-4ec7-8130-82956c4621e5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "65b5db01-07d9-419b-8e95-5f56a0fc2d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f9140d-1365-40d7-811c-0e7da3741777",
        "cursor": {
          "ref": "fefd59db-6176-4cd7-83f9-46a12f5765b3",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "079bb7c5-2e69-4e26-926e-b36491ce52c9"
        },
        "item": {
          "id": "b7f9140d-1365-40d7-811c-0e7da3741777",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9212c079-c5c6-4a9c-9869-955753f03d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6507fd07-b8ba-4ccc-bac5-a8d900e97bd1",
        "cursor": {
          "ref": "18012325-afda-4893-a689-1b6a8a84c318",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "363aa2e8-8653-48b0-8082-716d32e62c67"
        },
        "item": {
          "id": "6507fd07-b8ba-4ccc-bac5-a8d900e97bd1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "99b505a5-206a-469a-8e97-0601aa2112c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018942b4-14a3-4b61-b728-3eb1ab610399",
        "cursor": {
          "ref": "5438799b-c0b1-496b-ac0d-46092bf4515e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e782dcf1-1ca9-4368-a342-1ff38da8725c"
        },
        "item": {
          "id": "018942b4-14a3-4b61-b728-3eb1ab610399",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6e985121-2457-41d2-a3a8-7453e8763651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bdedf1-90bc-48a9-b181-c8d98ec0aed7",
        "cursor": {
          "ref": "adc3845c-e69e-424b-b4b0-7d88fdbf1a64",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0bb8498c-43f1-489b-b0d2-e9de3306d39d"
        },
        "item": {
          "id": "73bdedf1-90bc-48a9-b181-c8d98ec0aed7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "edb90351-03d7-44c5-83ac-50f56cc4d4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbcacde-cb6b-42e0-afc9-65954cae67b5",
        "cursor": {
          "ref": "6f3bd9ce-0915-47ca-97ed-b9ee9346db3f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a50b2354-868b-4f20-80c2-82fe14d7f4a9"
        },
        "item": {
          "id": "8bbcacde-cb6b-42e0-afc9-65954cae67b5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "38f2bf84-08ed-4135-ae60-a52f896129d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4f1a0e-d871-4e9c-bceb-9fdb61671d08",
        "cursor": {
          "ref": "0ee28a2e-5ae1-4cd5-a0a0-e47694e77f76",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "15f380b6-a3ee-42f3-a532-fd47eb934a14"
        },
        "item": {
          "id": "5f4f1a0e-d871-4e9c-bceb-9fdb61671d08",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a886b8fb-3541-432d-a936-cf75fc39e802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e016042c-c4d5-4364-9b7f-40f80966ca06",
        "cursor": {
          "ref": "b272d9b0-b944-4788-908f-e33c8d079d52",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c869bb3d-3775-4100-9e86-ee88b61feab3"
        },
        "item": {
          "id": "e016042c-c4d5-4364-9b7f-40f80966ca06",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "32608ffe-8e7c-4cf6-a1c6-44fe0e10f1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7159854-9875-4428-a4b5-a18b518502fb",
        "cursor": {
          "ref": "e3270a3b-8ff3-4deb-b717-c8c521a6d731",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7d197123-91b6-4eb4-8530-eff83a1c9a2c"
        },
        "item": {
          "id": "b7159854-9875-4428-a4b5-a18b518502fb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b61a4647-d036-4a6a-ba46-89af492d4717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68014c48-310d-4521-ad78-1dea9b68e9fb",
        "cursor": {
          "ref": "c7d490c4-4abb-47e1-8456-4fc8c99f2d16",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ecaef8db-38a8-4f2b-8a1d-8d70ff60f713"
        },
        "item": {
          "id": "68014c48-310d-4521-ad78-1dea9b68e9fb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3dff03af-8361-435f-b9e6-c037a8b6c285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f12c50-e464-4856-a0a1-6188f1126e76",
        "cursor": {
          "ref": "697937c3-73ef-4cd7-80ca-cc9d4decccd0",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "59871a22-e72e-4b2e-8d57-c91d87fa9a7e"
        },
        "item": {
          "id": "53f12c50-e464-4856-a0a1-6188f1126e76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3bc5289f-d51f-4359-ab6c-67a4a9748708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9301465-5761-4c4f-bdba-8fea19bb37c6",
        "cursor": {
          "ref": "9b7d7232-d31a-4a75-86b1-69b3ea37cc79",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aaba7cf0-7354-4255-a986-4caad0f4be60"
        },
        "item": {
          "id": "e9301465-5761-4c4f-bdba-8fea19bb37c6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b21b7738-a689-4f6a-88b5-0777992ecd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a65918-c124-44f8-a62a-81f5002b4eee",
        "cursor": {
          "ref": "372816e1-c2e6-429d-933c-c7b9c17d80ab",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4392ee90-c4ab-4fe0-8df4-e9422efc5e4d"
        },
        "item": {
          "id": "c3a65918-c124-44f8-a62a-81f5002b4eee",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6939a43b-c5d8-461f-925c-0681655cab5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d215f48-34dc-4f9b-b809-ab9b9ff3f68e",
        "cursor": {
          "ref": "69408f73-3986-4f47-bb74-2f078710d53c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bf312c6d-0305-4411-a78e-729682713d3f"
        },
        "item": {
          "id": "5d215f48-34dc-4f9b-b809-ab9b9ff3f68e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6bf99a23-9292-4703-83d3-5f3109f1021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c886e2-07ad-4a20-be7b-d2d1bc7f940a",
        "cursor": {
          "ref": "75d026cf-80df-4c97-b935-c25d7bbca19d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "33067a2f-1818-45ea-a358-9bb80ef0eecd"
        },
        "item": {
          "id": "64c886e2-07ad-4a20-be7b-d2d1bc7f940a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "907a0a4b-db68-40a1-9f4a-9decb00828c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1afd64-b7ef-4fda-b30c-dac97b7207cd",
        "cursor": {
          "ref": "b7b9b3d3-c683-4ec9-8989-e4225333bb89",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cbd066ae-1afc-4606-b602-39056ac226d3"
        },
        "item": {
          "id": "db1afd64-b7ef-4fda-b30c-dac97b7207cd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3cdcc58c-dcc9-4e54-9d8f-b1a596cddd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec343c3-3398-4b7f-a09b-2a190e05df87",
        "cursor": {
          "ref": "0f8425d6-ab68-4f96-8412-72811e6453c9",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e9a7cf1d-7a92-4498-a5ff-f8aa2ec1a6cd"
        },
        "item": {
          "id": "8ec343c3-3398-4b7f-a09b-2a190e05df87",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f97f4f2c-cbbf-440f-b520-04d075e74fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51095196-7a12-4ea8-b9b6-58a07ab4bdd6",
        "cursor": {
          "ref": "59fdff0f-5a63-440a-b554-e78e114e70f1",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bd40112e-c99c-433c-b087-2aeb1a8c6aea"
        },
        "item": {
          "id": "51095196-7a12-4ea8-b9b6-58a07ab4bdd6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a8957d2-0a74-40a1-a3da-551afc0a5d4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce76628-44ec-4a48-aeb0-f08990b33cb1",
        "cursor": {
          "ref": "a8dd9a98-6836-4ebc-9edb-da1b68ae68cb",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c8407f95-6be9-484a-811e-8ce17fe8ba31"
        },
        "item": {
          "id": "3ce76628-44ec-4a48-aeb0-f08990b33cb1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4858e869-d9c7-4933-abb1-07ff6adab32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10328f8-44da-466d-9c89-ec0bb5a0e851",
        "cursor": {
          "ref": "0e9d0dee-a49c-49d5-86d1-b330069ada53",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "044de599-e3f4-4197-b90d-48b1a90bf657"
        },
        "item": {
          "id": "f10328f8-44da-466d-9c89-ec0bb5a0e851",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c0ed33fb-cd52-49b9-a1fd-de28d83764d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e3264d-c2c0-4bdb-9ac3-9a0a585f82bb",
        "cursor": {
          "ref": "e9063bbb-e7d4-45ac-91ab-2485da821669",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bdf66d8c-eb46-4a69-81b7-b9533180a339"
        },
        "item": {
          "id": "26e3264d-c2c0-4bdb-9ac3-9a0a585f82bb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "29f7dd36-2fdd-4f65-a8da-b4a86f8cc72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4356355-a1cc-4440-bd73-3979301f5043",
        "cursor": {
          "ref": "6879296f-e70b-4cea-8d18-af5bbd2656d5",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "49d58675-6e9d-4b53-a25d-b20b4ff59441"
        },
        "item": {
          "id": "c4356355-a1cc-4440-bd73-3979301f5043",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "34402dba-6b0c-4952-8eb7-7798d8cae247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dba66ac-a9de-466c-9bdd-fee9ff43602c",
        "cursor": {
          "ref": "5cbbfbc8-24b7-400e-9eb7-371f37385d5d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bb819696-f615-4124-be3c-cebd41f6918d"
        },
        "item": {
          "id": "8dba66ac-a9de-466c-9bdd-fee9ff43602c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "978b5b0a-26a4-46a5-921e-91943178b29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e011b1c7-c4e9-478d-b040-e7b6a7d1ded8",
        "cursor": {
          "ref": "75ad0908-896e-4f2a-a324-83b2bcc8b29b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8eb7c14c-9347-41f9-876b-8fb0a1d47106"
        },
        "item": {
          "id": "e011b1c7-c4e9-478d-b040-e7b6a7d1ded8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "39a68682-7a51-43f6-a8ef-3469ff5a34b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7e752c-6a8c-4c1f-884a-0639d941a2cf",
        "cursor": {
          "ref": "930bb2d9-0674-4f04-b45d-7e692d5f7d02",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c16ef437-448d-44e2-99b8-54dcfc0d3b71"
        },
        "item": {
          "id": "db7e752c-6a8c-4c1f-884a-0639d941a2cf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "82e8b5af-2561-4c8e-a3b0-32b7eef6e1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61eb063-4a16-4737-8624-09494e259063",
        "cursor": {
          "ref": "72380a4d-b61b-4421-9557-db4b8a615609",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "470f8ea1-b42c-4d52-97aa-d4f643dec50f"
        },
        "item": {
          "id": "c61eb063-4a16-4737-8624-09494e259063",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c7c9dee5-c690-4c74-8044-76f8f7673f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d9312b-51ad-460d-a447-7387e1da8d35",
        "cursor": {
          "ref": "d3200039-ea66-4c8d-9227-ff65136c9a8b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ce4ae619-f7ac-4874-aacf-a23dbef04cf4"
        },
        "item": {
          "id": "11d9312b-51ad-460d-a447-7387e1da8d35",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f735a3aa-3d18-4d8d-b3a1-cc7fc8cb6277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e87ce40-d029-4454-9cce-da892da31b1b",
        "cursor": {
          "ref": "a4b8ae6c-dbb9-4294-8a3e-1e53245d102f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1f4ffb82-ad4c-4827-a598-d5b40596fd0a"
        },
        "item": {
          "id": "0e87ce40-d029-4454-9cce-da892da31b1b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7ede7f6e-4e76-485c-9eb6-6fbff33d5ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade4e700-38c6-4b1c-b2f0-8284a0965960",
        "cursor": {
          "ref": "e3e4162a-90f4-4a42-b8a7-6704eb02c2eb",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0a5b7c4e-722d-409b-b5ef-8c47260c8d00"
        },
        "item": {
          "id": "ade4e700-38c6-4b1c-b2f0-8284a0965960",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0b696cbc-1604-40cb-bb78-0fea48d8e4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64eefbc7-ede6-4317-a4e3-10fc29567629",
        "cursor": {
          "ref": "5e915dec-3ab6-4fdc-9261-9ddef0c0d04e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "72e1e6bd-3cd2-47c4-b0a2-6395d30d2575"
        },
        "item": {
          "id": "64eefbc7-ede6-4317-a4e3-10fc29567629",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c29429b0-6f92-4dbb-8a1e-9ceaf2f4c96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd4f653-141d-40e6-a1da-4422905cdbf5",
        "cursor": {
          "ref": "473633a5-a30d-423e-9708-db43d1b2964e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2328f519-1976-4b9f-9ebf-b0640c59eac1"
        },
        "item": {
          "id": "2dd4f653-141d-40e6-a1da-4422905cdbf5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3ca3004c-4e5c-47ec-9990-0e6239e01fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d09d65-d968-4a21-90ed-30e5bcb88ca9",
        "cursor": {
          "ref": "a9026045-574f-438c-8791-c5b39ebd52cd",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ad968cea-da21-4591-87b6-8418b68e089f"
        },
        "item": {
          "id": "38d09d65-d968-4a21-90ed-30e5bcb88ca9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4c316f17-e1e5-4470-a203-d56356a5882c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c600cd4b-f1b0-4012-9e78-78e8f60595e5",
        "cursor": {
          "ref": "766e5c2c-908d-49fb-bd11-28d4afc78fba",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2341b86f-dc09-4fd1-9e2b-07fde5ae5564"
        },
        "item": {
          "id": "c600cd4b-f1b0-4012-9e78-78e8f60595e5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "547d52b7-4983-43db-ae8e-544abceaec7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadbad62-160a-4730-9856-49ac01612e1d",
        "cursor": {
          "ref": "336d154f-aba0-4602-9ac0-fc17a3f61e27",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "52f070e8-660a-4feb-829d-afb669e684b3"
        },
        "item": {
          "id": "aadbad62-160a-4730-9856-49ac01612e1d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "28a1b62f-af7e-40d1-a493-68c2d74f1e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a4e882-57df-4eed-9a42-ade851b69b0f",
        "cursor": {
          "ref": "aebbaaef-2ee0-4818-970d-d2b0ab5332a6",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1f0cf92c-2624-46a2-878e-91a76028d3e6"
        },
        "item": {
          "id": "54a4e882-57df-4eed-9a42-ade851b69b0f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d8c70de2-bac9-4381-a86b-c64720a16e62",
          "status": "OK",
          "code": 200,
          "responseTime": 231,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "600e7ea4-c71c-4209-a139-545b70cfe02c",
        "cursor": {
          "ref": "149def04-a406-490d-aec1-3ffc53331e2f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7e6fe64c-a3ed-42a2-aadd-adbcee89c776"
        },
        "item": {
          "id": "600e7ea4-c71c-4209-a139-545b70cfe02c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d7e3377b-f8bd-45a1-bc0f-82af1b6c122e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f445af36-8b7f-453a-9d6e-c81c68a62ae7",
        "cursor": {
          "ref": "c72cd744-6a19-4fc4-8cdd-7fb05422a83b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2b3e8f78-1238-4bad-ad87-647a9cf74a94"
        },
        "item": {
          "id": "f445af36-8b7f-453a-9d6e-c81c68a62ae7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "eb6b26ab-fb6a-4278-adb4-5683befe1d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4435e9-f4ad-4fca-b185-e35fad6e8970",
        "cursor": {
          "ref": "5cdab282-53c6-4fb6-84f1-912a42053009",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "366eae1e-43a1-4dbd-8175-e1a7a3181bd7"
        },
        "item": {
          "id": "1d4435e9-f4ad-4fca-b185-e35fad6e8970",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b10d9a82-0800-451a-8f7b-50c565df38c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8e63fe-c89b-4a7c-a8fd-72c80826cda8",
        "cursor": {
          "ref": "83fccbd3-6c80-47f2-a8bc-630e64be2ded",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "011a69c4-8718-446d-9d5c-07b6cefbf7df"
        },
        "item": {
          "id": "6e8e63fe-c89b-4a7c-a8fd-72c80826cda8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "571c80f9-fb84-4b37-8403-c48476c4dfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4320da6f-2821-45bf-a19d-e75b9e2f0b16",
        "cursor": {
          "ref": "454f1aa0-0328-4432-a4a8-07c5d9eb6879",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "581bc504-5875-4c3c-93a1-e9ff3d482fd9"
        },
        "item": {
          "id": "4320da6f-2821-45bf-a19d-e75b9e2f0b16",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e93c0629-fb40-4031-8fd6-a55177a52341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7568cbce-f3e7-4ac8-9164-f245929d3224",
        "cursor": {
          "ref": "02afa7ba-66cd-461d-86f5-39761f6166ce",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "11c4e258-f6f8-4f43-9ac2-5d350d1f5448"
        },
        "item": {
          "id": "7568cbce-f3e7-4ac8-9164-f245929d3224",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "28854fca-e576-46ad-b95e-2107e47fa506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6db97a7-a4a4-42ba-ad46-76018ad3e511",
        "cursor": {
          "ref": "d232a1b9-a469-472d-a933-6c61db58b911",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "05b6d57a-e6b8-4878-a69e-0fec474dc07c"
        },
        "item": {
          "id": "a6db97a7-a4a4-42ba-ad46-76018ad3e511",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e680c3c3-87fe-4fe4-9c3d-458603fe951b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2786c3da-0153-44a6-a699-78cf2bf3b0d4",
        "cursor": {
          "ref": "3a112efe-6dd9-4b59-99a6-7b625cf160f6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5f2e4c4b-04e0-4dd7-9ee6-255a679e7f88"
        },
        "item": {
          "id": "2786c3da-0153-44a6-a699-78cf2bf3b0d4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "befc2081-e0e5-42ab-90ac-e590f19faced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2902b75-6f65-401f-82e4-755a4530a440",
        "cursor": {
          "ref": "ff3faf8b-c93b-4d6e-b755-c6ae864af5e2",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0440e19b-f551-43c6-9ab1-714fb6fb300b"
        },
        "item": {
          "id": "b2902b75-6f65-401f-82e4-755a4530a440",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4e26382f-6d1d-4c56-ba0d-61ee812a9ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7da311-6639-4ab1-b28b-b51733ef5172",
        "cursor": {
          "ref": "4671937f-b669-4eb1-b2d6-fc82b10b919b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "60a93f20-5dd2-4b35-806a-f049ad7d573f"
        },
        "item": {
          "id": "da7da311-6639-4ab1-b28b-b51733ef5172",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6adb8dfd-daac-499f-9d02-0f3e04747315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c96608-b8d2-4cf6-a73b-e839928477a8",
        "cursor": {
          "ref": "a7c7191d-93ca-4c17-b62d-2ba35f11bdd8",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5f572fcc-77e3-459e-b37f-577bf5ce6e76"
        },
        "item": {
          "id": "03c96608-b8d2-4cf6-a73b-e839928477a8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f0a04706-b971-4a1b-a30c-495860f54e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82641726-6695-4837-9de9-81ab33e2d6fb",
        "cursor": {
          "ref": "bc080355-36cd-46c7-858c-800feb6c3b3a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "14b07b45-14cd-4c1c-9e6d-a93cc94d8427"
        },
        "item": {
          "id": "82641726-6695-4837-9de9-81ab33e2d6fb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0ee08e0c-ff91-474d-becd-b0f4df2e8677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76036129-068c-4db8-b80a-d8224a4ffed6",
        "cursor": {
          "ref": "980cea62-d86c-4768-b64e-f122c36983ee",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "877dd084-fb05-4588-adf1-f122e658d637"
        },
        "item": {
          "id": "76036129-068c-4db8-b80a-d8224a4ffed6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "16a2f25f-4382-4d0c-b455-5c74139fcda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f967f9-5030-41f6-850b-283feac08fdc",
        "cursor": {
          "ref": "26a3eeee-32ce-4ae2-ac76-6fa17229f124",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "67cd0af6-4d68-4821-9ab4-02cb92e0261b"
        },
        "item": {
          "id": "b6f967f9-5030-41f6-850b-283feac08fdc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6ba48287-80dc-4675-bbd9-d189e751e95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf3a6c6-a066-464c-8479-77a541298321",
        "cursor": {
          "ref": "7e7dd530-2dda-40d7-be27-80433961c866",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "78030137-8be2-41b1-9d99-1f538f3b2185"
        },
        "item": {
          "id": "4cf3a6c6-a066-464c-8479-77a541298321",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "34556b50-6e25-428a-8be7-139c769bb2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f166d92-5cd7-4485-928e-a91c7ca082f5",
        "cursor": {
          "ref": "12134ac6-b267-464b-9d91-ef77fc0dfed8",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5e30f087-7f8e-4840-a4e9-521ef608da6a"
        },
        "item": {
          "id": "9f166d92-5cd7-4485-928e-a91c7ca082f5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "83ad39bf-581b-4093-89f5-d3028c2978c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b192264-59b8-4397-917a-c28f0b4c41f3",
        "cursor": {
          "ref": "bf701ac9-44e7-40d0-8a04-a554b226760a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b5d6b7ae-eeaf-441e-b2b9-a2d5dd75d45d"
        },
        "item": {
          "id": "3b192264-59b8-4397-917a-c28f0b4c41f3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "36c93881-2d07-40b4-8e28-fdf4fadd366a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1af4fa-7d48-4845-9c7a-8b92801c5a9e",
        "cursor": {
          "ref": "01116822-6b14-4493-bd32-c6b10a94c206",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2cdeeacc-f263-4fc2-a154-7e76f80293c7"
        },
        "item": {
          "id": "3d1af4fa-7d48-4845-9c7a-8b92801c5a9e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "88b0a92e-6268-4e77-b3cd-b5d36cc8345d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708fa35d-cf75-4293-a1f4-a23c87345567",
        "cursor": {
          "ref": "46e25850-b049-454c-8493-81cd15290c78",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "476b13de-dc24-4966-98fb-dc65a72e00b0"
        },
        "item": {
          "id": "708fa35d-cf75-4293-a1f4-a23c87345567",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c112695e-71ee-4e54-af42-324b4f215d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb78558-8272-4666-a417-547ef23ce099",
        "cursor": {
          "ref": "85789602-3500-42ec-8f69-91236ecd66f0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a586682f-bbe4-48c8-856d-e03d3ad7c90c"
        },
        "item": {
          "id": "6bb78558-8272-4666-a417-547ef23ce099",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ac93b262-300f-4463-b66f-05b136817c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c920d89b-5c01-4868-9b4c-b73dc779b040",
        "cursor": {
          "ref": "c3b524b8-77eb-487a-88b2-8c7368ea2e4c",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "845579db-28a6-4863-8e75-1451afbbebbc"
        },
        "item": {
          "id": "c920d89b-5c01-4868-9b4c-b73dc779b040",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6bdab44d-ddde-439b-8b89-d853317442c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ead36f-a94a-46be-8c48-2a5991e11bad",
        "cursor": {
          "ref": "3de0531b-0f20-48b6-aade-07dec710ad97",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4dc54499-5b88-4b4b-b66f-c2325ba241f1"
        },
        "item": {
          "id": "85ead36f-a94a-46be-8c48-2a5991e11bad",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "08fa21c3-7060-49a5-9838-fc212ff030a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9552ae42-d819-444a-8948-eabbbd464404",
        "cursor": {
          "ref": "2c66309c-91c0-424b-bbdf-e7bf9e317442",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2b5aabd3-7361-4f35-bb80-3e88cbdeab79"
        },
        "item": {
          "id": "9552ae42-d819-444a-8948-eabbbd464404",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d29bba47-1eb0-4f4d-bd49-7006403d4739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de784014-8dff-4d05-b5cb-a4243ab69055",
        "cursor": {
          "ref": "e83ca516-587e-4275-a2f4-4690eddfd949",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a29599d4-73d1-4ed7-aea7-5e68441d635c"
        },
        "item": {
          "id": "de784014-8dff-4d05-b5cb-a4243ab69055",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b79006ba-d420-4c0f-b07d-1fe501409844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e063c19-f1c3-4041-b208-c6a487f0c7c1",
        "cursor": {
          "ref": "e493b5da-5e50-4312-9aaa-e0cde3cf8265",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2a5b5356-6817-4c0d-bedd-3080badebe2b"
        },
        "item": {
          "id": "1e063c19-f1c3-4041-b208-c6a487f0c7c1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "96309a9b-982e-41dc-acda-6e4528ef49ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e869578-c263-4e13-b88d-6c87e3823a8f",
        "cursor": {
          "ref": "54feb20a-a19f-4f6a-8670-9271cac98259",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d0c1093e-e72e-4ce9-9d65-f7e2364b9cbb"
        },
        "item": {
          "id": "2e869578-c263-4e13-b88d-6c87e3823a8f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0b342529-ad2d-4c51-b727-6d5c84e40226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b4c807-b4b4-4e36-8698-7dcc1cafab7d",
        "cursor": {
          "ref": "beb8bfd7-40c0-4e16-9d82-83a9fd989faa",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "95aa31c1-06b6-45f4-8beb-c7948f290ab2"
        },
        "item": {
          "id": "c5b4c807-b4b4-4e36-8698-7dcc1cafab7d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2e8bf87a-dfa1-421d-b429-7191586c8deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c8977a-3520-4176-95bf-a1c8638046a3",
        "cursor": {
          "ref": "274ba10d-a0f1-4a6b-885e-257dc6b80d4c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bf24dfef-d7df-4b0b-ae2b-4686916621e9"
        },
        "item": {
          "id": "45c8977a-3520-4176-95bf-a1c8638046a3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2db1d3ea-16c9-4985-bf0b-d28be21d41b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9ed06a-e0cf-47cd-a62b-d088f96364db",
        "cursor": {
          "ref": "a616e4e4-0ff5-45ed-a91e-26524121c808",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b9e4efb9-e006-4832-a23f-b6742e7ce631"
        },
        "item": {
          "id": "fd9ed06a-e0cf-47cd-a62b-d088f96364db",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "19f160ec-eb1b-42cc-ac3e-fd67ab6bca4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3e1c47-9b9c-488b-a8bb-c39906e6e905",
        "cursor": {
          "ref": "75a773b6-df72-408e-ad58-2e0fa9e64bcd",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "87369972-0a65-43e1-ac31-647d56224ebd"
        },
        "item": {
          "id": "fe3e1c47-9b9c-488b-a8bb-c39906e6e905",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b4df31ef-c803-4c17-9830-59c4000bd378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33389ecd-e720-462d-88b3-c249c56d7d09",
        "cursor": {
          "ref": "8e970184-719f-4239-a287-b8b5161f17f6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "101f976a-26de-4baa-b27b-5774d256f904"
        },
        "item": {
          "id": "33389ecd-e720-462d-88b3-c249c56d7d09",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e31ab8cd-a126-423a-9719-1d6a9a63a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687e1f05-df3e-4be1-8429-d3ae3a401b66",
        "cursor": {
          "ref": "72c69234-e42b-46b3-937a-9462b0cc8167",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eb15e47f-daa6-4d2e-96f4-bba678c95555"
        },
        "item": {
          "id": "687e1f05-df3e-4be1-8429-d3ae3a401b66",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2ed28519-e2a8-4951-90e1-6fc89643e4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fa9f13-281f-4fc9-a3d7-513d30804281",
        "cursor": {
          "ref": "b04ee7aa-9228-4256-8fb7-e28abbc1ea44",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "186f9d12-caea-4cd3-9c5a-82a0d8d4d8e3"
        },
        "item": {
          "id": "16fa9f13-281f-4fc9-a3d7-513d30804281",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f7623343-a304-4e79-86a4-19bd653e6593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50993246-3f2f-4488-bb0f-ae458afc571c",
        "cursor": {
          "ref": "64dab22f-4e31-478d-bf9a-49c847ab83d5",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3b8ba8c5-0362-4c20-973d-80eb147603cc"
        },
        "item": {
          "id": "50993246-3f2f-4488-bb0f-ae458afc571c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fe64314b-4c17-4a06-ad71-d4dc33657d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b20b8e-fcb1-42dd-b954-635b651cd6ed",
        "cursor": {
          "ref": "0674daef-da16-4eb8-bafb-e6dd3c649f7c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "26792c0a-6710-4b59-a2ab-861f492f5c85"
        },
        "item": {
          "id": "49b20b8e-fcb1-42dd-b954-635b651cd6ed",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "39458fdf-d3ae-4a62-88dd-2e6c699b5c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2570c72-0e44-4e27-a80c-b438623b237c",
        "cursor": {
          "ref": "1888c1ec-30bf-441f-89f6-78f377863a2b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "92857faf-e36f-405e-b6bd-40e71d13ebc8"
        },
        "item": {
          "id": "c2570c72-0e44-4e27-a80c-b438623b237c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d0df30d2-891e-4f84-bbae-5cd511fe694e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d000d876-83ad-4134-8163-92840c24190c",
        "cursor": {
          "ref": "ec59907e-eb56-44c3-a3ca-a45dcef491cb",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3c742204-188f-43bb-9148-b0d5a8ef9ab2"
        },
        "item": {
          "id": "d000d876-83ad-4134-8163-92840c24190c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a6d9e7b6-1b43-47ad-a35e-5a137ffba66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45f2f05-2d0e-4142-8e5e-129700580099",
        "cursor": {
          "ref": "a022a01a-757d-4ac7-bb69-51b45a770bb2",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f08fc8ca-1618-4130-9fd1-378315a52f5e"
        },
        "item": {
          "id": "e45f2f05-2d0e-4142-8e5e-129700580099",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "994b88ec-98c1-4627-b6a9-da76f811933c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a36668d-d9c6-4c75-ac56-7593a89de1b5",
        "cursor": {
          "ref": "73a735fb-649f-4614-a7c4-ff5948ab1620",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "09ef7688-fe0b-40b6-970a-84ad7bd7717f"
        },
        "item": {
          "id": "2a36668d-d9c6-4c75-ac56-7593a89de1b5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3c6be818-3464-4389-aa92-4c2757c71313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cc11ee-7906-4537-9261-ed332ecffb83",
        "cursor": {
          "ref": "8fbc2871-8103-4ba3-bf8f-6bd9c0b6c975",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4c0cacb0-8a48-4d97-9961-bd72381ac16b"
        },
        "item": {
          "id": "e2cc11ee-7906-4537-9261-ed332ecffb83",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0fdc1bc0-0184-46d7-a30d-a6b12817d3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72748610-1648-4ec2-9927-50954891f87a",
        "cursor": {
          "ref": "b5c0b69d-1677-46f6-9bca-45faa5851e8f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ee3733fb-02dc-4738-b090-2fffce876704"
        },
        "item": {
          "id": "72748610-1648-4ec2-9927-50954891f87a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3af2d158-a1ba-4d69-8a03-f60232174dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5dc5d1-2f29-4c0e-a90a-15aa6f95470b",
        "cursor": {
          "ref": "f2159548-06bd-4184-bf9d-97f69723ef7b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a70e5fa3-5247-4599-8979-7a71f6a0f95b"
        },
        "item": {
          "id": "9e5dc5d1-2f29-4c0e-a90a-15aa6f95470b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ac5d1349-562e-420a-8974-31176345473f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c61b495-a2bf-47cb-a1ad-e48c8d4f9150",
        "cursor": {
          "ref": "7012a047-4457-45a4-99ce-91a93c817214",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f91e68b0-27f5-4e88-b260-055ed7ff70dc"
        },
        "item": {
          "id": "9c61b495-a2bf-47cb-a1ad-e48c8d4f9150",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f9e23368-4dd8-455f-a00b-8b35eabda63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcbb28d-6b5f-4a2c-adf5-36c2fe37beb7",
        "cursor": {
          "ref": "9ac679b9-26a3-47cc-9f80-b2e9233c37a8",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d88c0cdc-33a7-49be-a0c7-190736373f9f"
        },
        "item": {
          "id": "1fcbb28d-6b5f-4a2c-adf5-36c2fe37beb7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d4fdade8-615c-46fc-b02e-49164f5326af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b67bf5-b466-475e-9693-27cb9381d66d",
        "cursor": {
          "ref": "352b208a-d190-4d66-8d2b-dfe577b17047",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "059c6ff5-949c-4373-a946-bbef4928990c"
        },
        "item": {
          "id": "c8b67bf5-b466-475e-9693-27cb9381d66d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c0b7bac1-06c4-4e1e-8331-79f95a389b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019b37e6-9aea-4467-90e3-3701fafcfcbd",
        "cursor": {
          "ref": "5c2b370c-a368-424e-9d80-fda3e19ab9ba",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5a04c6ec-0da0-4d92-8757-89eb2e518de3"
        },
        "item": {
          "id": "019b37e6-9aea-4467-90e3-3701fafcfcbd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f1f93f7d-0f3d-4422-ac78-bdcdef181d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5efbca-e2fd-4e29-8181-6a03bf0b75b5",
        "cursor": {
          "ref": "75497bb6-77f4-42aa-b6b0-ad8946a96333",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aec463eb-752f-4582-a9f0-f07b0d1fd4b3"
        },
        "item": {
          "id": "5a5efbca-e2fd-4e29-8181-6a03bf0b75b5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "92d98f39-a2c4-4d04-972f-8e1bfe53bc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b6db93-6c50-4344-8cb4-9f47615bf9ed",
        "cursor": {
          "ref": "c6191ba1-5141-408a-bde4-dac492d55a73",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c8b196c3-0026-4a0f-b485-921237922cff"
        },
        "item": {
          "id": "53b6db93-6c50-4344-8cb4-9f47615bf9ed",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c391ea10-0daf-4c10-88f4-5ab234112b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b7b178-d4e4-4bb2-9fe1-3a332546b3d4",
        "cursor": {
          "ref": "85650d2d-61eb-4f65-bc5b-15a123a5c6d8",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2ee63dce-e5a1-4467-8d68-45c07c03e3db"
        },
        "item": {
          "id": "95b7b178-d4e4-4bb2-9fe1-3a332546b3d4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2d8cbfb6-ae05-4804-9924-def48d8d1cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373e8035-9e46-46e5-9914-ffd29af1daa8",
        "cursor": {
          "ref": "80ca9379-0256-4da4-9cbd-904741bb0721",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d5eea269-a318-42dc-b776-675556664e37"
        },
        "item": {
          "id": "373e8035-9e46-46e5-9914-ffd29af1daa8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "52c75cc2-ac4d-4404-82ec-d6277fbad566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9541e5ff-d23b-4afa-a491-2ea70b6c2af8",
        "cursor": {
          "ref": "01aaa0b6-ead4-47e6-8771-d60d6296708c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e88fac7f-7e38-4bf5-b60b-1ed2afe1cfc9"
        },
        "item": {
          "id": "9541e5ff-d23b-4afa-a491-2ea70b6c2af8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0a56c263-7bd5-471d-804f-9cd5610922a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a8bcd9-4302-412d-81bb-98e90444c8c9",
        "cursor": {
          "ref": "e3cfe622-4669-49f6-bde5-37aab329c3c6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2e328808-7af9-47f1-a9b6-417bb2a7dbec"
        },
        "item": {
          "id": "91a8bcd9-4302-412d-81bb-98e90444c8c9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b26b7731-0182-4fd3-b9fb-65e8f6357be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26be2dbd-7764-485f-82a0-f330d5ab7b20",
        "cursor": {
          "ref": "dcab0a95-075e-43d5-b111-2293d980d89c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "09d379d8-3d84-4d9e-aacd-d6c729586fdd"
        },
        "item": {
          "id": "26be2dbd-7764-485f-82a0-f330d5ab7b20",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0fc30a43-851d-479a-a943-233b48f221cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8951f8d4-38d4-448d-b1e2-58ab25cdda1d",
        "cursor": {
          "ref": "e2943d60-28a9-424a-8720-7a8fec613b87",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4d286ebf-1cc8-4ee4-957f-3fe6982d35ae"
        },
        "item": {
          "id": "8951f8d4-38d4-448d-b1e2-58ab25cdda1d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "561e0f1a-f076-4daf-8ff7-c031594fd909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0414d72a-8d00-4003-a5ff-14603541ba57",
        "cursor": {
          "ref": "ca40535a-7b08-48da-bfeb-0fc199b6597d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "373c6eb2-54b3-4688-852b-1bbe4d49c586"
        },
        "item": {
          "id": "0414d72a-8d00-4003-a5ff-14603541ba57",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "21d0d603-dbf6-49ad-9d2e-171eb3d44946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308de16-d99d-450b-b9b1-fb8ba8846cb1",
        "cursor": {
          "ref": "e7b10f21-aae1-462e-b08f-86e5697b0ade",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b4b1cbed-5818-4905-b075-ce5d619d44b7"
        },
        "item": {
          "id": "a308de16-d99d-450b-b9b1-fb8ba8846cb1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4c366ff7-47bd-4c5e-af60-177c02a7a919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bb6de5-c90e-42e6-bf41-a9e063c770de",
        "cursor": {
          "ref": "7ad05083-462e-4355-ba75-f30ce30da458",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9a57728e-32fd-44db-a31e-30c102d52a27"
        },
        "item": {
          "id": "06bb6de5-c90e-42e6-bf41-a9e063c770de",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5643d3fc-9fb3-462f-8dd0-8990ffa583c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38c3bad-ae85-4f86-8f25-bf6af3345a77",
        "cursor": {
          "ref": "b31f61be-139f-4c03-8608-a7abde7722dd",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "19abe1a7-8bb3-45e9-9feb-b92608d1f82e"
        },
        "item": {
          "id": "a38c3bad-ae85-4f86-8f25-bf6af3345a77",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "798e7174-ba56-4e9a-8455-f26c7f320ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664f5645-474c-4912-847f-52d4bcdd68b8",
        "cursor": {
          "ref": "d61bb2b6-0b66-4189-aaa5-0f1cd367508d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c381704f-81d8-4ee8-aa9c-d0d8185faecd"
        },
        "item": {
          "id": "664f5645-474c-4912-847f-52d4bcdd68b8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ea1b13f6-3ed0-4926-a422-9637139744dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebf7fb9-319a-422b-8f92-04538cdb5e5c",
        "cursor": {
          "ref": "20c976b6-b718-4250-8ef2-6c1839ac57c4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "833c57f8-2524-4d08-bf12-a326c9892d82"
        },
        "item": {
          "id": "9ebf7fb9-319a-422b-8f92-04538cdb5e5c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "540f4667-ae28-47d8-b60c-f5ac95e2eddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0cc04a-3f01-419c-ac47-0afc20e9eb7d",
        "cursor": {
          "ref": "b6be5193-8ded-42db-8257-692e9e7f59d1",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "406c95b0-e597-4998-bdd2-f17dd212d72c"
        },
        "item": {
          "id": "ab0cc04a-3f01-419c-ac47-0afc20e9eb7d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "44e1dc48-449f-494f-91ee-2d1538efc0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e1e710-22ae-402c-8a7b-c6e1dfda5bb8",
        "cursor": {
          "ref": "34cbd0f0-8158-4450-8abd-e4078a8d0edc",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "00af0e9e-6d90-4d36-8f59-f29858fd1246"
        },
        "item": {
          "id": "c7e1e710-22ae-402c-8a7b-c6e1dfda5bb8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "17645241-0f2c-44f2-a401-ace08beee151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23a4c53-78d5-4925-9522-90c3f3af839b",
        "cursor": {
          "ref": "d0c00621-d190-4c28-a1f6-fbb0a873b6ba",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7346c048-9b6f-4386-96ad-8eba10faab38"
        },
        "item": {
          "id": "e23a4c53-78d5-4925-9522-90c3f3af839b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c55ff74b-35e3-4875-bc87-d7a4f754fa12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388ceda3-3a08-452e-be5d-44a4e0a089f5",
        "cursor": {
          "ref": "1b6ae191-e6d2-4e7e-93cd-4e270641fe34",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f8009deb-025b-4635-8957-e985e33e99b3"
        },
        "item": {
          "id": "388ceda3-3a08-452e-be5d-44a4e0a089f5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "96b2c46b-17f7-45f9-af38-2c67e49c5451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9220b60e-92ca-4146-9755-5873ad40f989",
        "cursor": {
          "ref": "af2a7f20-673d-4bf6-9da6-fe233b29ca13",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "902edf1e-1454-4977-85a4-27efb3d897d9"
        },
        "item": {
          "id": "9220b60e-92ca-4146-9755-5873ad40f989",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b6945685-bada-41a7-a8d8-5e06c516bd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1a4464-b202-4943-bba3-b6f673c40df9",
        "cursor": {
          "ref": "f4ae1a83-eb81-42ba-ac99-9d3481b054b4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3770be41-ae37-4905-ac3a-6c7d5879ec13"
        },
        "item": {
          "id": "af1a4464-b202-4943-bba3-b6f673c40df9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "358e43ae-452c-46d8-8974-1f047621ea52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c7ae3b-5050-49ab-b1b4-9a29eea397c5",
        "cursor": {
          "ref": "088d63d0-b2a9-4724-bc25-5c72f8bdffc9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b96f5fe4-e0f9-4a52-a537-650a566ed49c"
        },
        "item": {
          "id": "c5c7ae3b-5050-49ab-b1b4-9a29eea397c5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1894b74f-7461-4e69-b36c-6221b0894a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5dfe7c-4691-4e1e-bb10-26219eb13270",
        "cursor": {
          "ref": "052cbb37-2f8c-4479-8e3e-4d683171dc0c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7903fc9a-b509-46f3-a2ae-ab0ae3615f32"
        },
        "item": {
          "id": "ad5dfe7c-4691-4e1e-bb10-26219eb13270",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "00f8765f-06f1-4da7-bcf0-0ee91364475f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee46f055-876b-44e3-a409-037e387dcb68",
        "cursor": {
          "ref": "7cd3f299-83eb-4cc4-88e8-f8ae1fe28fc0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9a37584d-1df8-4ac1-88e4-4847d427dc55"
        },
        "item": {
          "id": "ee46f055-876b-44e3-a409-037e387dcb68",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "43c3d82b-ca17-46b1-a833-1323b0c0118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e62aa4-60f6-43f4-b1aa-c4a0a4c0b4d0",
        "cursor": {
          "ref": "7d0b56a2-a2df-4fc2-afe5-6721b72af4bb",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3bf4eb49-4dd1-48f0-b5db-cf299e1ec724"
        },
        "item": {
          "id": "d5e62aa4-60f6-43f4-b1aa-c4a0a4c0b4d0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4874c651-227c-403e-bd71-964e76946d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb56224-a231-419c-95f1-eb6fef6964a2",
        "cursor": {
          "ref": "15b0c02d-32b7-4b84-89b1-d10f5c2245bd",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fe0ce439-0692-4e2a-8da7-a1b72297134e"
        },
        "item": {
          "id": "2cb56224-a231-419c-95f1-eb6fef6964a2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2644be3d-ea09-4b91-b68c-aa0ad7c694a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f06e8c-abe7-45df-9e1a-305d35492a0b",
        "cursor": {
          "ref": "15ad50fb-5603-49f0-bf29-66ef6f0add79",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4782f791-0abd-43fe-a05f-ab8924ad000d"
        },
        "item": {
          "id": "d3f06e8c-abe7-45df-9e1a-305d35492a0b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ab67418f-1a2f-4be6-8095-6afcc60b2f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28615a3b-b7e1-4ad0-aef4-226ec295ef21",
        "cursor": {
          "ref": "6f3c9e77-ae5f-41f3-a6b0-d0e8149021fd",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7374201b-bfd0-419c-b910-6e13fe45e024"
        },
        "item": {
          "id": "28615a3b-b7e1-4ad0-aef4-226ec295ef21",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3e920c59-03e7-44bf-bead-bde2a6a560d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7f1459-da4e-41df-9011-66f7605ebcce",
        "cursor": {
          "ref": "3c91c8e6-127a-4b1e-8639-124e66015d13",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8cefaab7-10fa-4d70-8b4b-df0ffbc4448b"
        },
        "item": {
          "id": "bc7f1459-da4e-41df-9011-66f7605ebcce",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b9402906-ff92-4aa6-9b08-c31480add57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb8161e-9806-47a1-a61e-a45d8a8acb83",
        "cursor": {
          "ref": "a5f3b8e9-f034-4cac-8a0c-7e70952504f2",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3b6a3fbf-6f80-4909-bc83-bd3de88835be"
        },
        "item": {
          "id": "0fb8161e-9806-47a1-a61e-a45d8a8acb83",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5a3fc869-6774-4e57-81a4-f9a6a785000c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b19211a-33e1-4a2a-9fb5-0890b9eda394",
        "cursor": {
          "ref": "46deacfa-1ade-4ab8-86ca-b449f67dfc52",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e04f419a-f71b-45b9-b631-6301f2309784"
        },
        "item": {
          "id": "7b19211a-33e1-4a2a-9fb5-0890b9eda394",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3859fad8-5c7b-401c-8402-6abd6ac8ed05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc33ce7-800f-4c5c-9bf5-156712fe7f28",
        "cursor": {
          "ref": "2ae8aeb0-312a-48b0-9138-aebabdfcb2b5",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1537af34-f585-49eb-baeb-b86b180103d3"
        },
        "item": {
          "id": "4bc33ce7-800f-4c5c-9bf5-156712fe7f28",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9a1590dc-e6c3-45b8-8430-bc2900e324dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebb1caf-77cf-4bf9-a290-fa8ee2bf4578",
        "cursor": {
          "ref": "834355be-ff4e-48b6-a592-08106c88bbea",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "dd6d428b-9188-40b3-91ce-6873d58262bf"
        },
        "item": {
          "id": "eebb1caf-77cf-4bf9-a290-fa8ee2bf4578",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ea254589-63ee-44d6-ac67-b860eb50d491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d60a342-d3e2-49c0-8d1d-16651008d40e",
        "cursor": {
          "ref": "d3bf7559-9878-4db9-ac28-5a688e0dd827",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0b867087-5df8-4abf-b569-d51468de28b0"
        },
        "item": {
          "id": "4d60a342-d3e2-49c0-8d1d-16651008d40e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "53a09493-9dd6-4cfb-86ab-5904a0db5aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d342e5-a912-4849-986f-7bce8c68cf54",
        "cursor": {
          "ref": "c66293a6-6f40-4600-9255-eadf0a19d896",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7fa1550a-8562-44f7-a8bf-4325b0375f67"
        },
        "item": {
          "id": "d3d342e5-a912-4849-986f-7bce8c68cf54",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "28f78402-db7b-44d9-939e-5834a6769e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835eaeb6-1748-49f7-aa22-73ade4609dd8",
        "cursor": {
          "ref": "8f0d1019-98d3-4368-86ca-6ada2b0b5ecb",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4a1a8d9a-64ae-4bbe-89ba-e169cf506aa4"
        },
        "item": {
          "id": "835eaeb6-1748-49f7-aa22-73ade4609dd8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ae719b1d-dd81-4f8d-84d3-b4e38ddccc88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6c7931-e869-4971-b674-46beb6c76fe1",
        "cursor": {
          "ref": "3d950bb3-81b7-48dc-907e-feb03c3cd27e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4269953b-488c-498c-87fc-fde8bc08ea2e"
        },
        "item": {
          "id": "de6c7931-e869-4971-b674-46beb6c76fe1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "19f1e364-a707-4404-91d7-1f7e7b6bdc7a",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc2f641-b9c3-4e0e-ba5f-64e3c53a1243",
        "cursor": {
          "ref": "8e2181ca-c248-4682-a2a3-cc863a963148",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "84af28c5-1799-4d48-89e8-cf52edb242d9"
        },
        "item": {
          "id": "cdc2f641-b9c3-4e0e-ba5f-64e3c53a1243",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e2172138-7aa7-49d0-a068-1d0d78f1842c",
          "status": "OK",
          "code": 200,
          "responseTime": 1953,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b8aa7f-4c70-4b7f-99df-a420540baa9c",
        "cursor": {
          "ref": "c7742f71-aa38-4d73-9eff-a917572be7c9",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "645123af-2a7f-44ee-9ce7-95a47d15bcc5"
        },
        "item": {
          "id": "95b8aa7f-4c70-4b7f-99df-a420540baa9c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "101c9c02-74fb-4744-984a-7ee7f027b495",
          "status": "OK",
          "code": 200,
          "responseTime": 3737,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb73715e-af10-44bf-9147-3a8e56ab1852",
        "cursor": {
          "ref": "a791a9ef-0559-481f-9e61-21ccb8f1af6f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fc9826cc-c1bf-47fb-a68a-70ad3c9b2604"
        },
        "item": {
          "id": "fb73715e-af10-44bf-9147-3a8e56ab1852",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc9bff01-7a04-4bfa-8cde-327d09bd37e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb73715e-af10-44bf-9147-3a8e56ab1852",
        "cursor": {
          "ref": "a791a9ef-0559-481f-9e61-21ccb8f1af6f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fc9826cc-c1bf-47fb-a68a-70ad3c9b2604"
        },
        "item": {
          "id": "fb73715e-af10-44bf-9147-3a8e56ab1852",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc9bff01-7a04-4bfa-8cde-327d09bd37e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7b8ab1-0c54-46a3-8ab9-f7a21e3527b6",
        "cursor": {
          "ref": "d8c32029-2b9e-435e-a478-7116999eb525",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2a34802b-29cd-494f-8648-40a9297bcade"
        },
        "item": {
          "id": "9a7b8ab1-0c54-46a3-8ab9-f7a21e3527b6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3acf9e72-7001-45f2-bc2a-ba95a9a839e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5e0724-9742-4507-a6b4-888197af8c45",
        "cursor": {
          "ref": "8eaa596e-18da-436b-b727-578e5b86e8bb",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d6f80dec-bd77-4464-b122-e09b01771813"
        },
        "item": {
          "id": "5c5e0724-9742-4507-a6b4-888197af8c45",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8888faab-660a-4572-98a8-e9cca201c62d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}