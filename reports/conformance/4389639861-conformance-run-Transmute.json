{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e6f0f324-bfbc-48dc-9e43-b9d18201564d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b4c8d422-5c6b-48cf-8a16-9b16f114c290",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35e33068-2587-42db-9eda-6692bb1ea60a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "97091960-93ed-4e1f-9d54-9127103c3671"
                }
              }
            ]
          },
          {
            "id": "084c9f56-10ae-4a00-a9b9-b5fd0e5c95e1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2889bbf9-af15-483d-9984-2574b80fec7e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "093e6e70-c2c3-404d-8726-9825a1ce8488"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8f536a22-355e-4ec4-89bd-a0664bf490ee",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9556c4d7-71f9-4d63-9f27-20513f4f4e43",
            "name": "Positive Testing",
            "item": [
              {
                "id": "224a8ad4-e8c0-4d82-92fe-a42599558746",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "863ecea0-7fc8-4e94-b66e-a5411ba4f173",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f08bdfa-651a-4c79-ad6d-fd3ccbd21ffb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50a85c05-e72b-43e9-91a5-2301e54f86b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2689379c-1775-4eb8-88af-f82675d94201"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bc9bce54-8d90-405a-a2ee-6dd774679615",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9fd3db8-2412-480e-a732-1ef333b8dfee"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b64fce5-a803-4e0e-a989-5cb309eaef7c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "964e97a5-2eb0-445a-ae2f-3fb1c8e89a5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de9c7167-2a3e-41e6-8bff-adaf8f8c965b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f494636-be24-424a-b652-968a8c3ebccb"
            }
          }
        ]
      },
      {
        "id": "f6b7ed52-9dd9-4739-814f-e7e01515d92f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6b9cbafb-ede9-4772-9b6a-aecc21ed1d97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e96a1fcf-ce7d-4759-ba67-607fa4dd09d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f4419ba-0bab-44c6-9e18-bb0ec8b8c99e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f04fef3-25cb-4264-8bec-e79460693a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ce13cc2-1084-455a-b2a8-0afba10a215a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d703003a-1aea-4236-b3b9-10064f3757e8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc88a483-b75a-46fe-bc51-f40dcbd88040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92ba5af5-c806-4117-bef5-f1e45932acaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830de102-5a5d-4e65-86d4-8b22cbd1c445",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2445a5d3-2dec-43e8-ba11-2a530c8dd986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc69ace2-b79a-4619-85e2-35d8693324f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "013d4991-3de0-4663-b084-63dfe5d26f42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63eb68b4-02c9-40db-892d-ea0199ecf528",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946d57b6-2c40-4381-9150-9d961db3a2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0945242b-9eb8-4119-aa70-0334845c69fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab2fc35-ef29-4e7d-97c9-e5b6433548fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0777d04-cd72-4be1-aacd-790de5ced56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3464b9e-0244-4ec8-859f-33b9abb1eccb",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d11d248-cb9b-452f-b4cd-f429ef429906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17e6f841-7342-465f-9d61-1ae67e2fb606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70da32a5-29e4-4e54-b3d0-9975b501cfd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a16f1611-0039-4d09-ae89-391419c3427c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8a82ab12-977f-4eb8-bc31-2d778458e880",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7eb3c733-5922-4b7c-abc7-5a8c0ac28514",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6010a3c7-15e1-41cc-a73e-9b413fad7c7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3a3f26b1-6656-4913-80e8-45aea4308203"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4699105a-88a1-48cd-90ae-dd01cf14a37d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9b7af851-b563-4152-a0bc-b73753731d49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b61724e2-8f35-4b8b-9d30-10c51d995fec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c37013ef-d64b-4167-a8ba-29985e9dff4e"
            }
          }
        ]
      },
      {
        "id": "e81af9a0-f4f6-4d65-9f00-bfbb02893aed",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7b334067-6d5f-4626-8649-03faa2861f1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25eaa1a0-de22-4acf-84e4-1b5d480ceee2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d62eeffa-64ad-4d88-b8f8-1b6968643939",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb09abc-812a-40f8-93bd-907db832f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350dcd18-4df1-4763-94ab-bcfabb862ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f827e6-d6fc-47c3-b028-aa714ab47d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c887e3c6-5b3a-4d76-a2ae-69b75171ff22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dd413b-8c41-4131-93a2-43fa107e2990",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98db9e37-8580-4ce3-bc91-471803e07e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a1413f-40e3-496c-8be3-6de82af17398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770c4415-4892-46fe-b816-166624397325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "356d7eb2-33bc-4d15-9e1a-f40ed22f58ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a033fc-c157-40cb-9096-c1c91a670c25",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c36e19a-7749-445c-85b7-8f954b498197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa31d16-f67a-4f0c-8c7b-689f4c8fa6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d79bade-dd2c-4146-8169-988bc53a6f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34044a1e-4f80-497a-8084-d94e8e8950f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96054fb-3746-4523-85bc-42c3d2b04c1d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd10c1ee-6635-4fe7-8fbf-8ad3e52acf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca26942-7c76-428d-9105-626b61077df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bae5390-3eab-4457-834e-76f363059d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa41a9c1-019e-4b8a-8c5e-a78cd61826e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0c2e32-26ea-4343-8af5-d3d6be465559",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11272e81-178c-4601-88c3-a56e68982943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4abf663-fe06-44a1-8dc0-646f0a98e693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5ef73b-b0cb-41f7-b8eb-d032d7f1825b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "493705d3-a884-457b-b859-948f1c3f908f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e575eff-af31-4c86-92c4-9741f7bfc4af",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b1e494-8415-46d6-86d1-8df7cdc81827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa531a4d-69b7-4e42-b3d7-7dc98e56aa3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc237ec-e424-4f1d-81f4-ec229af7a123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b6927dc-96fe-4008-8fad-e79f5bb4dd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8756e08-87a7-47db-bb6d-b8a7630d35fa",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b032c3bc-fbe7-4b83-afbe-b11899eba3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbb41c8-4095-47b6-93f3-2520f6954cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cc450c-68e2-4ae3-94d5-b8041d9bbe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6add821b-60af-4382-a3ed-c1127b2294dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db58727-d5ef-4ae7-8152-d7b3fc2db2d8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c235119b-f7b6-4b16-8822-b428cc0b3f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a234c8-0e10-4410-995b-ef59cd6fd7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a60587-559a-46a8-aa36-9fad25f3bb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65ab1cf5-e97d-4ac9-93cd-8abfcf3de95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010c7212-95ea-4e71-a31f-2aeca84cef60",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360484e9-e2e9-48e1-b1d3-b7fc6ff7d7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2255709b-e90e-401f-ac73-da44787d4511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfcfc4e-6aa0-4b69-a738-58b615950231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d52d1ea2-565b-49e4-ae72-5a4eb999e68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a6b949-00e8-4867-b153-458b41087206",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e665bb-e825-40cd-823a-57995b8ba51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81a19fd-cc1f-4aaa-beb2-b2a6b48f947b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87f6c82-34f2-4960-a920-f6d336999522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c576702-1289-4b0e-960e-0223e294b4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8d7ce8-87fe-4428-af69-80b27278bfcf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714a56de-4b88-4ca0-99a7-d14e800a3709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4071f2f-2975-4bc6-9ba0-956aee9b9ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11a2bbf-6207-4453-b7bf-b51e7f2f36b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f83a3317-f5e3-4594-9f79-3fa4acb5f5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56de27c-0e71-4b32-9ba2-72410b4ebf59",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f541235b-667e-42d3-851a-5a5ee3d3369e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63ec882-5987-4665-8ee5-a913ca1765a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a647978-2b82-4ce8-aa7b-da87f11269fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "490905ba-e980-4b7f-9c20-35842ef840d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab69eb86-5ded-4dbf-a3b8-51e614c2a604",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a2acb5-1d53-47bc-bd76-a32b7e23dd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0899f6-392a-47b7-8df7-069427aae9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a959341-e696-4871-845b-2cd52b1790be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99a689f9-8810-4fd5-b767-814df044347c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2877dfa-2713-49b8-86d0-cc03d1a2f84e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dc73e7-2a4d-477d-8d16-5f873ec0f47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a94e6a-0022-4bf5-a998-a84a311b3794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541c3cb5-528f-4fdf-b2ab-5a5b62895290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65f76b14-d621-4b2e-b6cd-48a7e3d9c3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba4c4ce-8634-415c-b989-892e45cc4935",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2780c24-08ee-46c5-9650-f1ce04fb27a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d908b9e-c455-4510-8122-c81512366161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8c79de-affd-45c8-9fe9-73aeb8c5ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c27ef233-4638-4a01-b68d-2ca4703f521f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa0ac5d-5b7d-4ab5-a30d-bafa938aae8e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e83e14-4728-4c1c-ab90-6526aba38b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46221122-32f8-4022-ae45-bacf8cc03f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8e84de-e884-46e7-a445-9b13aaad77b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef082f98-f237-4b10-b1e0-445581f35284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978a3b2e-8b36-4063-bfe3-c81fdfdbd2d4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e783dbc-99ad-479b-a022-c34f5012f2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8e2cb6-6dc1-46ab-af2f-e3e08b45e261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c7c359-305f-443d-9895-73cf69fed96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f82fafa-0002-46d0-958b-32ccbe567cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3c166b-9d17-4369-a917-2783097bf333",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f63868-b657-4bc0-a744-ce682a83db48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17670b4e-262f-4f86-a33d-76be887dca54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431d4527-5318-4771-a4cb-87e1fece233f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1afb9d-c436-442b-bdf7-8ba7b1b1c998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5889c8e-6f7f-45f7-b2e6-48be50782c62",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b7c41b-12e7-4e3d-a969-e8920b9e7717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0864d0-e517-4d61-b969-87b85174900d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929b4702-6d4b-4580-ac4e-2597b8c49faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6db42b5e-5868-4088-9f2d-26bfa8637a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1eaad78-4962-4b24-8907-500ec2f8125e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fa77dd-3212-40f3-87e9-a0806d5392f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12350586-5338-4c93-9651-92f2a82a57ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5809b9e-584d-49d6-b7c6-50dbe1fddf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "872cbfca-554a-4c8a-b1e3-687f59bb373b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec3a17c-d1a9-4f44-a3d7-f584dea7c42e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5bf902-bc31-4945-82d3-7a136eff0b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf797f1-475a-42c9-9dea-3a3704cd6d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba94c57c-df5e-4f79-ae7b-fcecc2315464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68652528-45fe-4ed5-bf16-2fcbf5a92e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f44250c-570c-4ab2-a94c-042befb05af8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1f9fb9-b836-4c16-80ac-df3b2a5f63ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd78550d-1ed6-4bd9-b0fb-5680a41eaf01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c305434-0e34-4017-b22b-d8e8c5896cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c8338d-4390-4198-aa25-5e09a5e46fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007f843b-ffdf-40b2-9ae8-48ccdbcfbf1e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1992df-c507-4275-b6f8-5c1ce2653313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8505be4-121d-496a-a257-cfd3a15f2a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8abf81-7950-40e6-9681-259e5ceee905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "705852be-d866-4967-b167-8a14744c0419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c130358-321b-4130-bd89-70b283d98319",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17c6246-3dbf-4eda-b3af-defef01c3eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b539fb-3301-468d-98c1-20f8d9d43a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f908b4a5-8a00-4c5f-88b8-c82eeaef07c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4495e2eb-799d-4592-be48-9d39e4b88892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218acfb2-898d-4c88-8ab2-0a420d1d2011",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2267b7f-009a-45c4-b473-470fb5ce5464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add5f13d-b5ef-4347-bcc4-7adc79cfdf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e9fa52-59cb-4a04-a86a-5fb9f58c9289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ae456c-01c3-47e7-923f-3347160357c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed4a3de-abbf-4dd1-ad17-c605a94bca81",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb6df3e-3ac8-442e-9c9c-e1adfbb58ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef09757-0e98-4313-9b82-118b81ac7703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6df69e-d4c2-45ae-bb49-5be79e20a096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a37b76-916e-47ce-925d-85726fbdb4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe29bee-844c-41a3-bf83-af8a3ed874cc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f872751-00b5-449d-bb48-8631710cd477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8c00a0-52a7-4488-8329-df18bd878f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cb7b93-7f2b-4152-b74d-266a542da700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f280413-ce72-449e-a9ed-cdebd63f90ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bf2465-0b04-46dc-955d-a1dfc0f4eeec",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4a0f0f-8821-4598-8283-550f1cc2dba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e1b7ed-e209-414f-9d5a-9d2904446f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f154ba-5ad8-4a37-b8d9-48e965a289c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbdd166-4e11-4998-996c-297e4234ff67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f373865-59b5-4149-8a8f-63e0566f94e5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bd807a-238f-4cfd-9cb9-a7a746e72f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc27fa1e-c5c8-4afd-ba81-5f7b7efdc279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8fc3a2-748a-4e93-adae-db27128be88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c10ade-2f0e-430b-8a9c-546fd6a33f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310f5d20-3f97-4a92-8535-7fa4e8809ecb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8efc46-549a-497b-9a49-22a6eb1a8d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bdbe25-7167-4772-b61a-06ba25385a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009e1231-0ffb-4be2-812e-e1f2b465a496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "96ad96bb-ee6d-4ed1-b409-3e81b68e879a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d10e75a-5004-4953-8844-614c2b83e43b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8baf292-32fb-44bf-86a4-f44316c75d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d92d0bf-96da-4daa-91f3-7fbaf21cd254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f338d8d-cd0c-466a-bc64-3ab5f008771e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f947007-5c1b-4269-85f9-94543bc27e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ec9af3-2d8f-49c4-9c86-5522d2ddc421",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de46c6a8-476c-48d2-81da-dd4b074dc58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59a7a9d-0afa-405c-8f36-47266d5c8196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2cca7d-47b4-4554-8662-85626ec56f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a42e6ab4-f7fb-41de-8888-d60d81ff6a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5f29d5-afae-4f3f-b128-e0fb2c162f21",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5465197-181d-41f0-86a5-d4d7020b302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0b2874-9b86-464f-bfe4-753fd9bbb829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f3c46c-b793-4fc1-ba26-92e527a152ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0140de2c-7178-4b75-8b8c-8f903925201e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ca5ee0-e167-45e7-8182-d51d0dec2f11",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3825e3-4332-4371-a259-372b61927b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4116f7-0f7e-4fcc-b496-744aead2a4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1896fbb-988d-4bde-bc48-13f6ada0dfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a56853f-6398-4163-8ffa-465ee61ba647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013d3b32-90f0-4381-a39a-27e7b10330fb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a91fbe-cdca-4dfc-aa60-9bc388e1d3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a479e177-c5f0-4196-9059-944cf8e3947d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2204ed57-1359-44d9-8df3-279d42b804c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3916feb1-47e8-4f7a-a548-2fca5eac6e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7732937b-dbfe-47da-ac4c-d214f7da02e9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5470b67-1774-4f10-b039-5a18e9145847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90ec9e1f-4ce7-4675-97c8-a53a85888d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d87fc6-98c5-43d5-8186-77205460b5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "954b2bbb-f2aa-40ec-8c0e-66a9f4c24831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87050f5f-4040-4cc9-8952-aec91c695d68",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bd4011-980f-4cfe-a801-a6ad1ee0c70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3500407-8634-4a51-9e31-390894e7cef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdffbb54-f957-4216-80a9-3ba0c49c4e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ad1a5e-2eb2-45cc-8635-9a23810d4788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0f7141-ab8e-4f71-8a76-f2e2f516c89c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7a3a3d-ca02-442e-8f01-e505aad95bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b85a073-161b-44a2-97b1-b58d32e61803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8588ec1-541f-4d0c-95ad-a65bf9857042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d542d5-5632-45e3-9b82-616c26c8eb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7544b3-7530-434c-a767-da119d181dc7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8f3e2f-6fff-4119-86f9-83c1852c52ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1676c85-4a40-4637-a5b3-b2ace96460e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff22c4f-8627-4350-9870-f23ec1a7e6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cec9d3c6-0dfe-4a7d-88c5-307225af10d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3858bf87-8f1e-4e11-b2a6-73812cc38a1e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4863cef0-5eb3-4c72-9b0b-c6c821bac4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b144552d-4f99-4039-8176-754bfe5feaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39596987-df28-4612-86ea-5add34c07ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0530694b-c443-4c16-bf48-1d14df2d7275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37fea5c-48dd-44f5-a6dc-a75c56d8254c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2eb549-b2b6-41c6-a9dc-c0ad0d255db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e26f9e-7b89-4df6-8634-923d09055ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5859a24e-4b35-4abd-99f1-5ffbee98db3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "44e2a656-2cd4-4acd-82ae-be90ebf90eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc9a01a-3bcb-4423-8cd0-760608e6e6b9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2882be-8ff3-41ce-b3e2-cf87e686350f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656cbdcd-01b0-48a1-a902-caba4a968ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a284d-7e33-45bc-853b-c8587afb48f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "21bbe475-6373-4ae2-9cda-4e4e1994e0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24e1666-4cfd-45c7-b673-15ff8d7c6e80",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d084085-4c27-4e88-b374-1276197a8b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdfd52e-59dd-486f-81d3-9016c572c078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf6ccec-bb27-444f-8803-fac1d6b9f4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b95e727-6ea2-4a6c-ad6b-d0c1d2da6baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa12cc03-db37-4e48-94bb-e5b1ab33f4aa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a7c1ed-7340-4288-b23e-2359b0933f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6381ff1-7cb2-4491-8111-8003b101d44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7276b107-dfa1-46c2-bf21-96957041d151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cabd2b5-2c3a-4f2a-949c-a0f0374bb106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f9a75b-ac32-4f97-867f-79689901ab60",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3734d3f7-1d7e-419d-8961-d0eb2b478872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fa319a-31ee-4b6a-9ccf-ff97e7cebe34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeddb1a-9a00-4340-bb43-2015def8184d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0628cbdf-13f7-4d75-969c-3ad473648a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7685abf-410a-4831-8232-63cd9f659cea",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b3cb89-4b38-429a-a5e6-e3cd05689a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abcc0dc-19cb-43a3-b314-01520f836950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b44f1a5-80c0-42ce-a23a-d6ea9777127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82895537-3405-44b2-a87e-79f2e8d73f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e129a0-2f40-4a65-9d29-d7957e3bae0d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035e6c12-94c3-45b7-9fe3-6653a37f0b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974dc8ae-f67b-4f7c-9193-581e78e6c6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9141e8-09b4-4767-8529-6af1a074935b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7793dfd9-31b1-43a5-8552-a76afe3a5a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88e56d2-63a5-429f-8905-9a1c63fecde0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4136dfbe-96d6-4dd9-95e6-b2f9213d5bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d175fc2-a6cb-4ef6-8c48-e8689a6e7912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e147ecef-1efa-4195-9828-83e725906119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "963037fd-bb30-4418-a44c-5f015aabf03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b39215-f57d-45cf-8e8d-f25a4b120a76",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb7523d-8970-44cf-b9ac-71ed91226aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f3249b-aa43-461c-8336-0b95e4b9e3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b583323-6c16-4b6a-9b7d-9f48cc0a768a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "156a0c58-5183-42ce-9e75-186b0a312679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4642b9-51f2-4746-a8bb-cb49d761a77b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce82b2aa-889d-4eb5-aed1-a30219265c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834b6f83-17d4-4c60-80e5-5d772a50186e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de7d519-d5a0-4b94-8576-01a1516e58b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cecfaf6-e545-43b3-a51e-a9d21dd985a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95d3e54-4bad-4f3b-a4a3-9acb39610320",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370d4427-1076-40ed-8c19-65117bc092e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6473813e-2cbf-4cdc-9adb-df00a9041612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c204f365-be66-4bab-b240-804828a42118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "403a9dec-1385-4ab7-ae49-b4923f1b4bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c986201-637a-4762-ac63-e048d957ba02",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085a686d-7f0b-49ba-9bdc-9847082a37d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abbca73-591c-45c2-bc05-0f4089a2ed30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e59c269-0bfa-432d-ab5d-b6707e5d25e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe84e599-591f-4400-9a9e-157f53283e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ecc963-766b-4bdd-abc2-3af47f8b6a73",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746e9070-5ccf-4f86-aa90-cdaf2780657a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419021ef-035a-4ea9-a685-bb50563ee043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2a4328-f928-4cc4-80e7-4788cb1d0883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c82f89a5-d975-4b39-9c76-e2154e56b913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516aad7d-55c2-491e-9b91-992089808749",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eca6d15-2d88-42c3-adb2-93f438cc1c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f62fb26-fba4-436d-8dd0-6569265866c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4aad92-2e8e-4caa-87cc-632e9e50ea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb67eac-1ed7-45fe-a7c2-46fcd6876219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a63e94-5614-4f23-9089-7e07696cacfc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989c8269-8d45-4271-a183-8aea0039d216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c307564-ece6-4f01-9aab-9aba24198aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6c6dae-42d1-43d1-803e-851129e09d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0ddb0a-e543-478f-8006-871e327b0e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3917b7a8-4d75-4b6d-93f8-a36ebba2a023",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedc9717-f04f-4b0d-a541-1431d4a645d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d95c85-6a53-42b9-bc49-d35c3520d63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba898257-7035-4363-828b-715e76f74cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d4d7de-066c-43fb-bffc-68feff0a2bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32908483-fe47-4812-9b39-861a4cfd65b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b61e97a-141e-4091-af90-00ef8e3de2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4486165b-73f7-438f-8f00-02776708d385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cdbf9f-6449-46eb-9836-8cd4ceb4a7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1c7d36-f690-4adf-a3c3-c0686f4955f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaad801-2879-4b22-b779-24cb72604758",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfba1880-28ac-42cc-ba5f-b75e6d8cc129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b7a618-f09c-4abe-ae15-1423407bcadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e5f73f-8a0b-456e-b070-dc14619c4665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8428d3-5af0-48db-b52b-e425491401be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb42ea5-55a4-46b4-abfa-cd25d462db4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd3e441-dcd8-48aa-b546-8531d501b92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0ea54b-8723-4cc5-8c69-eec6b196adf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e10a0b-45dd-40f8-8c43-954bb6590c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98f54138-c31f-40d0-b134-a9b23ee4cf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7f7e84-4ffd-45ae-b67b-0b9c44da635b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4caccaf-e3f9-4025-a7b6-e320227c59c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86e4b61-46f6-4725-8770-b911a82b35fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55dd26f-cb68-4522-a0af-87692db77ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3044c93-e34b-4121-b84e-aa90dcdace14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea141a3-e5af-42b7-9208-0654ab663f96",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae9a25d-0054-4a94-bdf2-1063ebae5800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947ba867-e675-4972-9576-935953262757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdc2b39-b8a5-441d-b858-862169a9d77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b512ce5f-35a7-455f-962f-ed8a8667d4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6dca5b-5ef5-4592-ba22-56bbc168ee54",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdf0cbd-7cd3-4b8b-b6da-0c201078e85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc37f554-50c2-4c2b-b774-4c817f4c2974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab8b1b6-bd73-4fee-b64e-cd78c827d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef4cbcb-85f5-4867-8114-5234ad6d39df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885cdf39-43d2-4ec0-830e-dfde09b8a4d1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97991f0-8892-4d03-adb9-12e09294740b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68139c2-0bd4-4f96-a920-041b536a2e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82df8460-5863-48fa-bef9-5703940caafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec7aab2-a18c-4241-b5d2-a25898599611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10cb2e4-9377-4e26-8955-07909da651c0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb31388-6591-4cb0-b86d-3338a015035e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed63463-9d2d-41ff-9a2a-1e9a25a8075b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45787ee1-2076-42c8-88b8-4f03817c82a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df1bbe05-946e-447f-9e5c-d9f964570c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9949127e-b418-4a43-9014-75ba12b10825",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7a4ff2-bfcf-4f01-b670-1f5c0b829dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1490aa1-7582-4390-b7e3-dfcc7d45ad7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee3ce04-b71c-4f30-9a2d-9a1be9f5b7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab036049-7103-4755-b366-30fe6332911b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1ad3fd-4a43-401d-9d71-c26fa36642c3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35448246-dacd-43dd-a11e-78d6919c71ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f751a3a5-3c69-46e8-82fc-e0379e1fdf0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1928d17a-cdd5-4b21-9ace-00560de1a813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb522c5-eb7d-4abe-a705-847a1e02a454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7a1b20-5356-4419-b8d7-766872dc2f40",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f67bea-9a9d-4a42-a643-5b1d3e6bc5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53635b6-19b4-4f02-9c59-35a753c42247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3e84c2-7aba-47b8-b679-a61911b83da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58fcf101-f13f-438e-a6d8-996fa1cbb617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cffa8b-7ea9-421e-be0d-f4e8994695d0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b425fa4d-30fe-4447-babb-d4ca192b3c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8f4fe0-c1bf-447b-83c6-b515633e8e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf6f366-a3c4-4812-8731-c457940da265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2941ceff-81c1-4006-9ea6-9517dfc4a51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5945ec-41e3-4f12-be74-b4e7adb3b9af",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86371769-89f0-40f4-9740-f4126f932c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25be9d43-f088-4a8b-983e-6ab86e8689e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e597f92-8179-47db-985c-32f0ecc16614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69920595-4de1-4306-9dbf-fe59767ed465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd696a50-db6e-4555-89b0-ebdca458946c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c270c28b-e2cb-4311-96cd-1af8aa9c4e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c73e8ce-558a-43b4-a823-27c5cafcfceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931a8e9d-956d-4ba2-b2b9-c80b9dba11be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ab9f2b-3e2e-4196-89f1-c160cf8e69e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc18546-65b2-48c8-84c0-18d82c76b6dd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32565bf-c754-4e4e-8899-65da966d652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b8f1ea-8d49-44f6-9e73-76c003779b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7098c84d-6fef-4d3e-bb9a-35b2e389c24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe01048a-80de-4ba2-af2f-4f58d868c1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c1a248-6d94-4eaf-b238-7279603709f6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b869528-a766-4270-a336-fe4c870ffc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd32df0-bc80-4a1c-8ea0-7c2c6496d1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6bdfdd-18d6-4a60-874f-bce7703f0b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae5a134-8ac7-4d6c-b896-8f809c4c7811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5515fb02-fd82-431c-bf88-f0e1d33543f7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76d7fcc-32ce-49c6-bb4c-67723504efdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5cc5e2f-7069-4678-babc-dc5e6abffb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae506c2-21a7-4853-858f-d661034349bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6640e42-556c-4bf0-856b-35444b0cbe8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc146288-366a-4e1b-a418-db5433ef57e9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb94ceb-aeb3-463b-99ac-0613a096d9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ba7431-c440-460a-b70a-81fbb416b424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31a28aa-e5a8-4f7a-beef-c262284adffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82e3e64f-036f-43ac-ac8f-d8703f0f5bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ca991a-ebaa-4810-a6cf-ca2c98595543",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2e67f6-3b1e-4e61-9d00-3a501d904717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416e0fa9-25ef-4145-ba65-5563e9659825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832f199c-071a-4b38-8b2a-b67c19f5abc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "867294f9-ef94-4d40-8ed5-b0613af1a82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c702276-321c-49e7-9c81-19235fe41b1f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9575fe95-4c6a-47bb-954e-0fa101cd0ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8f95bc-df38-4a49-9c4e-8be2149551de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97981172-d9b0-44b2-a93a-659f21a63159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3260f7ef-e166-449c-8cc7-9b66b347d27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9631e811-f860-4e66-871f-f14f303acddd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dea3b6-28e8-492e-9c8e-a27a3fb5fd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb2e04f-8908-4e7c-9631-498acf2433e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8af98c-1e0e-4c52-9106-d80388fa93d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58e3bd8-92bd-4896-81e0-f42079017c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dbf5b2-5d4a-486a-bf2e-6a6d696ebd00",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e6f157-17be-40a2-96f1-e28f2eb20e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c82a5a-5f39-4dfb-8c34-bc78401ef1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9228ef2f-c46c-42ca-8419-4077eb0fdce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "400fb17c-987e-44b9-ba7c-01094da9f66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129536c8-9349-4f17-b47f-900eaa715e1b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a17ccb6-92fb-4a83-9d73-4504fea51c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c74d817-81ff-4cd5-934d-89f6ec883e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6627987c-60dd-48ce-868f-57b4a8310c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52f4b889-7668-4fe4-a2be-6a8477fedead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b18e17c-e09e-4d3d-bc16-8905ffa84b2c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73849097-6177-421e-9ce9-d19e7235b147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889e78ba-c242-423f-8490-b253529deed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26954cd-efc0-4e4b-a7d1-2e0f2d0c2350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7d5f22-6072-4f24-95e9-14608e0d9069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8573e444-925d-4aa2-8279-b855ab0acd24",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf59686-cc5a-47d2-bc87-55448c9737e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54b2c61-cfc0-4a93-95b5-d5f51678f392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a077ab-a034-4472-9309-d360fea4a90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11ea055-c6bb-4924-baac-56d6204d7918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a17914b-cc4c-415c-b2f3-737e44ed4eb1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fe69ae-c2dd-4c79-938a-20874658cc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdbacc1-dd3b-4a42-8842-e3cf362d1b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f25020-3c28-4afa-8638-6fbaae46e8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7511dd-28cd-4437-86f0-d9d36c449b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41c271c-783c-4327-9728-59c16dd88fac",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6308db-39db-4847-9a66-41739dfdfca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d19507e-59e5-492c-9e10-b3fd205fb329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed260ac2-7d1f-4853-8a93-6eb0219ca5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aecbb512-021e-4c87-b3ec-8fc4c7371c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4635f5-837f-4948-8383-e5ce42c80dbe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e665d53e-6f0a-4810-8d6d-ce9558739bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f9b366-7ee0-4c1e-be1b-cdc2438f76cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e867dd-3ae3-4390-b23b-5a4d2280591f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df189571-c3be-4549-a935-47c6dd88f227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a3d319-d7e1-4f6c-9fc7-d5fbc5750944",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73964d6-6861-4dc5-b367-289dd51e45d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7139be5-a5bd-41d7-8015-5c8236f6d1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64679736-ccdf-46dd-9db4-51de453acd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5250529d-c4ee-4245-b576-eb8ecf598b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047df247-e71c-4d29-9c91-6e98e3bd02d9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b415ea-7e2b-4fd8-bad1-fd4f47faefac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f96458-38a7-442d-a6b3-69b8cc0f965e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7c624d-e3f6-4f5a-8fad-0149a8a222ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3db228-a81d-469b-a2be-c5cbf3765eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c7611b-0c99-4ec4-b860-93257d31e3e0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1333a1bb-b5a5-4f6e-bd76-cbc143e232cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e18c07-0638-4938-b015-64c8b9b572a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62622cbc-5266-4d06-8a77-45c4c17fc619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a31965e-d8dd-4e1c-bb74-72a91ab2455d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d3c7d6-410d-40d7-a12a-7b17e43d926b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eee2e88-ce19-4c74-aada-db40e571188f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64eeeba6-a8be-4e79-a360-72d5f44cd74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14673e3d-e8af-45c1-8d35-6c005c71ddc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a733b68-bb71-4e50-acf9-e4b3a0cd6fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d03a29c-6a33-4720-8f36-9c36cc172b85",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b63367-5706-40b5-afb3-1b0307debc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a1838a-6cac-4f5b-a4e7-06bdf367bf75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f0a7ec-30fd-48a1-87a0-3f17eb4737a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cfd35c-031b-43f2-a557-14febeba0a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f34ed1-7e91-46aa-806b-b5709dfd7174",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3845f800-7e35-4c34-ae84-a38aaa6bea1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bed8dd-4f03-4627-bc1d-34eceaabfae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5306c751-bb3e-4dc3-a722-ae920ce8455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8041e838-8b3e-448f-8b27-e8ad930fbacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2473892-ccec-44a9-9ff4-22da6bc5e232",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884fac3c-1e2f-49d4-b0ed-c9c2ec0ebe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e88776-15bd-40ae-8728-666c2d9d9c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6709e836-1e2b-4d52-93e8-58792b11d154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a55dd5c-aab6-4569-8f1c-5abff0b1de57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b83cbf-0594-4333-915d-c914ed2ec4d7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7540ce82-aba9-4927-ad3b-b53d86354473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b86e49d7-c97a-4fab-bba4-8b731ed579e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4d11f9-76c9-4e3a-a6e8-94ad1836bdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2218b171-1338-4aa5-9735-5227e8f06551"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d14914d-2a6c-4eab-84ec-04a4d0c1ea6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2034877e-2174-4f9a-b768-c0ab9ccd1839",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c0f6de-fb61-4717-a270-b0ef48883560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c74e3d7-8e43-4c18-bea0-94a26d7f5012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559d42e3-3142-4aa3-8fd1-a1765a3efaee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e71efc3-2e5d-4532-b2d6-b4e5a16f4ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f49dd4-83d1-4492-9eb3-279802d9cdd9",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b135444-d543-4a9f-bba1-0ce52874be47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b78dfd8c-e632-413d-aa93-085c6ae9eab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67619f9-17a6-4c24-879b-58b9b234b44f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a83d63b9-e792-4ac9-b887-a48031568167"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "683d99d6-114c-49b9-a44e-83abbfa2cf30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c5119fa-03b5-47e1-bf41-51026376f405"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f66369b-b73d-4c97-9d05-d7862c1cac91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c628efc-85e8-4a64-87b0-88cfd9758775"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34e9046a-0368-4470-a43e-9da0b65e0356",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b003822-87f9-4311-90a9-7070a15c8fee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f0e6a70-63e8-47e1-94ca-f9e3bd903778",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5476e53c-8116-476e-b8e6-d0232793ae54"
                }
              }
            ]
          },
          {
            "id": "fbb48f2a-edf1-4d6f-8c7c-a11ab4643fd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6403b876-48a7-4032-a76e-2e30df8e1092",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4d9415e-23b2-4fb5-b19a-e9313cb8b055",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afc4cde8-40c2-41e1-b31e-2ba34ea1d7c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67c0ef77-9365-4f82-9c29-a4f4acdbeac2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc738216-30b3-4bb9-ba88-f4934ba2d764"
                    }
                  }
                ]
              },
              {
                "id": "9d38350a-fc1d-42ac-9036-deaf5db92d79",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15f73eb6-6e8e-454a-b59b-f342052bdadf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96c34d2c-d6a6-44d0-9e24-85edadd37b68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a62e0bed-1850-4424-a443-37feb12b699b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3cdefba-7b23-4070-b796-195a765ab88d"
                    }
                  }
                ]
              },
              {
                "id": "749e534f-8ff2-4e5b-bbb5-34b9aedbe7ce",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd311168-d812-44be-8c71-2f91f5acc4c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61bbef6e-aa51-4174-8efc-5d664a053b7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77f3e7cb-61be-49ed-bb16-30264aad9f60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "881e5eb8-6bb7-439c-8426-90aaba8a9834"
                    }
                  }
                ]
              },
              {
                "id": "c3001e86-7f29-4844-b928-aa630441dc61",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "567813c0-f09b-4efd-be2b-f557d6814028",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5ca570e-9ed7-4d81-99cb-fadedd2dba2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf433d46-0cb0-489f-a5c1-234c3810aa01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4a3850fd-a914-41dd-b6f0-f5c51b77f0f2"
                    }
                  }
                ]
              },
              {
                "id": "70569443-e0a1-4e2a-83a6-e20a3cf9531a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb18def6-bf3c-4e82-8153-0f357882df0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4be91580-88ff-4022-b311-3e483fe4351f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec105fd9-f00e-476e-83ac-a101a3689837",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27896f26-c2a1-4176-a5d5-65d2631f5c6f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02957b3b-00c6-4266-8d12-581cd57d48bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05e09503-e4de-4b6c-8a41-2b15061b7499"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b34bf272-c4ce-4c6e-9e65-5c4288af6d9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "021dadb0-2c44-4b12-87d5-0a889056be2d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "661c76c2-a1e3-4ecd-bb18-eb8916916b7e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "42bbbe03-9beb-4d0f-a6e7-91a53b4c3d93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f979d307-ee3b-4919-bf4d-1aed34f9beec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "344c7fd4-036f-42a7-9870-55e685f724ee"
            }
          }
        ]
      },
      {
        "id": "41e4f912-7ef1-43f9-b0d4-02fda71d6c21",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "56f85b4e-7cda-4ac6-a08a-cca9e5c37666",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9a3f5c2-accc-4421-ba6c-11d696e4fcf5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65eb8593-f5a0-483c-9536-558da59483c0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566f88e0-603b-4b80-ab0e-3f420d0a744b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47fc32da-187e-4073-9f4b-0f8fbffec03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccf59e3-7902-4433-ba34-679d6310785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4ff4cd-0c6c-4ce6-95f6-bd7207f6a326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cbf9f3-7ee0-451e-9104-be1d5ba79f44",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1ed9c4-b8e9-4f31-9ecd-5cda8ad5c8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c32feb4-df1d-4e4f-954a-956bfb5eee3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12430ebe-679a-4abb-ac3c-3df4034b095e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "77754b20-0929-4c26-8b18-1f3caa41558d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767b37bf-0d97-4f92-9f90-7977a91e5bad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f04aa7-1f66-4bbe-8890-919f317b2811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06447ae7-cfa6-4c6c-8453-387a54ffacff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b61efc-c167-47fb-bb69-c9532ac99cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce16a8a-f781-41ca-af02-49a278d3c332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e0f086-7d0b-4ca2-99d9-ac35d8d1e081",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4818e18-4874-4959-83e0-a9effbe5c8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba63097b-1abe-4b33-bd30-fd09aa75f851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0816a779-fcf2-40d7-ba33-ffb0b27f1b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8924f4-61a8-46a9-98fb-18612885e4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd3964a-54e0-48be-be25-6b62940534b5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a47d44-e0e7-41d7-b5b1-e5c4f9149178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e355c5fc-80a9-4916-b081-2d370d72ab88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd0e873-1224-43e0-a840-aa4db8467707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "851c646e-aff8-46a0-9e5a-19c213924faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3681a29-fee4-434b-b801-6235983479d2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00704314-1972-429f-ba2e-9be8b0e60f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473ae779-cfad-4619-a988-5d37580cad45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ba45b9-58f0-44b9-84a9-aaf3af171c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5595970b-b85a-4617-a9a3-6187b24e86a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f011b61e-0061-42bb-8884-a53e0495f488",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6dc60b-674b-441f-a878-ed0ecd1d0f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afa8d55-b34b-445a-9913-dc18d40da9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e4dc8f-475e-439c-955c-14f014ece225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a495bdd-b07a-4b21-98dd-bbfe83f6f5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac233c2a-88a6-4569-989d-7260b38934ff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc380bc2-370e-488d-8b37-0b5cb8526629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20384566-da53-4e5e-be96-8a7244b5f2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab636478-5aed-4a03-961a-88d84a5d4819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec40358e-15b0-43c4-b545-fc7167e333dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e610d946-a4e5-4897-8e93-405b0df27d90",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e89962f-7348-45be-a4b8-ae5670a6d6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c359a0f-7a70-4bc0-bb09-5d1eaac5193d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd50a9e-df42-435c-b284-525724ce8593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f52117e-cc10-4d9f-8bad-26803bfbf063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e212ee0-c41f-4977-969e-07347e64b5ad",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b2d513-bedf-4b78-9c94-abd939043116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9b478c-f684-43d0-96ff-42f21312c47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79112eb-845d-43bc-9aa2-4bf48fb4ff51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7174cd6-5595-4c41-93e7-07cc17e5c44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a784ce9-5a1f-4a22-9a3c-2f9d6915c136",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd15fc66-ce4d-41d0-836d-140fcf319805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c87e82-7bc9-483a-b6f1-bba08e4dad7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85c7ae0-3b24-42d8-9641-3f08ea87b779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "491e497e-d893-40ea-a454-ae956ef6ecdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23faabae-fd8e-437e-a84e-851d7600e8ce",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427db91e-d3a0-4f67-97a5-359ac5669234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb3a340-5c77-489d-97ee-b99bd7ac42ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0be1e4-db1a-42bd-9bb8-416166c5006b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8abeb826-3938-4555-9ed4-c773afc5087a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d112e1bc-fdca-4bb5-b3c4-e86e8c1a4edf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217fd9a5-678f-4ecc-86b5-8b02e9cc4b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f83fab-0372-4511-9107-62f8fc904c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e324a4-8dca-4d14-b445-fed9f2baab15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1b1d37-c928-4e50-9803-910295d931b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6966e3d6-b2fc-4cb8-b7f1-8465a727a65b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c221119-aeec-449b-90f6-957d966464a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af60e3da-cb28-46de-982d-5c60bfd896ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a0bb76-03d4-402d-bb7f-b71087bd3a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22be9572-9c4d-4226-8add-74bf9c1d4341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756b7ae6-27f2-4ba2-ac54-e15682f0453d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20af23b2-1262-4b71-92c9-a92e8e2e528b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63335d4-6821-4616-b49a-ace1b6b38f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e9a6b0-a0d8-45b2-b600-ca50e1d54818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0523b74-eb33-4463-9ae5-df6debbd2730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0895a2d-7411-4b39-b938-5a0d0eaaf950",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95b0df8-db27-40fb-920c-6ece36c7e54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3ea549-5e9a-45ec-8510-bac11f1c45d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15371c0-c456-46a8-83af-887b3f4e87b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aef0393-7e78-47f3-a2d0-c35d07316251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f23a5a1-e895-42c7-9ff8-c677a3d9e5fc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f951b048-20dd-4721-bde9-f2892e8933b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fba3e81-b77a-4e63-adf9-111977578ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039361f9-247e-4099-b23c-326b79a930af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2f4abc-df8c-4d8d-9da7-60993a4a6212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a717e755-7e1d-4fe5-a10b-01792badb80a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef7e003-4476-477b-a387-526c991b85de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1a70b5-de2f-46f3-9995-e7505112a5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b27bd65-e2cb-4c6a-9646-24ab7ed5ddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6615b8-f1dd-44a3-93b9-cc4b465008c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7655b16-5e2a-46af-bf71-2445a767462b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27c5090-7ba6-4ce1-bf2f-6aba052a49cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b30caa-1796-41a2-a163-426f583c7f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077c11b8-fc7c-4125-88af-c61a07af0f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "624aa437-f681-4871-9b26-eaceb6981ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015d22c4-6b15-47f6-a9b4-6dc18f3de33e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a484a67c-be91-43e5-8afe-1dfbbea3fab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9042e892-a3af-43a4-b036-31c9a91d491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27d2ff2-9fb1-4ba5-ac7f-4a9b42efcfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d47e62a-25d4-414a-b031-b72070ea0a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26891c78-a7f1-4e49-8614-e05bbd68ebab",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8cd77f-10bb-4d73-9d22-3f7d3318320e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188d351f-49a5-4504-8889-b9e9bbe24ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e821f25d-1f0a-46fc-80c2-5a5c77937762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52e2749-c8f3-436d-bafc-19967b66c8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9c716b-5ebf-41f5-a4cb-79e51697ccf4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e71508-54f4-462e-87a0-f6ce6f2646d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bcd9bb-b56f-4c7c-b0f4-595c8e164785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b76a94-130e-45dc-ab56-752dac4bf6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "925fc49c-08a6-4d8d-b8dd-a9fe88c52644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22570d68-194b-496b-848e-4f1ac044d7ee",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a447d1b6-626d-4501-b032-59ddbafcbef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469037a4-0d7e-468d-b271-87250e56d1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce83dea9-ed0e-4d8d-8bcd-5a8b46702769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2355fe53-2580-440c-a327-70f4f2a5e7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb5a5d3-e65b-4e35-89bd-fcf390297107",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8425824e-817f-4e04-91b3-f8de43f6785f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1ccdf6-5270-490e-b775-376db734fa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0a0048-ef75-4a19-abf1-e6c62127230b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1e3890-fd59-4091-91af-d3bb847649c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2257fac-5ec4-4002-aef2-04da527de1c0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85625599-8b43-45b7-a0b6-01355338ea54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ba7881-39c1-408c-ae79-003800fc338e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8747fdc-507d-4d1f-af6b-7a43e8053153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45d244c-35ff-476e-a2ac-6cab471311c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2a32ce-eb13-46fc-9820-f63ada9586fc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1ea390-6591-4866-a183-853a97884c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cd87ff-2ac9-479c-8922-4089cf0bfdf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606203cc-3e9c-4b1d-8fe4-d8ae83b2bd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d998bb2-06fb-42f7-b9c6-719c19795502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f059fec-fe81-4aa4-ab28-f27084e52765",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c922202-9346-4d65-821b-21d640ec7456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c88786-98d7-4131-beb1-3ca7842ddb2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfebd9b-deb9-4bca-853d-8b25739c8091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e54d59-8f8c-40ea-8e20-f0a87022e110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4498f626-7d94-43ce-93bc-d1d1c394555f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad30bce-5f7d-47c2-9088-6c0ec9209bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d99b59b-7abf-42de-87db-4149261c7380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27da980b-bdac-48c8-9f52-10c9b5bae8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10a7b0f8-9308-4de3-8260-31f2070e8a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1542de07-25bc-43b4-befc-745e492d0e1b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f9be5d-f024-4761-b16e-3391066975d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fac8a6-5e63-4360-9921-18d61ecb6921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8159c6-b2c1-4a94-b489-eb9388083a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3a917b-3153-48ce-a05f-d09bbf58ae67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02f967a-641f-45aa-885c-a0bb55eabb22",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45edf21-921b-4f03-ac02-0a1acd199b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab8b8b3-1c8e-4424-b1d3-ae7276c348c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c0fe93-3d7a-4987-8542-3f332738a964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d921e6-ad79-4b7a-a87a-7058cc2df152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e474f5d3-d641-4654-942d-1fa7c9b58c76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa8b77a-8512-40a1-ae3e-88a7e4d7e54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd6a77b-15bc-44c2-8aff-5855574ec63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826c6299-40a6-43c8-abe9-e99560fb564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a2e2bf-6295-4069-916b-4d3d8711ae37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f7d951-ea6d-432c-a0df-bb9316dd4a5b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da034842-24f5-455c-87eb-b7b2276befcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bfcf97-a8da-43b6-97a8-ceb15d3cccbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff85770-c044-4719-854f-d4e148ec814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873974c9-fecc-468b-a7d9-ef07e2c181c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e0bb9c0-d0bd-4846-ac3b-9502fadbd351",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "facea6ea-ff67-401e-8ab8-0105c83d9af6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063ad4c4-2ff6-405e-a0d9-28d948995317",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0519cb-8175-42de-8954-b15c55280bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f9a6c2-d279-475c-95c6-fd6e946f01e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35f3563e-edfc-4fb0-afcd-81b33e761cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9637b83b-8a0f-4380-8875-2d0300d3cbef",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e388a3-8eee-4520-85b5-1929963dfd12",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7819af1e-643e-4be1-afc6-5ca053199e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f29a47-8923-4a9d-9a29-a62befbdb25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d77a3b5-93c9-48c2-802a-c55da7100790"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "107d1f68-e6bc-4237-a30e-a1bb4a2a6347",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3c4bc9a-9e22-434a-adbb-a10ffdf9ea74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "944d6e73-de03-4dc9-8173-0475def71965",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4b16985-c9de-4fc2-82fa-66fa1efa8cc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e8a186b-badf-4196-ac0b-e253618085e6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e10edcf5-fb94-40cb-a88b-2ef0392d8a2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f37d903-2671-4e68-9d84-60393b89cb74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fecf8e1c-4833-4544-b848-6ec2470438b1"
            }
          }
        ]
      },
      {
        "id": "eee4f373-be55-4014-9b05-8853a0cb48bf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6d7f479c-e626-47f4-8151-ad6c18f6da4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe085c9d-45f8-4113-8713-13a39339f168",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4e18e11-2e3a-405f-9ee1-4b8477b647a3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d74a5bd-b8e1-4e9e-a66a-f28c24847f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214521ef-ea9c-4480-bb41-2223ca400f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eead57-7554-486c-a056-36fc61411b94",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae31030-8a6f-4fcc-8119-2f5e336f620d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429255e2-8f90-409b-8e4e-e0bbbf0bbf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcc5e41-73a7-4a64-8f10-812d0be2010c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77784a8-cb62-4ee4-8616-280950037050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f614be3f-8c14-4fc5-b301-6ef9d4bd1168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fba24e0-ab3d-42b9-864e-d3acede762d8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813dd7dc-4369-43b8-b899-47232e1f05b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90f1045-1a6a-4708-8d9b-c78507afd6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b84261-15d2-4725-b4b1-8b9bca61050d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1ca3e6-d494-482c-9c56-e557f42a9f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90276aa-4caa-4746-83c1-519573126316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4002231d-b420-42f2-a0e9-913d99cba27d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b55ea20-9ce7-4c9c-9289-ec9653eb943e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2472d3e1-ab6b-4a80-8839-e19884d51d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2e2459-f2f1-4fef-aec3-1cb397cd3321",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04275a1d-c6af-4c2a-969d-0bc030944c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc48066d-f6f3-47fe-9a3e-8f5f0bebe36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb16980-3a67-42e1-be7d-5e3791cdf79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a2102a-cac9-41d1-b070-c467ce3ea57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99358d5d-04c3-40a7-93cc-5d5cc3df85ea",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee42f4d0-0de9-4b48-8859-216e1e469c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d9d1aa2-9977-42ea-9453-e9878e0653fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43b3245-783b-492f-b0bd-a677fda6385e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da65196e-5818-4df5-a500-6bd9493b8c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e70edb3-2a1e-4615-8749-9e8697f2d8b6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31e828a-a1a7-4d4f-9812-ae888bad3cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8f22f5-dabc-4383-83d1-cf033e43bc0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d844a2b-76d8-413a-ae9a-e704b5b1a22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa6b849-ba34-421f-a886-e55e1c96e004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1e8467-c9c2-44b7-8e39-908cfe88bab5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89592ba9-b489-4959-b18a-4cd54d95c28e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ff8baa-e8c1-45c3-8f8a-aaac0b801f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60282293-3233-4b13-b1a3-03ffee43e0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986950f3-16c0-4b8b-85fb-24a3d8da39b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da30726-b08e-4afa-89ac-e7ac1df60482",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab222510-5649-4a09-a32a-da2f5056d548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cd6ff1-4060-4ff4-be0a-c7741b812c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c837926-2d2f-49b6-bc62-121700746d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb7db04-063a-443d-b7a1-9419df7ce01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca64e0c-8bd3-4798-b1f3-ad849fda4215",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24399491-2757-4a51-a785-2409e9e437d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16031aad-973c-4dc9-82e2-78b4511022b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af662189-8a5e-4fed-9dc1-a58ae9a1e85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7502b1e-589f-48d7-be93-0934c5b02cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc5ee0f-b7e4-4b60-8f3e-2849b1c697b0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed476eb6-1f87-4cb4-8edf-c09fa9d18fde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f41687d-8422-4d55-9957-5e7bf8a81f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689d59c5-1774-44bc-bf91-813e95f813f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d4b4f6-4933-4d1c-93cb-34ccad2ed685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ff2bed-094b-46b1-844d-7989216df7cd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b432462-acf5-4d3e-a7e3-9457ca31567a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c22bc44-6e53-4b74-ae57-4b2bad16e8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a905d7f-d527-4913-93dd-dd5200b8c4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89bcedf-6a4e-4de4-b2ff-570c1d460e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27472084-7063-40d6-8055-74b0728a3629",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bf1e22-f376-47cb-8719-fffd62a8dcec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f031e56e-52e6-46da-8a4a-03d75eb639d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6c1a85-37af-409c-88b4-8b12fc12d2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3a46d1-6d4a-4616-8a63-4f7f8dd74b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e971cc98-0d69-4ac3-b92e-7b28354aef4a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb3299a-6591-43e2-bc0d-053d49c99249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c4c84fe-8be4-476f-a286-305335896bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8e2549-4000-4c9f-becd-3561cd28fe82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61bd540-be87-4ec7-a78f-896f01af381b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d9ac6a-b558-4930-a2e9-d2a2a529a878",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e11e7af-5d5c-4572-a87b-ac93544294e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08805a3c-2d2a-4fb9-8a54-04e7b8ca31cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe14ff57-2616-4862-b766-851efdbb3e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eed0ab2-4310-40d3-b0ed-e968ed9aba22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1829c12d-ea08-42ea-817f-6848f6685de3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367a4fb4-7295-4610-8159-45f9e24895da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54faa7d-25d8-4bc2-ae88-ca5e2bc177e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d29535-aff2-489a-a0c8-a47440004ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d558c3b3-7950-491b-b9b5-4895ba3112ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665d667a-943a-4529-8018-a019b7b710d1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1701b604-72de-4ce3-acfa-ab602d4a1158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d407301-64bd-4e53-b8e6-8dee13311703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245d6f27-36c0-4875-b707-3052b1491816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95158247-ea9c-4d65-9231-3aae5046a89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1deb0dc5-f923-4eb3-98b6-4cf409ba66b1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c0f40d-0266-4600-a563-881ead90e9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44a1485-fd99-41cd-a60d-597b079f8c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824294cf-fe63-4372-845f-1ab77767b0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b860dcdf-92ba-4c0c-b68a-065d245387d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0233f4-a391-47ae-a662-4f4f9ddb41bf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d53737-99ad-4af2-9852-18557bac5f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a70d7cf-2fb7-433c-98d9-4759ceb2d3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1c1eeb-65c8-492d-a4f3-c6d9ac2f183f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda62ef4-9923-4392-a583-8ef93a1779df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49fce14-c696-443b-9fc0-e681fd96fb53",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db5640f-256a-4d87-a96a-8986bdb4f202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a66717c-530a-4e90-a3cd-c83dc3b85e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f373ff6-ae75-45b1-9221-ae5c70b94b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903760bd-9981-4469-91ce-857f4fa6777b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a1b98c-321d-4045-a959-98e5b345576f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dca8975-f530-407e-ac66-b058bd59f56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf964e6-0489-4ff6-b2b5-3dbeed72cc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad4bd7e-2b05-4dfd-9aca-5dfcde3856b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9967e68a-7080-4a07-b293-afb07982c9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f369d1f3-bdc0-4a88-af54-886bb1ad4165",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f5141a-6dd1-4417-ad87-dfafebe7cae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc42f315-85c0-49a2-8c25-ba23638a10e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3983152-9864-4866-a99b-3cd12fa74a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5f7bc3-ae61-4b7f-b4c0-d6e1566f9ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816376f7-05fa-4ef3-bfe2-da82c5979983",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324cdbf8-1354-4b37-bba9-a3c91dc845f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f93ed92-3bcd-4e64-8267-f39e7acfa24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb429b6-78f2-42dc-bd3c-db0ad413e12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af50b7a8-e610-43de-adb4-0e31371e7dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a4da9b-22ef-4b1b-98ce-378718de15bf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdac05b-c9e8-42e2-851c-79683486bae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d66f36c-7a3b-41c9-8287-f83ccef4b2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34f0fe8-594a-48b4-b76f-93fda828bf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc8bc04-a959-47d0-bfa1-19dab71b5689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7299f7-e573-491b-b5bd-919a6d7744e5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764fc0dd-1706-461a-990c-ac40448ef584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a1d4ad-0dfd-43c5-824b-1d4b8bb81726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d434ba1-fbeb-4d7d-bcdd-7425c4a56412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c521e9e-2a19-416a-9035-859e026a0560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ebb596-8bd5-4484-ab69-ef8cd9a7aa58",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e80cba-b6a2-42c5-ae4e-94d0af3d6e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c93decd-ba7d-49ae-9197-de69f6f632b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d32267c-3743-479d-9fc1-9df02a41704a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcc11f9-9abd-42e2-a261-f6ba4f4aa61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcf9547-f622-4d74-a02a-c6253524386b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad3d52d-1845-47a7-b198-a9c6d5f5accb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae51efab-2878-4758-bf47-afdb0a2b9ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9bcc4f-2861-40b2-bad1-b77c762d2946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7538a8-71b8-43ff-bb1f-56b3fbc6eb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3d1bd3-a2a9-4df7-918f-5a76bd240b05",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956d782b-9f8e-427f-a51a-ffab3a45d614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bdcea6c-702e-47e9-9521-9bb651cca109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cb33b2-258d-48d0-aac4-04db4064480d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bdd395-3daa-4903-b122-eb26da40ad23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1ed302-131f-46d6-a600-d328f93243ca",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a22642-6e24-4c26-bb76-e1b132537abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50fab9be-4f11-441e-8219-fa8806c7b4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f372664b-dd4f-48fb-b9b9-954a33ae0773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0670a8cd-84e2-4eb5-8def-69ce5a3f39a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9300cb-47df-4952-8f93-52085cc0a8bf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0164bf-d403-405e-a7f1-e0764a092401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab1af58b-c4a1-4737-b0af-ee288ed604d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adcc4de-d7b8-4ba9-bbee-37ffb562b95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53bbc81-2db3-44f6-a494-f70db93a071b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3c9f8e-20f7-459a-8de7-416aa87391e5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1253778-6022-4488-abe2-f54315bb1ed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a1498e1-23d1-4920-9d0a-7a36b88cfbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f75585b-98eb-40ba-a877-aef2fcf9733a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1978a70-049e-4615-ab9e-1643c1f32e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b665fe-affd-46db-b13e-f2f241a9e2dd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf549bf6-43d7-4644-b968-9b43cbd7c574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695dd497-5322-4582-b084-4af548d88244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd773db5-46e2-4efb-b427-0f6430eae175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3d687f-decc-4538-8d7c-26800ac55921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77afd921-1e09-4b65-b958-990b03d94a59",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87363ac8-b39f-42ed-acd7-f249705dcb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52e471d-f45c-4709-a14b-71320095b1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92457c6-c923-40d5-b52c-cddc04fbbd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e67eb2-472f-4e89-8884-90b302e3487e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c148b4-8074-496e-b8dd-61a445e021b9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa5eac8-0dc6-4bfb-b02b-aa49ed3a965b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7200cf-db86-412e-a80b-48d2d5e5e14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450d4ffc-2bdb-461c-851a-fb9037e518da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3227a46d-ff73-46f4-8076-145cfd691d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f85e9f-cad2-44f8-81ad-160fc21e69b5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b67ae8-f6af-4272-9ca9-82409b7e33f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1cb310-c7a7-4e60-ae02-9cb5854f5f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e84335-53b1-4d55-bc6f-c71b1176f4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e13d52-c439-4c64-a870-1a6862d5235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b950b3f-e828-47c0-83d8-b54219b01c71",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed4ea7e-f618-4037-b4af-e66f40904236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286c2c46-6da3-45fe-8b98-e4aff30d2a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dfe885-939d-4259-8682-31adafcb67fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aaa4d9d-3381-4cf3-92c4-8c5f099d7c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1215bece-6935-4e26-9c13-e4482c18be86",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7165c142-7bc1-47e3-b5ff-be5da77cc54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1057de-d561-416d-9e8c-ba95dadb1634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6762c2d8-479e-4a2d-8f1f-2c3ca9cceaf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a595a1c-3018-4358-8b59-6e25977e564f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dc8f20-819f-405e-9e65-784b78680c2c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a262d93-d061-489b-b0fc-252a1b158a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c0bf6a-8710-4664-9c00-fa0a420eaac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaeeec74-89bb-4dd9-aa78-2f82f8cda154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a152f1-65d5-4f2b-bb0f-c461d1de76e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40011515-c799-46a2-b267-37352bdf4fc8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6642b5b3-22d2-4dac-ba92-5c6bf7877fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8946d3d7-96c3-4ad6-a5a2-4734dbeac7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacfca55-3c32-4f65-88e3-6af678d9a6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b2d32d-c841-4324-ba3c-35fcc8557d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cc7caf-67d5-426a-b43f-d91d54c3aaf3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88c550f-6385-4b98-bc1b-c3fcf23da092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdeb9ef-e632-42fc-9b6e-e13ef48c2774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d52e524-b8e0-47c6-882a-7d201afc3da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8669361e-eabd-440d-b931-5d62d30f90c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5efa57-74bd-4bb7-81e8-ada58c785960",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e650cb7-caa4-4ab1-9176-b5ddeda237e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8df3fc8-5bd6-4599-a823-b55e7bd10dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d3ceed-2d4e-4c83-bf0f-046df172ac31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fe4afa-7b27-4017-b2cb-9821c8f64e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1d878e-190a-412d-9cdd-28ea21a4c65c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8668fb0f-037e-47ed-864d-680de7e6c933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab6f8e5-073b-4c32-8d61-fcfb59bb945c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7767a11f-7c0b-47e6-bf07-0e931c6b1b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbd47d6-cc6f-42af-8bbf-6695a891c512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad4dd35-5e37-4420-9ed8-587be90d7136",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd838198-b32d-4bcf-b496-96c1e004d515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ca6a5b-0582-495b-83b2-e15e7ce84665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b311b4da-1291-4cc0-9aa8-e244ba24e467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc33535c-b249-4ef6-89cf-7c0e11a25148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1752b7c9-b5ce-448f-813f-e59ce185b8cd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace95043-1858-44d2-933b-9d723ae41b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0908d40-39af-4848-81b6-e4b4d7e27e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6d7fc4-56a1-4725-999d-b09b1e71edae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9558868e-fb08-4a51-9ffd-092373e50d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275344ad-03c9-4fba-80f0-4dd5e2efaacb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac650bc-36ba-44bb-8a46-2c366bd77dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44f061a-a2d6-4fa0-8969-3a5214607acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cbb1ba-22b5-4eb7-98d3-1d708a44e847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8fcb31-d6cd-4484-a797-7342f6125291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76571422-0500-48a6-a2cf-f0be56d217f4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efae3eb-e79b-440f-ac80-7607ef41847a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c140063-cebe-4a9f-bde3-b347245323c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47b5f30-1dad-48dd-9b37-9db3bf99dda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab3ece6-8b02-46d5-a1df-bc6a650ab5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a7c5e7-8e20-4fff-b226-3a99ebef01b7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032c2445-1bc0-4668-a7b7-1bfa3333d3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb1e5d1-d46e-4d91-9534-89f93392f3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe41311e-c858-45a5-bc1d-c66ad8c91b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6c58e6-e1ad-4053-8637-9791b792f0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877a5a8f-82d4-4b04-968d-78caf3d4e8a4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480353b7-9505-407b-9163-832f9c582296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851b15bd-57d4-4166-beef-3a766c0b2ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d920d43-d8bb-46c8-9a56-85750aca7649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e742b5-5cb6-4934-9d7e-26473f532ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f01a47-f396-42ba-906f-cfa784e98af4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e97b242-9d4d-4074-9d1a-c50e0c0fcac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f7ab97-51f8-49e1-8d36-253508177384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dce04dc-a373-459b-a878-94819ef72de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8016aaa-9cfa-46ad-a025-960dbac020fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6e7efb-e07a-4c53-a5c8-650dad25a76b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ac9f11-109e-4d99-84e6-bb2176e28ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff27a49e-07bf-4e79-a819-f25f47ec87eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56756f2-b988-432d-a01a-a87afa0d09bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f8cc92-5982-46c4-b3aa-87305250b969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1304ab0-3cb5-4b03-b2e8-8c75a478ee78",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89ee424-67e0-4088-88b9-8cd0d345575d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff8ac24-f578-41ab-aeaa-c84c7f06ad0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011d42fd-d63f-4b61-9232-55809ff97ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9189d967-4e56-4e95-b45f-d18e79bf0aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e775a671-c481-44da-8b13-093cbfd9c04d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17e0f4b-9f30-4a4d-b49c-ffcf7a5e500c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7da641-c7ea-4c54-8a46-308e38be8214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c126eb-ebee-4d9f-b42c-16d4f5873171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc90b77-f847-4290-a775-e6986357664d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f38774c-8aa3-463d-a241-62e70f946ac5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66605db5-ae78-4c83-bc68-1eca1ad593cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64da0d8-bea9-4344-899d-94bbde9780d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ca9dec-65dd-4562-8533-abf438cdef33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfe2500-ea00-4299-9a3a-a9e1b19e943e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4226315-a26d-4d08-b90e-6b5d6f274205",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f63871-6e40-41ae-ad30-d4396946b5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde6dc53-1b5f-4ccf-8285-ac4de4a1843f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e79c01-04af-472b-b231-a376de57de8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab453688-7543-4f6f-a9a6-da87989cad41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d18819-4c1a-4732-9f86-5317c8334190",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1144d4be-81e9-4600-aaca-bb1bf7e74a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe89f7f1-6206-441e-af42-4c65a985a669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9738158-ac9d-44f0-9d37-ddbf58d466fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b9aca4-8130-4dfe-ae67-4044c660401e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8aa304-e9aa-4707-a5aa-7337c40efb01",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54865530-44b9-42d4-8f8a-53f96d8dc5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0a12bb-d713-471e-856b-b107b21d5217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e077ce0-100d-4795-9353-2d7f45711fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b732cd-03fb-4a1e-b3e7-5f4f3b53738d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f3087c-61fd-412c-ba48-d562d14b2c78",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff6c496-1e97-49e5-9dd8-9569cbb1c519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75c1373-e0c9-4fec-8480-49efb555a893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c7e196-4109-485b-8a9a-445516c94b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd295f28-1b16-453f-bce1-8011441648b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c7c5cd-be19-43f4-8fc4-22534e27ddf9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518dac75-3584-4d3c-bd06-78d912c6f1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3feaac26-0e46-4cdb-8511-d47b6f4fb7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730f4e08-e04f-44ab-95a7-0aee19a3107b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31008ac-4e43-4192-9efd-210605cbc197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67db12f5-86fe-471b-b988-fb0291297202",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6052bc-9509-442a-a4f2-b09eb0301f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21d8383-e023-4ebe-8f33-bce5a4872a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0db2da-083e-407c-a9fb-1d979b1b3cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b146130-1625-41c0-8ee1-8a398f92d113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fd130b-9016-43a2-98af-884e6b7e8fed",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609a353f-af4e-405c-b6b6-6c5db2a4dc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4dee33-10a7-4371-ae2e-737ea2cf404f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c70ed0c-7e53-435e-b384-a8ecfbe1baa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124179d9-1ea9-4c53-a1b0-ba3086206503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5eed59-f284-430c-be1b-d1f5a91b9a2a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62240fc7-05a9-4a8f-b33e-33abd3a0bd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c16995-02cd-47ca-bd70-0881143ca5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ae918b-ed07-41e4-b589-f673fe6daf1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b921f94-0a5d-4fb1-be3a-285240b4e13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5971dcfb-5039-4eae-83e3-c2fcb540fbdc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dcb610-639c-4689-aff0-4d1853a736bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9f7072-6ee8-4b10-bbf4-84054cad8fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc0f762-b462-4ac2-807a-84990ddf2d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f20646-b65f-42b4-8224-4a421114feae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973fda7b-d775-43e4-a518-e7ec755f8c99",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d2387b-d8f7-4adb-8bf3-32f87a1e3ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f6c6ca-fabd-46d7-87ff-a2c7eb389f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77143d4d-3ed0-4204-b630-e63c7d860b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896b9404-219f-4d23-a02c-b690c7b5155f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f359cb-1ee1-4cef-95d6-bb37f9031f5a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d738a83-2e2b-4550-a5e3-da88887f9643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0a560f4-aa59-49f9-a5dd-3ee31295ecb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c235d089-fab1-4fa1-ac47-894a009e18b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de89e79b-37c3-4407-976a-f91fde7a092f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98771d98-49fe-49e5-8265-8bd7196e0016",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8254b264-c5a9-41ba-9d05-a567da8a678f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf360a1-9b98-4a6e-b6c6-4d2ba5587d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924f6386-84d0-4b5d-8e35-9015030ed5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225435c7-c072-449f-ae5d-3446632c4816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e7b4c4-6ff1-4289-a3a0-4c233cd622f4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48a6509-7387-4093-8e8d-62f8afe2943c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad1fa8e-164a-48ca-852b-3bde60984810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6823e175-5e27-4f43-af5d-8e90a09a3821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0af295a-28f0-4a7d-b07f-6bd484441b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d41ca6b-4bb7-4bd7-85cd-5aae4b2f0fb7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceafa6a2-ae88-4d15-8da7-24efe3ccb387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a596556-5384-4b0a-ac33-80fe03b2244d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004e6d68-feb0-444e-928a-19b0dc7ba81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4d6e3e-b6a8-403b-8fc9-7aa41c03e658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdae9360-c987-4378-9f3d-5ed731983b38",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b67e86a-9981-4d15-a5cd-a8745b77802e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35394771-6556-4f94-905f-439ea5db8284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8646eec-2c32-4884-871f-773a658a8617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4575164-388a-4fcc-85b7-acd1d212ebc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098d9c58-0b79-4145-8e61-e4838f8b3867",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d10795-0a7b-459b-8e63-dc710fdcbd24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb95dc1-0e85-4cae-9266-4841dad7100c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19d9337-8aae-46d7-aad8-5da7d91bf137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b8afa5-780c-4da2-a234-19f49a1b32ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f17ebd9-5ca9-402f-bfd5-4d91f3010a4c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe87198-af9a-4039-ad22-209a8a08ed95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f48cd5-a1ff-4dee-8f0e-4e94e690863b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0247feb8-97c3-42a5-90de-7c38f5f762c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a94948-1f3e-4fb9-8f0f-040a966696bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99741ff-e80a-4ef9-9ba3-0c8d7baf7a65",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d28dc1-40ba-4d45-8aaa-96dcc0208974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e240d1af-c30f-4649-8ad6-3082f124e219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e203a9d-2496-4a51-abfe-0542744dc113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1312ad4-5dec-4b69-b638-3cbbf5a27625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78765d13-8766-4812-8177-b21b13df05d4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349d654d-1784-4521-8d82-3e1a09e6d941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5cb43d-a3f0-456d-8292-66b610b92f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2088538-5415-4a07-9739-59e7c7a4c5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07696642-de82-46b5-b200-e9b14f019820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816e36ea-8c8c-4a9b-950f-cfbc646f5920",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e1607d-d059-40cd-9b92-ae42ff7052cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73252a0d-a159-409c-b4ab-65e5e4fd7d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752077b5-cbf2-41ad-a6e9-1e6b98728bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5467491-db56-484d-8f39-66cf7c420368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca40d0d5-8764-49c5-ac54-a1be9ce3b58f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1492929a-b288-4506-9ce0-b564032171bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b47520ab-62c3-4292-bea1-03f43477dda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec422347-53d2-4817-952a-fd2bcd21624b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55962301-768a-4b85-af0d-beeb5c4001c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7535489f-c6b9-4dc2-b795-fd718a3bf513",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea89a735-8485-45af-8982-814f4fb9d028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb94a984-b4fb-48c3-81a3-0e727ae3fd9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45a62a8-64d6-4e5d-9f0e-6b90bb8c8746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a05583-b99e-4605-b8ba-f6b7a079356c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c792924d-b0fb-419b-aad7-48dff5eaccc9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85d7b48-e8b4-44a1-a041-4d188ad4f879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8af603-953e-495a-a62e-ffc42add74ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c3d9d5-88fe-4c68-814e-5deb74f5883e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858708e3-7a84-46dd-aac4-adab44d05198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb88afbc-0b90-4c08-b2f5-4a5c228c7ce3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520a9aa4-d1f8-4b32-aba2-dcb5c8cd10b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee51adcf-9d7a-4737-95a3-b113047d52f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca756bc0-a5d3-4193-9f13-dde85525681c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337135f0-e9ee-49d9-96e6-9ecd098b45d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8dc2fe-09a4-49fe-b251-b3a7197961bc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae694954-6391-4597-883b-16c6530f21f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5a9a98-4402-47bf-8804-6b2069c38aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572f47bd-937c-49fb-9345-c734403a6bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a79bcae-a33b-4b23-ae99-23b10d92379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e06921-0901-4b51-8912-0c88669e3bff",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b17af1-64f3-40a5-b9c8-b8cc734d2e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a3b8f8-a552-4c1a-b6c8-95abd048c7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3bad13-3d8c-4f7b-8aed-13262af0045f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6491ea85-72d3-4e08-b797-63c0a75544a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e220ac8-31fd-4f1a-adb1-3ee672fb36da",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a97ba3-e161-4140-b3cd-1d04563bf21c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a2dab72-b0b1-431b-bb75-3584b070c415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c594e16b-7e5a-4383-b554-8ee671297332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedc1ecd-c901-4242-825b-a7391729101e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5692feec-0a38-4b52-ab2d-981fe8856eb2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f3af91-a448-429c-9015-a09295d07f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ca4a7f-3085-4cd8-8090-3d713c3c2bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e05e65-1847-4129-92c9-c5596e18cc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d79563-8f8a-4753-9da9-e2d41cd7673d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438667da-621e-4e68-805a-0a8c7fd63fe2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c31253a-1686-4272-9f17-163c4face023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e425ff7-3c85-4704-942e-7f3c835527f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d615d44a-cbad-4b00-96a7-b3ac59c7074d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5140ff6c-91c6-47ec-b631-5a02f24953df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90684839-1005-4115-bfc9-780d110b9c6a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6fb6fc-bcb2-4611-9d86-0074be450298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d9e574-a06b-4154-819b-23a36486e854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e66518-5392-47d6-891c-5d69c39cddfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9f7cc2-c119-447d-a784-aaa8a522dc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c546de-58cc-41bc-8f0e-36483efbbbe1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ff3800-003e-4fbd-aa2f-67ddf74bcee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f82c42e-992f-4550-9a50-e2c17b927880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92707dab-a371-4b44-8b3d-e534afeba866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b025182a-84c9-421d-9738-cf406bda31b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52872abb-d9c5-4d5c-95fd-7df38225a98b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b291c8-6187-4d81-bbcd-29ed2380acac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6107c5-101a-4fcf-9c23-e3b0232d05ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6714a4a0-795c-4d32-8f2e-205972cff5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d45ac02-be3e-4f75-9cf4-c6a0b1dd9cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937eddbc-f128-43ef-a623-de2e6f327431",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8150e1-f51b-46bb-9eb5-596f4e089d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6833f3-69c9-40fa-a9ce-27e42ba52419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac5d660-4cc3-482a-ab94-8fbcb78d02ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a9e4df-318a-4b23-87eb-a2e0b2a286f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44374be-3fb2-4058-b6a0-b30218dd8ffd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612c210e-8474-4336-a4ad-54833db05479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd06463-c3c5-4419-a873-b32f705e4e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4db506a-b83f-4a41-91c5-03cdfc1d2551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9cb4de-ab52-4fc1-8f39-cec452a92933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35475a2-99ef-4ece-8cbd-0db0d629637d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0217c06a-e43f-49cd-a595-91e6f85a11b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b696797e-2d0d-45f7-bd8f-ad9d171c4967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33166215-3c72-485c-9ead-52bfc1a4011c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8908e453-2bc7-4401-a95f-a9c78edd6295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81abbc9b-42f5-4a0c-9c2e-8ec0ecd76916",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb2cca4-fcda-418e-a05a-8aface621719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "709436be-ede5-45a6-9f5a-ceed3295f729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caabe433-8d53-4109-b95c-7f0a262a5589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c46b1b9-4913-4c6c-9f4e-ea15086ee623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf03964c-de90-40dc-b2bc-d25daf80b603",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05947d05-b7cf-431a-b3bf-5625caf87636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b64fe4-040a-483b-aaa5-bb9857a1aa0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316580d6-4eca-49d9-a6a5-5c1061e73f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38263442-a27f-40cf-b5a1-87835e6b9a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c51d8c1-8e73-4a66-9f4f-7992cd76e756",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6b44a4-ea1f-40f8-939f-3f67b3c887a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d02b806-a182-4760-a6c0-ae25458103fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e4c7bf-9e2b-4278-8b58-67ad734781ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cf266a-7d17-4fad-aa14-ffd8247fdfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a5efae-0b4e-446d-9224-6534324755f2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ff4a19-9169-4b46-8d90-12fc5867c0a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48e3b63-a55a-453c-82d2-907e203d8df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8981bcee-922b-430d-8922-256144b87f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727738d7-4863-488f-9fe3-dc2445b728ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ad8ace-584b-4f35-a997-816c9ab34025",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51533243-f63e-477f-b457-ae5ee90bb893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaba5e07-bca0-45ca-8f7e-a0e020b4823c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf34726a-dc06-4d57-8a32-5cc2a081997f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfcf8b3-4904-4cbf-98ab-76824cfb32d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e0d815-fc30-4182-9852-14536845f476",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aff40b2-850f-42c2-8657-e45df24b3d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aee87610-e7c7-49f7-a2b1-9f1922feb39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b005c83-581c-4700-93d8-2b213949e308",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866db559-5f2d-4658-a434-fc87fc953288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d9f73c-d5c2-4252-ba68-1624e8894457",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc600f90-b706-4a64-b345-b28afeca8db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d440993-59fa-4137-b8d5-69bfb46ef4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbca807-833e-4a89-894e-f144d73a4d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8a0755-7a43-4260-a85a-bb08e19bb13d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c1e7932-01d7-4f4b-a691-88a7df04b68c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "009b4db0-8bd9-4a3c-bd25-581e8f172d4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1b54be3-99d8-43d5-a10d-5724234be462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3392d5e-b143-431e-a958-2ef5869f8b3b"
                    }
                  }
                ]
              },
              {
                "id": "88438f4b-f4c0-459d-8a66-3b673f2510aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60af769d-0acc-4703-9ccb-a1d42788c87b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2547dfaf-c4b6-4c39-9766-fb4affe25a7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dbbf3705-17f2-4537-9f06-3e0caa9b9f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736b32df-2973-4062-9da5-b9131eb3811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1047ef5-175a-45be-9f36-1a8a41004bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab64d195-2d82-4745-a935-5ef9c114fd01",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c265a34a-0822-4eef-9a7b-bc61a1ccddf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b549a96a-cbe8-4ee8-a05c-29093251583d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b64f56-4cef-4c0b-bea9-d74393050d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f89a49de-962f-474c-8b39-c81c782f50cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9e40116-8e04-43c3-b838-4436d9266f6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46100e18-df9e-4e43-bb25-20e9f4753200"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4503200-3e5c-4dc4-8ef5-ef23697bf967",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d7dca62-d456-41c3-b069-fbb114c503fb"
                    }
                  }
                ]
              },
              {
                "id": "b4316f71-ad84-4312-b072-c164beea74cc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "62d2191e-91b5-476a-83f8-4efaf6b2ec17",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cdba42-6848-4131-b336-3b452934fa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d804aa39-34b2-4ae4-815c-6793f93df865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807985b3-9615-4f3f-89e2-4bda279376dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f444e34-86d1-4322-ab70-031756ff8c82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8440ffc5-f0ce-4824-8be3-0f5dc9203837",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0fa15c1-7013-4173-8d69-8146d7bdf935",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f156149-c7b1-4bdc-a64d-96f0d966c7fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b8a2fd96-a665-42d3-a19e-050f884b93d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b9ebe18-7c56-4aa3-9a81-baeebf0a4d77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a82aef0b-2d7e-40d0-99d5-01375efc5c3f"
                    }
                  }
                ]
              },
              {
                "id": "a94c1905-3de5-4849-a044-255e4529e4cc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31f31f0c-35de-4a8b-91ec-2f27e9f5231d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e4b654a6-0b63-4b0f-9123-bf06fe2efaad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03cfada2-066a-42fb-99d1-865027b9de56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ea16c13-6be0-4dc3-93e2-bc4e995b7fa4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95c6cf49-8fc8-4741-97d1-44143c7bbd9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0ce09626-0d70-4c49-92b4-3558ec716f25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b21d93c4-e4db-4458-aecc-e324a2741cea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9332c86-1360-4e9f-9371-b1511c878ee6"
            }
          }
        ]
      },
      {
        "id": "f0f9d549-105d-4b00-87ec-a9b142005089",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "13dbe593-3e58-47f4-ba12-530f80ba391b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "397fc0f1-a40d-40a2-8cf6-31dd777092dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3713a1ce-9eba-47a8-ade8-9ab4bfe11177",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc06d89-741a-4824-975e-740080e8b03c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cebc6f5e-8f91-4b6a-a670-7690d0250cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c317e611-e4d7-4756-86cc-43c97d136533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68db0d2e-8911-41ec-b27c-ebf8990a6ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcbfac3-cdda-48c2-9e58-d4b601dddee2",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86567a77-4025-43c7-9d55-b7df6187a95d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "11630775-0058-416d-a4cb-6b7cb8c18658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee0e866-2460-4906-9d0f-d707f11f639f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c743fafe-3856-4a93-ad4f-2f6daf31e0fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62648c3d-3e2b-45b9-a9cb-3e38d500c2f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1e5086e-55f5-4296-910c-f355d518e514"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b7d7c09-2f9c-4429-90c8-3b3ca15c570c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2928cb65-d150-426b-9612-2ee5d446eec7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "359e1889-65d6-431a-a127-07219bb8728e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7f6ae370-e63a-4a66-bcb7-2832bce52e04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d5fc7c0-c8ea-461a-b1d9-089bff335ab0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87fbe46f-919f-4541-8000-515970d8de20"
            }
          }
        ]
      },
      {
        "id": "789c1e1c-46d3-4234-a251-56af8f6c0b2f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ae16addc-1712-4de3-84eb-79b594251404",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0321092-84d5-45fa-ac1a-434ecdc35937",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "600e1bd9-ba2c-452f-b5e1-a2917c14289e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fded04-224c-4dee-aaaf-0c2ee4a09596",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2c9ae35-1285-4919-b54d-c3003468c69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9ddb9a-9072-4fb7-ae90-bacaa03d7279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a365931-7f63-4611-ba79-34ee12861d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f122e9-aa89-406b-9635-64263d0dc17c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca412bdf-8e92-4c7c-92b7-115b9bbe25c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1c277e-8fe6-4a04-8e65-8f45d4a96d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f94f389-82d1-4aaf-a2db-ea309f5f8a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a90fc1c6-5895-4a5a-b68e-402ff2c556d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe8d7b7a-5a74-460f-be36-e409907daf36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73ea8811-96b6-447e-b7e6-3fcc35395a35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55719f21-35bd-4e71-8ffe-3781228b1e43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58864f1a-0a08-49d5-8ca2-63240c62b837"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dd3721c-17bf-4e48-be21-7cb745e5dfac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7bc30c4e-2a6a-40b9-9fc4-c9edf3d1a053"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "237c562a-d22c-4a9f-af8b-e9d2330667b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49a4bcc5-a11b-4153-ba01-2cf5a1a81aef"
            }
          }
        ]
      },
      {
        "id": "42cb1458-9ac3-4bdb-815b-90f56253e89d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1033f241-6297-4461-9dca-afb180462249",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2523d2c4-ec07-49f8-bbff-2bb6e1b93ce5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f48b409-d41c-45dd-9e03-a06f470d9107",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8632db6f-c60b-4151-9440-836ffe247a32",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d285f05-7038-4cf7-950a-c2068187b0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541e692e-7d3b-47b3-b08d-87de6c46aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e40f4a5-0ea3-4ef1-ab9b-d26baf56a35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68292d9-14f1-41da-8552-e40a1930a087",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0412b7f0-8fe6-4723-9c51-166b0718766c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "24a71507-8d6f-46ce-aacc-1ffa60a45951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4f9819-d20b-4c76-b39f-4e0c2c766533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bff31c46-b558-4e99-a3f8-98af315fcc9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbd1bf83-8765-4b93-904c-2f6405edd990",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "989d4f8d-b0ad-4f72-ad94-aaec9b16933e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0aa7835-28a3-4ea2-a93f-c8b489bcb266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5e53ee3-bf89-42d5-aa83-52fbf7ee9605"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac30d222-2f8e-43b6-a05a-0dcdbb80479f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79b7aa8d-65a0-4e6f-8dd9-cc5b58abd5c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25c3f595-1140-42b7-823c-d568973c9007",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e827a603-4092-4610-8ee9-a26a6b11e0eb"
            }
          }
        ]
      },
      {
        "id": "80c6a55f-b585-4bcf-8aa5-6825072ae778",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dba243ae-37cd-4029-8d55-99a0d199d454",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c96e2cf-52df-409d-a889-4bf353dd4731",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d87f65b0-b593-44ac-90f8-f5abfc1a7b12",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "761881a9-bc0d-421e-883c-1063309a8782",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92036e05-6393-4a24-a417-bd905ebad73a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 629.776061776062,
      "responseMin": 11,
      "responseMax": 8788,
      "responseSd": 761.6384822544738,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678494965919,
      "completed": 1678495139869
    },
    "executions": [
      {
        "id": "b4c8d422-5c6b-48cf-8a16-9b16f114c290",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1809dd25-ecf9-4e06-94f5-873419172bbf",
          "httpRequestId": "0737840b-7557-449b-bcba-793c3aaa3701"
        },
        "item": {
          "id": "b4c8d422-5c6b-48cf-8a16-9b16f114c290",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5b01ba6e-ee53-462f-883d-dcfeced25c5c",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "084c9f56-10ae-4a00-a9b9-b5fd0e5c95e1",
        "cursor": {
          "ref": "89fb0e43-baa4-4a35-8093-64801c710673",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f5989085-47ac-4aea-b863-afd2c8d0caa2"
        },
        "item": {
          "id": "084c9f56-10ae-4a00-a9b9-b5fd0e5c95e1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "148d0737-341d-47f6-84f5-bfc57e8676aa",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "224a8ad4-e8c0-4d82-92fe-a42599558746",
        "cursor": {
          "ref": "a5966252-0fe6-4a26-a866-d020806e5b66",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a6160a52-1081-4b2b-b2ee-32235f7c47bd"
        },
        "item": {
          "id": "224a8ad4-e8c0-4d82-92fe-a42599558746",
          "name": "did_json"
        },
        "response": {
          "id": "100e8035-6187-4222-8df2-31e545db9c5b",
          "status": "OK",
          "code": 200,
          "responseTime": 2105,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4419ba-0bab-44c6-9e18-bb0ec8b8c99e",
        "cursor": {
          "ref": "ae21eeec-2253-4d99-96a4-2b0e6ae0aff2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71cef993-43be-4503-8113-1a4266e01b21"
        },
        "item": {
          "id": "9f4419ba-0bab-44c6-9e18-bb0ec8b8c99e",
          "name": "did:invalid"
        },
        "response": {
          "id": "7f2e7cb7-4dd0-49a2-9549-5934a02197d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2236,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4419ba-0bab-44c6-9e18-bb0ec8b8c99e",
        "cursor": {
          "ref": "ae21eeec-2253-4d99-96a4-2b0e6ae0aff2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71cef993-43be-4503-8113-1a4266e01b21"
        },
        "item": {
          "id": "9f4419ba-0bab-44c6-9e18-bb0ec8b8c99e",
          "name": "did:invalid"
        },
        "response": {
          "id": "7f2e7cb7-4dd0-49a2-9549-5934a02197d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2236,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d703003a-1aea-4236-b3b9-10064f3757e8",
        "cursor": {
          "ref": "2a76475c-b42a-451a-89d0-0932ee3c0e9f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0bfb495f-eb93-488a-ad14-c76646edf1d9"
        },
        "item": {
          "id": "d703003a-1aea-4236-b3b9-10064f3757e8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b853bd55-0455-4c59-9881-80eceb71496c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1695,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830de102-5a5d-4e65-86d4-8b22cbd1c445",
        "cursor": {
          "ref": "9994b7d8-d5ea-47a0-bfae-be49418029be",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e1dd1a8f-5ad6-43ff-8bac-839a26ceb06e"
        },
        "item": {
          "id": "830de102-5a5d-4e65-86d4-8b22cbd1c445",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7430c467-f656-4d92-b014-d8deba939df7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1543,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eb68b4-02c9-40db-892d-ea0199ecf528",
        "cursor": {
          "ref": "666de21b-0b7a-4bf5-8f1e-a0077b0ad96c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c5eaeaa3-0266-4b66-af0f-7a570d23eb28"
        },
        "item": {
          "id": "63eb68b4-02c9-40db-892d-ea0199ecf528",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "367e42ec-796c-4f24-9c76-878ca0219d7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3464b9e-0244-4ec8-859f-33b9abb1eccb",
        "cursor": {
          "ref": "eb07c37b-e2ff-4a2d-9c8f-415033b518e4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c442d334-4d0f-4428-9c45-de0fc63930cf"
        },
        "item": {
          "id": "f3464b9e-0244-4ec8-859f-33b9abb1eccb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0f516785-b473-4606-a88c-36e3704de2a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 967,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3464b9e-0244-4ec8-859f-33b9abb1eccb",
        "cursor": {
          "ref": "eb07c37b-e2ff-4a2d-9c8f-415033b518e4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c442d334-4d0f-4428-9c45-de0fc63930cf"
        },
        "item": {
          "id": "f3464b9e-0244-4ec8-859f-33b9abb1eccb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0f516785-b473-4606-a88c-36e3704de2a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 967,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb3c733-5922-4b7c-abc7-5a8c0ac28514",
        "cursor": {
          "ref": "65abb738-ed1f-4b47-a276-2c517b868659",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2975942e-f93a-437b-920e-a2fa162665a7"
        },
        "item": {
          "id": "7eb3c733-5922-4b7c-abc7-5a8c0ac28514",
          "name": "identifiers"
        },
        "response": {
          "id": "8156f58f-c3d5-4a8b-9a72-e85c02053a87",
          "status": "OK",
          "code": 200,
          "responseTime": 976,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62eeffa-64ad-4d88-b8f8-1b6968643939",
        "cursor": {
          "ref": "d1207727-1701-46e5-a138-8377f8eab4ea",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0161f97b-bab4-4732-93d4-bdde03ec6a0c"
        },
        "item": {
          "id": "d62eeffa-64ad-4d88-b8f8-1b6968643939",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "610b9c8d-7ea6-4a8f-a0be-b119319b6f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62eeffa-64ad-4d88-b8f8-1b6968643939",
        "cursor": {
          "ref": "d1207727-1701-46e5-a138-8377f8eab4ea",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0161f97b-bab4-4732-93d4-bdde03ec6a0c"
        },
        "item": {
          "id": "d62eeffa-64ad-4d88-b8f8-1b6968643939",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "610b9c8d-7ea6-4a8f-a0be-b119319b6f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dd413b-8c41-4131-93a2-43fa107e2990",
        "cursor": {
          "ref": "d4a2642b-ccfa-4c5b-b4e1-a4688a0990c8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "912514c7-1300-430a-ac8f-6acc00a33d72"
        },
        "item": {
          "id": "74dd413b-8c41-4131-93a2-43fa107e2990",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "330dd7d6-700a-4c7f-ab34-36079e173a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a033fc-c157-40cb-9096-c1c91a670c25",
        "cursor": {
          "ref": "15ec6934-00e6-4f3b-965f-61e6520674a0",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a0b03936-6119-47ea-9fd7-408280a61433"
        },
        "item": {
          "id": "46a033fc-c157-40cb-9096-c1c91a670c25",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "80933073-a561-47ff-9a40-4e0db0c41380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96054fb-3746-4523-85bc-42c3d2b04c1d",
        "cursor": {
          "ref": "ddcd0fe0-63bb-4ce0-9c55-314c905e39e4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "222666c2-4b58-4424-b981-f63e405c24a2"
        },
        "item": {
          "id": "e96054fb-3746-4523-85bc-42c3d2b04c1d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9b4c4935-4927-4db6-8694-eb40f41e2837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0c2e32-26ea-4343-8af5-d3d6be465559",
        "cursor": {
          "ref": "7163a07a-6196-4a6d-8985-261b9c5e7fd7",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a7927772-a925-4957-ad3e-3069b086bc7b"
        },
        "item": {
          "id": "aa0c2e32-26ea-4343-8af5-d3d6be465559",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8afe97a7-2d65-4197-b25c-3f6b364962be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e575eff-af31-4c86-92c4-9741f7bfc4af",
        "cursor": {
          "ref": "9c2a8082-f6c9-419a-8d68-f7e4fefda177",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f538cb68-9f18-4f61-b12f-c8e0a84e436e"
        },
        "item": {
          "id": "9e575eff-af31-4c86-92c4-9741f7bfc4af",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f6fa600d-3929-48d9-b968-bdf5c6e4c5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8756e08-87a7-47db-bb6d-b8a7630d35fa",
        "cursor": {
          "ref": "0f55f750-95c5-4bfe-919f-4e823d12c4f0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dd5b61b1-c006-46bb-9762-d8c2595ed61a"
        },
        "item": {
          "id": "f8756e08-87a7-47db-bb6d-b8a7630d35fa",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fd7068b7-701d-4e81-8b04-4f1e8a3f7bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db58727-d5ef-4ae7-8152-d7b3fc2db2d8",
        "cursor": {
          "ref": "459ef5aa-fa24-44d1-95fa-86de78331b9e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d3f96172-2048-45ae-aed2-89ffbab9c4f9"
        },
        "item": {
          "id": "6db58727-d5ef-4ae7-8152-d7b3fc2db2d8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b61e282c-db87-433b-b0fc-1b332df09dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010c7212-95ea-4e71-a31f-2aeca84cef60",
        "cursor": {
          "ref": "c8116e48-157e-4aa1-8bee-86ea6a61c43e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "40fa1778-d5ef-461c-ab5a-910ce01dae75"
        },
        "item": {
          "id": "010c7212-95ea-4e71-a31f-2aeca84cef60",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3b91f2ff-967c-4c81-a08e-b1956ccb8445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a6b949-00e8-4867-b153-458b41087206",
        "cursor": {
          "ref": "3f0411da-dbd2-44aa-961f-c37f5addfe8f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4212c54b-53ad-4c2e-b604-99ab1f1ed96b"
        },
        "item": {
          "id": "60a6b949-00e8-4867-b153-458b41087206",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "09b38b16-a6c8-4265-a1b7-a3c2b01a4b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8d7ce8-87fe-4428-af69-80b27278bfcf",
        "cursor": {
          "ref": "118c80b5-c17f-40ea-8586-f138820d9eed",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "eb93462a-4a04-4bcf-9153-114e2247b2fa"
        },
        "item": {
          "id": "4c8d7ce8-87fe-4428-af69-80b27278bfcf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3b32cae0-1d99-4722-bff7-4e6501075819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56de27c-0e71-4b32-9ba2-72410b4ebf59",
        "cursor": {
          "ref": "a1945197-c9f5-4ce5-87ed-54a72114a320",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f9efd173-1936-4e01-8586-575989dde1f5"
        },
        "item": {
          "id": "f56de27c-0e71-4b32-9ba2-72410b4ebf59",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "334d0641-428b-43fc-84aa-a8d95eb8a724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab69eb86-5ded-4dbf-a3b8-51e614c2a604",
        "cursor": {
          "ref": "61d7820a-8801-4a56-94ef-f35ab7ca99ab",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4f436a54-3736-4c22-abb1-1dbf7ff26770"
        },
        "item": {
          "id": "ab69eb86-5ded-4dbf-a3b8-51e614c2a604",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2672d8fd-3694-424c-b650-7083bb276fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2877dfa-2713-49b8-86d0-cc03d1a2f84e",
        "cursor": {
          "ref": "12eb62a9-65ee-4421-9adb-e237f77dbece",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "91561f2e-8dc7-4771-bb41-b191eb24048b"
        },
        "item": {
          "id": "e2877dfa-2713-49b8-86d0-cc03d1a2f84e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "654a8661-3430-48bf-b582-248467fc06db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba4c4ce-8634-415c-b989-892e45cc4935",
        "cursor": {
          "ref": "5f766f0b-87a9-459d-bedb-a2a8d17fdce8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e5c1495c-bf02-4bdb-b830-a3a86c9f6c04"
        },
        "item": {
          "id": "5ba4c4ce-8634-415c-b989-892e45cc4935",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c4e70ca8-d571-4cdf-b8cc-90f17f150185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa0ac5d-5b7d-4ab5-a30d-bafa938aae8e",
        "cursor": {
          "ref": "3278cc31-d29b-4b74-a2e5-bdc40b629ef3",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dbc1d0ce-2c7d-421c-8888-afcfd0fe9de8"
        },
        "item": {
          "id": "baa0ac5d-5b7d-4ab5-a30d-bafa938aae8e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "571a7a2a-8db5-48cb-b1d2-0286f9637a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978a3b2e-8b36-4063-bfe3-c81fdfdbd2d4",
        "cursor": {
          "ref": "040d4d7b-4b4c-4a7e-a9f1-fba2827d8f3f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e6571a5f-6c64-4a25-aef5-881110e20e4b"
        },
        "item": {
          "id": "978a3b2e-8b36-4063-bfe3-c81fdfdbd2d4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "68b74823-0776-4c6f-8f65-d7d37ace1940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3c166b-9d17-4369-a917-2783097bf333",
        "cursor": {
          "ref": "29a5680e-a85f-4f4d-bf0e-9db2279da8df",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b8223314-b7e0-4f2d-be97-0be94ab3f4b4"
        },
        "item": {
          "id": "3f3c166b-9d17-4369-a917-2783097bf333",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ae0a6a9d-079f-4836-9a03-761f3fb6d72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5889c8e-6f7f-45f7-b2e6-48be50782c62",
        "cursor": {
          "ref": "0287e389-c044-418e-8095-11afab2f9bdd",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b0342ca1-a288-4888-81f4-a7e15d417970"
        },
        "item": {
          "id": "d5889c8e-6f7f-45f7-b2e6-48be50782c62",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "15bd0c2b-59ae-4135-996d-cc2b57bd5424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1eaad78-4962-4b24-8907-500ec2f8125e",
        "cursor": {
          "ref": "0a3674b8-95d2-4a0d-907a-1641a0214909",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "73c2303b-0745-41d4-8d91-f9a74442f2de"
        },
        "item": {
          "id": "a1eaad78-4962-4b24-8907-500ec2f8125e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cd648b41-9380-4bd8-a758-1c055cf5e77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec3a17c-d1a9-4f44-a3d7-f584dea7c42e",
        "cursor": {
          "ref": "a847283b-3a22-4a2a-b5b8-d3c1b13b8e84",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2443343a-0641-4a5d-af9d-73df0c9ad57a"
        },
        "item": {
          "id": "dec3a17c-d1a9-4f44-a3d7-f584dea7c42e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a1aa52f4-b93d-40ce-9a96-f5664db916fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f44250c-570c-4ab2-a94c-042befb05af8",
        "cursor": {
          "ref": "86958a66-77eb-4a82-bd59-ba8ca6afb555",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1523e6df-4390-4e32-ae07-880defc4bce2"
        },
        "item": {
          "id": "4f44250c-570c-4ab2-a94c-042befb05af8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aade574b-18db-4ce1-8dc1-0a4a167487cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007f843b-ffdf-40b2-9ae8-48ccdbcfbf1e",
        "cursor": {
          "ref": "435a86c3-16a1-4f03-9f8d-af932d529bb8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "02d4c900-f125-4f90-8834-79fc8cdd628f"
        },
        "item": {
          "id": "007f843b-ffdf-40b2-9ae8-48ccdbcfbf1e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c18af7b0-10b3-4418-ad43-f6d601f56e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c130358-321b-4130-bd89-70b283d98319",
        "cursor": {
          "ref": "cff26347-7695-46c7-b23f-3d93aabb4bed",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a1473207-b1c9-43c7-858e-4d88107e0a79"
        },
        "item": {
          "id": "4c130358-321b-4130-bd89-70b283d98319",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b652550a-c0bf-4aa5-929c-1e374374c080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218acfb2-898d-4c88-8ab2-0a420d1d2011",
        "cursor": {
          "ref": "acc4f051-b2ca-4cf7-8f25-ff7ce469d4bb",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "605e3ccb-07bb-4fe7-a849-d8783001f63a"
        },
        "item": {
          "id": "218acfb2-898d-4c88-8ab2-0a420d1d2011",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7fb4bcbb-64d5-4072-9fdc-a3b6f1d0cc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed4a3de-abbf-4dd1-ad17-c605a94bca81",
        "cursor": {
          "ref": "ca591c60-b576-4325-923a-83c535dd68b6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c473af7b-c071-4c50-8257-fb98d8424538"
        },
        "item": {
          "id": "6ed4a3de-abbf-4dd1-ad17-c605a94bca81",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "398efcd2-f972-4cd8-af83-c13faf86492e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe29bee-844c-41a3-bf83-af8a3ed874cc",
        "cursor": {
          "ref": "98b18c74-4ff1-4263-b199-8ac2c6af7ad0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "67c346c4-d0c6-4728-9645-a899e1d2b086"
        },
        "item": {
          "id": "9fe29bee-844c-41a3-bf83-af8a3ed874cc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e2a0b40c-258b-4253-b646-169ca137d170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bf2465-0b04-46dc-955d-a1dfc0f4eeec",
        "cursor": {
          "ref": "fd634f89-0115-4174-a1dd-819837d9af45",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3d7ba7c0-9b03-4291-8824-53f1a96fb6b0"
        },
        "item": {
          "id": "e3bf2465-0b04-46dc-955d-a1dfc0f4eeec",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f332697e-27b8-4d12-b1b1-bd68779b5c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f373865-59b5-4149-8a8f-63e0566f94e5",
        "cursor": {
          "ref": "3d9842e3-3065-40f5-b6eb-15fd2a6345a5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d3b5481a-ff1f-41af-87ef-e6862304b12b"
        },
        "item": {
          "id": "7f373865-59b5-4149-8a8f-63e0566f94e5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7862e1b0-2625-4300-9203-d99ad28208be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310f5d20-3f97-4a92-8535-7fa4e8809ecb",
        "cursor": {
          "ref": "86f132af-851b-4513-976f-503ddde5699a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "949f62d5-f682-46da-a203-46a6b42248ca"
        },
        "item": {
          "id": "310f5d20-3f97-4a92-8535-7fa4e8809ecb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "59534fa8-e962-4793-8fc4-793c01c85e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d10e75a-5004-4953-8844-614c2b83e43b",
        "cursor": {
          "ref": "9e3c5e0b-7871-4421-ac62-b483402442f5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1d0a310e-b935-4946-919b-0623b1c629d6"
        },
        "item": {
          "id": "2d10e75a-5004-4953-8844-614c2b83e43b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "29a0316b-dce4-4d6b-9f78-e86815846590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ec9af3-2d8f-49c4-9c86-5522d2ddc421",
        "cursor": {
          "ref": "15cf77ac-fb0e-456a-a831-0d40a34c514b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5f0dd736-7364-47ca-9f20-5c115d1eb4f8"
        },
        "item": {
          "id": "41ec9af3-2d8f-49c4-9c86-5522d2ddc421",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e973c8ba-102c-45da-890c-bdc6a0d2cd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5f29d5-afae-4f3f-b128-e0fb2c162f21",
        "cursor": {
          "ref": "9bca9524-312f-459d-85ff-3b88ed18de83",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "37bb445b-1309-4f61-93da-da04748222fb"
        },
        "item": {
          "id": "8b5f29d5-afae-4f3f-b128-e0fb2c162f21",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9d8c2b29-2eb3-4921-9341-c175d4fa8f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ca5ee0-e167-45e7-8182-d51d0dec2f11",
        "cursor": {
          "ref": "45d5107b-fc1f-43a6-b81b-298dc9aca7f4",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "97742ab5-9021-4a25-a02e-812ee8920f13"
        },
        "item": {
          "id": "80ca5ee0-e167-45e7-8182-d51d0dec2f11",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "34510dd3-1906-43d5-b5f8-bcf8a1dfdd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013d3b32-90f0-4381-a39a-27e7b10330fb",
        "cursor": {
          "ref": "a474daa8-66aa-4f49-af6f-ba1014ecd41f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "425a1e22-0ca0-4a4b-b25e-a8a0f41abb12"
        },
        "item": {
          "id": "013d3b32-90f0-4381-a39a-27e7b10330fb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7cf20539-d263-4e91-bb71-714be3d4ee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7732937b-dbfe-47da-ac4c-d214f7da02e9",
        "cursor": {
          "ref": "455d47ae-dd89-47a4-b190-1d14f75b9fc5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "115420e9-99ea-4bd1-a82e-03e9396d445d"
        },
        "item": {
          "id": "7732937b-dbfe-47da-ac4c-d214f7da02e9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "99a48380-dee2-4b01-a290-b22080d117a4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 639,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87050f5f-4040-4cc9-8952-aec91c695d68",
        "cursor": {
          "ref": "30209de5-5442-43c4-afee-fcd84b49b136",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ed6b3422-0de2-4fd9-922d-5a7cf4dece31"
        },
        "item": {
          "id": "87050f5f-4040-4cc9-8952-aec91c695d68",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "578ec05f-b478-4ce8-8f81-c99b82463bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0f7141-ab8e-4f71-8a76-f2e2f516c89c",
        "cursor": {
          "ref": "7c00d468-4f80-4243-ab0d-7db15ab480f9",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "543aa4f0-3e84-4dda-ae28-80427833280a"
        },
        "item": {
          "id": "4f0f7141-ab8e-4f71-8a76-f2e2f516c89c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3614a183-e438-4ff7-a39e-5ff24425b2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7544b3-7530-434c-a767-da119d181dc7",
        "cursor": {
          "ref": "1a697140-bb43-49d5-9fd6-c5ad75184b0b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a26d432c-fb2a-4b69-8341-c259ddfc018a"
        },
        "item": {
          "id": "dc7544b3-7530-434c-a767-da119d181dc7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bf876879-7a28-46be-bf11-6192a32cb66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3858bf87-8f1e-4e11-b2a6-73812cc38a1e",
        "cursor": {
          "ref": "41e751a5-8cfc-4ae4-a08c-31a676fd56cc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ad6bdd59-3ea5-4a01-8c25-820b679d9187"
        },
        "item": {
          "id": "3858bf87-8f1e-4e11-b2a6-73812cc38a1e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0b3d5b57-6db0-499b-bca5-8e22af334204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37fea5c-48dd-44f5-a6dc-a75c56d8254c",
        "cursor": {
          "ref": "5e78a50c-7ad5-4dea-9fdd-58bad3045064",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "48ea6a0e-3a3a-48c4-ba2f-189612aef8a9"
        },
        "item": {
          "id": "a37fea5c-48dd-44f5-a6dc-a75c56d8254c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5f0cb579-c299-4077-b19d-3b22d46dc6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc9a01a-3bcb-4423-8cd0-760608e6e6b9",
        "cursor": {
          "ref": "01f3a14e-0ab6-4b72-a7ef-bf52ec4a9809",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9b65b77c-f796-424f-87c3-fd45c7d7baef"
        },
        "item": {
          "id": "ddc9a01a-3bcb-4423-8cd0-760608e6e6b9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a4f6925b-cd67-4035-bbd7-1ff80b75cbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24e1666-4cfd-45c7-b673-15ff8d7c6e80",
        "cursor": {
          "ref": "23d3b3d1-5750-4260-9c44-6fb06c1c10e3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6b750db8-7abf-4683-8380-19ebb386fa4f"
        },
        "item": {
          "id": "a24e1666-4cfd-45c7-b673-15ff8d7c6e80",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "70092f5a-392f-479b-8c60-b99d91857c3d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 665,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa12cc03-db37-4e48-94bb-e5b1ab33f4aa",
        "cursor": {
          "ref": "c143241f-2c8b-4379-9084-cffd706592a6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9744a5a8-bd69-4281-b3aa-f4d6f4a6a6b3"
        },
        "item": {
          "id": "fa12cc03-db37-4e48-94bb-e5b1ab33f4aa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d4d7bc8e-c133-47ea-8a96-0b33924d04aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f9a75b-ac32-4f97-867f-79689901ab60",
        "cursor": {
          "ref": "abed0106-0c5d-49c9-9379-e22ed9ab17c8",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ac24c64b-f58f-417e-b877-b3819abe932d"
        },
        "item": {
          "id": "83f9a75b-ac32-4f97-867f-79689901ab60",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a1a29d7f-907d-47a6-8021-ac8c1a003ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7685abf-410a-4831-8232-63cd9f659cea",
        "cursor": {
          "ref": "abd08f20-c6fc-469b-8435-57ff15e21608",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4496bb82-40d1-4cf0-a258-9fee3bd251e5"
        },
        "item": {
          "id": "d7685abf-410a-4831-8232-63cd9f659cea",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "66428d65-7c1b-465e-952b-e7d953e18952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e129a0-2f40-4a65-9d29-d7957e3bae0d",
        "cursor": {
          "ref": "23cf2146-112c-4ae8-b100-81d1ffaba762",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ec59b72c-b217-4483-84d1-729a970c3507"
        },
        "item": {
          "id": "a8e129a0-2f40-4a65-9d29-d7957e3bae0d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "536d881c-61a0-4519-8f51-591e5abe5117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88e56d2-63a5-429f-8905-9a1c63fecde0",
        "cursor": {
          "ref": "49b6661f-3f42-4df3-8343-d28f56841b2f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7ec598b8-2344-40c5-888e-d60118a1d103"
        },
        "item": {
          "id": "c88e56d2-63a5-429f-8905-9a1c63fecde0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1393e67b-9d9e-4af4-86b8-e3fb2d34b0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b39215-f57d-45cf-8e8d-f25a4b120a76",
        "cursor": {
          "ref": "3ec8201b-9973-4b4c-b791-a0e84cd371c0",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bf41de91-a68f-4719-a127-fe30cf9d1c83"
        },
        "item": {
          "id": "e8b39215-f57d-45cf-8e8d-f25a4b120a76",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cb85327a-67bd-48f5-8b0b-ddefbcae1011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4642b9-51f2-4746-a8bb-cb49d761a77b",
        "cursor": {
          "ref": "6c65af72-f5ae-44e5-9fcf-40403827f28d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ad9e5455-49c5-4924-aee5-1c2d95e6cc29"
        },
        "item": {
          "id": "6d4642b9-51f2-4746-a8bb-cb49d761a77b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "14db4dca-c218-4432-b003-1532e97b6f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95d3e54-4bad-4f3b-a4a3-9acb39610320",
        "cursor": {
          "ref": "37cfe5da-94a2-48e0-9218-d263f23a13ab",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "533d22d4-098e-489f-b069-592309016dbe"
        },
        "item": {
          "id": "b95d3e54-4bad-4f3b-a4a3-9acb39610320",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a18b6275-698e-4140-bc0a-1981c790c76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c986201-637a-4762-ac63-e048d957ba02",
        "cursor": {
          "ref": "037b90cf-4831-4921-99df-798a207901ef",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "373a5450-40ae-464b-8628-97de5d6fc623"
        },
        "item": {
          "id": "8c986201-637a-4762-ac63-e048d957ba02",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "274c7a4e-30de-465a-94f1-47bc0946e749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ecc963-766b-4bdd-abc2-3af47f8b6a73",
        "cursor": {
          "ref": "d4c06314-ebcd-419b-b33e-96f9dc397404",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "58d360bb-a463-4949-9187-6ed5db4846e3"
        },
        "item": {
          "id": "96ecc963-766b-4bdd-abc2-3af47f8b6a73",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a10878fc-c5db-4b0c-832a-d96d2cecc9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516aad7d-55c2-491e-9b91-992089808749",
        "cursor": {
          "ref": "54729025-40f4-4c08-b421-0b2b6f25d3d0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e5b9d921-78b3-4567-a6ab-f84eb8b2cde6"
        },
        "item": {
          "id": "516aad7d-55c2-491e-9b91-992089808749",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cecb94b0-ff1d-451e-8644-b0c99dc54eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a63e94-5614-4f23-9089-7e07696cacfc",
        "cursor": {
          "ref": "b5cddc6e-29aa-4444-a0c2-4fe7c08014e3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1ae95aad-7609-4230-8fe2-9bd6dac46177"
        },
        "item": {
          "id": "a5a63e94-5614-4f23-9089-7e07696cacfc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9ccc8809-2e1b-4a98-83ab-d61a3debf36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3917b7a8-4d75-4b6d-93f8-a36ebba2a023",
        "cursor": {
          "ref": "76ab263d-126f-4dbb-b2a5-89cdeb289e11",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ef6f4ffc-ae91-45f5-82a6-c32c13171232"
        },
        "item": {
          "id": "3917b7a8-4d75-4b6d-93f8-a36ebba2a023",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "78258580-81f6-4bf8-bebb-a1984ce8a00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32908483-fe47-4812-9b39-861a4cfd65b2",
        "cursor": {
          "ref": "fa11d071-9682-4ce6-b7ee-f2539421cee7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1c7a0f04-5600-4f1f-86e6-a4572961e2d3"
        },
        "item": {
          "id": "32908483-fe47-4812-9b39-861a4cfd65b2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "352d1a40-9fe0-4009-af89-73d9a6524817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaad801-2879-4b22-b779-24cb72604758",
        "cursor": {
          "ref": "960176f4-724d-47f6-9bc8-caaceff5dd36",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "638e5833-8d54-46f9-bdba-4307ba949942"
        },
        "item": {
          "id": "4eaad801-2879-4b22-b779-24cb72604758",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "39f48564-b4d6-4224-a3b1-757684392ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb42ea5-55a4-46b4-abfa-cd25d462db4d",
        "cursor": {
          "ref": "234f904c-4698-46b4-8133-82dbae1c95de",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cbbf93bf-f960-4850-936c-8b3c76917228"
        },
        "item": {
          "id": "6bb42ea5-55a4-46b4-abfa-cd25d462db4d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e6852472-e474-44ab-8bcf-635be007447c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7f7e84-4ffd-45ae-b67b-0b9c44da635b",
        "cursor": {
          "ref": "f14ebadd-f08b-4410-b903-e6102b61598c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bd5eb358-411d-4b16-8443-fd27a39ab9e0"
        },
        "item": {
          "id": "3f7f7e84-4ffd-45ae-b67b-0b9c44da635b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f7167708-88ff-4601-9cc7-6836612cc154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea141a3-e5af-42b7-9208-0654ab663f96",
        "cursor": {
          "ref": "81210d4d-a1c8-4be3-a6b6-5c8f9a699fda",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "26f4b6c0-d419-4556-ab53-5734ff6eb66d"
        },
        "item": {
          "id": "2ea141a3-e5af-42b7-9208-0654ab663f96",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e71799ee-6b20-445f-b284-86edb70ecf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6dca5b-5ef5-4592-ba22-56bbc168ee54",
        "cursor": {
          "ref": "d9d07f24-590c-4ef1-a40d-c1c5a7a08929",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0e5f95da-fc68-4df0-9d03-442028bda323"
        },
        "item": {
          "id": "ae6dca5b-5ef5-4592-ba22-56bbc168ee54",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e9105872-f1b3-43c1-97a3-7485f73ab063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885cdf39-43d2-4ec0-830e-dfde09b8a4d1",
        "cursor": {
          "ref": "37c657f4-94be-43fc-b84b-a90f5cd98bb2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e6490398-2aa5-4766-811c-1c60cc44462b"
        },
        "item": {
          "id": "885cdf39-43d2-4ec0-830e-dfde09b8a4d1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fc7ddd9c-e5a5-40e4-97bb-d95c1f5da90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10cb2e4-9377-4e26-8955-07909da651c0",
        "cursor": {
          "ref": "f14a99ec-6ff8-4feb-bc31-fa89913ed53f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "622edd4b-7fcb-45ab-a2b7-d403e830c62d"
        },
        "item": {
          "id": "e10cb2e4-9377-4e26-8955-07909da651c0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d18b7cfd-abf7-4b23-867f-a0a209788339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9949127e-b418-4a43-9014-75ba12b10825",
        "cursor": {
          "ref": "c5d966c9-901f-4bc5-a1b1-bcf59e69f4c0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6d984f12-8507-46cf-9e65-8254cfdcf4e5"
        },
        "item": {
          "id": "9949127e-b418-4a43-9014-75ba12b10825",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "34b6c5ae-bf9b-4ce0-9f1c-055a67f6af6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1ad3fd-4a43-401d-9d71-c26fa36642c3",
        "cursor": {
          "ref": "000635db-7c28-482c-a8bf-23d8a58ffe39",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9f870ba9-6662-4196-aae4-1ad66c1b305e"
        },
        "item": {
          "id": "5f1ad3fd-4a43-401d-9d71-c26fa36642c3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0ce8c8d8-ce14-4be7-8a3e-cd059a087883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7a1b20-5356-4419-b8d7-766872dc2f40",
        "cursor": {
          "ref": "0b9477e8-63a2-4cd6-8e32-f4914e750c3a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e63758d1-1d84-4277-813c-1ad8e807df51"
        },
        "item": {
          "id": "4d7a1b20-5356-4419-b8d7-766872dc2f40",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a614eb83-d7f5-4616-9411-3dbbdd98653e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cffa8b-7ea9-421e-be0d-f4e8994695d0",
        "cursor": {
          "ref": "03017fb5-3f0a-4b68-8b6d-86583031d16c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "26f585bf-d719-419e-88b3-1332a271b902"
        },
        "item": {
          "id": "78cffa8b-7ea9-421e-be0d-f4e8994695d0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b1d43660-e0e3-4370-83e7-d14a32d5479a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5945ec-41e3-4f12-be74-b4e7adb3b9af",
        "cursor": {
          "ref": "a0a96cc6-124c-4aab-b005-d84e0a8e6d20",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "625c8b06-30b0-4410-8a87-ad23609f8a49"
        },
        "item": {
          "id": "bc5945ec-41e3-4f12-be74-b4e7adb3b9af",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7c613243-7242-4116-9ca8-8a3c95fcb91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd696a50-db6e-4555-89b0-ebdca458946c",
        "cursor": {
          "ref": "3b61f09b-5d5b-4b63-9eb1-c5557c502bbc",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ebcdd09d-46e8-462c-828b-acb9b0dd4d4e"
        },
        "item": {
          "id": "bd696a50-db6e-4555-89b0-ebdca458946c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4fcb32ea-7e65-455b-8e2f-47a8d67a30ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc18546-65b2-48c8-84c0-18d82c76b6dd",
        "cursor": {
          "ref": "50b7418b-25cd-404a-978d-17850c419cce",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "21d7c53c-4841-40ec-bd3c-88f2524c06fe"
        },
        "item": {
          "id": "2cc18546-65b2-48c8-84c0-18d82c76b6dd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "11df69a6-971f-4821-9bac-3716fdfc9cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c1a248-6d94-4eaf-b238-7279603709f6",
        "cursor": {
          "ref": "0c08822a-8ca1-412e-bcc9-e32d2cbfce8c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9eb44cf4-ef88-4cf9-8dac-5607408163c3"
        },
        "item": {
          "id": "b0c1a248-6d94-4eaf-b238-7279603709f6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2aff45ba-4896-4e7a-b54f-5479f5985720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5515fb02-fd82-431c-bf88-f0e1d33543f7",
        "cursor": {
          "ref": "799403df-78ec-4eb3-97e9-627b3af69eff",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bd4784b8-39df-4e54-9c47-02c142beb042"
        },
        "item": {
          "id": "5515fb02-fd82-431c-bf88-f0e1d33543f7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ad183240-af72-4ac6-8ec8-23faeda0cbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc146288-366a-4e1b-a418-db5433ef57e9",
        "cursor": {
          "ref": "9c3df1c1-39f6-4c43-87f8-36a25d3c2945",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cecd7ef7-2163-4036-a181-27eaf5a4e89d"
        },
        "item": {
          "id": "bc146288-366a-4e1b-a418-db5433ef57e9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bd61f717-c0a2-416a-be64-aebc0ad1a1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ca991a-ebaa-4810-a6cf-ca2c98595543",
        "cursor": {
          "ref": "59b7b4ab-518a-40cb-a312-e7fad2b38ded",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "529f20cf-d167-4721-83fb-95554a04c4b9"
        },
        "item": {
          "id": "57ca991a-ebaa-4810-a6cf-ca2c98595543",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "01bfcb16-11fc-478d-a470-87154825f5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c702276-321c-49e7-9c81-19235fe41b1f",
        "cursor": {
          "ref": "2c4ac277-2a53-4d37-9949-86e0014f6b28",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a37c533f-da1a-438f-a8d9-bc20bd445280"
        },
        "item": {
          "id": "0c702276-321c-49e7-9c81-19235fe41b1f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d64e4fa2-ff1f-41b4-b0e3-df428b995af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9631e811-f860-4e66-871f-f14f303acddd",
        "cursor": {
          "ref": "87846191-d07c-4d07-968d-d07edbfb037e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e92d9443-bb2b-49a4-b8e5-0a12bff22fb9"
        },
        "item": {
          "id": "9631e811-f860-4e66-871f-f14f303acddd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "44bb427e-8d2b-451a-a00e-d600727888ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dbf5b2-5d4a-486a-bf2e-6a6d696ebd00",
        "cursor": {
          "ref": "45e3951f-8da2-40b0-a4e2-fcd11806ab1c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "21410b01-c9a1-4d61-badc-dd79e940c84f"
        },
        "item": {
          "id": "12dbf5b2-5d4a-486a-bf2e-6a6d696ebd00",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "735b09c5-a737-4a04-b7c5-bcfda964c6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129536c8-9349-4f17-b47f-900eaa715e1b",
        "cursor": {
          "ref": "63fcdc7e-ed69-4584-a2e4-b3c92059f353",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2f58fc76-3fd5-423b-9f47-0319a34066e9"
        },
        "item": {
          "id": "129536c8-9349-4f17-b47f-900eaa715e1b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "30ceeb66-b76d-49cc-b7ff-a1646671cee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1064,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b18e17c-e09e-4d3d-bc16-8905ffa84b2c",
        "cursor": {
          "ref": "151e8a49-a66d-4be4-ac5f-f988162da754",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f3fc7784-1563-46c9-b356-839c13cfba6f"
        },
        "item": {
          "id": "7b18e17c-e09e-4d3d-bc16-8905ffa84b2c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ba1a7e7d-ab54-441f-aa6b-9b3aeb0a9e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 960,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8573e444-925d-4aa2-8279-b855ab0acd24",
        "cursor": {
          "ref": "c85c02d4-a48d-4864-9cf2-3491b2aba138",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "72317dc3-7c14-4810-a8fa-56c46337d98a"
        },
        "item": {
          "id": "8573e444-925d-4aa2-8279-b855ab0acd24",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fc40c7a3-59a2-437b-a6b9-b152d463ab74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a17914b-cc4c-415c-b2f3-737e44ed4eb1",
        "cursor": {
          "ref": "15b93d88-a214-4461-b78a-07b47faafaff",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d71f4e61-25f3-432d-8e26-97bdf2d3f768"
        },
        "item": {
          "id": "3a17914b-cc4c-415c-b2f3-737e44ed4eb1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0c3b6f46-a5b5-4fb3-8aca-ab4d18544c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41c271c-783c-4327-9728-59c16dd88fac",
        "cursor": {
          "ref": "0c4a492f-fc16-446f-8f5e-e65b5e094c09",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fac309f1-3aa9-408c-ba71-5897b5606e27"
        },
        "item": {
          "id": "d41c271c-783c-4327-9728-59c16dd88fac",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3dce60e6-b99f-4e4e-a461-66c85ca68944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4635f5-837f-4948-8383-e5ce42c80dbe",
        "cursor": {
          "ref": "b5d2db63-9912-40c7-a722-4f416332827d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "85395572-d4bf-4390-a1e8-e031fb5d52d5"
        },
        "item": {
          "id": "4f4635f5-837f-4948-8383-e5ce42c80dbe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a51c7fe5-eb1b-4243-b57b-22290583c096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a3d319-d7e1-4f6c-9fc7-d5fbc5750944",
        "cursor": {
          "ref": "07c99c05-c602-4cfa-9d4f-108343b17e9d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "10d6896f-ca44-42be-95ad-88a0b09733d6"
        },
        "item": {
          "id": "83a3d319-d7e1-4f6c-9fc7-d5fbc5750944",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b28402b7-e116-4a60-9d45-2f6941d39dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047df247-e71c-4d29-9c91-6e98e3bd02d9",
        "cursor": {
          "ref": "76d21ee5-9fdf-40f0-b68d-8cd837aa253e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "13cf45d5-1cfa-4bf8-be53-425c275cea12"
        },
        "item": {
          "id": "047df247-e71c-4d29-9c91-6e98e3bd02d9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8a48a41b-6ef9-4d46-8920-c86ac36ae996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c7611b-0c99-4ec4-b860-93257d31e3e0",
        "cursor": {
          "ref": "026537dd-8d66-413c-b7a3-35075d7530d1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bcfb2fe8-039f-4ee4-a79d-6af88cbae73c"
        },
        "item": {
          "id": "67c7611b-0c99-4ec4-b860-93257d31e3e0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1cf5add2-c99e-4d1b-9df0-710bddcb0d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d3c7d6-410d-40d7-a12a-7b17e43d926b",
        "cursor": {
          "ref": "430d3b10-4f47-4f99-bdf1-5e6f0ef07075",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5e5887fe-c9a6-4eb8-b787-592bca662905"
        },
        "item": {
          "id": "28d3c7d6-410d-40d7-a12a-7b17e43d926b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "099bc3fc-6494-4b49-ab36-3aae84062c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d03a29c-6a33-4720-8f36-9c36cc172b85",
        "cursor": {
          "ref": "7e26c473-45df-428f-ba14-8f43f56d7ffb",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5d1948bf-6f03-4761-9166-b56ae59c659b"
        },
        "item": {
          "id": "1d03a29c-6a33-4720-8f36-9c36cc172b85",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2208a544-00fd-429b-b117-d8edb3c48ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f34ed1-7e91-46aa-806b-b5709dfd7174",
        "cursor": {
          "ref": "aa04c113-6cbe-4474-8960-53f6ee64216d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "129f6407-6b36-41fd-9d35-e42d2243af86"
        },
        "item": {
          "id": "b3f34ed1-7e91-46aa-806b-b5709dfd7174",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3a018aef-d17a-441a-8ff8-00a6cbf5b17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2473892-ccec-44a9-9ff4-22da6bc5e232",
        "cursor": {
          "ref": "fb99b9cc-3fed-43fe-b6f2-d8b39002cfa5",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f3578726-878c-4bfd-b81f-e799217ed38f"
        },
        "item": {
          "id": "a2473892-ccec-44a9-9ff4-22da6bc5e232",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1c5f6cb7-aebc-4462-986f-888669903d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b83cbf-0594-4333-915d-c914ed2ec4d7",
        "cursor": {
          "ref": "f9fc49e3-93e2-4a26-99f3-c50279530827",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "43df9d1a-3cee-4b34-ad0c-981dbf03ebad"
        },
        "item": {
          "id": "f3b83cbf-0594-4333-915d-c914ed2ec4d7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "420674ba-827a-431b-88db-be85e251fab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2034877e-2174-4f9a-b768-c0ab9ccd1839",
        "cursor": {
          "ref": "31485420-8969-40c1-8b2d-fac580a0bb44",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0c46b876-baec-4b5b-b005-9001d847885a"
        },
        "item": {
          "id": "2034877e-2174-4f9a-b768-c0ab9ccd1839",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0815f03d-6e9e-4f4a-a568-cada74cf98bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f49dd4-83d1-4492-9eb3-279802d9cdd9",
        "cursor": {
          "ref": "1c77ddb2-0761-4630-baf6-d33c262862ed",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "83ad9670-7a6b-4710-9805-ba77174ed778"
        },
        "item": {
          "id": "71f49dd4-83d1-4492-9eb3-279802d9cdd9",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "6490189a-7b2c-4440-bc12-c82312e7cfd6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6403b876-48a7-4032-a76e-2e30df8e1092",
        "cursor": {
          "ref": "61b53ba3-0a8a-4acd-a52a-e88649329266",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "16e76215-3890-4e9e-800e-0bf4b3fab8c0"
        },
        "item": {
          "id": "6403b876-48a7-4032-a76e-2e30df8e1092",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0333bee8-5f53-461f-b3b5-a4d4a9f0308c",
          "status": "Created",
          "code": 201,
          "responseTime": 4767,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d38350a-fc1d-42ac-9036-deaf5db92d79",
        "cursor": {
          "ref": "2de3632a-c493-4a7f-bdb1-442958cf7e9f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f9be3d89-d35c-4f1d-bbb2-416c83d29b1c"
        },
        "item": {
          "id": "9d38350a-fc1d-42ac-9036-deaf5db92d79",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ae359947-7357-4192-8e38-60e39ac00f11",
          "status": "Created",
          "code": 201,
          "responseTime": 8788,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "749e534f-8ff2-4e5b-bbb5-34b9aedbe7ce",
        "cursor": {
          "ref": "19e2d016-b149-4409-9149-01e8e3ec50c5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "51d28f10-de86-4e4a-be18-b4e3985cbcd4"
        },
        "item": {
          "id": "749e534f-8ff2-4e5b-bbb5-34b9aedbe7ce",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d1f64c47-85b5-4594-b4c4-4ebe7e66a57c",
          "status": "Created",
          "code": 201,
          "responseTime": 4296,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3001e86-7f29-4844-b928-aa630441dc61",
        "cursor": {
          "ref": "25b9f6b5-61be-430e-87b8-1ae46e815e5a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "427fef92-6d1c-443d-b71d-45221141c88b"
        },
        "item": {
          "id": "c3001e86-7f29-4844-b928-aa630441dc61",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "de9597ee-3000-436c-b354-403de531f10f",
          "status": "Created",
          "code": 201,
          "responseTime": 3954,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "70569443-e0a1-4e2a-83a6-e20a3cf9531a",
        "cursor": {
          "ref": "1c95a5e2-855d-48b1-af40-9177ae3f1291",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "17cd1f4d-a65a-4502-88a1-ae1051bf58c2"
        },
        "item": {
          "id": "70569443-e0a1-4e2a-83a6-e20a3cf9531a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ea90a6d7-a533-4e62-9ec9-9e414bc25b7b",
          "status": "Created",
          "code": 201,
          "responseTime": 5269,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eb8593-f5a0-483c-9536-558da59483c0",
        "cursor": {
          "ref": "b3578227-5054-4a72-8e41-eb68cc7214b0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1d6a77f6-535e-49d5-9c09-060d8b02c77b"
        },
        "item": {
          "id": "65eb8593-f5a0-483c-9536-558da59483c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "940d9b8d-9f5c-4e61-8ca0-fd53cbb77a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eb8593-f5a0-483c-9536-558da59483c0",
        "cursor": {
          "ref": "b3578227-5054-4a72-8e41-eb68cc7214b0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1d6a77f6-535e-49d5-9c09-060d8b02c77b"
        },
        "item": {
          "id": "65eb8593-f5a0-483c-9536-558da59483c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "940d9b8d-9f5c-4e61-8ca0-fd53cbb77a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cbf9f3-7ee0-451e-9104-be1d5ba79f44",
        "cursor": {
          "ref": "af0115e6-c328-4f32-aa54-5ca93038fe45",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9103e4d1-c569-4e16-b31b-73912f30172f"
        },
        "item": {
          "id": "71cbf9f3-7ee0-451e-9104-be1d5ba79f44",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fb3e8099-cbd3-4ff2-8096-e52a8e53a6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767b37bf-0d97-4f92-9f90-7977a91e5bad",
        "cursor": {
          "ref": "f47ff292-7c92-499e-a48f-196414b1ba1b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5885ae20-0824-49c5-aa3d-09436be638f5"
        },
        "item": {
          "id": "767b37bf-0d97-4f92-9f90-7977a91e5bad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0fc4d59a-1cfc-4597-9c0d-e4d9f9afae3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e0f086-7d0b-4ca2-99d9-ac35d8d1e081",
        "cursor": {
          "ref": "c17716b5-686c-44f4-bd0a-6a8a8704d789",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c122a7a0-51e6-4e97-861d-5101eb809e18"
        },
        "item": {
          "id": "42e0f086-7d0b-4ca2-99d9-ac35d8d1e081",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d54d19d5-863f-4584-9852-a41b722ec00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd3964a-54e0-48be-be25-6b62940534b5",
        "cursor": {
          "ref": "e296e875-b41d-4c82-9249-6f3bbae309fb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b8c974e1-f692-4688-b70a-2809b8855101"
        },
        "item": {
          "id": "2cd3964a-54e0-48be-be25-6b62940534b5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "69c60437-2194-434c-9dfb-13d1ab20b2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3681a29-fee4-434b-b801-6235983479d2",
        "cursor": {
          "ref": "cefa561a-9f34-4ff8-b609-707bd4573a1b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec8047f8-d560-42f6-9189-b932942988da"
        },
        "item": {
          "id": "c3681a29-fee4-434b-b801-6235983479d2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25525b1e-cb9c-47f8-b44c-ce6b2f8ce38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f011b61e-0061-42bb-8884-a53e0495f488",
        "cursor": {
          "ref": "7b3e9091-c168-4693-adef-00fb271e1f7b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "34439748-ff28-4c22-a412-2f4013699acc"
        },
        "item": {
          "id": "f011b61e-0061-42bb-8884-a53e0495f488",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e625d065-9d27-4f43-b2f8-9964699722c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac233c2a-88a6-4569-989d-7260b38934ff",
        "cursor": {
          "ref": "4ebfd3f5-fc80-44e4-a1b0-2b1e13e47bed",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "65ba71bb-905b-4260-9381-b9ad316f0a35"
        },
        "item": {
          "id": "ac233c2a-88a6-4569-989d-7260b38934ff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c00f5da3-c5b8-4377-ab02-1be817ddf7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e610d946-a4e5-4897-8e93-405b0df27d90",
        "cursor": {
          "ref": "79210e3a-8ac7-45e1-8993-fcc18ce20e61",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b6071993-7d59-409e-8fb5-a87390c6feb5"
        },
        "item": {
          "id": "e610d946-a4e5-4897-8e93-405b0df27d90",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2aecf2de-fb64-42fa-9cd1-34483783200e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e212ee0-c41f-4977-969e-07347e64b5ad",
        "cursor": {
          "ref": "46efbb56-06aa-4628-b527-9f376f4c09e7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "31a8d02f-615c-4d46-950f-83c09c36a228"
        },
        "item": {
          "id": "2e212ee0-c41f-4977-969e-07347e64b5ad",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6db40657-f8cb-4699-b7d9-e54576c9134f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a784ce9-5a1f-4a22-9a3c-2f9d6915c136",
        "cursor": {
          "ref": "384c4b12-23dd-400a-9aa5-569efb6463d9",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a6f5d718-0470-4101-8ed1-37f3618f519a"
        },
        "item": {
          "id": "2a784ce9-5a1f-4a22-9a3c-2f9d6915c136",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3503e0f7-c38a-4614-97a5-a4536f762cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23faabae-fd8e-437e-a84e-851d7600e8ce",
        "cursor": {
          "ref": "7d334bbc-c4c2-466d-8a99-e8068dde408b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "012d7ffe-b2bc-455c-920b-911de6add05c"
        },
        "item": {
          "id": "23faabae-fd8e-437e-a84e-851d7600e8ce",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a50f74b8-8b6f-4d68-9ba0-24db43c3ed35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d112e1bc-fdca-4bb5-b3c4-e86e8c1a4edf",
        "cursor": {
          "ref": "7b71984f-3906-4de5-a33d-fb0e10046ce5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "adeddb48-6587-4941-85a7-b684b48db6c8"
        },
        "item": {
          "id": "d112e1bc-fdca-4bb5-b3c4-e86e8c1a4edf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f8e21e87-01d7-4410-ae31-6e51bb572055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6966e3d6-b2fc-4cb8-b7f1-8465a727a65b",
        "cursor": {
          "ref": "9c26a97b-eab5-4870-8740-79ea525ccde6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4486aa44-33a3-4b5b-beb8-49842ddda6cb"
        },
        "item": {
          "id": "6966e3d6-b2fc-4cb8-b7f1-8465a727a65b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fa603074-c057-4371-b39e-ba7668cfae07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756b7ae6-27f2-4ba2-ac54-e15682f0453d",
        "cursor": {
          "ref": "40ba7c67-44ef-48c8-888c-4be2160f5d25",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e99e629b-b44c-4689-9349-41c9da0cd623"
        },
        "item": {
          "id": "756b7ae6-27f2-4ba2-ac54-e15682f0453d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "79fff3a9-7cd5-45e9-8755-47dc786a7673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0895a2d-7411-4b39-b938-5a0d0eaaf950",
        "cursor": {
          "ref": "82defb77-49ac-41f8-beb5-31688849e730",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "708d2cd7-c049-49e2-9939-1667994123bc"
        },
        "item": {
          "id": "c0895a2d-7411-4b39-b938-5a0d0eaaf950",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "762a44fe-4dd8-42a1-8af2-52a61dc96c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f23a5a1-e895-42c7-9ff8-c677a3d9e5fc",
        "cursor": {
          "ref": "baa33589-e667-441d-9947-b8ce9764a0e9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b9ef470e-a9dc-4b51-8721-25b608ee19cf"
        },
        "item": {
          "id": "2f23a5a1-e895-42c7-9ff8-c677a3d9e5fc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a28576b-edf1-4f31-ad68-df7e2c53f63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a717e755-7e1d-4fe5-a10b-01792badb80a",
        "cursor": {
          "ref": "349edfbd-0961-483e-87b6-ac7341635b7f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c4b7290c-11ce-453d-89c7-9a4ab66fcf0f"
        },
        "item": {
          "id": "a717e755-7e1d-4fe5-a10b-01792badb80a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f7dc395b-8873-4052-92c8-389a5026adcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7655b16-5e2a-46af-bf71-2445a767462b",
        "cursor": {
          "ref": "c5b6d49c-79d7-41cd-91be-5f8ea754b8b4",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b4334333-87b1-48b4-aca9-2c09bb6e76e6"
        },
        "item": {
          "id": "b7655b16-5e2a-46af-bf71-2445a767462b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2b2f6c50-ffb3-437d-9619-12ff12471c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015d22c4-6b15-47f6-a9b4-6dc18f3de33e",
        "cursor": {
          "ref": "67c865ea-55b9-4e8d-8bf3-6e970ed042df",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "da69febc-fc45-4a89-ae82-c4a29efda0d9"
        },
        "item": {
          "id": "015d22c4-6b15-47f6-a9b4-6dc18f3de33e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "415db39c-06ce-45da-8e85-fac2abfbf196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26891c78-a7f1-4e49-8614-e05bbd68ebab",
        "cursor": {
          "ref": "ff392dae-c7ec-4608-91d4-9950ce640226",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f660ecd0-c405-4753-bc59-ef032437a9b6"
        },
        "item": {
          "id": "26891c78-a7f1-4e49-8614-e05bbd68ebab",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "37c472cf-7055-4d3f-95d4-8ac945212e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9c716b-5ebf-41f5-a4cb-79e51697ccf4",
        "cursor": {
          "ref": "f0515b72-48f8-44c4-a9d8-4b0a010028c8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7cdf2da7-2baa-489b-a10b-7a6d9c887aa7"
        },
        "item": {
          "id": "ed9c716b-5ebf-41f5-a4cb-79e51697ccf4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "630e3824-7eaa-47bc-9ca7-a89a5c3cba7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22570d68-194b-496b-848e-4f1ac044d7ee",
        "cursor": {
          "ref": "1d8927cf-203b-4c4e-addb-6ebc142b1762",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d71ba585-6aa6-41c7-b0c1-9efd791aa833"
        },
        "item": {
          "id": "22570d68-194b-496b-848e-4f1ac044d7ee",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8ea29309-0f99-4fc3-a6ee-ad67afe3aa6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb5a5d3-e65b-4e35-89bd-fcf390297107",
        "cursor": {
          "ref": "10268dd8-5c7f-4b7e-af04-d2174955b6dd",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3933bb70-835e-4463-9c2e-2a0b5a37b2c5"
        },
        "item": {
          "id": "6fb5a5d3-e65b-4e35-89bd-fcf390297107",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fbce5050-42f1-437c-bce7-9b266779e351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2257fac-5ec4-4002-aef2-04da527de1c0",
        "cursor": {
          "ref": "9693ca8a-2ea5-40df-adc1-cb73b91fd7aa",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "17774e50-a55d-4537-9854-899d2dd8a4f8"
        },
        "item": {
          "id": "a2257fac-5ec4-4002-aef2-04da527de1c0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "985738d0-01d2-4d3e-aeb8-8366a796846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2a32ce-eb13-46fc-9820-f63ada9586fc",
        "cursor": {
          "ref": "1b225046-e46c-4f97-8a3f-0a933cd81d25",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2fef70a4-5fab-4d26-8504-a38b4b8244d2"
        },
        "item": {
          "id": "fd2a32ce-eb13-46fc-9820-f63ada9586fc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "67b15aa5-2df8-48df-9d8b-e49b951741e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f059fec-fe81-4aa4-ab28-f27084e52765",
        "cursor": {
          "ref": "6aa8f853-932a-45ba-855f-c5bd3d321555",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b2ee5cc6-cb80-42d5-ad07-6bfac47a0b96"
        },
        "item": {
          "id": "5f059fec-fe81-4aa4-ab28-f27084e52765",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "26942bf5-c0b1-432b-bd12-b2c5c812a5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4498f626-7d94-43ce-93bc-d1d1c394555f",
        "cursor": {
          "ref": "d724c62c-e88c-4e62-8829-228a580b9619",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "722169fe-de5b-43d4-858f-3434adae552d"
        },
        "item": {
          "id": "4498f626-7d94-43ce-93bc-d1d1c394555f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3c36fadc-7781-428d-968f-fa28f5bca0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1542de07-25bc-43b4-befc-745e492d0e1b",
        "cursor": {
          "ref": "57e8749e-d770-4470-a514-b76a51dcee4e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fe9322f2-958c-482e-a3f3-5c9ef57be20d"
        },
        "item": {
          "id": "1542de07-25bc-43b4-befc-745e492d0e1b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f1a8e6c-2e83-4e99-815b-8b0a577f3cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02f967a-641f-45aa-885c-a0bb55eabb22",
        "cursor": {
          "ref": "1f8eef00-e418-412d-8765-fc5775009e2e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "84fdb492-ecba-4374-9470-8eccbad979ff"
        },
        "item": {
          "id": "c02f967a-641f-45aa-885c-a0bb55eabb22",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9d8592a6-a59d-4ef6-be3e-a61ba0a95758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1064,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e474f5d3-d641-4654-942d-1fa7c9b58c76",
        "cursor": {
          "ref": "8b664ce9-f0e3-4a59-bf4b-b99b21827707",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a20c3c30-eb38-4032-a2f0-19f551880824"
        },
        "item": {
          "id": "e474f5d3-d641-4654-942d-1fa7c9b58c76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "564a868e-b91a-4d0b-93ca-3b0ec76ed987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f7d951-ea6d-432c-a0df-bb9316dd4a5b",
        "cursor": {
          "ref": "f3373064-4d52-40eb-a2ce-70de79495361",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d6b4efdb-f86a-4fbf-a250-003899108203"
        },
        "item": {
          "id": "88f7d951-ea6d-432c-a0df-bb9316dd4a5b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "83b380c9-3b18-4632-9743-56e2dadc7525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facea6ea-ff67-401e-8ab8-0105c83d9af6",
        "cursor": {
          "ref": "952f7a8c-3bd2-4f3c-9d29-d729912194d9",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ebca5cc4-7309-462f-808d-21399367a954"
        },
        "item": {
          "id": "facea6ea-ff67-401e-8ab8-0105c83d9af6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "399faea8-517d-4aab-89f5-115cfad69135",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9637b83b-8a0f-4380-8875-2d0300d3cbef",
        "cursor": {
          "ref": "71bd9dd4-7ead-423f-8078-1f0ccdda29a7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6a5cf58e-b5d9-4a82-9127-eb80c66de81e"
        },
        "item": {
          "id": "9637b83b-8a0f-4380-8875-2d0300d3cbef",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "add88aa9-451f-402a-a979-c57ab5e7b451",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 807,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e18e11-2e3a-405f-9ee1-4b8477b647a3",
        "cursor": {
          "ref": "30a218c3-e34b-45a8-be4b-63ad1e4a04ca",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "db80958a-ae0d-43cf-bf57-0a289c100bde"
        },
        "item": {
          "id": "c4e18e11-2e3a-405f-9ee1-4b8477b647a3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "48f81044-9114-410d-917b-097001a31804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e18e11-2e3a-405f-9ee1-4b8477b647a3",
        "cursor": {
          "ref": "30a218c3-e34b-45a8-be4b-63ad1e4a04ca",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "db80958a-ae0d-43cf-bf57-0a289c100bde"
        },
        "item": {
          "id": "c4e18e11-2e3a-405f-9ee1-4b8477b647a3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "48f81044-9114-410d-917b-097001a31804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eead57-7554-486c-a056-36fc61411b94",
        "cursor": {
          "ref": "4d0dca1c-531d-4d58-a954-e3444db56685",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bed3ce5d-f38d-4997-bbd3-e1a48bf67b40"
        },
        "item": {
          "id": "c5eead57-7554-486c-a056-36fc61411b94",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a07d8a56-70cb-46d8-a487-3f1d026efd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcc5e41-73a7-4a64-8f10-812d0be2010c",
        "cursor": {
          "ref": "ff8979d7-5fbf-401b-b42d-54108ce22230",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c82ad6b7-054d-4374-a0e3-b5de8f294621"
        },
        "item": {
          "id": "7dcc5e41-73a7-4a64-8f10-812d0be2010c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "19594e17-5b69-4d10-b44c-9029b3247d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fba24e0-ab3d-42b9-864e-d3acede762d8",
        "cursor": {
          "ref": "9f2f8739-9531-431c-b694-483f44e3b379",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "91dcf2f0-0aac-46b5-95be-50bdfeb572cc"
        },
        "item": {
          "id": "9fba24e0-ab3d-42b9-864e-d3acede762d8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "379ba25e-821e-4ed6-8c18-9b5d50c26274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b84261-15d2-4725-b4b1-8b9bca61050d",
        "cursor": {
          "ref": "06c81367-fcc8-4fe1-97e8-855f527cd0c8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b9ea8b30-aac4-4f9e-9982-99cef7225a32"
        },
        "item": {
          "id": "d2b84261-15d2-4725-b4b1-8b9bca61050d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "87e8dd96-8b57-4e10-b2bc-ace46d8cd089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4002231d-b420-42f2-a0e9-913d99cba27d",
        "cursor": {
          "ref": "4b388de7-ae93-4d82-9651-a11dfe81ce5e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f7648a27-bba1-49ab-b084-c8bff7a65d88"
        },
        "item": {
          "id": "4002231d-b420-42f2-a0e9-913d99cba27d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d0816c9b-37ab-497d-b2ac-a1bde902f635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2e2459-f2f1-4fef-aec3-1cb397cd3321",
        "cursor": {
          "ref": "4f8bc1fe-406e-46c6-9861-e025e3870e76",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "54e79e81-d1e4-4a0d-b0c1-6c94d4e776c7"
        },
        "item": {
          "id": "4a2e2459-f2f1-4fef-aec3-1cb397cd3321",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "19e379bd-4163-4884-9b9d-036410a8d96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99358d5d-04c3-40a7-93cc-5d5cc3df85ea",
        "cursor": {
          "ref": "8e9fd756-adb4-4f97-8acc-0193ab844c9b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "36facf56-1572-40ef-a714-dc9bedecf38a"
        },
        "item": {
          "id": "99358d5d-04c3-40a7-93cc-5d5cc3df85ea",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9b718017-fb06-4efc-bb51-4daf6bbb73fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e70edb3-2a1e-4615-8749-9e8697f2d8b6",
        "cursor": {
          "ref": "033f207d-385d-47ee-82ec-d4961146abcc",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7e77e888-6e33-4dfd-b8e9-6479066463ce"
        },
        "item": {
          "id": "9e70edb3-2a1e-4615-8749-9e8697f2d8b6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "241117bb-6e0f-4e59-a07b-b2337cf0e4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1e8467-c9c2-44b7-8e39-908cfe88bab5",
        "cursor": {
          "ref": "24a56234-e3b1-437e-b8ff-f495c9c7f53d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cf1ad7d7-1a92-4b35-808f-4f6245f8b165"
        },
        "item": {
          "id": "5b1e8467-c9c2-44b7-8e39-908cfe88bab5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aa29312f-5b36-4188-b730-9974e2475544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da30726-b08e-4afa-89ac-e7ac1df60482",
        "cursor": {
          "ref": "4a9ece29-7e86-4f18-85bc-c2dfe8927d82",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "197c9b33-1f27-475d-8432-c53a25869a77"
        },
        "item": {
          "id": "0da30726-b08e-4afa-89ac-e7ac1df60482",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "29aec7f6-c5b6-4b5c-913f-72ee00e03267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca64e0c-8bd3-4798-b1f3-ad849fda4215",
        "cursor": {
          "ref": "8f614a5c-a85a-4d32-815a-423bd29d36af",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b276a22d-9152-4dc1-a0dd-bf23776bc33b"
        },
        "item": {
          "id": "2ca64e0c-8bd3-4798-b1f3-ad849fda4215",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c0bed658-d179-46fb-893f-da9757f2edb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc5ee0f-b7e4-4b60-8f3e-2849b1c697b0",
        "cursor": {
          "ref": "23af8e96-420e-46eb-9d32-3b07af90bb6e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "73fb5dac-d06c-473a-a79c-c17098ad9e7d"
        },
        "item": {
          "id": "ffc5ee0f-b7e4-4b60-8f3e-2849b1c697b0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dfcebd1b-4372-487b-9cd9-8d77751fddd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ff2bed-094b-46b1-844d-7989216df7cd",
        "cursor": {
          "ref": "0f34a4df-8268-4519-85d3-e03a9ee96d4b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0b8662ad-fc66-484c-85e0-5430a315e281"
        },
        "item": {
          "id": "79ff2bed-094b-46b1-844d-7989216df7cd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c759f89f-2925-4279-b44c-3859fa7c86d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27472084-7063-40d6-8055-74b0728a3629",
        "cursor": {
          "ref": "c285d222-3d4c-4c25-b3b9-2a4db7ccc84b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ae1020a7-3b4b-406c-a635-d24ae1074b43"
        },
        "item": {
          "id": "27472084-7063-40d6-8055-74b0728a3629",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ee1a16a9-6e62-4f42-9e9f-e1df1d8f3459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e971cc98-0d69-4ac3-b92e-7b28354aef4a",
        "cursor": {
          "ref": "3160cd63-2d25-43fa-b97d-d9ce13ee2306",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6569f062-a15f-4343-831c-0a1904f6d23a"
        },
        "item": {
          "id": "e971cc98-0d69-4ac3-b92e-7b28354aef4a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0959912a-04d6-4a80-bbe2-e1a7e4e29621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d9ac6a-b558-4930-a2e9-d2a2a529a878",
        "cursor": {
          "ref": "f8c40042-33ee-4815-bebe-d3b002f7bc78",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6288190d-44fc-4605-9b17-f7102e2bab7a"
        },
        "item": {
          "id": "a5d9ac6a-b558-4930-a2e9-d2a2a529a878",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "66945e8f-6798-4a65-8be6-faaf807337fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1829c12d-ea08-42ea-817f-6848f6685de3",
        "cursor": {
          "ref": "0f82af53-502d-46a8-9013-4e91e1de293d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3dbce40a-3e08-4f11-bc23-e9c5e5e8bde6"
        },
        "item": {
          "id": "1829c12d-ea08-42ea-817f-6848f6685de3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d31e2797-a23d-4e13-8421-c4fb58468de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665d667a-943a-4529-8018-a019b7b710d1",
        "cursor": {
          "ref": "c9e1b47e-5ce5-467e-8b4b-c5dbaa87a00f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "88b18918-1f43-4acb-9a6b-77e48b29a47f"
        },
        "item": {
          "id": "665d667a-943a-4529-8018-a019b7b710d1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f39a4b49-bfac-4f72-83f0-6ed078381671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1deb0dc5-f923-4eb3-98b6-4cf409ba66b1",
        "cursor": {
          "ref": "0cd8aec6-94a1-4d99-aa6d-95481d51ba2f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "357d517c-05ea-42fd-936e-4f8a170acd36"
        },
        "item": {
          "id": "1deb0dc5-f923-4eb3-98b6-4cf409ba66b1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3b645bde-613e-4bf8-a772-053b479e9d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0233f4-a391-47ae-a662-4f4f9ddb41bf",
        "cursor": {
          "ref": "d3340516-e0f9-4341-b6df-ad309157e114",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dce4e2f0-1966-43e1-a808-0a542ccdae64"
        },
        "item": {
          "id": "ae0233f4-a391-47ae-a662-4f4f9ddb41bf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e03b0d11-cfb0-484e-b3ce-7974e40714c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49fce14-c696-443b-9fc0-e681fd96fb53",
        "cursor": {
          "ref": "2f29568a-fab9-4419-8dbd-439c2ab20fe6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ea74a7bc-56a1-4bbb-9a92-c102fe672f71"
        },
        "item": {
          "id": "f49fce14-c696-443b-9fc0-e681fd96fb53",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "10b3f810-b0b7-4760-89b6-256a20aacb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a1b98c-321d-4045-a959-98e5b345576f",
        "cursor": {
          "ref": "2ee71319-e14f-49cb-90ad-3a5045485723",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ef83af30-aee2-435d-a6d6-79ff8431490a"
        },
        "item": {
          "id": "09a1b98c-321d-4045-a959-98e5b345576f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "527a911f-1c58-4983-b9c3-f434dbd79759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f369d1f3-bdc0-4a88-af54-886bb1ad4165",
        "cursor": {
          "ref": "b4b69cbd-e1ec-488a-8ee3-b2d06578713b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d9f60d18-fb6e-4b1f-9fc7-671f5fb86dc2"
        },
        "item": {
          "id": "f369d1f3-bdc0-4a88-af54-886bb1ad4165",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a7e6003d-0b88-4130-a6c1-ac5a3571266c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816376f7-05fa-4ef3-bfe2-da82c5979983",
        "cursor": {
          "ref": "04633f61-2634-4a7c-84e7-70e22f467476",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d05cde26-9707-42bd-8889-f2a2f33c2ed4"
        },
        "item": {
          "id": "816376f7-05fa-4ef3-bfe2-da82c5979983",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "34ce595e-ba4d-4d78-a60c-873526f59e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a4da9b-22ef-4b1b-98ce-378718de15bf",
        "cursor": {
          "ref": "4c75a92d-c768-480f-89b1-e5c4a8584c35",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d2600bbe-54ac-498d-8076-a4a5800b721d"
        },
        "item": {
          "id": "16a4da9b-22ef-4b1b-98ce-378718de15bf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5714035e-8706-4123-8beb-bd2ccfd057c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7299f7-e573-491b-b5bd-919a6d7744e5",
        "cursor": {
          "ref": "a15e456c-bbe7-4506-9162-befdad6b6d81",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "005c0b0b-2f2a-46e7-8ddb-19539a45bcab"
        },
        "item": {
          "id": "0d7299f7-e573-491b-b5bd-919a6d7744e5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "01f9fe70-bd4f-42e9-9546-a461f8a8d705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ebb596-8bd5-4484-ab69-ef8cd9a7aa58",
        "cursor": {
          "ref": "62e5e509-537d-42f0-b0af-2e5dbbd95dd7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fd51b18c-cf05-4e19-b2e5-58e14c961d33"
        },
        "item": {
          "id": "e9ebb596-8bd5-4484-ab69-ef8cd9a7aa58",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0af66fcb-46e4-4e41-b919-8bd0745c4811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcf9547-f622-4d74-a02a-c6253524386b",
        "cursor": {
          "ref": "9f1012ac-8fe1-4576-b6c4-c6bcaa36a294",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "124e2698-6a4f-402c-8da4-dbfaae352c6c"
        },
        "item": {
          "id": "2fcf9547-f622-4d74-a02a-c6253524386b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0c6464dd-ce09-4169-983d-dea5e6204de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3d1bd3-a2a9-4df7-918f-5a76bd240b05",
        "cursor": {
          "ref": "205fb4d1-a122-4524-abb1-02ed27fe6227",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6883125d-99ff-4230-82a2-affccda5c1bb"
        },
        "item": {
          "id": "ed3d1bd3-a2a9-4df7-918f-5a76bd240b05",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3f6b9fc3-674e-4aee-a028-ae77f7439329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1ed302-131f-46d6-a600-d328f93243ca",
        "cursor": {
          "ref": "b2ea3519-d924-44c8-82ba-93b5af5c5c41",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c4027107-5974-4204-81a7-0f412aa8b3e2"
        },
        "item": {
          "id": "2a1ed302-131f-46d6-a600-d328f93243ca",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6e8caba4-f7f5-4d92-afde-4f1d656b4f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9300cb-47df-4952-8f93-52085cc0a8bf",
        "cursor": {
          "ref": "a9b3df2e-2676-4b37-837f-bfeecfabda3b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "060ce262-493b-4dce-abe9-81a9115e90e1"
        },
        "item": {
          "id": "ce9300cb-47df-4952-8f93-52085cc0a8bf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b867136e-c009-4c31-823a-ea356d65b730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c9f8e-20f7-459a-8de7-416aa87391e5",
        "cursor": {
          "ref": "375b9d8b-41ba-465b-87e3-9efe6e4f687c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3f21d6a9-2b34-4bda-a532-11645a1ae19a"
        },
        "item": {
          "id": "3d3c9f8e-20f7-459a-8de7-416aa87391e5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5bd22d05-2607-4dd1-aec5-5d55df4800fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b665fe-affd-46db-b13e-f2f241a9e2dd",
        "cursor": {
          "ref": "7f21e8e2-68f9-4875-b11c-519cb9aeff54",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b24fb8b6-db8c-4881-a4ad-fb489c6e71a0"
        },
        "item": {
          "id": "e0b665fe-affd-46db-b13e-f2f241a9e2dd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "52c979a1-d858-4f99-ac15-ddd796e50fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77afd921-1e09-4b65-b958-990b03d94a59",
        "cursor": {
          "ref": "78310592-352d-4e4a-8891-55142ca216a0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6f7613f9-56dd-45b1-a71f-1a6aa3c625fc"
        },
        "item": {
          "id": "77afd921-1e09-4b65-b958-990b03d94a59",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4d2add58-644b-4f5b-9129-a3cc682251b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c148b4-8074-496e-b8dd-61a445e021b9",
        "cursor": {
          "ref": "a5d0dcc8-b43f-43f9-8d1e-ec611f1796db",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "acdede77-6cc0-4d18-9229-b50482ecb92f"
        },
        "item": {
          "id": "81c148b4-8074-496e-b8dd-61a445e021b9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0d15c3ee-6cb2-4c60-96b9-24bc41e37a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f85e9f-cad2-44f8-81ad-160fc21e69b5",
        "cursor": {
          "ref": "4e3b003c-418e-47be-955e-0fb9b5b14910",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "357dfdee-b6a9-44e2-89c6-c5809e1404ae"
        },
        "item": {
          "id": "e4f85e9f-cad2-44f8-81ad-160fc21e69b5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5e1dc051-0c30-488e-a955-1b04d5fd002d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b950b3f-e828-47c0-83d8-b54219b01c71",
        "cursor": {
          "ref": "94eae4f0-ba02-4492-b40a-c6c31fcfe918",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2a53a913-e6cd-4ec2-9261-44a17b523263"
        },
        "item": {
          "id": "7b950b3f-e828-47c0-83d8-b54219b01c71",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7694a751-a85d-4e8e-b2f5-d6256afa39a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1215bece-6935-4e26-9c13-e4482c18be86",
        "cursor": {
          "ref": "28384950-e8e2-4227-9cb7-a5471b603051",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9c896146-48f1-4adb-affa-a22e85492368"
        },
        "item": {
          "id": "1215bece-6935-4e26-9c13-e4482c18be86",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c8e88dbe-e33d-49bd-b11b-2a0e2a5fb0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dc8f20-819f-405e-9e65-784b78680c2c",
        "cursor": {
          "ref": "8f8d8fb5-4d79-4c98-bee7-fb0489cfa5f1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "88c6968f-1a9d-4e44-9c38-2c1a67dbced3"
        },
        "item": {
          "id": "36dc8f20-819f-405e-9e65-784b78680c2c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "efd0b30d-95c6-4593-bea9-576c036a7dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40011515-c799-46a2-b267-37352bdf4fc8",
        "cursor": {
          "ref": "5820873c-cbbd-4563-97a9-e7c1be2914ce",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "13a6fe8b-38a1-413a-8d13-732e8f137b6d"
        },
        "item": {
          "id": "40011515-c799-46a2-b267-37352bdf4fc8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ee950822-0e43-485b-958c-4c4af3609e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cc7caf-67d5-426a-b43f-d91d54c3aaf3",
        "cursor": {
          "ref": "08df487a-3448-4a8a-8f22-197d5e4cd021",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6e4abf79-83bf-4386-a2e5-89ebed09687d"
        },
        "item": {
          "id": "f6cc7caf-67d5-426a-b43f-d91d54c3aaf3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9d0a1fc9-a51d-4544-9c30-a3f03ff6c72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5efa57-74bd-4bb7-81e8-ada58c785960",
        "cursor": {
          "ref": "d25c4fcc-aab2-44c7-8bd3-cc17fd8dde6a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2a801ca1-ae43-4b08-94a8-b6c1fe712092"
        },
        "item": {
          "id": "9f5efa57-74bd-4bb7-81e8-ada58c785960",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a568eb36-2414-43d6-8ac3-fad77225c1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1d878e-190a-412d-9cdd-28ea21a4c65c",
        "cursor": {
          "ref": "64d144a3-2aff-4369-b0e1-52c643566434",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "71394f30-be33-4363-b91e-9accedd34883"
        },
        "item": {
          "id": "ac1d878e-190a-412d-9cdd-28ea21a4c65c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a47705b0-0042-4086-9464-3af6825afb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad4dd35-5e37-4420-9ed8-587be90d7136",
        "cursor": {
          "ref": "5de5f70b-d008-44c5-86dc-a061b9900064",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e973488a-971d-4378-821f-826dbc782027"
        },
        "item": {
          "id": "7ad4dd35-5e37-4420-9ed8-587be90d7136",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "041c512f-bb22-495c-8734-63674cfa7d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1752b7c9-b5ce-448f-813f-e59ce185b8cd",
        "cursor": {
          "ref": "0b1f2125-2d37-4444-9e97-a8cca4579b84",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "02262ec2-c4da-4677-bc93-147aef0e7938"
        },
        "item": {
          "id": "1752b7c9-b5ce-448f-813f-e59ce185b8cd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a63d3418-2315-4027-8fc6-9cd624ad2dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275344ad-03c9-4fba-80f0-4dd5e2efaacb",
        "cursor": {
          "ref": "08712fa2-f9b0-4b72-b797-70e9d89d723c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0de29477-14c9-4aeb-873e-a4ed232e9c00"
        },
        "item": {
          "id": "275344ad-03c9-4fba-80f0-4dd5e2efaacb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9f2d5008-d57f-4af4-a5d8-6bbed9320c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76571422-0500-48a6-a2cf-f0be56d217f4",
        "cursor": {
          "ref": "5bbf782a-04b0-4cc7-970b-6ef4d2d7c0a8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dda18bab-4656-412a-8db6-af3c28df21cd"
        },
        "item": {
          "id": "76571422-0500-48a6-a2cf-f0be56d217f4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "84d25c66-bfda-4a5c-b2b8-8dc935f293aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a7c5e7-8e20-4fff-b226-3a99ebef01b7",
        "cursor": {
          "ref": "3c48b4e8-da48-49ce-b678-6f2b88f99b34",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "403a3e72-9338-435a-9c22-0370b8a78864"
        },
        "item": {
          "id": "d6a7c5e7-8e20-4fff-b226-3a99ebef01b7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2454bfa5-7837-430a-9345-7384858e934a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877a5a8f-82d4-4b04-968d-78caf3d4e8a4",
        "cursor": {
          "ref": "5b151a71-9e55-4a6f-ba4d-38686d02cbb5",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ee1521f3-b3e9-4b0e-8334-4f4511cf8396"
        },
        "item": {
          "id": "877a5a8f-82d4-4b04-968d-78caf3d4e8a4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e039b3d9-1464-4286-9b27-77815c41f325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f01a47-f396-42ba-906f-cfa784e98af4",
        "cursor": {
          "ref": "ad2a4ec8-3149-4406-8675-530bc4398b49",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c19f5410-eac8-42d6-86c5-8960f57ed28a"
        },
        "item": {
          "id": "e3f01a47-f396-42ba-906f-cfa784e98af4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "913b6718-0723-4991-8aa2-c9337bc93391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6e7efb-e07a-4c53-a5c8-650dad25a76b",
        "cursor": {
          "ref": "33689b17-f3b8-4e50-9e0e-bdd5ee1b345a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "895a7d5b-7919-4cdc-92ea-0408190451b8"
        },
        "item": {
          "id": "dc6e7efb-e07a-4c53-a5c8-650dad25a76b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bdc4fda1-6282-4e2d-b364-ed209d5a3fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1304ab0-3cb5-4b03-b2e8-8c75a478ee78",
        "cursor": {
          "ref": "13b0b39c-7cee-4ebb-8f57-076f82aacdf7",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "03856126-f694-4432-a4e2-584325820b8d"
        },
        "item": {
          "id": "c1304ab0-3cb5-4b03-b2e8-8c75a478ee78",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f547e12d-e3ca-4e74-87b7-c22175b253bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e775a671-c481-44da-8b13-093cbfd9c04d",
        "cursor": {
          "ref": "a12284df-e757-4db5-95fb-368117660b1a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5005f311-80cf-454a-928f-3cb7f5e071bd"
        },
        "item": {
          "id": "e775a671-c481-44da-8b13-093cbfd9c04d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e2cd7b16-5d2f-4b6a-9b8d-f90525920a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f38774c-8aa3-463d-a241-62e70f946ac5",
        "cursor": {
          "ref": "11cc0b29-affb-497a-aa3b-a6376d570167",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "90c30a2f-25ee-47d7-b520-d26c0af67df1"
        },
        "item": {
          "id": "6f38774c-8aa3-463d-a241-62e70f946ac5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d83c8155-c40e-489b-8672-7f3441d22408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4226315-a26d-4d08-b90e-6b5d6f274205",
        "cursor": {
          "ref": "6d9398d9-a93b-415a-b212-7429102b4c01",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ac064034-a8ca-41e1-868f-992be23fca81"
        },
        "item": {
          "id": "d4226315-a26d-4d08-b90e-6b5d6f274205",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c33b78e5-e731-4b07-95c8-de3320321efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d18819-4c1a-4732-9f86-5317c8334190",
        "cursor": {
          "ref": "7e657be5-8611-4ecd-98e7-45b111561960",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "440fb1aa-e6e6-4a50-923c-f8b2d1d889fb"
        },
        "item": {
          "id": "68d18819-4c1a-4732-9f86-5317c8334190",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0493ad34-d7e7-4da3-93bf-2bd89f88cd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8aa304-e9aa-4707-a5aa-7337c40efb01",
        "cursor": {
          "ref": "d3991b37-3a72-4b36-88ec-6b753262c435",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b5789d77-2beb-4903-99bc-f8a46ca963ad"
        },
        "item": {
          "id": "8c8aa304-e9aa-4707-a5aa-7337c40efb01",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0c062aae-627a-4f7a-88cf-30cd4ee494c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f3087c-61fd-412c-ba48-d562d14b2c78",
        "cursor": {
          "ref": "a08a1471-14f6-48df-aa6c-829a1d337cbe",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b4ad24dd-f412-4c37-8969-5bb10b26a083"
        },
        "item": {
          "id": "50f3087c-61fd-412c-ba48-d562d14b2c78",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f40d25b6-e59d-4b98-9d6d-86e2394a788b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c7c5cd-be19-43f4-8fc4-22534e27ddf9",
        "cursor": {
          "ref": "8351646e-9f9a-4f99-9f6e-9cec47bc610f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e81845a4-8fdf-49b7-96cb-2d3486a611fb"
        },
        "item": {
          "id": "44c7c5cd-be19-43f4-8fc4-22534e27ddf9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "12c28823-5c78-4f96-9f19-22523be4016c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67db12f5-86fe-471b-b988-fb0291297202",
        "cursor": {
          "ref": "29381b33-a08f-4546-bd25-25d46879946b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "70a81d43-3633-4e97-bd0d-93a4a02f69b3"
        },
        "item": {
          "id": "67db12f5-86fe-471b-b988-fb0291297202",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f4d43f88-2af2-4d63-94c4-79483c86c0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fd130b-9016-43a2-98af-884e6b7e8fed",
        "cursor": {
          "ref": "13af08f2-52be-407a-b399-c0c650553eb4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e2513866-3d05-440e-a8b3-deae93f908c4"
        },
        "item": {
          "id": "08fd130b-9016-43a2-98af-884e6b7e8fed",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3070ce21-e7cf-4ed1-8078-772432701311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5eed59-f284-430c-be1b-d1f5a91b9a2a",
        "cursor": {
          "ref": "cfaa18b3-871f-4a85-9194-d39143825801",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6702656f-36f5-43e8-8831-960e8abf54a1"
        },
        "item": {
          "id": "fc5eed59-f284-430c-be1b-d1f5a91b9a2a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "eb8e27cf-331e-454b-922c-03a5b852c01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5971dcfb-5039-4eae-83e3-c2fcb540fbdc",
        "cursor": {
          "ref": "8dc25f72-9a28-4ece-bd07-fa00fae5260a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e633ecfc-4900-4f1a-8333-ddba62449254"
        },
        "item": {
          "id": "5971dcfb-5039-4eae-83e3-c2fcb540fbdc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b491a761-38a9-477a-90dd-93edbd7ec5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973fda7b-d775-43e4-a518-e7ec755f8c99",
        "cursor": {
          "ref": "2ecfa16c-30bd-48d2-b254-cd8d4cb61b2b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "31d7d29d-c8ac-42ea-b564-028e1bf7fdd6"
        },
        "item": {
          "id": "973fda7b-d775-43e4-a518-e7ec755f8c99",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2f27d6d0-bc10-4a99-b276-57664a245153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f359cb-1ee1-4cef-95d6-bb37f9031f5a",
        "cursor": {
          "ref": "7602498a-f1e0-4f74-a272-ccf5bac5b577",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "79146d8d-1c84-4732-a9e3-a18230c57421"
        },
        "item": {
          "id": "47f359cb-1ee1-4cef-95d6-bb37f9031f5a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "44c55c17-5a8d-4050-aa6a-a7e4c36706c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98771d98-49fe-49e5-8265-8bd7196e0016",
        "cursor": {
          "ref": "607bcf90-e239-4c1a-a273-ada45562d662",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "55df7869-581d-4eb4-bb29-e099fcc46b8b"
        },
        "item": {
          "id": "98771d98-49fe-49e5-8265-8bd7196e0016",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1aba8867-b6c5-4e4e-87dd-1a3d96fe8582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e7b4c4-6ff1-4289-a3a0-4c233cd622f4",
        "cursor": {
          "ref": "657b9c36-42b2-4766-b30a-34651d86d2c7",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "950ab040-e8f2-429e-b584-9e2295ec139a"
        },
        "item": {
          "id": "14e7b4c4-6ff1-4289-a3a0-4c233cd622f4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c3991670-0fb4-4608-9adb-661e6af80791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1285,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d41ca6b-4bb7-4bd7-85cd-5aae4b2f0fb7",
        "cursor": {
          "ref": "9b3063e3-ed8b-4dc3-aaef-b3b65804c5b7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3c55e251-8876-4368-badf-f09bdd5e3e23"
        },
        "item": {
          "id": "7d41ca6b-4bb7-4bd7-85cd-5aae4b2f0fb7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1588b69e-d9e8-4882-bcab-2322dc637ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdae9360-c987-4378-9f3d-5ed731983b38",
        "cursor": {
          "ref": "c639efdb-961d-4925-9dc0-fa9e5156a427",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dcff08a8-26df-40f5-a42b-9934aadd9168"
        },
        "item": {
          "id": "bdae9360-c987-4378-9f3d-5ed731983b38",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bdcafbe4-3fe0-4ce9-9282-1391eba90898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098d9c58-0b79-4145-8e61-e4838f8b3867",
        "cursor": {
          "ref": "ef5bbd8b-de24-42be-a8ee-11390bcfd5b9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1fae6c9a-71c6-46f0-a4e4-deeb49c088c7"
        },
        "item": {
          "id": "098d9c58-0b79-4145-8e61-e4838f8b3867",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5a9dd917-42b9-47ae-bb9b-b9e402433e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f17ebd9-5ca9-402f-bfd5-4d91f3010a4c",
        "cursor": {
          "ref": "7d7f29cd-a4e9-4755-a1b4-b763a411f3d5",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aea76cbc-b6a9-4af8-a70b-2e6e4f171383"
        },
        "item": {
          "id": "8f17ebd9-5ca9-402f-bfd5-4d91f3010a4c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5465f5ab-5458-4441-8eed-8e2f752b707c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99741ff-e80a-4ef9-9ba3-0c8d7baf7a65",
        "cursor": {
          "ref": "94fa146e-0ac6-4ee4-884f-f24cf4cea76c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2d248b49-f3e0-4821-83e3-a78833078fed"
        },
        "item": {
          "id": "f99741ff-e80a-4ef9-9ba3-0c8d7baf7a65",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "00814308-fb10-4889-9d28-07a74a3e0f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78765d13-8766-4812-8177-b21b13df05d4",
        "cursor": {
          "ref": "1efee430-19c4-45cf-941e-c718aa8924b8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "979646a7-58c4-4c65-b506-b560babfaef6"
        },
        "item": {
          "id": "78765d13-8766-4812-8177-b21b13df05d4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "392f59ec-954b-4d95-ad91-cd59601136bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816e36ea-8c8c-4a9b-950f-cfbc646f5920",
        "cursor": {
          "ref": "7c850bb5-dcc8-4643-865b-e8dbc7b3dc37",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3920f818-ccb0-4052-b2ad-fae1e3c347ef"
        },
        "item": {
          "id": "816e36ea-8c8c-4a9b-950f-cfbc646f5920",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6f75f613-34ab-40fd-afbb-10a550a0e047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca40d0d5-8764-49c5-ac54-a1be9ce3b58f",
        "cursor": {
          "ref": "91834e0a-d4a4-42f3-be94-5d5b927e0923",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "87b660b2-c114-41fd-a0ca-acc685797bfc"
        },
        "item": {
          "id": "ca40d0d5-8764-49c5-ac54-a1be9ce3b58f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ec333fd5-8190-486e-8e4b-d7103428a106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7535489f-c6b9-4dc2-b795-fd718a3bf513",
        "cursor": {
          "ref": "eaffec84-2dc2-461e-bc30-e6acb6189888",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "33e0c7ec-f257-4b8a-a76a-4937e830cbac"
        },
        "item": {
          "id": "7535489f-c6b9-4dc2-b795-fd718a3bf513",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2694a0b9-7bc5-4d0e-8117-b2e947ef4ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c792924d-b0fb-419b-aad7-48dff5eaccc9",
        "cursor": {
          "ref": "f883e9a5-2e20-496f-b630-7b54ea78eaf7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "48586687-3f2a-4df4-9bdf-2a632659fe74"
        },
        "item": {
          "id": "c792924d-b0fb-419b-aad7-48dff5eaccc9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "389b251d-d67c-4df9-8b29-c7068ca2e28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb88afbc-0b90-4c08-b2f5-4a5c228c7ce3",
        "cursor": {
          "ref": "b9c7448f-b5d9-4528-a228-31a011d5c8ab",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1e9b1b79-5ade-4dff-acb0-0f0755643ca6"
        },
        "item": {
          "id": "fb88afbc-0b90-4c08-b2f5-4a5c228c7ce3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1c535587-4169-440d-9d43-3476f91a494d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8dc2fe-09a4-49fe-b251-b3a7197961bc",
        "cursor": {
          "ref": "92e37d50-2627-4f1b-9149-955082963b87",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "34f82e2d-6ba8-405a-8c01-c785474b3e76"
        },
        "item": {
          "id": "ce8dc2fe-09a4-49fe-b251-b3a7197961bc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "65cd72ba-f94b-448c-ba18-5db282f03760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e06921-0901-4b51-8912-0c88669e3bff",
        "cursor": {
          "ref": "7fda755a-7f4a-49df-a696-e53566048b56",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e28f42cb-0458-4c12-9d34-2f61e4fb6de0"
        },
        "item": {
          "id": "68e06921-0901-4b51-8912-0c88669e3bff",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5a8a05bc-db9a-4258-a966-5faf2befb3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e220ac8-31fd-4f1a-adb1-3ee672fb36da",
        "cursor": {
          "ref": "42791f4d-855f-4b0b-af6e-1490e0352096",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "29c485ca-904d-4ce5-952a-8ab1d5397db4"
        },
        "item": {
          "id": "0e220ac8-31fd-4f1a-adb1-3ee672fb36da",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0f3f38a2-efc7-477d-9c0b-58ce747563d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5692feec-0a38-4b52-ab2d-981fe8856eb2",
        "cursor": {
          "ref": "9a1d6b5d-02db-439b-a3a7-1ef1857f1fcd",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b14ce833-20d4-4236-ba4a-a89d00fc8304"
        },
        "item": {
          "id": "5692feec-0a38-4b52-ab2d-981fe8856eb2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "80b885bb-31d4-4487-892a-58b146a419dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438667da-621e-4e68-805a-0a8c7fd63fe2",
        "cursor": {
          "ref": "e5145d89-2786-4ef6-ad97-e5aa2aa0086d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5658ee73-8a4c-4bca-9ef2-c7281d4019fd"
        },
        "item": {
          "id": "438667da-621e-4e68-805a-0a8c7fd63fe2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6b406d26-6a53-4f66-a842-a3d8e9212bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90684839-1005-4115-bfc9-780d110b9c6a",
        "cursor": {
          "ref": "786c6da0-8c22-4fed-90dd-71a2d09037fd",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b7fb082f-3ecd-4705-ae32-b4e1164c4fa4"
        },
        "item": {
          "id": "90684839-1005-4115-bfc9-780d110b9c6a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "05fc84f6-13c2-438c-8a19-dec452926e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c546de-58cc-41bc-8f0e-36483efbbbe1",
        "cursor": {
          "ref": "221461a0-80d2-453d-8c6d-c357d71af9b2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e59e39c5-cf3c-4be0-a57f-7f0f904702f6"
        },
        "item": {
          "id": "41c546de-58cc-41bc-8f0e-36483efbbbe1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b55cc83a-fbb5-4ee8-9e06-cec9f6659e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52872abb-d9c5-4d5c-95fd-7df38225a98b",
        "cursor": {
          "ref": "592f867a-54ad-4fb2-b601-42d45222f9dd",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bd20da10-5c5a-49c8-b865-a594847593ed"
        },
        "item": {
          "id": "52872abb-d9c5-4d5c-95fd-7df38225a98b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f824a92d-a42b-48ca-b6ac-d1bcfbaf8b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937eddbc-f128-43ef-a623-de2e6f327431",
        "cursor": {
          "ref": "2282630c-4a70-4dae-b4e5-ab804a0772fd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3478c74c-811f-46d8-bd19-13123e126fc7"
        },
        "item": {
          "id": "937eddbc-f128-43ef-a623-de2e6f327431",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "936cba07-bacf-45a1-a07d-cfafb76a634c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44374be-3fb2-4058-b6a0-b30218dd8ffd",
        "cursor": {
          "ref": "1eed3e94-6a44-4def-9029-c1fc759be0f6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2bafcfea-5f78-4db9-9b78-cba36e17b920"
        },
        "item": {
          "id": "d44374be-3fb2-4058-b6a0-b30218dd8ffd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c54c33ec-f6d2-4c47-9ff8-53f12d5af24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35475a2-99ef-4ece-8cbd-0db0d629637d",
        "cursor": {
          "ref": "eea535e9-f800-46b9-a460-1b6738ae0a60",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1fb237c4-2980-4528-9e07-ee44597486a8"
        },
        "item": {
          "id": "c35475a2-99ef-4ece-8cbd-0db0d629637d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "90f4b663-5f77-4a1e-b527-d5f21912a59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81abbc9b-42f5-4a0c-9c2e-8ec0ecd76916",
        "cursor": {
          "ref": "35a0129e-c908-4a8f-8a70-7131b35023a7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e16527ad-1b7c-4ba4-a6ba-ca9bdc2ee0ea"
        },
        "item": {
          "id": "81abbc9b-42f5-4a0c-9c2e-8ec0ecd76916",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7bc043a6-7950-4c68-a36e-0387e4cab567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf03964c-de90-40dc-b2bc-d25daf80b603",
        "cursor": {
          "ref": "97a1377a-5a08-496e-b8b9-61e0775df317",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b6e3f5da-e2c7-4da9-8087-a1039caab107"
        },
        "item": {
          "id": "cf03964c-de90-40dc-b2bc-d25daf80b603",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c4af4fe8-89e6-4fa9-8eb1-3ffc095d047f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c51d8c1-8e73-4a66-9f4f-7992cd76e756",
        "cursor": {
          "ref": "ca350162-6979-4a9f-b095-1a613ea200c7",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e3fa3887-6dfb-471f-b4f2-4f642fcc991b"
        },
        "item": {
          "id": "7c51d8c1-8e73-4a66-9f4f-7992cd76e756",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ff73f31f-6694-424c-ab5c-1f051eebe1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a5efae-0b4e-446d-9224-6534324755f2",
        "cursor": {
          "ref": "bf8f5be5-6e60-4827-9ecd-6a6a2ec498a3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7929a901-c3b6-4a86-a6fc-ce776ebac24c"
        },
        "item": {
          "id": "95a5efae-0b4e-446d-9224-6534324755f2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cf399622-b75b-4ca9-ba82-fc25402f90e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ad8ace-584b-4f35-a997-816c9ab34025",
        "cursor": {
          "ref": "1a149540-3c18-4902-8905-aef909dd3b32",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "082b7ca5-5b8c-407c-ab7b-a2fe53074cde"
        },
        "item": {
          "id": "b0ad8ace-584b-4f35-a997-816c9ab34025",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "189a1091-ab6c-4cd7-afde-6e372dcb9922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e0d815-fc30-4182-9852-14536845f476",
        "cursor": {
          "ref": "d9a58071-2de5-4aad-beca-f63f79aa6c4f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "523f4c0a-d5eb-4fb6-97c6-34aa4729c463"
        },
        "item": {
          "id": "80e0d815-fc30-4182-9852-14536845f476",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "efc9d689-c222-40eb-90aa-0656fbc4bd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d9f73c-d5c2-4252-ba68-1624e8894457",
        "cursor": {
          "ref": "8783497d-7892-4488-b5a9-40442f2c3686",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a1afabfd-a9f4-45bd-86c5-df77f43f7bd5"
        },
        "item": {
          "id": "f8d9f73c-d5c2-4252-ba68-1624e8894457",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "888b6107-a544-4a13-8bad-f6ffda4a5698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60af769d-0acc-4703-9ccb-a1d42788c87b",
        "cursor": {
          "ref": "930d9508-399d-49d6-b46a-7b8623f92384",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fb273682-70cf-4885-aa2c-2ec4ebac0109"
        },
        "item": {
          "id": "60af769d-0acc-4703-9ccb-a1d42788c87b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7cdb8c9d-7581-42e6-ad1c-e1253309e583",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab64d195-2d82-4745-a935-5ef9c114fd01",
        "cursor": {
          "ref": "947728a4-7c68-4289-9b9d-3bc069296260",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9368b2be-4bdd-47a3-bddb-3b4618126630"
        },
        "item": {
          "id": "ab64d195-2d82-4745-a935-5ef9c114fd01",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "687232a3-b687-49d2-81c0-315dcd1e8b77",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 324,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d2191e-91b5-476a-83f8-4efaf6b2ec17",
        "cursor": {
          "ref": "f400cafd-3390-4dc4-a494-f7b1e49d0706",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1ac8409f-4945-4c58-acb2-d189decd847f"
        },
        "item": {
          "id": "62d2191e-91b5-476a-83f8-4efaf6b2ec17",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7c28b818-854b-48a3-b196-e9105fa618dd",
          "status": "OK",
          "code": 200,
          "responseTime": 399,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fa15c1-7013-4173-8d69-8146d7bdf935",
        "cursor": {
          "ref": "26a6a8f0-67a7-42d5-b132-65cfb0e72a1b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f7a68586-8069-4b11-907e-0960a72742f7"
        },
        "item": {
          "id": "f0fa15c1-7013-4173-8d69-8146d7bdf935",
          "name": "credentials_verify"
        },
        "response": {
          "id": "774008a0-622d-4b0d-a144-4e542baa0f10",
          "status": "OK",
          "code": 200,
          "responseTime": 1828,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94c1905-3de5-4849-a044-255e4529e4cc",
        "cursor": {
          "ref": "fb3ef70d-8ded-4796-8a12-07953d0dd537",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0dd5994d-0777-472d-84f0-b94f5f81aa54"
        },
        "item": {
          "id": "a94c1905-3de5-4849-a044-255e4529e4cc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "972b4c5f-85c6-484b-b294-44b105ab4cce",
          "status": "OK",
          "code": 200,
          "responseTime": 1511,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3713a1ce-9eba-47a8-ade8-9ab4bfe11177",
        "cursor": {
          "ref": "b17fd95c-9a74-4fb4-b8d4-649fca6c8aa1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "18134fe9-16fc-4e4f-80e8-1bf2035d23e0"
        },
        "item": {
          "id": "3713a1ce-9eba-47a8-ade8-9ab4bfe11177",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20d24850-857c-4491-9e12-92aeeb2eddcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3713a1ce-9eba-47a8-ade8-9ab4bfe11177",
        "cursor": {
          "ref": "b17fd95c-9a74-4fb4-b8d4-649fca6c8aa1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "18134fe9-16fc-4e4f-80e8-1bf2035d23e0"
        },
        "item": {
          "id": "3713a1ce-9eba-47a8-ade8-9ab4bfe11177",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20d24850-857c-4491-9e12-92aeeb2eddcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3713a1ce-9eba-47a8-ade8-9ab4bfe11177",
        "cursor": {
          "ref": "b17fd95c-9a74-4fb4-b8d4-649fca6c8aa1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "18134fe9-16fc-4e4f-80e8-1bf2035d23e0"
        },
        "item": {
          "id": "3713a1ce-9eba-47a8-ade8-9ab4bfe11177",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20d24850-857c-4491-9e12-92aeeb2eddcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcbfac3-cdda-48c2-9e58-d4b601dddee2",
        "cursor": {
          "ref": "cbe97f77-7377-4a52-a015-c4eb5ecfc7e9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0e49a2e0-3215-4231-81ba-1e1fcfcf63d2"
        },
        "item": {
          "id": "3bcbfac3-cdda-48c2-9e58-d4b601dddee2",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3863d79b-bfc7-435f-bcb9-686d1180a44f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 345,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600e1bd9-ba2c-452f-b5e1-a2917c14289e",
        "cursor": {
          "ref": "90c77ce3-a90b-40d2-bfa5-b33183005b96",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2f85b253-2b72-4e6f-b5b5-53be1fb511c7"
        },
        "item": {
          "id": "600e1bd9-ba2c-452f-b5e1-a2917c14289e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "46509c28-fdfb-4b33-add0-714fe9156a6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600e1bd9-ba2c-452f-b5e1-a2917c14289e",
        "cursor": {
          "ref": "90c77ce3-a90b-40d2-bfa5-b33183005b96",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2f85b253-2b72-4e6f-b5b5-53be1fb511c7"
        },
        "item": {
          "id": "600e1bd9-ba2c-452f-b5e1-a2917c14289e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "46509c28-fdfb-4b33-add0-714fe9156a6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f122e9-aa89-406b-9635-64263d0dc17c",
        "cursor": {
          "ref": "84dc1039-c3da-4384-9989-584e5ff1028f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68de1d39-b043-4014-b39e-947bd520e845"
        },
        "item": {
          "id": "13f122e9-aa89-406b-9635-64263d0dc17c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3eaa83c5-4159-41df-9d42-0e301c943603",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 536,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f48b409-d41c-45dd-9e03-a06f470d9107",
        "cursor": {
          "ref": "726509d0-3a35-46a6-80fd-6d8d1394daa0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "924d02ff-0877-4432-b3a0-b95a53f4176f"
        },
        "item": {
          "id": "4f48b409-d41c-45dd-9e03-a06f470d9107",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0661c05-58b4-42e2-a25c-940e464364c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f48b409-d41c-45dd-9e03-a06f470d9107",
        "cursor": {
          "ref": "726509d0-3a35-46a6-80fd-6d8d1394daa0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "924d02ff-0877-4432-b3a0-b95a53f4176f"
        },
        "item": {
          "id": "4f48b409-d41c-45dd-9e03-a06f470d9107",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0661c05-58b4-42e2-a25c-940e464364c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68292d9-14f1-41da-8552-e40a1930a087",
        "cursor": {
          "ref": "bf4edd0d-bf8c-4190-982f-0a3717659946",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "46ab677e-0bd7-44c6-8556-23fe0cf86d20"
        },
        "item": {
          "id": "a68292d9-14f1-41da-8552-e40a1930a087",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "225d5524-bda6-4ffd-946d-413ea3c582de",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 537,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}